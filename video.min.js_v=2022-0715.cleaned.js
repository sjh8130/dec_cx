!function (_0x5060fb) {
	_0x5060fb.videojs = (function () {
		var _0x4b1ff3 = '7.2.2', _0x279efd = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}, _0x3a6b3b;
		function _0x4ed392(_0x2b94a3, _0xdd7456) {
			return _0xdd7456 = { 'exports': {} }, _0x2b94a3(_0xdd7456, _0xdd7456.exports), _0xdd7456.exports;
		}
		if (typeof window !== 'undefined') {
			_0x3a6b3b = window;
		} else {
			if (typeof _0x279efd !== 'undefined') {
				_0x3a6b3b = _0x279efd;
			} else {
				if (typeof self !== 'undefined') {
					_0x3a6b3b = self;
				} else {
					_0x3a6b3b = {};
				}
			}
		}
		var _0x504cd5 = _0x3a6b3b, _0x3dc8bc = {}, _0x260549 = Object.freeze({ 'default': _0x3dc8bc }), _0xa6d7ed, _0x459630 = typeof _0x279efd !== 'undefined' ? _0x279efd : typeof window !== 'undefined' ? window : {}, _0x22324a;
		if (typeof document !== 'undefined') {
			_0x22324a = document;
		} else {
			_0x22324a = _0x459630['__GLOBAL_DOCUMENT_CACHE@4'];
			if (!_0x22324a) {
				_0x22324a = _0x459630['__GLOBAL_DOCUMENT_CACHE@4'] = _0x260549 && _0x3dc8bc || _0x260549;
			}
		}
		var _0x19e198 = _0x22324a, _0x5124f5 = void 0, _0x44b933 = 'info', _0x5e5e6e = [], _0x893cc9 = function _0xbd9603(_0x5f471b, _0x201213) {
			var _0x2f6d1e = _0x5124f5.levels[_0x44b933], _0x348508 = new RegExp('^(' + _0x2f6d1e + ')$');
			if (_0x5f471b !== 'log') {
				_0x201213.unshift(_0x5f471b.toUpperCase() + ':');
			}
			if (_0x5e5e6e) {
				_0x5e5e6e.push([].concat(_0x201213));
			}
			_0x201213.unshift('VIDEOJS:');
			if (!_0x504cd5.console) {
				return;
			}
			var _0x9b06a0 = _0x504cd5.console[_0x5f471b];
			if (!_0x9b06a0 && _0x5f471b === 'debug') {
				_0x9b06a0 = _0x504cd5.console.info || _0x504cd5.console.log;
			}
			if (!_0x9b06a0 || !_0x2f6d1e || !_0x348508.test(_0x5f471b)) {
				return;
			}
			_0x9b06a0[Array.isArray(_0x201213) ? 'apply' : 'call'](_0x504cd5.console, _0x201213);
		}, _0x5124f5, _0x4155c5 = ((_0x5124f5 = function _0xd26ee9() {
			for (var _0x3eec0e = arguments.length, _0x45fa43 = Array(_0x3eec0e), _0x5dfcc6 = 0; _0x5dfcc6 < _0x3eec0e; _0x5dfcc6++) {
				_0x45fa43[_0x5dfcc6] = arguments[_0x5dfcc6];
			}
			_0x893cc9('log', _0x45fa43);
		}).levels = {
			'all': 'debug|log|warn|error',
			'off': '',
			'debug': 'debug|log|warn|error',
			'info': 'log|warn|error',
			'warn': 'warn|error',
			'error': 'error',
			'DEFAULT': _0x44b933
		}, _0x5124f5.level = function (_0x11015f) {
			if (typeof _0x11015f === 'string') {
				if (!_0x5124f5.levels.hasOwnProperty(_0x11015f)) {
					throw new Error('"' + _0x11015f + '" in not a valid log level');
				}
				_0x44b933 = _0x11015f;
			}
			return _0x44b933;
		}, _0x5124f5.history = function () {
			return _0x5e5e6e ? [].concat(_0x5e5e6e) : [];
		}, _0x5124f5.history.clear = function () {
			if (_0x5e5e6e) {
				_0x5e5e6e.length = 0;
			}
		}, _0x5124f5.history.disable = function () {
			if (_0x5e5e6e !== null) {
				_0x5e5e6e.length = 0;
				_0x5e5e6e = null;
			}
		}, _0x5124f5.history.enable = function () {
			if (_0x5e5e6e === null) {
				_0x5e5e6e = [];
			}
		}, _0x5124f5.error = function () {
			for (var _0x1d40bb = arguments.length, _0xbecabc = Array(_0x1d40bb), _0x4904b5 = 0; _0x4904b5 < _0x1d40bb; _0x4904b5++) {
				_0xbecabc[_0x4904b5] = arguments[_0x4904b5];
			}
			return _0x893cc9('error', _0xbecabc);
		}, _0x5124f5.warn = function () {
			for (var _0x17d436 = arguments.length, _0x1de2d0 = Array(_0x17d436), _0x380556 = 0; _0x380556 < _0x17d436; _0x380556++) {
				_0x1de2d0[_0x380556] = arguments[_0x380556];
			}
			return _0x893cc9('warn', _0x1de2d0);
		}, _0x5124f5.debug = function () {
			for (var _0xaf665c = arguments.length, _0x4519e7 = Array(_0xaf665c), _0x267d17 = 0; _0x267d17 < _0xaf665c; _0x267d17++) {
				_0x4519e7[_0x267d17] = arguments[_0x267d17];
			}
			return _0x893cc9('debug', _0x4519e7);
		}, _0x5124f5);
		function _0x37247a(_0x1ae955) {
			return _0x1ae955.replace(/\n\r?\s*/g, '');
		}
		var _0x490e57 = function _0x3ac143(_0xa8252) {
			var _0x453c5b = '', _0x40fa8b = 0;
			for (; _0x40fa8b < arguments.length; _0x40fa8b++) {
				_0x453c5b += _0x37247a(_0xa8252[_0x40fa8b]) + (arguments[_0x40fa8b + 1] || '');
			}
			return _0x453c5b;
		}, _0x413e18 = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (_0x523623) {
			return typeof _0x523623;
		} : function (_0x218528) {
			return _0x218528 && typeof Symbol === 'function' && _0x218528.constructor === Symbol && _0x218528 !== Symbol.prototype ? 'symbol' : typeof _0x218528;
		}, _0x7a6cc0 = function (_0x2dd720, _0x190026) {
			if (!(_0x2dd720 instanceof _0x190026)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}, _0x2d47a2 = function (_0x1519f9, _0x719c70) {
			if (typeof _0x719c70 !== 'function' && _0x719c70 !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + typeof _0x719c70);
			}
			_0x1519f9.prototype = Object.create(_0x719c70 && _0x719c70.prototype, {
				'constructor': {
					'value': _0x1519f9,
					'enumerable': false,
					'writable': true,
					'configurable': true
				}
			});
			if (_0x719c70) {
				Object.setPrototypeOf ? Object.setPrototypeOf(_0x1519f9, _0x719c70) : _0x1519f9['__proto__'] = _0x719c70;
			}
		}, _0x1ab72f = function (_0xe87b16, _0x458be4) {
			if (!_0xe87b16) {
				throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
			}
			return _0x458be4 && (typeof _0x458be4 === 'object' || typeof _0x458be4 === 'function') ? _0x458be4 : _0xe87b16;
		}, _0x1b1ded = function (_0x226a05, _0x29888f) {
			return _0x226a05.raw = _0x29888f, _0x226a05;
		}, _0x326014 = Object.prototype.toString, _0x4eb211 = function _0x28ef35(_0xaaeb53) {
			return _0x31ba86(_0xaaeb53) ? Object.keys(_0xaaeb53) : [];
		};
		function _0x487c1f(_0x240247, _0x3b7f6e) {
			_0x4eb211(_0x240247).forEach(function (_0x1f570f) {
				return _0x3b7f6e(_0x240247[_0x1f570f], _0x1f570f);
			});
		}
		function _0x3fce9e(_0x4a6065, _0x349cca) {
			var _0x57be91 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
			return _0x4eb211(_0x4a6065).reduce(function (_0x48ed94, _0x126c98) {
				return _0x349cca(_0x48ed94, _0x4a6065[_0x126c98], _0x126c98);
			}, _0x57be91);
		}
		function _0x2e82a9(_0x467fd2) {
			for (var _0x3bf432 = arguments.length, _0x3b4477 = Array(_0x3bf432 > 1 ? _0x3bf432 - 1 : 0), _0x397d80 = 1; _0x397d80 < _0x3bf432; _0x397d80++) {
				_0x3b4477[_0x397d80 - 1] = arguments[_0x397d80];
			}
			if (Object.assign) {
				return Object.assign.apply(Object, [_0x467fd2].concat(_0x3b4477));
			}
			return _0x3b4477.forEach(function (_0x52ed60) {
				if (!_0x52ed60) {
					return;
				}
				_0x487c1f(_0x52ed60, function (_0x3f059f, _0x18f0da) {
					_0x467fd2[_0x18f0da] = _0x3f059f;
				});
			}), _0x467fd2;
		}
		function _0x31ba86(_0x3daa2d) {
			return !!_0x3daa2d && (typeof _0x3daa2d === 'undefined' ? 'undefined' : _0x413e18(_0x3daa2d)) === 'object';
		}
		function _0x4307a4(_0x39e684) {
			return _0x31ba86(_0x39e684) && _0x326014.call(_0x39e684) === '[object Object]' && _0x39e684.constructor === Object;
		}
		function _0x5615fb(_0x2ba9c2, _0x2cf4b3) {
			if (!_0x2ba9c2 || !_0x2cf4b3) {
				return '';
			}
			if (typeof _0x504cd5.getComputedStyle === 'function') {
				var _0x115ea9 = _0x504cd5.getComputedStyle(_0x2ba9c2);
				return _0x115ea9 ? _0x115ea9[_0x2cf4b3] : '';
			}
			return '';
		}
		var _0x195d28 = _0x1b1ded([
			'Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ',
			' to ',
			'.'
		], [
			'Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ',
			' to ',
			'.'
		]);
		function _0x16ad6c(_0x198b75) {
			return typeof _0x198b75 === 'string' && /\S/.test(_0x198b75);
		}
		function _0x14f44e(_0x5ef628) {
			if (/\s/.test(_0x5ef628)) {
				throw new Error('class has illegal whitespace characters');
			}
		}
		function _0x2a6db8(_0x2ae462) {
			return new RegExp('(^|\\s)' + _0x2ae462 + '($|\\s)');
		}
		function _0x202338() {
			return _0x19e198 === _0x504cd5.document;
		}
		function _0x4fc287(_0x46e0aa) {
			return _0x31ba86(_0x46e0aa) && _0x46e0aa.nodeType === 1;
		}
		function _0x595a3f() {
			try {
				return _0x504cd5.parent !== _0x504cd5.self;
			} catch (_0x1ac4dc) {
				return true;
			}
		}
		function _0x29dc6d(_0xf82a72) {
			return function (_0x26f045, _0x128b40) {
				if (!_0x16ad6c(_0x26f045)) {
					return _0x19e198[_0xf82a72](null);
				}
				if (_0x16ad6c(_0x128b40)) {
					_0x128b40 = _0x19e198.querySelector(_0x128b40);
				}
				var _0x2a7d95 = _0x4fc287(_0x128b40) ? _0x128b40 : _0x19e198;
				return _0x2a7d95[_0xf82a72] && _0x2a7d95[_0xf82a72](_0x26f045);
			};
		}
		function _0x1a554c() {
			var _0x2738a4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div', _0x47e375 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x6b9515 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}, _0x5aebab = arguments[3], _0x56977f = _0x19e198.createElement(_0x2738a4);
			Object.getOwnPropertyNames(_0x47e375).forEach(function (_0x5eeef2) {
				var _0x3a4945 = _0x47e375[_0x5eeef2];
				if (_0x5eeef2.indexOf('aria-') !== -1 || _0x5eeef2 === 'role' || _0x5eeef2 === 'type') {
					_0x4155c5.warn(_0x490e57(_0x195d28, _0x5eeef2, _0x3a4945));
					_0x56977f.setAttribute(_0x5eeef2, _0x3a4945);
				} else {
					if (_0x5eeef2 === 'textContent') {
						_0x36bbb1(_0x56977f, _0x3a4945);
					} else {
						_0x56977f[_0x5eeef2] = _0x3a4945;
					}
				}
			});
			Object.getOwnPropertyNames(_0x6b9515).forEach(function (_0x1fa449) {
				_0x56977f.setAttribute(_0x1fa449, _0x6b9515[_0x1fa449]);
			});
			if (_0x5aebab) {
				_0xe041ab(_0x56977f, _0x5aebab);
			}
			return _0x56977f;
		}
		function _0x36bbb1(_0x4146ee, _0x20cbc6) {
			if (typeof _0x4146ee.textContent === 'undefined') {
				_0x4146ee.innerText = _0x20cbc6;
			} else {
				_0x4146ee.textContent = _0x20cbc6;
			}
			return _0x4146ee;
		}
		function _0x55a4e6(_0x4a6664, _0x263617) {
			if (_0x263617.firstChild) {
				_0x263617.insertBefore(_0x4a6664, _0x263617.firstChild);
			} else {
				_0x263617.appendChild(_0x4a6664);
			}
		}
		function _0x1b9851(_0x4505dc, _0x706e4) {
			_0x14f44e(_0x706e4);
			if (_0x4505dc.classList) {
				return _0x4505dc.classList.contains(_0x706e4);
			}
			return _0x2a6db8(_0x706e4).test(_0x4505dc.className);
		}
		function _0x58fceb(_0x2ca21b, _0x129ff0) {
			if (_0x2ca21b.classList) {
				_0x2ca21b.classList.add(_0x129ff0);
			} else {
				if (!_0x1b9851(_0x2ca21b, _0x129ff0)) {
					_0x2ca21b.className = (_0x2ca21b.className + ' ' + _0x129ff0).trim();
				}
			}
			return _0x2ca21b;
		}
		function _0x12a354(_0x2f3a79, _0x3a88ce) {
			if (_0x2f3a79.classList) {
				_0x2f3a79.classList.remove(_0x3a88ce);
			} else {
				_0x14f44e(_0x3a88ce);
				_0x2f3a79.className = _0x2f3a79.className.split(/\s+/).filter(function (_0x414c5c) {
					return _0x414c5c !== _0x3a88ce;
				}).join(' ');
			}
			return _0x2f3a79;
		}
		function _0x55f361(_0x4cdd5f, _0x243dec, _0x22b7b2) {
			var _0x5bf6f0 = _0x1b9851(_0x4cdd5f, _0x243dec);
			if (typeof _0x22b7b2 === 'function') {
				_0x22b7b2 = _0x22b7b2(_0x4cdd5f, _0x243dec);
			}
			if (typeof _0x22b7b2 !== 'boolean') {
				_0x22b7b2 = !_0x5bf6f0;
			}
			if (_0x22b7b2 === _0x5bf6f0) {
				return;
			}
			if (_0x22b7b2) {
				_0x58fceb(_0x4cdd5f, _0x243dec);
			} else {
				_0x12a354(_0x4cdd5f, _0x243dec);
			}
			return _0x4cdd5f;
		}
		function _0x350d94(_0x389fc6, _0x1c80f0) {
			Object.getOwnPropertyNames(_0x1c80f0).forEach(function (_0x28c325) {
				var _0x19d9a1 = _0x1c80f0[_0x28c325];
				if (_0x19d9a1 === null || typeof _0x19d9a1 === 'undefined' || _0x19d9a1 === false) {
					_0x389fc6.removeAttribute(_0x28c325);
				} else {
					_0x389fc6.setAttribute(_0x28c325, _0x19d9a1 === true ? '' : _0x19d9a1);
				}
			});
		}
		function _0x52bddd(_0x518d2e) {
			var _0x20e54b = { _0x5b5963: _0x5ac1cb }, _0x52d0d8 = ',autoplay,controls,playsinline,loop,muted,default,defaultMuted,';
			if (_0x518d2e && _0x518d2e.attributes && _0x518d2e.attributes.length > 0) {
				var _0x3c91e7 = _0x518d2e.attributes;
				for (var _0x4b6f85 = _0x3c91e7.length - 1; _0x4b6f85 >= 0; _0x4b6f85--) {
					var _0x5b5963 = _0x3c91e7[_0x4b6f85].name, _0x5ac1cb = _0x3c91e7[_0x4b6f85].value;
					if (typeof _0x518d2e[_0x5b5963] === 'boolean' || _0x52d0d8.indexOf(',' + _0x5b5963 + ',') !== -1) {
						_0x5ac1cb = _0x5ac1cb !== null ? true : false;
					}
				}
			}
			return _0x20e54b;
		}
		function _0x53e53e(_0x2e6a57, _0xe5a3e) {
			return _0x2e6a57.getAttribute(_0xe5a3e);
		}
		function _0x1e9a6d(_0x5a681f, _0x46fa07, _0x4dce4a) {
			_0x5a681f.setAttribute(_0x46fa07, _0x4dce4a);
		}
		function _0x23c504(_0xe71312, _0x3addab) {
			_0xe71312.removeAttribute(_0x3addab);
		}
		function _0x3c0c1d() {
			_0x19e198.body.focus();
			_0x19e198.onselectstart = function () {
				return false;
			};
		}
		function _0x48a0bb() {
			_0x19e198.onselectstart = function () {
				return true;
			};
		}
		function _0x502078(_0x2b5b29) {
			if (_0x2b5b29 && _0x2b5b29.getBoundingClientRect && _0x2b5b29.parentNode) {
				var _0x1ea1e9 = _0x2b5b29.getBoundingClientRect(), _0x2cb0d4 = {
					_0x50d53a: _0x1ea1e9[_0x50d53a],
					height: parseFloat(_0x5615fb(_0x2b5b29, 'height')),
					width: parseFloat(_0x5615fb(_0x2b5b29, 'width'))
				};
				[
					'bottom',
					'height',
					'left',
					'right',
					'top',
					'width'
				].forEach(function (_0x50d53a) {
					if (_0x1ea1e9[_0x50d53a] !== undefined) {
					}
				});
				if (!_0x2cb0d4.height) {
				}
				if (!_0x2cb0d4.width) {
				}
				return _0x2cb0d4;
			}
		}
		function _0x30c9fa(_0x49f9c8) {
			var _0x59807a = void 0;
			if (_0x49f9c8.getBoundingClientRect && _0x49f9c8.parentNode) {
				_0x59807a = _0x49f9c8.getBoundingClientRect();
			}
			if (!_0x59807a) {
				return {
					'left': 0,
					'top': 0
				};
			}
			var _0x521049 = _0x19e198.documentElement, _0x3a6454 = _0x19e198.body, _0x4be685 = _0x521049.clientLeft || _0x3a6454.clientLeft || 0, _0x518e08 = _0x504cd5.pageXOffset || _0x3a6454.scrollLeft, _0x3d1a43 = _0x59807a.left + _0x518e08 - _0x4be685, _0x22e359 = _0x521049.clientTop || _0x3a6454.clientTop || 0, _0x3d0167 = _0x504cd5.pageYOffset || _0x3a6454.scrollTop, _0x147305 = _0x59807a.top + _0x3d0167 - _0x22e359;
			return {
				'left': Math.round(_0x3d1a43),
				'top': Math.round(_0x147305)
			};
		}
		function _0x8e1751(_0x1e9b80, _0x133c6f) {
			var _0x394bdf = {}, _0x274f47 = _0x30c9fa(_0x1e9b80), _0x4d2fc9 = _0x1e9b80.offsetWidth, _0x3b227c = _0x1e9b80.offsetHeight, _0x2416d4 = _0x274f47.top, _0x3317bf = _0x274f47.left, _0x255a6c = _0x133c6f.pageY, _0x130b75 = _0x133c6f.pageX;
			return _0x133c6f.changedTouches && (_0x130b75 = _0x133c6f.changedTouches[0].pageX, _0x255a6c = _0x133c6f.changedTouches[0].pageY), _0x394bdf.y = Math.max(0, Math.min(1, (_0x2416d4 - _0x255a6c + _0x3b227c) / _0x3b227c)), _0x394bdf.x = Math.max(0, Math.min(1, (_0x130b75 - _0x3317bf) / _0x4d2fc9)), _0x394bdf;
		}
		function _0x1a725e(_0x1c34c0) {
			return _0x31ba86(_0x1c34c0) && _0x1c34c0.nodeType === 3;
		}
		function _0x5ecd35(_0x2a4194) {
			while (_0x2a4194.firstChild) {
				_0x2a4194.removeChild(_0x2a4194.firstChild);
			}
			return _0x2a4194;
		}
		function _0x9c4601(_0x2f55f6) {
			if (typeof _0x2f55f6 === 'function') {
				_0x2f55f6 = _0x2f55f6();
			}
			return (Array.isArray(_0x2f55f6) ? _0x2f55f6 : [_0x2f55f6]).map(function (_0x2d1ffa) {
				if (typeof _0x2d1ffa === 'function') {
					_0x2d1ffa = _0x2d1ffa();
				}
				if (_0x4fc287(_0x2d1ffa) || _0x1a725e(_0x2d1ffa)) {
					return _0x2d1ffa;
				}
				if (typeof _0x2d1ffa === 'string' && /\S/.test(_0x2d1ffa)) {
					return _0x19e198.createTextNode(_0x2d1ffa);
				}
			}).filter(function (_0x229f25) {
				return _0x229f25;
			});
		}
		function _0xe041ab(_0xf32215, _0x2c240a) {
			return _0x9c4601(_0x2c240a).forEach(function (_0x20427e) {
				return _0xf32215.appendChild(_0x20427e);
			}), _0xf32215;
		}
		function _0xd2f392(_0xa25de0, _0x4aa2d7) {
			return _0xe041ab(_0x5ecd35(_0xa25de0), _0x4aa2d7);
		}
		function _0x3953f7(_0x5ec94b) {
			if (_0x5ec94b.button === undefined && _0x5ec94b.buttons === undefined) {
				return true;
			}
			if (_0x5ec94b.button === 0 && _0x5ec94b.buttons === undefined) {
				return true;
			}
			if (_0x5ec94b.button !== 0 || _0x5ec94b.buttons !== 1) {
				return false;
			}
			return true;
		}
		var _0x4cda25 = _0x29dc6d('querySelector'), _0x955c3c = _0x29dc6d('querySelectorAll'), _0x267f7d = Object.freeze({
			'isReal': _0x202338,
			'isEl': _0x4fc287,
			'isInFrame': _0x595a3f,
			'createEl': _0x1a554c,
			'textContent': _0x36bbb1,
			'prependTo': _0x55a4e6,
			'hasClass': _0x1b9851,
			'addClass': _0x58fceb,
			'removeClass': _0x12a354,
			'toggleClass': _0x55f361,
			'setAttributes': _0x350d94,
			'getAttributes': _0x52bddd,
			'getAttribute': _0x53e53e,
			'setAttribute': _0x1e9a6d,
			'removeAttribute': _0x23c504,
			'blockTextSelection': _0x3c0c1d,
			'unblockTextSelection': _0x48a0bb,
			'getBoundingClientRect': _0x502078,
			'findPosition': _0x30c9fa,
			'getPointerPosition': _0x8e1751,
			'isTextNode': _0x1a725e,
			'emptyEl': _0x5ecd35,
			'normalizeContent': _0x9c4601,
			'appendContent': _0xe041ab,
			'insertContent': _0xd2f392,
			'isSingleLeftClick': _0x3953f7,
			'$': _0x4cda25,
			'$$': _0x955c3c
		}), _0x61eaa = 1;
		function _0x1a4203() {
			return _0x61eaa++;
		}
		var _0x27dbec = { _0x1e0a1f: {} }, _0x39c4eb = 'vdata' + new Date().getTime();
		function _0x3341e4(_0x367e73) {
			var _0x1e0a1f = _0x367e73[_0x39c4eb];
			if (!_0x1e0a1f) {
				_0x1e0a1f = _0x367e73[_0x39c4eb] = _0x1a4203();
			}
			if (!_0x27dbec[_0x1e0a1f]) {
			}
			return _0x27dbec[_0x1e0a1f];
		}
		function _0x759fa2(_0x31714e) {
			var _0xaea30a = _0x31714e[_0x39c4eb];
			if (!_0xaea30a) {
				return false;
			}
			return !!Object.getOwnPropertyNames(_0x27dbec[_0xaea30a]).length;
		}
		function _0x2cc6a7(_0x516656) {
			var _0x11a827 = _0x516656[_0x39c4eb];
			if (!_0x11a827) {
				return;
			}
			delete _0x27dbec[_0x11a827];
			try {
				delete _0x516656[_0x39c4eb];
			} catch (_0x38850a) {
				if (_0x516656.removeAttribute) {
					_0x516656.removeAttribute(_0x39c4eb);
				} else {
					_0x516656[_0x39c4eb] = null;
				}
			}
		}
		function _0x41160c(_0x3e9305, _0x330f4a) {
			var _0x1dcb00 = _0x3341e4(_0x3e9305);
			if (_0x1dcb00.handlers[_0x330f4a].length === 0) {
				delete _0x1dcb00.handlers[_0x330f4a];
				if (_0x3e9305.removeEventListener) {
					_0x3e9305.removeEventListener(_0x330f4a, _0x1dcb00.dispatcher, false);
				} else {
					if (_0x3e9305.detachEvent) {
						_0x3e9305.detachEvent('on' + _0x330f4a, _0x1dcb00.dispatcher);
					}
				}
			}
			if (Object.getOwnPropertyNames(_0x1dcb00.handlers).length <= 0) {
				delete _0x1dcb00.handlers;
				delete _0x1dcb00.dispatcher;
				delete _0x1dcb00.disabled;
			}
			if (Object.getOwnPropertyNames(_0x1dcb00).length === 0) {
				_0x2cc6a7(_0x3e9305);
			}
		}
		function _0x476f04(_0x16c81c, _0x5eca09, _0xf23df1, _0x27ced2) {
			_0xf23df1.forEach(function (_0x5a8913) {
				_0x16c81c(_0x5eca09, _0x5a8913, _0x27ced2);
			});
		}
		function _0x2ae36d(_0x4bd64d) {
			function _0x168b8b() {
				return true;
			}
			function _0x1db2bf() {
				return false;
			}
			if (!_0x4bd64d || !_0x4bd64d.isPropagationStopped) {
				var _0x3b8241 = _0x4bd64d || _0x504cd5.event;
				_0x4bd64d = {};
				for (var _0x47102b in _0x3b8241)
					if (_0x47102b !== 'layerX' && _0x47102b !== 'layerY' && _0x47102b !== 'keyLocation' && _0x47102b !== 'webkitMovementX' && _0x47102b !== 'webkitMovementY') {
						if (!(_0x47102b === 'returnValue' && _0x3b8241.preventDefault)) {
							_0x4bd64d[_0x47102b] = _0x3b8241[_0x47102b];
						}
					}
				if (!_0x4bd64d.target) {
					_0x4bd64d.target = _0x4bd64d.srcElement || _0x19e198;
				}
				if (!_0x4bd64d.relatedTarget) {
					_0x4bd64d.relatedTarget = _0x4bd64d.fromElement === _0x4bd64d.target ? _0x4bd64d.toElement : _0x4bd64d.fromElement;
				}
				_0x4bd64d.preventDefault = function () {
					if (_0x3b8241.preventDefault) {
						_0x3b8241.preventDefault();
					}
					_0x4bd64d.returnValue = false;
					_0x3b8241.returnValue = false;
					_0x4bd64d.defaultPrevented = true;
				};
				_0x4bd64d.defaultPrevented = false;
				_0x4bd64d.stopPropagation = function () {
					if (_0x3b8241.stopPropagation) {
						_0x3b8241.stopPropagation();
					}
					_0x4bd64d.cancelBubble = true;
					_0x3b8241.cancelBubble = true;
					_0x4bd64d.isPropagationStopped = _0x168b8b;
				};
				_0x4bd64d.isPropagationStopped = _0x1db2bf;
				_0x4bd64d.stopImmediatePropagation = function () {
					if (_0x3b8241.stopImmediatePropagation) {
						_0x3b8241.stopImmediatePropagation();
					}
					_0x4bd64d.isImmediatePropagationStopped = _0x168b8b;
					_0x4bd64d.stopPropagation();
				};
				_0x4bd64d.isImmediatePropagationStopped = _0x1db2bf;
				if (_0x4bd64d.clientX !== null && _0x4bd64d.clientX !== undefined) {
					var _0x3764b6 = _0x19e198.documentElement, _0x18b6c7 = _0x19e198.body;
					_0x4bd64d.pageX = _0x4bd64d.clientX + (_0x3764b6 && _0x3764b6.scrollLeft || _0x18b6c7 && _0x18b6c7.scrollLeft || 0) - (_0x3764b6 && _0x3764b6.clientLeft || _0x18b6c7 && _0x18b6c7.clientLeft || 0);
					_0x4bd64d.pageY = _0x4bd64d.clientY + (_0x3764b6 && _0x3764b6.scrollTop || _0x18b6c7 && _0x18b6c7.scrollTop || 0) - (_0x3764b6 && _0x3764b6.clientTop || _0x18b6c7 && _0x18b6c7.clientTop || 0);
				}
				_0x4bd64d.which = _0x4bd64d.charCode || _0x4bd64d.keyCode;
				if (_0x4bd64d.button !== null && _0x4bd64d.button !== undefined) {
					_0x4bd64d.button = _0x4bd64d.button & 1 ? 0 : _0x4bd64d.button & 4 ? 1 : _0x4bd64d.button & 2 ? 2 : 0;
				}
			}
			return _0x4bd64d;
		}
		var _0x43753a = false;
		try {
			var _0x1a5a43 = Object.defineProperty({}, 'passive', {
				'get': function _0x45e197() {
					_0x43753a = true;
				}
			});
			_0x504cd5.addEventListener('test', null, _0x1a5a43);
			_0x504cd5.removeEventListener('test', null, _0x1a5a43);
		} catch (_0x4b8cdf) {
		}
		var _0x31830a = [
			'touchstart',
			'touchmove'
		];
		function _0x53fd98(_0x4bab6a, _0x23a536, _0x733170) {
			if (Array.isArray(_0x23a536)) {
				return _0x476f04(_0x53fd98, _0x4bab6a, _0x23a536, _0x733170);
			}
			var _0x52ad93 = _0x3341e4(_0x4bab6a);
			if (!_0x52ad93.handlers) {
				_0x52ad93.handlers = {};
			}
			if (!_0x52ad93.handlers[_0x23a536]) {
				_0x52ad93.handlers[_0x23a536] = [];
			}
			if (!_0x733170.guid) {
				_0x733170.guid = _0x1a4203();
			}
			_0x52ad93.handlers[_0x23a536].push(_0x733170);
			!_0x52ad93.dispatcher && (_0x52ad93.disabled = false, _0x52ad93.dispatcher = function (_0x1f3e2e, _0x2b5c55) {
				if (_0x52ad93.disabled) {
					return;
				}
				_0x1f3e2e = _0x2ae36d(_0x1f3e2e);
				var _0x12d227 = _0x52ad93.handlers[_0x1f3e2e.type];
				if (_0x12d227) {
					var _0xcbda77 = _0x12d227.slice(0);
					for (var _0x2ed24b = 0, _0x2a1c61 = _0xcbda77.length; _0x2ed24b < _0x2a1c61; _0x2ed24b++) {
						if (_0x1f3e2e.isImmediatePropagationStopped()) {
							break;
						} else {
							try {
								_0xcbda77[_0x2ed24b].call(_0x4bab6a, _0x1f3e2e, _0x2b5c55);
							} catch (_0x39dc46) {
								_0x4155c5.error(_0x39dc46);
							}
						}
					}
				}
			});
			if (_0x52ad93.handlers[_0x23a536].length === 1) {
				if (_0x4bab6a.addEventListener) {
					var _0xc62492 = false;
					if (_0x43753a && _0x31830a.indexOf(_0x23a536) > -1) {
						_0xc62492 = { 'passive': true };
					}
					_0x4bab6a.addEventListener(_0x23a536, _0x52ad93.dispatcher, _0xc62492);
				} else {
					if (_0x4bab6a.attachEvent) {
						_0x4bab6a.attachEvent('on' + _0x23a536, _0x52ad93.dispatcher);
					}
				}
			}
		}
		function _0x85dba1(_0x158101, _0xe7265d, _0x161a8a) {
			if (!_0x759fa2(_0x158101)) {
				return;
			}
			var _0x458b75 = _0x3341e4(_0x158101);
			if (!_0x458b75.handlers) {
				return;
			}
			if (Array.isArray(_0xe7265d)) {
				return _0x476f04(_0x85dba1, _0x158101, _0xe7265d, _0x161a8a);
			}
			var _0x1a6f4b = function _0x19bd04(_0x4f29f1, _0x32d618) {
				_0x458b75.handlers[_0x32d618] = [];
				_0x41160c(_0x4f29f1, _0x32d618);
			};
			if (_0xe7265d === undefined) {
				for (var _0x3066fc in _0x458b75.handlers)
					if (Object.prototype.hasOwnProperty.call(_0x458b75.handlers || {}, _0x3066fc)) {
						_0x1a6f4b(_0x158101, _0x3066fc);
					}
				return;
			}
			var _0x28dbea = _0x458b75.handlers[_0xe7265d];
			if (!_0x28dbea) {
				return;
			}
			if (!_0x161a8a) {
				_0x1a6f4b(_0x158101, _0xe7265d);
				return;
			}
			if (_0x161a8a.guid) {
				for (var _0x38eb03 = 0; _0x38eb03 < _0x28dbea.length; _0x38eb03++) {
					if (_0x28dbea[_0x38eb03].guid === _0x161a8a.guid) {
						_0x28dbea.splice(_0x38eb03--, 1);
					}
				}
			}
			_0x41160c(_0x158101, _0xe7265d);
		}
		function _0x5ec8a4(_0x18fbeb, _0x41d209, _0x237f5a) {
			var _0x3b658 = _0x759fa2(_0x18fbeb) ? _0x3341e4(_0x18fbeb) : {}, _0x59a90b = _0x18fbeb.parentNode || _0x18fbeb.ownerDocument;
			if (typeof _0x41d209 === 'string') {
				_0x41d209 = {
					'type': _0x41d209,
					'target': _0x18fbeb
				};
			} else {
				if (!_0x41d209.target) {
					_0x41d209.target = _0x18fbeb;
				}
			}
			_0x41d209 = _0x2ae36d(_0x41d209);
			if (_0x3b658.dispatcher) {
				_0x3b658.dispatcher.call(_0x18fbeb, _0x41d209, _0x237f5a);
			}
			if (_0x59a90b && !_0x41d209.isPropagationStopped() && _0x41d209.bubbles === true) {
				_0x5ec8a4.call(null, _0x59a90b, _0x41d209, _0x237f5a);
			} else {
				if (!_0x59a90b && !_0x41d209.defaultPrevented) {
					var _0x4a89c0 = _0x3341e4(_0x41d209.target);
					if (_0x41d209.target[_0x41d209.type]) {
						_0x4a89c0.disabled = true;
						if (typeof _0x41d209.target[_0x41d209.type] === 'function') {
							_0x41d209.target[_0x41d209.type]();
						}
						_0x4a89c0.disabled = false;
					}
				}
			}
			return !_0x41d209.defaultPrevented;
		}
		function _0x12b6fc(_0x528f9d, _0x2c1ff4, _0x50a015) {
			if (Array.isArray(_0x2c1ff4)) {
				return _0x476f04(_0x12b6fc, _0x528f9d, _0x2c1ff4, _0x50a015);
			}
			var _0x177223 = function _0x346f79() {
				_0x85dba1(_0x528f9d, _0x2c1ff4, _0x346f79);
				_0x50a015.apply(this, arguments);
			};
			_0x177223.guid = _0x50a015.guid = _0x50a015.guid || _0x1a4203();
			_0x53fd98(_0x528f9d, _0x2c1ff4, _0x177223);
		}
		var _0x537bc0 = Object.freeze({
			'fixEvent': _0x2ae36d,
			'on': _0x53fd98,
			'off': _0x85dba1,
			'trigger': _0x5ec8a4,
			'one': _0x12b6fc
		}), _0x12e31e = false, _0x11f73c = void 0, _0x1438e0 = function _0x53b436() {
			if (!_0x202338() || _0x11f73c.options.autoSetup === false) {
				return;
			}
			var _0x4c3567 = Array.prototype.slice.call(_0x19e198.getElementsByTagName('video')), _0x8881da = Array.prototype.slice.call(_0x19e198.getElementsByTagName('audio')), _0x1d2e69 = Array.prototype.slice.call(_0x19e198.getElementsByTagName('video-js')), _0x36af00 = _0x4c3567.concat(_0x8881da, _0x1d2e69);
			if (_0x36af00 && _0x36af00.length > 0) {
				for (var _0x55d4b9 = 0, _0x1ad1f9 = _0x36af00.length; _0x55d4b9 < _0x1ad1f9; _0x55d4b9++) {
					var _0x5ea154 = _0x36af00[_0x55d4b9];
					if (_0x5ea154 && _0x5ea154.getAttribute) {
						if (_0x5ea154.player === undefined) {
							var _0xa50919 = _0x5ea154.getAttribute('data-setup');
							if (_0xa50919 !== null) {
								_0x11f73c(_0x5ea154);
							}
						}
					} else {
						_0x1ff533(1);
						break;
					}
				}
			} else {
				if (!_0x12e31e) {
					_0x1ff533(1);
				}
			}
		};
		function _0x1ff533(_0x1015de, _0x2cfa66) {
			if (_0x2cfa66) {
				_0x11f73c = _0x2cfa66;
			}
			_0x504cd5.setTimeout(_0x1438e0, _0x1015de);
		}
		if (_0x202338() && _0x19e198.readyState === 'complete') {
			_0x12e31e = true;
		} else {
			_0x12b6fc(_0x504cd5, 'load', function () {
				_0x12e31e = true;
			});
		}
		var _0x2c39ec = function _0x1e0722(_0x17f617) {
			var _0x1e3bf8 = _0x19e198.createElement('style');
			return _0x1e3bf8.className = _0x17f617, _0x1e3bf8;
		}, _0x526a82 = function _0x1559a9(_0x2460ea, _0x5a78f5) {
			if (_0x2460ea.styleSheet) {
				_0x2460ea.styleSheet.cssText = _0x5a78f5;
			} else {
				_0x2460ea.textContent = _0x5a78f5;
			}
		}, _0x5957d4 = function _0xfa6f3f(_0x3a489c, _0xdee224, _0x3412ee) {
			if (!_0xdee224.guid) {
				_0xdee224.guid = _0x1a4203();
			}
			var _0x3c921a = function _0x4cb8d8() {
				return _0xdee224.apply(_0x3a489c, arguments);
			};
			return _0x3c921a.guid = _0x3412ee ? _0x3412ee + '_' + _0xdee224.guid : _0xdee224.guid, _0x3c921a;
		}, _0x4dd2a3 = function _0x1f0e8a(_0x24ad0f, _0xc57ee7) {
			var _0x1cddc7 = Date.now(), _0x29baa3 = function _0x593f1e() {
				var _0x2b9341 = Date.now();
				if (_0x2b9341 - _0x1cddc7 >= _0xc57ee7) {
					_0x24ad0f.apply(undefined, arguments);
					_0x1cddc7 = _0x2b9341;
				}
			};
			return _0x29baa3;
		}, _0x6eabf1 = function _0x9a9ac6(_0x24c6bc, _0xe6a47b, _0x337196) {
			var _0x3f5492 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _0x504cd5, _0x4c20e5 = void 0, _0x59c943 = function _0x2e756d() {
				_0x3f5492.clearTimeout(_0x4c20e5);
				_0x4c20e5 = null;
			}, _0x1a690d = function _0x203d4a() {
				var _0x117ce2 = this, _0xe612d6 = arguments, _0xa6673 = function _0x31635a() {
					_0x4c20e5 = null;
					_0xa6673 = null;
					if (!_0x337196) {
						_0x24c6bc.apply(_0x117ce2, _0xe612d6);
					}
				};
				if (!_0x4c20e5 && _0x337196) {
					_0x24c6bc.apply(_0x117ce2, _0xe612d6);
				}
				_0x3f5492.clearTimeout(_0x4c20e5);
				_0x4c20e5 = _0x3f5492.setTimeout(_0xa6673, _0xe6a47b);
			};
			return _0x1a690d.cancel = _0x59c943, _0x1a690d;
		}, _0x47c35c = function _0x5e47a7() {
		}, _0x453f78 = (_0x47c35c.prototype.allowedEvents_ = {}, _0x47c35c.prototype.addEventListener = _0x47c35c.prototype.on = function (_0x45e803, _0x412c73) {
			var _0x1ad660 = this.addEventListener;
			this.addEventListener = function () {
			};
			_0x53fd98(this, _0x45e803, _0x412c73);
			this.addEventListener = _0x1ad660;
		}, _0x47c35c.prototype.removeEventListener = _0x47c35c.prototype.off = function (_0x13a013, _0xba7bf8) {
			_0x85dba1(this, _0x13a013, _0xba7bf8);
		}, _0x47c35c.prototype.one = function (_0x1356b4, _0x523055) {
			var _0x32d691 = this.addEventListener;
			this.addEventListener = function () {
			};
			_0x12b6fc(this, _0x1356b4, _0x523055);
			this.addEventListener = _0x32d691;
		}, _0x47c35c.prototype.dispatchEvent = _0x47c35c.prototype.trigger = function (_0x1dc209) {
			var _0x3587b3 = _0x1dc209.type || _0x1dc209;
			if (typeof _0x1dc209 === 'string') {
				_0x1dc209 = { 'type': _0x3587b3 };
			}
			_0x1dc209 = _0x2ae36d(_0x1dc209);
			if (this.allowedEvents_[_0x3587b3] && this['on' + _0x3587b3]) {
				this['on' + _0x3587b3](_0x1dc209);
			}
			_0x5ec8a4(this, _0x1dc209);
		}, void 0), _0x1f95de = (_0x47c35c.prototype.queueTrigger = function (_0x214ddd) {
			var _0x19e3e6 = this;
			if (!_0x453f78) {
				_0x453f78 = new Map();
			}
			var _0x3975fb = _0x214ddd.type || _0x214ddd, _0x590854 = _0x453f78.get(this);
			!_0x590854 && (_0x590854 = new Map(), _0x453f78.set(this, _0x590854));
			var _0x2c79a5 = _0x590854.get(_0x3975fb);
			_0x590854.delete(_0x3975fb);
			_0x504cd5.clearTimeout(_0x2c79a5);
			var _0x9d8338 = _0x504cd5.setTimeout(function () {
				if (_0x590854.size === 0) {
					_0x590854 = null;
					_0x453f78.delete(_0x19e3e6);
				}
				_0x19e3e6.trigger(_0x214ddd);
			}, 0);
			_0x590854.set(_0x3975fb, _0x9d8338);
		}, function _0x33648a(_0x590415) {
			return _0x590415 instanceof _0x47c35c || !!_0x590415.eventBusEl_ && [
				'on',
				'one',
				'off',
				'trigger'
			].every(function (_0x473153) {
				return typeof _0x590415[_0x473153] === 'function';
			});
		}), _0x3f65a9 = function _0x3fee21(_0xd50f80) {
			return typeof _0xd50f80 === 'string' && /\S/.test(_0xd50f80) || Array.isArray(_0xd50f80) && !!_0xd50f80.length;
		}, _0x5be1ef = function _0x1731a2(_0x592471) {
			if (!_0x592471.nodeName && !_0x1f95de(_0x592471)) {
				throw new Error('Invalid target; must be a DOM node or evented object.');
			}
		}, _0x43288e = function _0x29f003(_0x369b50) {
			if (!_0x3f65a9(_0x369b50)) {
				throw new Error('Invalid event type; must be a non-empty string or array.');
			}
		}, _0x1d7f7c = function _0x52f4d6(_0xa1e874) {
			if (typeof _0xa1e874 !== 'function') {
				throw new Error('Invalid listener; must be a function.');
			}
		}, _0x20fed4 = function _0x422474(_0xd77b0c, _0x1bed94) {
			var _0x1f44ca = _0x1bed94.length < 3 || _0x1bed94[0] === _0xd77b0c || _0x1bed94[0] === _0xd77b0c.eventBusEl_, _0x38a6ae = void 0, _0x344d1c = void 0, _0x5dc793 = void 0;
			if (_0x1f44ca) {
				_0x38a6ae = _0xd77b0c.eventBusEl_;
				if (_0x1bed94.length >= 3) {
					_0x1bed94.shift();
				}
				_0x344d1c = _0x1bed94[0];
				_0x5dc793 = _0x1bed94[1];
			} else {
				_0x38a6ae = _0x1bed94[0];
				_0x344d1c = _0x1bed94[1];
				_0x5dc793 = _0x1bed94[2];
			}
			return _0x5be1ef(_0x38a6ae), _0x43288e(_0x344d1c), _0x1d7f7c(_0x5dc793), _0x5dc793 = _0x5957d4(_0xd77b0c, _0x5dc793), {
				'isTargetingSelf': _0x1f44ca,
				'target': _0x38a6ae,
				'type': _0x344d1c,
				'listener': _0x5dc793
			};
		}, _0x1b3b2a = function _0x38000b(_0x28b55c, _0x34041f, _0x14d8b1, _0x3b8882) {
			_0x5be1ef(_0x28b55c);
			if (_0x28b55c.nodeName) {
				_0x537bc0[_0x34041f](_0x28b55c, _0x14d8b1, _0x3b8882);
			} else {
				_0x28b55c[_0x34041f](_0x14d8b1, _0x3b8882);
			}
		}, _0x5cd006 = {
			'on': function _0x39787a() {
				var _0xae9860 = this;
				for (var _0x2de692 = arguments.length, _0x288357 = Array(_0x2de692), _0x34e1c9 = 0; _0x34e1c9 < _0x2de692; _0x34e1c9++) {
					_0x288357[_0x34e1c9] = arguments[_0x34e1c9];
				}
				var _0x34bc94 = _0x20fed4(this, _0x288357), _0x1ac2a5 = _0x34bc94.isTargetingSelf, _0x9cc189 = _0x34bc94.target, _0x22e254 = _0x34bc94.type, _0x440419 = _0x34bc94.listener;
				_0x1b3b2a(_0x9cc189, 'on', _0x22e254, _0x440419);
				if (!_0x1ac2a5) {
					var _0x2a7481 = function _0x5530d3() {
						return _0xae9860.off(_0x9cc189, _0x22e254, _0x440419);
					};
					_0x2a7481.guid = _0x440419.guid;
					var _0x514bc0 = function _0xe9e883() {
						return _0xae9860.off('dispose', _0x2a7481);
					};
					_0x514bc0.guid = _0x440419.guid;
					_0x1b3b2a(this, 'on', 'dispose', _0x2a7481);
					_0x1b3b2a(_0x9cc189, 'on', 'dispose', _0x514bc0);
				}
			},
			'one': function _0x1bfa49() {
				var _0x576afc = this;
				for (var _0xfe3c03 = arguments.length, _0x52aea3 = Array(_0xfe3c03), _0x50f029 = 0; _0x50f029 < _0xfe3c03; _0x50f029++) {
					_0x52aea3[_0x50f029] = arguments[_0x50f029];
				}
				var _0x55ccf6 = _0x20fed4(this, _0x52aea3), _0x429f2d = _0x55ccf6.isTargetingSelf, _0x144882 = _0x55ccf6.target, _0x474554 = _0x55ccf6.type, _0x1c762 = _0x55ccf6.listener;
				if (_0x429f2d) {
					_0x1b3b2a(_0x144882, 'one', _0x474554, _0x1c762);
				} else {
					var _0x171a95 = function _0x54f07c() {
						for (var _0x56f5e0 = arguments.length, _0x41c438 = Array(_0x56f5e0), _0x28b736 = 0; _0x28b736 < _0x56f5e0; _0x28b736++) {
							_0x41c438[_0x28b736] = arguments[_0x28b736];
						}
						_0x576afc.off(_0x144882, _0x474554, _0x54f07c);
						_0x1c762.apply(null, _0x41c438);
					};
					_0x171a95.guid = _0x1c762.guid;
					_0x1b3b2a(_0x144882, 'one', _0x474554, _0x171a95);
				}
			},
			'off': function _0x3e48da(_0x4ff579, _0x517842, _0x40c771) {
				if (!_0x4ff579 || _0x3f65a9(_0x4ff579)) {
					_0x85dba1(this.eventBusEl_, _0x4ff579, _0x517842);
				} else {
					var _0x39649e = _0x4ff579, _0x26c08d = _0x517842;
					_0x5be1ef(_0x39649e);
					_0x43288e(_0x26c08d);
					_0x1d7f7c(_0x40c771);
					_0x40c771 = _0x5957d4(this, _0x40c771);
					this.off('dispose', _0x40c771);
					if (_0x39649e.nodeName) {
						_0x85dba1(_0x39649e, _0x26c08d, _0x40c771);
						_0x85dba1(_0x39649e, 'dispose', _0x40c771);
					} else {
						_0x1f95de(_0x39649e) && (_0x39649e.off(_0x26c08d, _0x40c771), _0x39649e.off('dispose', _0x40c771));
					}
				}
			},
			'trigger': function _0x43410f(_0x25502b, _0x363e28) {
				return _0x5ec8a4(this.eventBusEl_, _0x25502b, _0x363e28);
			}
		};
		function _0x2fa2ea(_0x43a09b) {
			var _0x56010b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x1405d8 = _0x56010b.eventBusKey;
			if (_0x1405d8) {
				if (!_0x43a09b[_0x1405d8].nodeName) {
					throw new Error('The eventBusKey "' + _0x1405d8 + '" does not refer to an element.');
				}
				_0x43a09b.eventBusEl_ = _0x43a09b[_0x1405d8];
			} else {
				_0x43a09b.eventBusEl_ = _0x1a554c('span', { 'className': 'vjs-event-bus' });
			}
			return _0x2e82a9(_0x43a09b, _0x5cd006), _0x43a09b.on('dispose', function () {
				_0x43a09b.off();
				_0x504cd5.setTimeout(function () {
					_0x43a09b.eventBusEl_ = null;
				}, 0);
			}), _0x43a09b;
		}
		var _0x4a40b2 = {
			'state': {},
			'setState': function _0x148275(_0x14954b) {
				var _0x2bbdd3 = this;
				if (typeof _0x14954b === 'function') {
					_0x14954b = _0x14954b();
				}
				var _0x2f3e24 = void 0;
				_0x487c1f(_0x14954b, function (_0x1b975b, _0x2e87ee) {
					if (_0x2bbdd3.state[_0x2e87ee] !== _0x1b975b) {
						_0x2f3e24 = _0x2f3e24 || {};
						_0x2f3e24[_0x2e87ee] = {
							'from': _0x2bbdd3.state[_0x2e87ee],
							'to': _0x1b975b
						};
					}
					_0x2bbdd3.state[_0x2e87ee] = _0x1b975b;
				});
				if (_0x2f3e24 && _0x1f95de(this)) {
					this.trigger({
						'changes': _0x2f3e24,
						'type': 'statechanged'
					});
				}
				return _0x2f3e24;
			}
		};
		function _0x279893(_0x6bc518, _0x1da875) {
			_0x2e82a9(_0x6bc518, _0x4a40b2);
			_0x6bc518.state = _0x2e82a9({}, _0x6bc518.state, _0x1da875);
			if (typeof _0x6bc518.handleStateChanged === 'function' && _0x1f95de(_0x6bc518)) {
				_0x6bc518.on('statechanged', _0x6bc518.handleStateChanged);
			}
			return _0x6bc518;
		}
		function _0x363c2b(_0x15bb31) {
			if (typeof _0x15bb31 !== 'string') {
				return _0x15bb31;
			}
			return _0x15bb31.charAt(0).toUpperCase() + _0x15bb31.slice(1);
		}
		function _0x36911b(_0x4ece6e, _0x270e59) {
			return _0x363c2b(_0x4ece6e) === _0x363c2b(_0x270e59);
		}
		function _0x2585aa() {
			var _0x49e5db = {
				_0x1a7226: _0x3086c2,
				_0x1a7226: {},
				_0x1a7226: _0x2585aa(_0x49e5db[_0x1a7226], _0x3086c2)
			};
			for (var _0x4b50c1 = arguments.length, _0x276042 = Array(_0x4b50c1), _0x3f77aa = 0; _0x3f77aa < _0x4b50c1; _0x3f77aa++) {
				_0x276042[_0x3f77aa] = arguments[_0x3f77aa];
			}
			return _0x276042.forEach(function (_0x3a3fe3) {
				if (!_0x3a3fe3) {
					return;
				}
				_0x487c1f(_0x3a3fe3, function (_0x3086c2, _0x1a7226) {
					if (!_0x4307a4(_0x3086c2)) {
						return;
					}
					if (!_0x4307a4(_0x49e5db[_0x1a7226])) {
					}
				});
			}), _0x49e5db;
		}
		var _0x2ab435 = (function () {
			function _0x4f48f1(_0x9d3974, _0x590fcb, _0x265d25) {
				_0x7a6cc0(this, _0x4f48f1);
				if (!_0x9d3974 && this.play) {
					this.player_ = _0x9d3974 = this;
				} else {
					this.player_ = _0x9d3974;
				}
				this.options_ = _0x2585aa({}, this.options_);
				_0x590fcb = this.options_ = _0x2585aa(this.options_, _0x590fcb);
				this.id_ = _0x590fcb.id || _0x590fcb.el && _0x590fcb.el.id;
				if (!this.id_) {
					var _0x24262e = _0x9d3974 && _0x9d3974.id && _0x9d3974.id() || 'no_player';
					this.id_ = _0x24262e + '_component_' + _0x1a4203();
				}
				this.name_ = _0x590fcb.name || null;
				if (_0x590fcb.el) {
					this.el_ = _0x590fcb.el;
				} else {
					if (_0x590fcb.createEl !== false) {
						this.el_ = this.createEl();
					}
				}
				if (_0x590fcb.evented !== false) {
					_0x2fa2ea(this, { 'eventBusKey': this.el_ ? 'el_' : null });
				}
				_0x279893(this, this.constructor.defaultState);
				this.children_ = [];
				this.childIndex_ = {};
				this.childNameIndex_ = {};
				if (_0x590fcb.initChildren !== false) {
					this.initChildren();
				}
				this.ready(_0x265d25);
				if (_0x590fcb.reportTouchActivity !== false) {
					this.enableTouchActivity();
				}
			}
			_0x4f48f1.prototype.dispose = function _0x758eb6() {
				this.trigger({
					'type': 'dispose',
					'bubbles': false
				});
				if (this.children_) {
					for (var _0x30c1a4 = this.children_.length - 1; _0x30c1a4 >= 0; _0x30c1a4--) {
						if (this.children_[_0x30c1a4].dispose) {
							this.children_[_0x30c1a4].dispose();
						}
					}
				}
				this.children_ = null;
				this.childIndex_ = null;
				this.childNameIndex_ = null;
				if (this.el_) {
					if (this.el_.parentNode) {
						this.el_.parentNode.removeChild(this.el_);
					}
					_0x2cc6a7(this.el_);
					this.el_ = null;
				}
				this.player_ = null;
			};
			_0x4f48f1.prototype.player = function _0x1ba598() {
				return this.player_;
			};
			_0x4f48f1.prototype.options = function _0x3628bd(_0x56a6a2) {
				_0x4155c5.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');
				if (!_0x56a6a2) {
					return this.options_;
				}
				return this.options_ = _0x2585aa(this.options_, _0x56a6a2), this.options_;
			};
			_0x4f48f1.prototype.el = function _0x2c029a() {
				return this.el_;
			};
			_0x4f48f1.prototype.createEl = function _0x58d6c3(_0x8eb457, _0x498cb5, _0x302029) {
				return _0x1a554c(_0x8eb457, _0x498cb5, _0x302029);
			};
			_0x4f48f1.prototype.localize = function _0x5c1409(_0x2fa760, _0xadf91a) {
				var _0x1aa3d1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _0x2fa760, _0xb77821 = this.player_.language && this.player_.language(), _0x9e6692 = this.player_.languages && this.player_.languages(), _0x3cd42b = _0x9e6692 && _0x9e6692[_0xb77821], _0x217156 = _0xb77821 && _0xb77821.split('-')[0], _0x5a80c2 = _0x9e6692 && _0x9e6692[_0x217156], _0x984f23 = _0x1aa3d1;
				if (_0x3cd42b && _0x3cd42b[_0x2fa760]) {
					_0x984f23 = _0x3cd42b[_0x2fa760];
				} else {
					if (_0x5a80c2 && _0x5a80c2[_0x2fa760]) {
						_0x984f23 = _0x5a80c2[_0x2fa760];
					}
				}
				if (_0xadf91a) {
					_0x984f23 = _0x984f23.replace(/\{(\d+)\}/g, function (_0x590b39, _0x3c6a65) {
						var _0x475f91 = _0xadf91a[_0x3c6a65 - 1], _0x65be7e = _0x475f91;
						if (typeof _0x475f91 === 'undefined') {
							_0x65be7e = _0x590b39;
						}
						return _0x65be7e;
					});
				}
				return _0x984f23;
			};
			_0x4f48f1.prototype.contentEl = function _0x5bb4a1() {
				return this.contentEl_ || this.el_;
			};
			_0x4f48f1.prototype.id = function _0x15901a() {
				return this.id_;
			};
			_0x4f48f1.prototype.name = function _0x5d8407() {
				return this.name_;
			};
			_0x4f48f1.prototype.children = function _0x49f464() {
				return this.children_;
			};
			_0x4f48f1.prototype.getChildById = function _0x20755e(_0x6bca48) {
				return this.childIndex_[_0x6bca48];
			};
			_0x4f48f1.prototype.getChild = function _0x4cbe61(_0xf34902) {
				if (!_0xf34902) {
					return;
				}
				return _0xf34902 = _0x363c2b(_0xf34902), this.childNameIndex_[_0xf34902];
			};
			_0x4f48f1.prototype.addChild = function _0x8a4c26(_0x8dbfcb) {
				var _0x122649 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x242a42 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length, _0x1b30c2 = void 0, _0x239f8d = void 0;
				if (typeof _0x8dbfcb === 'string') {
					_0x239f8d = _0x363c2b(_0x8dbfcb);
					var _0x3e65dd = _0x122649.componentClass || _0x239f8d;
					_0x122649.name = _0x239f8d;
					var _0x433490 = _0x4f48f1.getComponent(_0x3e65dd);
					if (!_0x433490) {
						throw new Error('Component ' + _0x3e65dd + ' does not exist');
					}
					if (typeof _0x433490 !== 'function') {
						return null;
					}
					_0x1b30c2 = new _0x433490(this.player_ || this, _0x122649);
				} else {
					_0x1b30c2 = _0x8dbfcb;
				}
				this.children_.splice(_0x242a42, 0, _0x1b30c2);
				if (typeof _0x1b30c2.id === 'function') {
					this.childIndex_[_0x1b30c2.id()] = _0x1b30c2;
				}
				_0x239f8d = _0x239f8d || _0x1b30c2.name && _0x363c2b(_0x1b30c2.name());
				if (_0x239f8d) {
					this.childNameIndex_[_0x239f8d] = _0x1b30c2;
				}
				if (typeof _0x1b30c2.el === 'function' && _0x1b30c2.el()) {
					var _0x332086 = this.contentEl().children, _0x143cfe = _0x332086[_0x242a42] || null;
					this.contentEl().insertBefore(_0x1b30c2.el(), _0x143cfe);
				}
				return _0x1b30c2;
			};
			_0x4f48f1.prototype.removeChild = function _0x7c7096(_0x22891d) {
				if (typeof _0x22891d === 'string') {
					_0x22891d = this.getChild(_0x22891d);
				}
				if (!_0x22891d || !this.children_) {
					return;
				}
				var _0x1391dd = false;
				for (var _0x558033 = this.children_.length - 1; _0x558033 >= 0; _0x558033--) {
					if (this.children_[_0x558033] === _0x22891d) {
						_0x1391dd = true;
						this.children_.splice(_0x558033, 1);
						break;
					}
				}
				if (!_0x1391dd) {
					return;
				}
				this.childIndex_[_0x22891d.id()] = null;
				this.childNameIndex_[_0x22891d.name()] = null;
				var _0x39198a = _0x22891d.el();
				if (_0x39198a && _0x39198a.parentNode === this.contentEl()) {
					this.contentEl().removeChild(_0x22891d.el());
				}
			};
			_0x4f48f1.prototype.initChildren = function _0x3a14eb() {
				var _0x55eacd = this, _0x54927e = this.options_.children;
				if (_0x54927e) {
					var _0x1e90d9 = this.options_, _0x550f2a = function _0x5458c2(_0x5cfd46) {
						var _0x3269f3 = _0x5cfd46.name, _0xcab789 = _0x5cfd46.opts;
						if (_0x1e90d9[_0x3269f3] !== undefined) {
							_0xcab789 = _0x1e90d9[_0x3269f3];
						}
						if (_0xcab789 === false) {
							return;
						}
						if (_0xcab789 === true) {
							_0xcab789 = {};
						}
						_0xcab789.playerOptions = _0x55eacd.options_.playerOptions;
						var _0x993ede = _0x55eacd.addChild(_0x3269f3, _0xcab789);
						if (_0x993ede) {
							_0x55eacd[_0x3269f3] = _0x993ede;
						}
					}, _0x4412ea = void 0, _0x3584a3 = _0x4f48f1.getComponent('Tech');
					if (Array.isArray(_0x54927e)) {
						_0x4412ea = _0x54927e;
					} else {
						_0x4412ea = Object.keys(_0x54927e);
					}
					_0x4412ea.concat(Object.keys(this.options_).filter(function (_0x599c02) {
						return !_0x4412ea.some(function (_0x33bf6e) {
							if (typeof _0x33bf6e === 'string') {
								return _0x599c02 === _0x33bf6e;
							}
							return _0x599c02 === _0x33bf6e.name;
						});
					})).map(function (_0x3840f) {
						var _0x350380 = void 0, _0x3235d8 = void 0;
						return typeof _0x3840f === 'string' ? (_0x350380 = _0x3840f, _0x3235d8 = _0x54927e[_0x350380] || _0x55eacd.options_[_0x350380] || {}) : (_0x350380 = _0x3840f.name, _0x3235d8 = _0x3840f), {
							'name': _0x350380,
							'opts': _0x3235d8
						};
					}).filter(function (_0xbe7d95) {
						var _0x1b67e9 = _0x4f48f1.getComponent(_0xbe7d95.opts.componentClass || _0x363c2b(_0xbe7d95.name));
						return _0x1b67e9 && !_0x3584a3.isTech(_0x1b67e9);
					}).forEach(_0x550f2a);
				}
			};
			_0x4f48f1.prototype.buildCSSClass = function _0x20ed32() {
				return '';
			};
			_0x4f48f1.prototype.ready = function _0x56d1b9(_0x5b144e) {
				var _0x53e2e4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
				if (!_0x5b144e) {
					return;
				}
				if (!this.isReady_) {
					this.readyQueue_ = this.readyQueue_ || [];
					this.readyQueue_.push(_0x5b144e);
					return;
				}
				if (_0x53e2e4) {
					_0x5b144e.call(this);
				} else {
					this.setTimeout(_0x5b144e, 1);
				}
			};
			_0x4f48f1.prototype.triggerReady = function _0x51ffbc() {
				this.isReady_ = true;
				this.setTimeout(function () {
					var _0x33e5d3 = this.readyQueue_;
					this.readyQueue_ = [];
					if (_0x33e5d3 && _0x33e5d3.length > 0) {
						_0x33e5d3.forEach(function (_0x27ad69) {
							_0x27ad69.call(this);
						}, this);
					}
					this.trigger('ready');
				}, 1);
			};
			_0x4f48f1.prototype['$'] = function _0x3b5bf7(_0x26dad3, _0x10f91c) {
				return _0x4cda25(_0x26dad3, _0x10f91c || this.contentEl());
			};
			_0x4f48f1.prototype['$$'] = function _0x1c0fd8(_0x1afbac, _0x505ecb) {
				return _0x955c3c(_0x1afbac, _0x505ecb || this.contentEl());
			};
			_0x4f48f1.prototype.hasClass = function _0x2e2676(_0x3eace9) {
				return _0x1b9851(this.el_, _0x3eace9);
			};
			_0x4f48f1.prototype.addClass = function _0x595d55(_0x4480d6) {
				_0x58fceb(this.el_, _0x4480d6);
			};
			_0x4f48f1.prototype.removeClass = function _0x4cb7c2(_0x1eb502) {
				_0x12a354(this.el_, _0x1eb502);
			};
			_0x4f48f1.prototype.toggleClass = function _0x5b2a50(_0x35f2a8, _0xe3dfea) {
				_0x55f361(this.el_, _0x35f2a8, _0xe3dfea);
			};
			_0x4f48f1.prototype.show = function _0x1c73bd() {
				this.removeClass('vjs-hidden');
			};
			_0x4f48f1.prototype.hide = function _0x3dc389() {
				this.addClass('vjs-hidden');
			};
			_0x4f48f1.prototype.lockShowing = function _0x5131bf() {
				this.addClass('vjs-lock-showing');
			};
			_0x4f48f1.prototype.unlockShowing = function _0x14e652() {
				this.removeClass('vjs-lock-showing');
			};
			_0x4f48f1.prototype.getAttribute = function _0x21889d(_0x43e71c) {
				return _0x53e53e(this.el_, _0x43e71c);
			};
			_0x4f48f1.prototype.setAttribute = function _0x5732f1(_0x162337, _0x2bd898) {
				_0x1e9a6d(this.el_, _0x162337, _0x2bd898);
			};
			_0x4f48f1.prototype.removeAttribute = function _0x591517(_0x2f0402) {
				_0x23c504(this.el_, _0x2f0402);
			};
			_0x4f48f1.prototype.width = function _0x10378b(_0x1e23e8, _0x3c3755) {
				return this.dimension('width', _0x1e23e8, _0x3c3755);
			};
			_0x4f48f1.prototype.height = function _0x1f728f(_0x22256b, _0x1d65b3) {
				return this.dimension('height', _0x22256b, _0x1d65b3);
			};
			_0x4f48f1.prototype.dimensions = function _0xd8a553(_0x4a8f03, _0xc5f6de) {
				this.width(_0x4a8f03, true);
				this.height(_0xc5f6de);
			};
			_0x4f48f1.prototype.dimension = function _0x2cfc77(_0x44ebd6, _0x58eb32, _0x103621) {
				if (_0x58eb32 !== undefined) {
					if (_0x58eb32 === null || _0x58eb32 !== _0x58eb32) {
						_0x58eb32 = 0;
					}
					if (('' + _0x58eb32).indexOf('%') !== -1 || ('' + _0x58eb32).indexOf('px') !== -1) {
						this.el_.style[_0x44ebd6] = _0x58eb32;
					} else {
						if (_0x58eb32 === 'auto') {
							this.el_.style[_0x44ebd6] = '';
						} else {
							this.el_.style[_0x44ebd6] = _0x58eb32 + 'px';
						}
					}
					if (!_0x103621) {
						this.trigger('componentresize');
					}
					return;
				}
				if (!this.el_) {
					return 0;
				}
				var _0xcfc001 = this.el_.style[_0x44ebd6], _0x5c2867 = _0xcfc001.indexOf('px');
				if (_0x5c2867 !== -1) {
					return parseInt(_0xcfc001.slice(0, _0x5c2867), 10);
				}
				return parseInt(this.el_['offset' + _0x363c2b(_0x44ebd6)], 10);
			};
			_0x4f48f1.prototype.currentDimension = function _0x2188bc(_0x3df713) {
				var _0x5a7f73 = 0;
				if (_0x3df713 !== 'width' && _0x3df713 !== 'height') {
					throw new Error('currentDimension only accepts width or height value');
				}
				if (typeof _0x504cd5.getComputedStyle === 'function') {
					var _0x5b5c3e = _0x504cd5.getComputedStyle(this.el_);
					_0x5a7f73 = _0x5b5c3e.getPropertyValue(_0x3df713) || _0x5b5c3e[_0x3df713];
				}
				_0x5a7f73 = parseFloat(_0x5a7f73);
				if (_0x5a7f73 === 0) {
					var _0xf4dfb8 = 'offset' + _0x363c2b(_0x3df713);
					_0x5a7f73 = this.el_[_0xf4dfb8];
				}
				return _0x5a7f73;
			};
			_0x4f48f1.prototype.currentDimensions = function _0x2a035e() {
				return {
					'width': this.currentDimension('width'),
					'height': this.currentDimension('height')
				};
			};
			_0x4f48f1.prototype.currentWidth = function _0x42a4cf() {
				return this.currentDimension('width');
			};
			_0x4f48f1.prototype.currentHeight = function _0x46c3fb() {
				return this.currentDimension('height');
			};
			_0x4f48f1.prototype.focus = function _0x1fc2f2() {
				this.el_.focus();
			};
			_0x4f48f1.prototype.blur = function _0x30eae3() {
				this.el_.blur();
			};
			_0x4f48f1.prototype.emitTapEvents = function _0x542fcb() {
				var _0xb063d3 = 0, _0x16e4f8 = null, _0x2c77fc = 10, _0x409c1e = 200, _0x2765b9 = void 0;
				this.on('touchstart', function (_0x3df6d6) {
					if (_0x3df6d6.touches.length === 1) {
						_0x16e4f8 = {
							'pageX': _0x3df6d6.touches[0].pageX,
							'pageY': _0x3df6d6.touches[0].pageY
						};
						_0xb063d3 = new Date().getTime();
						_0x2765b9 = true;
					}
				});
				this.on('touchmove', function (_0x63caac) {
					if (_0x63caac.touches.length > 1) {
						_0x2765b9 = false;
					} else {
						if (_0x16e4f8) {
							var _0x547d70 = _0x63caac.touches[0].pageX - _0x16e4f8.pageX, _0x48bb5d = _0x63caac.touches[0].pageY - _0x16e4f8.pageY, _0x5e8860 = Math.sqrt(_0x547d70 * _0x547d70 + _0x48bb5d * _0x48bb5d);
							if (_0x5e8860 > _0x2c77fc) {
								_0x2765b9 = false;
							}
						}
					}
				});
				var _0x49bf0e = function _0x5dbd9b() {
					_0x2765b9 = false;
				};
				this.on('touchleave', _0x49bf0e);
				this.on('touchcancel', _0x49bf0e);
				this.on('touchend', function (_0x3fa490) {
					_0x16e4f8 = null;
					if (_0x2765b9 === true) {
						var _0x3f4980 = new Date().getTime() - _0xb063d3;
						if (_0x3f4980 < _0x409c1e) {
							_0x3fa490.preventDefault();
							this.trigger('tap');
						}
					}
				});
			};
			_0x4f48f1.prototype.enableTouchActivity = function _0x63b27a() {
				if (!this.player() || !this.player().reportUserActivity) {
					return;
				}
				var _0x430aee = _0x5957d4(this.player(), this.player().reportUserActivity), _0x423ba2 = void 0;
				this.on('touchstart', function () {
					_0x430aee();
					this.clearInterval(_0x423ba2);
					_0x423ba2 = this.setInterval(_0x430aee, 250);
				});
				var _0x511061 = function _0x5d2e5d(_0xf5c073) {
					_0x430aee();
					this.clearInterval(_0x423ba2);
				};
				this.on('touchmove', _0x430aee);
				this.on('touchend', _0x511061);
				this.on('touchcancel', _0x511061);
			};
			_0x4f48f1.prototype.setTimeout = function _0x418360(_0x5988d7, _0x2565c6) {
				var _0xce11ab = this, _0x41afd3, _0x2a9d52;
				return _0x5988d7 = _0x5957d4(this, _0x5988d7), _0x41afd3 = _0x504cd5.setTimeout(function () {
					_0xce11ab.off('dispose', _0x2a9d52);
					_0x5988d7();
				}, _0x2565c6), _0x2a9d52 = function _0x5ec9e0() {
					return _0xce11ab.clearTimeout(_0x41afd3);
				}, _0x2a9d52.guid = 'vjs-timeout-' + _0x41afd3, this.on('dispose', _0x2a9d52), _0x41afd3;
			};
			_0x4f48f1.prototype.clearTimeout = function _0x26a0f2(_0x2d9210) {
				_0x504cd5.clearTimeout(_0x2d9210);
				var _0x1bf917 = function _0x2debb8() {
				};
				return _0x1bf917.guid = 'vjs-timeout-' + _0x2d9210, this.off('dispose', _0x1bf917), _0x2d9210;
			};
			_0x4f48f1.prototype.setInterval = function _0x1cd2e6(_0x555ed5, _0x3c24cb) {
				var _0x562f7d = this;
				_0x555ed5 = _0x5957d4(this, _0x555ed5);
				var _0x1ec437 = _0x504cd5.setInterval(_0x555ed5, _0x3c24cb), _0xe89598 = function _0x2bf31e() {
					return _0x562f7d.clearInterval(_0x1ec437);
				};
				return _0xe89598.guid = 'vjs-interval-' + _0x1ec437, this.on('dispose', _0xe89598), _0x1ec437;
			};
			_0x4f48f1.prototype.clearInterval = function _0x3b50cb(_0x21b57e) {
				_0x504cd5.clearInterval(_0x21b57e);
				var _0x29f97d = function _0x4d7d28() {
				};
				return _0x29f97d.guid = 'vjs-interval-' + _0x21b57e, this.off('dispose', _0x29f97d), _0x21b57e;
			};
			_0x4f48f1.prototype.requestAnimationFrame = function _0x3854eb(_0x1ef69a) {
				var _0x90cf32 = this, _0x106155, _0xcefa89;
				if (this.supportsRaf_) {
					return _0x1ef69a = _0x5957d4(this, _0x1ef69a), _0x106155 = _0x504cd5.requestAnimationFrame(function () {
						_0x90cf32.off('dispose', _0xcefa89);
						_0x1ef69a();
					}), _0xcefa89 = function _0x584aab() {
						return _0x90cf32.cancelAnimationFrame(_0x106155);
					}, _0xcefa89.guid = 'vjs-raf-' + _0x106155, this.on('dispose', _0xcefa89), _0x106155;
				}
				return this.setTimeout(_0x1ef69a, 16.666666666666668);
			};
			_0x4f48f1.prototype.cancelAnimationFrame = function _0x212c7f(_0x1419eb) {
				if (this.supportsRaf_) {
					_0x504cd5.cancelAnimationFrame(_0x1419eb);
					var _0x18d2b2 = function _0x2a8354() {
					};
					return _0x18d2b2.guid = 'vjs-raf-' + _0x1419eb, this.off('dispose', _0x18d2b2), _0x1419eb;
				}
				return this.clearTimeout(_0x1419eb);
			};
			_0x4f48f1.registerComponent = function _0x1c12e0(_0x17ca7b, _0x4a05af) {
				if (typeof _0x17ca7b !== 'string' || !_0x17ca7b) {
					throw new Error('Illegal component name, "' + _0x17ca7b + '"; must be a non-empty string.');
				}
				var _0x389150 = _0x4f48f1.getComponent('Tech'), _0x38d406 = _0x389150 && _0x389150.isTech(_0x4a05af), _0xb4d81e = _0x4f48f1 === _0x4a05af || _0x4f48f1.prototype.isPrototypeOf(_0x4a05af.prototype);
				if (_0x38d406 || !_0xb4d81e) {
					var _0x19f4c5 = void 0;
					if (_0x38d406) {
						_0x19f4c5 = 'techs must be registered using Tech.registerTech()';
					} else {
						_0x19f4c5 = 'must be a Component subclass';
					}
					throw new Error('Illegal component, "' + _0x17ca7b + '"; ' + _0x19f4c5 + '.');
				}
				_0x17ca7b = _0x363c2b(_0x17ca7b);
				if (!_0x4f48f1.components_) {
					_0x4f48f1.components_ = {};
				}
				var _0x3d6841 = _0x4f48f1.getComponent('Player');
				if (_0x17ca7b === 'Player' && _0x3d6841) {
					return _0x3d6841;
				}
				return _0x4f48f1.components_[_0x17ca7b] = _0x4a05af, _0x4a05af;
			};
			_0x4f48f1.getComponent = function _0x4ac386(_0x273d20) {
				if (!_0x273d20) {
					return;
				}
				_0x273d20 = _0x363c2b(_0x273d20);
				if (_0x4f48f1.components_ && _0x4f48f1.components_[_0x273d20]) {
					return _0x4f48f1.components_[_0x273d20];
				}
			};
			if (!_0x4f48f1.components_) {
				_0x4f48f1.components_ = {};
			}
			return Object.freeze(_0x4f48f1), _0x4f48f1;
		}()), _0x410c83 = (_0x2ab435.prototype.supportsRaf_ = typeof _0x504cd5.requestAnimationFrame === 'function' && typeof _0x504cd5.cancelAnimationFrame === 'function', _0x2ab435.registerComponent('Component', _0x2ab435), _0x504cd5.navigator && _0x504cd5.navigator.userAgent || ''), _0x43ca62 = /AppleWebKit\/([\d.]+)/i.exec(_0x410c83), _0x1555de = _0x43ca62 ? parseFloat(_0x43ca62.pop()) : null, _0x20cfb2 = /iPad/i.test(_0x410c83), _0x244276 = /iPhone/i.test(_0x410c83) && !_0x20cfb2, _0x4b3aad = /iPod/i.test(_0x410c83), _0x31e406 = _0x244276 || _0x20cfb2 || _0x4b3aad, _0x37f34d = (function () {
			var _0x341fbc = _0x410c83.match(/OS (\d+)_/i);
			if (_0x341fbc && _0x341fbc[1]) {
				return _0x341fbc[1];
			}
			return null;
		}()), _0x440e94 = /Android/i.test(_0x410c83), _0x581e73 = (function () {
			var _0x3ed713 = _0x410c83.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
			if (!_0x3ed713) {
				return null;
			}
			var _0x47fdb2 = _0x3ed713[1] && parseFloat(_0x3ed713[1]), _0x3a997f = _0x3ed713[2] && parseFloat(_0x3ed713[2]);
			if (_0x47fdb2 && _0x3a997f) {
				return parseFloat(_0x3ed713[1] + '.' + _0x3ed713[2]);
			} else {
				if (_0x47fdb2) {
					return _0x47fdb2;
				}
			}
			return null;
		}()), _0x71520b = _0x440e94 && _0x581e73 < 5 && _0x1555de < 537, _0x13fbed = /Firefox/i.test(_0x410c83), _0x50b7f1 = /Edge/i.test(_0x410c83), _0x2c8fe3 = !_0x50b7f1 && (/Chrome/i.test(_0x410c83) || /CriOS/i.test(_0x410c83)), _0x2f2e62 = (function () {
			var _0x615f1b = _0x410c83.match(/(Chrome|CriOS)\/(\d+)/);
			if (_0x615f1b && _0x615f1b[2]) {
				return parseFloat(_0x615f1b[2]);
			}
			return null;
		}()), _0x21fa8a = (function () {
			var _0x1b1148 = /MSIE\s(\d+)\.\d/.exec(_0x410c83), _0x542c1d = _0x1b1148 && parseFloat(_0x1b1148[1]);
			if (!_0x542c1d && /Trident\/7.0/i.test(_0x410c83) && /rv:11.0/.test(_0x410c83)) {
				_0x542c1d = 11;
			}
			return _0x542c1d;
		}()), _0x148ab6 = /Safari/i.test(_0x410c83) && !_0x2c8fe3 && !_0x440e94 && !_0x50b7f1, _0x3b23ad = (_0x148ab6 || _0x31e406) && !_0x2c8fe3, _0x363ca1 = _0x202338() && ('ontouchstart' in _0x504cd5 || _0x504cd5.navigator.maxTouchPoints || _0x504cd5.DocumentTouch && _0x504cd5.document instanceof _0x504cd5.DocumentTouch), _0x5ec892 = Object.freeze({
			'IS_IPAD': _0x20cfb2,
			'IS_IPHONE': _0x244276,
			'IS_IPOD': _0x4b3aad,
			'IS_IOS': _0x31e406,
			'IOS_VERSION': _0x37f34d,
			'IS_ANDROID': _0x440e94,
			'ANDROID_VERSION': _0x581e73,
			'IS_NATIVE_ANDROID': _0x71520b,
			'IS_FIREFOX': _0x13fbed,
			'IS_EDGE': _0x50b7f1,
			'IS_CHROME': _0x2c8fe3,
			'CHROME_VERSION': _0x2f2e62,
			'IE_VERSION': _0x21fa8a,
			'IS_SAFARI': _0x148ab6,
			'IS_ANY_SAFARI': _0x3b23ad,
			'TOUCH_ENABLED': _0x363ca1
		});
		function _0x45021d(_0x1db5f7, _0x451e9a, _0x1c3bcd) {
			if (typeof _0x451e9a !== 'number' || _0x451e9a < 0 || _0x451e9a > _0x1c3bcd) {
				throw new Error('Failed to execute \'' + _0x1db5f7 + '\' on \'TimeRanges\': The index provided (' + _0x451e9a + ') is non-numeric or out of bounds (0-' + _0x1c3bcd + ').');
			}
		}
		function _0x543e09(_0x4a10aa, _0x58c173, _0x3e00cd, _0x38ad7d) {
			return _0x45021d(_0x4a10aa, _0x38ad7d, _0x3e00cd.length - 1), _0x3e00cd[_0x38ad7d][_0x58c173];
		}
		function _0x4ab423(_0x315db8) {
			if (_0x315db8 === undefined || _0x315db8.length === 0) {
				return {
					'length': 0,
					'start': function _0xe26bf4() {
						throw new Error('This TimeRanges object is empty');
					},
					'end': function _0x2efbb5() {
						throw new Error('This TimeRanges object is empty');
					}
				};
			}
			return {
				'length': _0x315db8.length,
				'start': _0x543e09.bind(null, 'start', 0, _0x315db8),
				'end': _0x543e09.bind(null, 'end', 1, _0x315db8)
			};
		}
		function _0x5b18c6(_0x3b00a4, _0x9585a5) {
			if (Array.isArray(_0x3b00a4)) {
				return _0x4ab423(_0x3b00a4);
			} else {
				if (_0x3b00a4 === undefined || _0x9585a5 === undefined) {
					return _0x4ab423();
				}
			}
			return _0x4ab423([[
				_0x3b00a4,
				_0x9585a5
			]]);
		}
		function _0xb3e450(_0x22f832, _0x2ab039) {
			var _0x28b811 = 0, _0x19bb22 = void 0, _0x45fd9a = void 0;
			if (!_0x2ab039) {
				return 0;
			}
			if (!_0x22f832 || !_0x22f832.length) {
				_0x22f832 = _0x5b18c6(0, 0);
			}
			for (var _0x364681 = 0; _0x364681 < _0x22f832.length; _0x364681++) {
				_0x19bb22 = _0x22f832.start(_0x364681);
				_0x45fd9a = _0x22f832.end(_0x364681);
				if (_0x45fd9a > _0x2ab039) {
					_0x45fd9a = _0x2ab039;
				}
				_0x28b811 += _0x45fd9a - _0x19bb22;
			}
			return _0x28b811 / _0x2ab039;
		}
		for (var _0x62dcca = {}, _0x148564 = [
			[
				'requestFullscreen',
				'exitFullscreen',
				'fullscreenElement',
				'fullscreenEnabled',
				'fullscreenchange',
				'fullscreenerror'
			],
			[
				'webkitRequestFullscreen',
				'webkitExitFullscreen',
				'webkitFullscreenElement',
				'webkitFullscreenEnabled',
				'webkitfullscreenchange',
				'webkitfullscreenerror'
			],
			[
				'webkitRequestFullScreen',
				'webkitCancelFullScreen',
				'webkitCurrentFullScreenElement',
				'webkitCancelFullScreen',
				'webkitfullscreenchange',
				'webkitfullscreenerror'
			],
			[
				'mozRequestFullScreen',
				'mozCancelFullScreen',
				'mozFullScreenElement',
				'mozFullScreenEnabled',
				'mozfullscreenchange',
				'mozfullscreenerror'
			],
			[
				'msRequestFullscreen',
				'msExitFullscreen',
				'msFullscreenElement',
				'msFullscreenEnabled',
				'MSFullscreenChange',
				'MSFullscreenError'
			]
		], _0x14c563 = _0x148564[0], _0x3f23c1 = void 0, _0x5e70ca = 0; _0x5e70ca < _0x148564.length; _0x5e70ca++) {
			if (_0x148564[_0x5e70ca][1] in _0x19e198) {
				_0x3f23c1 = _0x148564[_0x5e70ca];
				break;
			}
		}
		if (_0x3f23c1) {
			for (var _0x1609d6 = 0; _0x1609d6 < _0x3f23c1.length; _0x1609d6++) {
				_0x62dcca[_0x14c563[_0x1609d6]] = _0x3f23c1[_0x1609d6];
			}
		}
		function _0x2cbd98(_0x4bab39) {
			if (_0x4bab39 instanceof _0x2cbd98) {
				return _0x4bab39;
			}
			if (typeof _0x4bab39 === 'number') {
				this.code = _0x4bab39;
			} else {
				if (typeof _0x4bab39 === 'string') {
					this.message = _0x4bab39;
				} else {
					if (_0x31ba86(_0x4bab39)) {
						if (typeof _0x4bab39.code === 'number') {
							this.code = _0x4bab39.code;
						}
						_0x2e82a9(this, _0x4bab39);
					}
				}
			}
			if (!this.message) {
				this.message = _0x2cbd98.defaultMessages[this.code] || '';
			}
		}
		_0x2cbd98.prototype.code = 0;
		_0x2cbd98.prototype.message = '';
		_0x2cbd98.prototype.status = null;
		_0x2cbd98.errorTypes = [
			'MEDIA_ERR_CUSTOM',
			'MEDIA_ERR_ABORTED',
			'MEDIA_ERR_NETWORK',
			'MEDIA_ERR_DECODE',
			'MEDIA_ERR_SRC_NOT_SUPPORTED',
			'MEDIA_ERR_ENCRYPTED'
		];
		_0x2cbd98.defaultMessages = {
			1: 'You aborted the media playback',
			2: 'A network error caused the media download to fail part-way.',
			3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',
			4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',
			5: 'The media is encrypted and we do not have the keys to decrypt it.'
		};
		for (var _0x39193f = 0; _0x39193f < _0x2cbd98.errorTypes.length; _0x39193f++) {
			_0x2cbd98[_0x2cbd98.errorTypes[_0x39193f]] = _0x39193f;
			_0x2cbd98.prototype[_0x2cbd98.errorTypes[_0x39193f]] = _0x39193f;
		}
		var _0x1215d0 = _0x57c936;
		function _0x57c936(_0x12edd1, _0x5ffa33) {
			var _0x26c3e8, _0x4f1e1f = null;
			try {
				_0x26c3e8 = JSON.parse(_0x12edd1, _0x5ffa33);
			} catch (_0x491542) {
				_0x4f1e1f = _0x491542;
			}
			return [
				_0x4f1e1f,
				_0x26c3e8
			];
		}
		function _0x56f39f(_0x1be7d5) {
			return _0x1be7d5 !== undefined && _0x1be7d5 !== null && typeof _0x1be7d5.then === 'function';
		}
		function _0x4a9c2c(_0x689b21) {
			if (_0x56f39f(_0x689b21)) {
				_0x689b21.then(null, function (_0x4a98db) {
				});
			}
		}
		var _0x537a42 = function _0x14c4ae(_0x2f0e9b) {
			var _0x46c047 = [
				'kind',
				'label',
				'language',
				'id',
				'inBandMetadataTrackDispatchType',
				'mode',
				'src'
			].reduce(function (_0x5f1fed, _0xa0cd5f, _0x169e63) {
				if (_0x2f0e9b[_0xa0cd5f]) {
					_0x5f1fed[_0xa0cd5f] = _0x2f0e9b[_0xa0cd5f];
				}
				return _0x5f1fed;
			}, {
				'cues': _0x2f0e9b.cues && Array.prototype.map.call(_0x2f0e9b.cues, function (_0x552a8b) {
					return {
						'startTime': _0x552a8b.startTime,
						'endTime': _0x552a8b.endTime,
						'text': _0x552a8b.text,
						'id': _0x552a8b.id
					};
				})
			});
			return _0x46c047;
		}, _0x2d21bc, _0xf896f9, _0x228b90 = {
			'textTracksToJson': function _0x4cd9fa(_0x166704) {
				var _0x370cdb = _0x166704['$$']('track'), _0x2d7ea3 = Array.prototype.map.call(_0x370cdb, function (_0x1ed737) {
					return _0x1ed737.track;
				}), _0x557578 = Array.prototype.map.call(_0x370cdb, function (_0x27a91d) {
					var _0x3d6d13 = _0x537a42(_0x27a91d.track);
					if (_0x27a91d.src) {
						_0x3d6d13.src = _0x27a91d.src;
					}
					return _0x3d6d13;
				});
				return _0x557578.concat(Array.prototype.filter.call(_0x166704.textTracks(), function (_0x43050d) {
					return _0x2d7ea3.indexOf(_0x43050d) === -1;
				}).map(_0x537a42));
			},
			'jsonToTextTracks': function _0x2d8487(_0x52834b, _0x52b2a7) {
				return _0x52834b.forEach(function (_0x408423) {
					var _0x4f993e = _0x52b2a7.addRemoteTextTrack(_0x408423).track;
					if (!_0x408423.src && _0x408423.cues) {
						_0x408423.cues.forEach(function (_0x27596c) {
							return _0x4f993e.addCue(_0x27596c);
						});
					}
				}), _0x52b2a7.textTracks();
			},
			'trackToJson_': _0x537a42
		}, _0x4daefe = function (_0x1592ad) {
			_0x2d47a2(_0x555f01, _0x1592ad);
			function _0x555f01(_0x1389ce, _0x3bceed) {
				_0x7a6cc0(this, _0x555f01);
				var _0x3afecd = _0x1ab72f(this, _0x1592ad.call(this, _0x1389ce, _0x3bceed));
				return _0x3afecd.opened_ = _0x3afecd.hasBeenOpened_ = _0x3afecd.hasBeenFilled_ = false, _0x3afecd.closeable(!_0x3afecd.options_.uncloseable), _0x3afecd.content(_0x3afecd.options_.content), _0x3afecd.contentEl_ = _0x1a554c('div', { 'className': 'vjs-modal-dialog-content' }, { 'role': 'document' }), _0x3afecd.descEl_ = _0x1a554c('p', {
					'className': 'vjs-modal-dialog-description vjs-control-text',
					'id': _0x3afecd.el().getAttribute('aria-describedby')
				}), _0x36bbb1(_0x3afecd.descEl_, _0x3afecd.description()), _0x3afecd.el_.appendChild(_0x3afecd.descEl_), _0x3afecd.el_.appendChild(_0x3afecd.contentEl_), _0x3afecd;
			}
			return _0x555f01.prototype.createEl = function _0x204910() {
				return _0x1592ad.prototype.createEl.call(this, 'div', {
					'className': this.buildCSSClass(),
					'tabIndex': -1
				}, {
					'aria-describedby': this.id() + '_description',
					'aria-hidden': 'true',
					'aria-label': this.label(),
					'role': 'dialog'
				});
			}, _0x555f01.prototype.dispose = function _0x1a1f31() {
				this.contentEl_ = null;
				this.descEl_ = null;
				this.previouslyActiveEl_ = null;
				_0x1592ad.prototype.dispose.call(this);
			}, _0x555f01.prototype.buildCSSClass = function _0x78f331() {
				return 'vjs-modal-dialog vjs-hidden ' + _0x1592ad.prototype.buildCSSClass.call(this);
			}, _0x555f01.prototype.handleKeyPress = function _0x1c1e78(_0x46f937) {
				if (_0x46f937.which === 27 && this.closeable()) {
					this.close();
				}
			}, _0x555f01.prototype.label = function _0x22eba2() {
				return this.localize(this.options_.label || 'Modal Window');
			}, _0x555f01.prototype.description = function _0x32c7f7() {
				var _0x5dd9f2 = this.options_.description || this.localize('This is a modal window.');
				if (this.closeable()) {
					_0x5dd9f2 += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');
				}
				return _0x5dd9f2;
			}, _0x555f01.prototype.open = function _0x25960b() {
				if (!this.opened_) {
					var _0x583d20 = this.player();
					this.trigger('beforemodalopen');
					this.opened_ = true;
					if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {
						this.fill();
					}
					this.wasPlaying_ = !_0x583d20.paused();
					if (this.options_.pauseOnOpen && this.wasPlaying_) {
						_0x583d20.pause();
					}
					if (this.closeable()) {
						this.on(this.el_.ownerDocument, 'keydown', _0x5957d4(this, this.handleKeyPress));
					}
					this.hadControls_ = _0x583d20.controls();
					_0x583d20.controls(false);
					this.show();
					this.conditionalFocus_();
					this.el().setAttribute('aria-hidden', 'false');
					this.trigger('modalopen');
					this.hasBeenOpened_ = true;
				}
			}, _0x555f01.prototype.opened = function _0x6431c(_0xe181a1) {
				if (typeof _0xe181a1 === 'boolean') {
					this[_0xe181a1 ? 'open' : 'close']();
				}
				return this.opened_;
			}, _0x555f01.prototype.close = function _0x3dca80() {
				if (!this.opened_) {
					return;
				}
				var _0x48efdc = this.player();
				this.trigger('beforemodalclose');
				this.opened_ = false;
				if (this.wasPlaying_ && this.options_.pauseOnOpen) {
					_0x48efdc.play();
				}
				if (this.closeable()) {
					this.off(this.el_.ownerDocument, 'keydown', _0x5957d4(this, this.handleKeyPress));
				}
				if (this.hadControls_) {
					_0x48efdc.controls(true);
				}
				this.hide();
				this.el().setAttribute('aria-hidden', 'true');
				this.trigger('modalclose');
				this.conditionalBlur_();
				if (this.options_.temporary) {
					this.dispose();
				}
			}, _0x555f01.prototype.closeable = function _0x4e9771(_0x2faf61) {
				if (typeof _0x2faf61 === 'boolean') {
					var _0x33fcaa = this.closeable_ = !!_0x2faf61, _0x596ec0 = this.getChild('closeButton');
					if (_0x33fcaa && !_0x596ec0) {
						var _0x36affc = this.contentEl_;
						this.contentEl_ = this.el_;
						_0x596ec0 = this.addChild('closeButton', { 'controlText': 'Close Modal Dialog' });
						this.contentEl_ = _0x36affc;
						this.on(_0x596ec0, 'close', this.close);
					}
					!_0x33fcaa && _0x596ec0 && (this.off(_0x596ec0, 'close', this.close), this.removeChild(_0x596ec0), _0x596ec0.dispose());
				}
				return this.closeable_;
			}, _0x555f01.prototype.fill = function _0x27e049() {
				this.fillWith(this.content());
			}, _0x555f01.prototype.fillWith = function _0x4bada0(_0x6fdc7c) {
				var _0x4dea23 = this.contentEl(), _0x3f6ed5 = _0x4dea23.parentNode, _0x362e8d = _0x4dea23.nextSibling;
				this.trigger('beforemodalfill');
				this.hasBeenFilled_ = true;
				_0x3f6ed5.removeChild(_0x4dea23);
				this.empty();
				_0xd2f392(_0x4dea23, _0x6fdc7c);
				this.trigger('modalfill');
				if (_0x362e8d) {
					_0x3f6ed5.insertBefore(_0x4dea23, _0x362e8d);
				} else {
					_0x3f6ed5.appendChild(_0x4dea23);
				}
				var _0x2fba3d = this.getChild('closeButton');
				if (_0x2fba3d) {
					_0x3f6ed5.appendChild(_0x2fba3d.el_);
				}
			}, _0x555f01.prototype.empty = function _0x16e851() {
				this.trigger('beforemodalempty');
				_0x5ecd35(this.contentEl());
				this.trigger('modalempty');
			}, _0x555f01.prototype.content = function _0x5049e0(_0x2b489a) {
				if (typeof _0x2b489a !== 'undefined') {
					this.content_ = _0x2b489a;
				}
				return this.content_;
			}, _0x555f01.prototype.conditionalFocus_ = function _0x3746bc() {
				var _0x1fed68 = _0x19e198.activeElement, _0x242026 = this.player_.el_;
				this.previouslyActiveEl_ = null;
				(_0x242026.contains(_0x1fed68) || _0x242026 === _0x1fed68) && (this.previouslyActiveEl_ = _0x1fed68, this.focus(), this.on(_0x19e198, 'keydown', this.handleKeyDown));
			}, _0x555f01.prototype.conditionalBlur_ = function _0x362662() {
				this.previouslyActiveEl_ && (this.previouslyActiveEl_.focus(), this.previouslyActiveEl_ = null);
				this.off(_0x19e198, 'keydown', this.handleKeyDown);
			}, _0x555f01.prototype.handleKeyDown = function _0x297980(_0x5ab99b) {
				if (_0x5ab99b.which !== 9) {
					return;
				}
				var _0x100e16 = this.focusableEls_(), _0xa737d2 = this.el_.querySelector(':focus'), _0x53612b = void 0;
				for (var _0x5bd73b = 0; _0x5bd73b < _0x100e16.length; _0x5bd73b++) {
					if (_0xa737d2 === _0x100e16[_0x5bd73b]) {
						_0x53612b = _0x5bd73b;
						break;
					}
				}
				if (_0x19e198.activeElement === this.el_) {
					_0x53612b = 0;
				}
				if (_0x5ab99b.shiftKey && _0x53612b === 0) {
					_0x100e16[_0x100e16.length - 1].focus();
					_0x5ab99b.preventDefault();
				} else {
					!_0x5ab99b.shiftKey && _0x53612b === _0x100e16.length - 1 && (_0x100e16[0].focus(), _0x5ab99b.preventDefault());
				}
			}, _0x555f01.prototype.focusableEls_ = function _0x42816d() {
				var _0x493927 = this.el_.querySelectorAll('*');
				return Array.prototype.filter.call(_0x493927, function (_0x5ae0a4) {
					return (_0x5ae0a4 instanceof _0x504cd5.HTMLAnchorElement || _0x5ae0a4 instanceof _0x504cd5.HTMLAreaElement) && _0x5ae0a4.hasAttribute('href') || (_0x5ae0a4 instanceof _0x504cd5.HTMLInputElement || _0x5ae0a4 instanceof _0x504cd5.HTMLSelectElement || _0x5ae0a4 instanceof _0x504cd5.HTMLTextAreaElement || _0x5ae0a4 instanceof _0x504cd5.HTMLButtonElement) && !_0x5ae0a4.hasAttribute('disabled') || _0x5ae0a4 instanceof _0x504cd5.HTMLIFrameElement || _0x5ae0a4 instanceof _0x504cd5.HTMLObjectElement || _0x5ae0a4 instanceof _0x504cd5.HTMLEmbedElement || _0x5ae0a4.hasAttribute('tabindex') && _0x5ae0a4.getAttribute('tabindex') !== -1 || _0x5ae0a4.hasAttribute('contenteditable');
				});
			}, _0x555f01;
		}(_0x2ab435), _0x313d46 = (_0x4daefe.prototype.options_ = {
			'pauseOnOpen': true,
			'temporary': true
		}, _0x2ab435.registerComponent('ModalDialog', _0x4daefe), function (_0x173984) {
			_0x2d47a2(_0x2c7248, _0x173984);
			function _0x2c7248() {
				var _0x572407 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
				_0x7a6cc0(this, _0x2c7248);
				var _0x5d8878 = _0x1ab72f(this, _0x173984.call(this));
				_0x5d8878.tracks_ = [];
				Object.defineProperty(_0x5d8878, 'length', {
					'get': function _0x11b749() {
						return this.tracks_.length;
					}
				});
				for (var _0x1d8fff = 0; _0x1d8fff < _0x572407.length; _0x1d8fff++) {
					_0x5d8878.addTrack(_0x572407[_0x1d8fff]);
				}
				return _0x5d8878;
			}
			return _0x2c7248.prototype.addTrack = function _0x3d2c8b(_0x173fcb) {
				var _0x1fedf6 = this.tracks_.length;
				if (!('' + _0x1fedf6 in this)) {
					Object.defineProperty(this, _0x1fedf6, {
						'get': function _0x46e0dd() {
							return this.tracks_[_0x1fedf6];
						}
					});
				}
				if (this.tracks_.indexOf(_0x173fcb) === -1) {
					this.tracks_.push(_0x173fcb);
					this.trigger({
						'track': _0x173fcb,
						'type': 'addtrack'
					});
				}
			}, _0x2c7248.prototype.removeTrack = function _0x253351(_0x439a77) {
				var _0x3ead14 = void 0;
				for (var _0x432ac7 = 0, _0x1b3ae1 = this.length; _0x432ac7 < _0x1b3ae1; _0x432ac7++) {
					if (this[_0x432ac7] === _0x439a77) {
						_0x3ead14 = this[_0x432ac7];
						if (_0x3ead14.off) {
							_0x3ead14.off();
						}
						this.tracks_.splice(_0x432ac7, 1);
						break;
					}
				}
				if (!_0x3ead14) {
					return;
				}
				this.trigger({
					'track': _0x3ead14,
					'type': 'removetrack'
				});
			}, _0x2c7248.prototype.getTrackById = function _0x20e917(_0x2e795c) {
				var _0x40a5fd = null;
				for (var _0x5907af = 0, _0x45b56c = this.length; _0x5907af < _0x45b56c; _0x5907af++) {
					var _0x2252f7 = this[_0x5907af];
					if (_0x2252f7.id === _0x2e795c) {
						_0x40a5fd = _0x2252f7;
						break;
					}
				}
				return _0x40a5fd;
			}, _0x2c7248;
		}(_0x47c35c)), _0x53b2c8;
		for (_0x53b2c8 in (_0x313d46.prototype.allowedEvents_ = {
			'change': 'change',
			'addtrack': 'addtrack',
			'removetrack': 'removetrack'
		}, _0x313d46.prototype.allowedEvents_))
			_0x313d46.prototype['on' + _0x53b2c8] = null;
		var _0x45fb09 = function _0x3c0825(_0x3b10f5, _0x2e32fd) {
			for (var _0x27bd6d = 0; _0x27bd6d < _0x3b10f5.length; _0x27bd6d++) {
				if (!Object.keys(_0x3b10f5[_0x27bd6d]).length || _0x2e32fd.id === _0x3b10f5[_0x27bd6d].id) {
					continue;
				}
				_0x3b10f5[_0x27bd6d].enabled = false;
			}
		}, _0x24442d = function (_0x17fbd6) {
			_0x2d47a2(_0x41e8f9, _0x17fbd6);
			function _0x41e8f9() {
				var _0x51755c = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
				_0x7a6cc0(this, _0x41e8f9);
				for (var _0x119879 = _0x51755c.length - 1; _0x119879 >= 0; _0x119879--) {
					if (_0x51755c[_0x119879].enabled) {
						_0x45fb09(_0x51755c, _0x51755c[_0x119879]);
						break;
					}
				}
				var _0x35c5e1 = _0x1ab72f(this, _0x17fbd6.call(this, _0x51755c));
				return _0x35c5e1.changing_ = false, _0x35c5e1;
			}
			return _0x41e8f9.prototype.addTrack = function _0xd7f4b7(_0x203b5c) {
				var _0x549d34 = this;
				if (_0x203b5c.enabled) {
					_0x45fb09(this, _0x203b5c);
				}
				_0x17fbd6.prototype.addTrack.call(this, _0x203b5c);
				if (!_0x203b5c.addEventListener) {
					return;
				}
				_0x203b5c.addEventListener('enabledchange', function () {
					if (_0x549d34.changing_) {
						return;
					}
					_0x549d34.changing_ = true;
					_0x45fb09(_0x549d34, _0x203b5c);
					_0x549d34.changing_ = false;
					_0x549d34.trigger('change');
				});
			}, _0x41e8f9;
		}(_0x313d46), _0x370213 = function _0x4b77a3(_0x458fe5, _0x63e547) {
			for (var _0x1d7e38 = 0; _0x1d7e38 < _0x458fe5.length; _0x1d7e38++) {
				if (!Object.keys(_0x458fe5[_0x1d7e38]).length || _0x63e547.id === _0x458fe5[_0x1d7e38].id) {
					continue;
				}
				_0x458fe5[_0x1d7e38].selected = false;
			}
		}, _0x1be8ca = function (_0x24fc00) {
			_0x2d47a2(_0x2d59a8, _0x24fc00);
			function _0x2d59a8() {
				var _0x4c4c0c = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
				_0x7a6cc0(this, _0x2d59a8);
				for (var _0x436e7f = _0x4c4c0c.length - 1; _0x436e7f >= 0; _0x436e7f--) {
					if (_0x4c4c0c[_0x436e7f].selected) {
						_0x370213(_0x4c4c0c, _0x4c4c0c[_0x436e7f]);
						break;
					}
				}
				var _0x299b08 = _0x1ab72f(this, _0x24fc00.call(this, _0x4c4c0c));
				return _0x299b08.changing_ = false, Object.defineProperty(_0x299b08, 'selectedIndex', {
					'get': function _0x3d53ca() {
						for (var _0x1875fc = 0; _0x1875fc < this.length; _0x1875fc++) {
							if (this[_0x1875fc].selected) {
								return _0x1875fc;
							}
						}
						return -1;
					},
					'set': function _0x20370b() {
					}
				}), _0x299b08;
			}
			return _0x2d59a8.prototype.addTrack = function _0x39ccf8(_0x1dee70) {
				var _0xc66c7c = this;
				if (_0x1dee70.selected) {
					_0x370213(this, _0x1dee70);
				}
				_0x24fc00.prototype.addTrack.call(this, _0x1dee70);
				if (!_0x1dee70.addEventListener) {
					return;
				}
				_0x1dee70.addEventListener('selectedchange', function () {
					if (_0xc66c7c.changing_) {
						return;
					}
					_0xc66c7c.changing_ = true;
					_0x370213(_0xc66c7c, _0x1dee70);
					_0xc66c7c.changing_ = false;
					_0xc66c7c.trigger('change');
				});
			}, _0x2d59a8;
		}(_0x313d46), _0x490f37 = function (_0x4e6278) {
			_0x2d47a2(_0x558ceb, _0x4e6278);
			function _0x558ceb() {
				return _0x7a6cc0(this, _0x558ceb), _0x1ab72f(this, _0x4e6278.apply(this, arguments));
			}
			return _0x558ceb.prototype.addTrack = function _0x2c387f(_0x34380f) {
				_0x4e6278.prototype.addTrack.call(this, _0x34380f);
				_0x34380f.addEventListener('modechange', _0x5957d4(this, function () {
					this.queueTrigger('change');
				}));
				var _0x81ade4 = [
					'metadata',
					'chapters'
				];
				if (_0x81ade4.indexOf(_0x34380f.kind) === -1) {
					_0x34380f.addEventListener('modechange', _0x5957d4(this, function () {
						this.trigger('selectedlanguagechange');
					}));
				}
			}, _0x558ceb;
		}(_0x313d46), _0x24512d = (function () {
			function _0x1dbe4c() {
				var _0x51451f = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
				_0x7a6cc0(this, _0x1dbe4c);
				this.trackElements_ = [];
				Object.defineProperty(this, 'length', {
					'get': function _0x317659() {
						return this.trackElements_.length;
					}
				});
				for (var _0x155960 = 0, _0x1276c1 = _0x51451f.length; _0x155960 < _0x1276c1; _0x155960++) {
					this.addTrackElement_(_0x51451f[_0x155960]);
				}
			}
			return _0x1dbe4c.prototype.addTrackElement_ = function _0x474276(_0xfd6e7d) {
				var _0x3ed482 = this.trackElements_.length;
				if (!('' + _0x3ed482 in this)) {
					Object.defineProperty(this, _0x3ed482, {
						'get': function _0x5878cc() {
							return this.trackElements_[_0x3ed482];
						}
					});
				}
				if (this.trackElements_.indexOf(_0xfd6e7d) === -1) {
					this.trackElements_.push(_0xfd6e7d);
				}
			}, _0x1dbe4c.prototype.getTrackElementByTrack_ = function _0x2925a3(_0x238661) {
				var _0x3b6842 = void 0;
				for (var _0x3cfcac = 0, _0x1b405c = this.trackElements_.length; _0x3cfcac < _0x1b405c; _0x3cfcac++) {
					if (_0x238661 === this.trackElements_[_0x3cfcac].track) {
						_0x3b6842 = this.trackElements_[_0x3cfcac];
						break;
					}
				}
				return _0x3b6842;
			}, _0x1dbe4c.prototype.removeTrackElement_ = function _0xb04931(_0x401b88) {
				for (var _0x2d371d = 0, _0x2da501 = this.trackElements_.length; _0x2d371d < _0x2da501; _0x2d371d++) {
					if (_0x401b88 === this.trackElements_[_0x2d371d]) {
						this.trackElements_.splice(_0x2d371d, 1);
						break;
					}
				}
			}, _0x1dbe4c;
		}()), _0x4dca9b = (function () {
			function _0x440456(_0x5328ae) {
				_0x7a6cc0(this, _0x440456);
				_0x440456.prototype.setCues_.call(this, _0x5328ae);
				Object.defineProperty(this, 'length', {
					'get': function _0x4d01a0() {
						return this.length_;
					}
				});
			}
			return _0x440456.prototype.setCues_ = function _0x365488(_0x38da92) {
				var _0x47e5dd = this.length || 0, _0x3504d6 = 0, _0x3bf093 = _0x38da92.length;
				this.cues_ = _0x38da92;
				this.length_ = _0x38da92.length;
				var _0x54a69e = function _0x5c1de1(_0x6470b9) {
					if (!('' + _0x6470b9 in this)) {
						Object.defineProperty(this, '' + _0x6470b9, {
							'get': function _0x408d1f() {
								return this.cues_[_0x6470b9];
							}
						});
					}
				};
				if (_0x47e5dd < _0x3bf093) {
					_0x3504d6 = _0x47e5dd;
					for (; _0x3504d6 < _0x3bf093; _0x3504d6++) {
						_0x54a69e.call(this, _0x3504d6);
					}
				}
			}, _0x440456.prototype.getCueById = function _0x21a919(_0x16208b) {
				var _0x1a537c = null;
				for (var _0x50db9e = 0, _0x10ed1f = this.length; _0x50db9e < _0x10ed1f; _0x50db9e++) {
					var _0x1ef196 = this[_0x50db9e];
					if (_0x1ef196.id === _0x16208b) {
						_0x1a537c = _0x1ef196;
						break;
					}
				}
				return _0x1a537c;
			}, _0x440456;
		}()), _0x4e0480 = {
			'alternative': 'alternative',
			'captions': 'captions',
			'main': 'main',
			'sign': 'sign',
			'subtitles': 'subtitles',
			'commentary': 'commentary'
		}, _0xab023d = {
			'alternative': 'alternative',
			'descriptions': 'descriptions',
			'main': 'main',
			'main-desc': 'main-desc',
			'translation': 'translation',
			'commentary': 'commentary'
		}, _0x177f91 = {
			'subtitles': 'subtitles',
			'captions': 'captions',
			'descriptions': 'descriptions',
			'chapters': 'chapters',
			'metadata': 'metadata'
		}, _0x4f359b = {
			'disabled': 'disabled',
			'hidden': 'hidden',
			'showing': 'showing'
		}, _0x9965f5 = function (_0x579afc) {
			_0x2d47a2(_0x1a44e1, _0x579afc);
			function _0x1a44e1() {
				var _0x55a654 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				_0x7a6cc0(this, _0x1a44e1);
				var _0x3d36c2 = _0x1ab72f(this, _0x579afc.call(this)), _0x228497 = {
					'id': _0x55a654.id || 'vjs_track_' + _0x1a4203(),
					'kind': _0x55a654.kind || '',
					'label': _0x55a654.label || '',
					'language': _0x55a654.language || ''
				}, _0x367666 = function _0x3f09fd(_0x4c3647) {
					Object.defineProperty(_0x3d36c2, _0x4c3647, {
						'get': function _0x5d211e() {
							return _0x228497[_0x4c3647];
						},
						'set': function _0x2491f5() {
						}
					});
				};
				for (var _0x2b6b0c in _0x228497)
					_0x367666(_0x2b6b0c);
				return _0x3d36c2;
			}
			return _0x1a44e1;
		}(_0x47c35c), _0xbd398f = function _0xb6f407(_0x36472c) {
			var _0x4cf458 = [
				'protocol',
				'hostname',
				'port',
				'pathname',
				'search',
				'hash',
				'host'
			], _0x58b931 = _0x19e198.createElement('a');
			_0x58b931.href = _0x36472c;
			var _0x14e70b = _0x58b931.host === '' && _0x58b931.protocol !== 'file:', _0x159085 = void 0;
			_0x14e70b && (_0x159085 = _0x19e198.createElement('div'), _0x159085.innerHTML = '<a href="' + _0x36472c + '"></a>', _0x58b931 = _0x159085.firstChild, _0x159085.setAttribute('style', 'display:none; position:absolute;'), _0x19e198.body.appendChild(_0x159085));
			var _0x32d60e = {
				host: _0x32d60e.host.replace(/:80$/, ''),
				host: _0x32d60e.host.replace(/:443$/, ''),
				protocol: _0x504cd5.location.protocol
			};
			for (var _0x3155b6 = 0; _0x3155b6 < _0x4cf458.length; _0x3155b6++) {
				_0x32d60e[_0x4cf458[_0x3155b6]] = _0x58b931[_0x4cf458[_0x3155b6]];
			}
			if (_0x32d60e.protocol === 'http:') {
			}
			if (_0x32d60e.protocol === 'https:') {
			}
			if (!_0x32d60e.protocol) {
			}
			if (_0x14e70b) {
				_0x19e198.body.removeChild(_0x159085);
			}
			return _0x32d60e;
		}, _0x2cf91d = function _0x1f21a2(_0x4e8f52) {
			if (!_0x4e8f52.match(/^https?:\/\//)) {
				var _0x39d8e7 = _0x19e198.createElement('div');
				_0x39d8e7.innerHTML = '<a href="' + _0x4e8f52 + '">x</a>';
				_0x4e8f52 = _0x39d8e7.firstChild.href;
			}
			return _0x4e8f52;
		}, _0x301eb1 = function _0x4ee31c(_0x33e432) {
			if (typeof _0x33e432 === 'string') {
				var _0x265968 = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/i, _0x151e4d = _0x265968.exec(_0x33e432);
				if (_0x151e4d) {
					return _0x151e4d.pop().toLowerCase();
				}
			}
			return '';
		}, _0x1e9694 = function _0x59a6d1(_0x505e29) {
			var _0x564d18 = _0x504cd5.location, _0x1facea = _0xbd398f(_0x505e29), _0x4771de = _0x1facea.protocol === ':' ? _0x564d18.protocol : _0x1facea.protocol, _0x2095ab = _0x4771de + _0x1facea.host !== _0x564d18.protocol + _0x564d18.host;
			return _0x2095ab;
		}, _0x5d2eb7 = Object.freeze({
			'parseUrl': _0xbd398f,
			'getAbsoluteURL': _0x2cf91d,
			'getFileExtension': _0x301eb1,
			'isCrossOrigin': _0x1e9694
		}), _0xe84c0b = _0x4719d6, _0x380f9a = Object.prototype.toString;
		function _0x4719d6(_0x58a476) {
			var _0x551d5f = _0x380f9a.call(_0x58a476);
			return _0x551d5f === '[object Function]' || typeof _0x58a476 === 'function' && _0x551d5f !== '[object RegExp]' || typeof window !== 'undefined' && (_0x58a476 === window.setTimeout || _0x58a476 === window.alert || _0x58a476 === window.confirm || _0x58a476 === window.prompt);
		}
		var _0x34a924 = Object.freeze({
			'default': _0xe84c0b,
			'__moduleExports': _0xe84c0b
		}), _0x411855 = _0x4ed392(function (_0x730a59, _0x3c434d) {
			_0x3c434d = _0x730a59.exports = _0x2efe32;
			function _0x2efe32(_0x419d1e) {
				return _0x419d1e.replace(/^\s*|\s*$/g, '');
			}
			_0x3c434d.left = function (_0x5cc0e3) {
				return _0x5cc0e3.replace(/^\s*/, '');
			};
			_0x3c434d.right = function (_0x2d68cb) {
				return _0x2d68cb.replace(/\s*$/, '');
			};
		}), _0x96dffa = _0x411855.left, _0x12723d = _0x411855.right, _0x305bda = Object.freeze({
			'default': _0x411855,
			'__moduleExports': _0x411855,
			'left': _0x96dffa,
			'right': _0x12723d
		}), _0xb9a567 = _0x34a924 && _0xe84c0b || _0x34a924, _0x124e85, _0x38296d = Object.prototype.toString, _0x3354a4 = Object.prototype.hasOwnProperty;
		function _0x523c55(_0x5a6802, _0xd8381b, _0x5aa877) {
			if (!_0xb9a567(_0xd8381b)) {
				throw new TypeError('iterator must be a function');
			}
			if (arguments.length < 3) {
				_0x5aa877 = this;
			}
			if (_0x38296d.call(_0x5a6802) === '[object Array]') {
				_0x3dfd2b(_0x5a6802, _0xd8381b, _0x5aa877);
			} else {
				if (typeof _0x5a6802 === 'string') {
					_0x4194bb(_0x5a6802, _0xd8381b, _0x5aa877);
				} else {
					_0x599425(_0x5a6802, _0xd8381b, _0x5aa877);
				}
			}
		}
		function _0x3dfd2b(_0x4eddae, _0x24971b, _0x63d470) {
			for (var _0x1d104c = 0, _0x431c85 = _0x4eddae.length; _0x1d104c < _0x431c85; _0x1d104c++) {
				if (_0x3354a4.call(_0x4eddae, _0x1d104c)) {
					_0x24971b.call(_0x63d470, _0x4eddae[_0x1d104c], _0x1d104c, _0x4eddae);
				}
			}
		}
		function _0x4194bb(_0x56b269, _0x4b51f8, _0x50efc0) {
			for (var _0x315183 = 0, _0x1af51c = _0x56b269.length; _0x315183 < _0x1af51c; _0x315183++) {
				_0x4b51f8.call(_0x50efc0, _0x56b269.charAt(_0x315183), _0x315183, _0x56b269);
			}
		}
		function _0x599425(_0x11392b, _0x5bf05d, _0x3cc17b) {
			for (var _0x43ac2c in _0x11392b)
				if (_0x3354a4.call(_0x11392b, _0x43ac2c)) {
					_0x5bf05d.call(_0x3cc17b, _0x11392b[_0x43ac2c], _0x43ac2c, _0x11392b);
				}
		}
		var _0x5ba703 = Object.freeze({
			'default': _0x523c55,
			'__moduleExports': _0x523c55
		}), _0x4573d9 = _0x305bda && _0x411855 || _0x305bda, _0xbd81aa = _0x5ba703 && _0x523c55 || _0x5ba703, _0x3f8f61 = function _0x398b39(_0x211186) {
			return Object.prototype.toString.call(_0x211186) === '[object Array]';
		}, _0x3b4b23 = function _0x3cee0c(_0x1d857f) {
			if (!_0x1d857f) {
				return {};
			}
			var _0x5fa6cd = {
				_0x25bb75: _0x2ae336,
				_0x25bb75: [
					_0x5fa6cd[_0x25bb75],
					_0x2ae336
				]
			};
			return _0xbd81aa(_0x4573d9(_0x1d857f).split('\n'), function (_0x5db131) {
				var _0x26ca49 = _0x5db131.indexOf(':'), _0x25bb75 = _0x4573d9(_0x5db131.slice(0, _0x26ca49)).toLowerCase(), _0x2ae336 = _0x4573d9(_0x5db131.slice(_0x26ca49 + 1));
				if (typeof _0x5fa6cd[_0x25bb75] === 'undefined') {
				} else {
					if (_0x3f8f61(_0x5fa6cd[_0x25bb75])) {
						_0x5fa6cd[_0x25bb75].push(_0x2ae336);
					} else {
					}
				}
			}), _0x5fa6cd;
		}, _0x1a3313 = Object.freeze({
			'default': _0x3b4b23,
			'__moduleExports': _0x3b4b23
		}), _0x26df20, _0x59479e = Object.prototype.hasOwnProperty;
		function _0x46d942() {
			var _0x33a536 = { _0x542402: _0x2cfa11[_0x542402] };
			for (var _0x2ec4c2 = 0; _0x2ec4c2 < arguments.length; _0x2ec4c2++) {
				var _0x2cfa11 = arguments[_0x2ec4c2];
				for (var _0x542402 in _0x2cfa11)
					if (_0x59479e.call(_0x2cfa11, _0x542402)) {
					}
			}
			return _0x33a536;
		}
		var _0x3b66fb = Object.freeze({
			'default': _0x46d942,
			'__moduleExports': _0x46d942
		}), _0x1b3e4d = _0x1a3313 && _0x3b4b23 || _0x1a3313, _0x33a3c5 = _0x3b66fb && _0x46d942 || _0x3b66fb, _0x47536f = _0x31317d;
		function _0x4eb05e(_0x589064, _0x735f21) {
			for (var _0x272aff = 0; _0x272aff < _0x589064.length; _0x272aff++) {
				_0x735f21(_0x589064[_0x272aff]);
			}
		}
		function _0x334ea5(_0x321fc7) {
			for (var _0x5db591 in _0x321fc7)
				if (_0x321fc7.hasOwnProperty(_0x5db591)) {
					return false;
				}
			return true;
		}
		function _0x1f8508(_0x55d76c, _0x1221c1, _0x591267) {
			var _0x1df7af = _0x55d76c;
			if (_0xb9a567(_0x1221c1)) {
				_0x591267 = _0x1221c1;
				if (typeof _0x55d76c === 'string') {
					_0x1df7af = { 'uri': _0x55d76c };
				}
			} else {
				_0x1df7af = _0x33a3c5(_0x1221c1, { 'uri': _0x55d76c });
			}
			return _0x1df7af.callback = _0x591267, _0x1df7af;
		}
		function _0x31317d(_0x66c87a, _0x57ffe9, _0x38432a) {
			return _0x57ffe9 = _0x1f8508(_0x66c87a, _0x57ffe9, _0x38432a), _0x22c8f3(_0x57ffe9);
		}
		function _0x22c8f3(_0x25891b) {
			if (typeof _0x25891b.callback === 'undefined') {
				throw new Error('callback argument missing');
			}
			var _0x151c7e = false, _0x345f9c = function _0x54b42e(_0x44b226, _0xc093cd, _0x3e5ca1) {
				!_0x151c7e && (_0x151c7e = true, _0x25891b.callback(_0x44b226, _0xc093cd, _0x3e5ca1));
			};
			function _0x39564a() {
				if (_0x5d3e8f.readyState === 4) {
					setTimeout(_0x3745c2, 0);
				}
			}
			function _0x22252b() {
				var _0x498a4b = undefined;
				if (_0x5d3e8f.response) {
					_0x498a4b = _0x5d3e8f.response;
				} else {
					_0x498a4b = _0x5d3e8f.responseText || _0x43da81(_0x5d3e8f);
				}
				if (_0x1854b3) {
					try {
						_0x498a4b = JSON.parse(_0x498a4b);
					} catch (_0x8bf23b) {
					}
				}
				return _0x498a4b;
			}
			function _0x51dd32(_0x4094cd) {
				clearTimeout(_0x2fbf1a);
				if (!(_0x4094cd instanceof Error)) {
					_0x4094cd = new Error('' + (_0x4094cd || 'Unknown XMLHttpRequest Error'));
				}
				return _0x4094cd.statusCode = 0, _0x345f9c(_0x4094cd, _0x53b9da);
			}
			function _0x3745c2() {
				if (_0x43a6c1) {
					return;
				}
				var _0x33fb82;
				clearTimeout(_0x2fbf1a);
				if (_0x25891b.useXDR && _0x5d3e8f.status === undefined) {
					_0x33fb82 = 200;
				} else {
					_0x33fb82 = _0x5d3e8f.status === 1223 ? 204 : _0x5d3e8f.status;
				}
				var _0x2d384b = _0x53b9da, _0x2eb322 = null;
				if (_0x33fb82 !== 0) {
					_0x2d384b = {
						'body': _0x22252b(),
						'statusCode': _0x33fb82,
						'method': _0x20613a,
						'headers': {},
						'url': _0x3ec014,
						'rawRequest': _0x5d3e8f
					};
					if (_0x5d3e8f.getAllResponseHeaders) {
						_0x2d384b.headers = _0x1b3e4d(_0x5d3e8f.getAllResponseHeaders());
					}
				} else {
					_0x2eb322 = new Error('Internal XMLHttpRequest Error');
				}
				return _0x345f9c(_0x2eb322, _0x2d384b, _0x2d384b.body);
			}
			var _0x5d3e8f = _0x25891b.xhr || null;
			if (!_0x5d3e8f) {
				if (_0x25891b.cors || _0x25891b.useXDR) {
					_0x5d3e8f = new _0x31317d.XDomainRequest();
				} else {
					_0x5d3e8f = new _0x31317d.XMLHttpRequest();
				}
			}
			var _0x1bde69, _0x43a6c1, _0x3ec014 = _0x5d3e8f.url = _0x25891b.uri || _0x25891b.url, _0x20613a = _0x5d3e8f.method = _0x25891b.method || 'GET', _0x95d706 = _0x25891b.body || _0x25891b.data, _0xb48f9b = _0x5d3e8f.headers = _0x25891b.headers || {}, _0x1ebb33 = !!_0x25891b.sync, _0x1854b3 = false, _0x2fbf1a, _0x53b9da = {
				'body': undefined,
				'headers': {},
				'statusCode': 0,
				'method': _0x20613a,
				'url': _0x3ec014,
				'rawRequest': _0x5d3e8f
			};
			'json' in _0x25891b && _0x25891b.json !== false && (_0x1854b3 = true, _0xb48f9b.accept || _0xb48f9b.Accept || (_0xb48f9b.Accept = 'application/json'), _0x20613a !== 'GET' && _0x20613a !== 'HEAD' && (_0xb48f9b['content-type'] || _0xb48f9b['Content-Type'] || (_0xb48f9b['Content-Type'] = 'application/json'), _0x95d706 = JSON.stringify(_0x25891b.json === true ? _0x95d706 : _0x25891b.json)));
			_0x5d3e8f.onreadystatechange = _0x39564a;
			_0x5d3e8f.onload = _0x3745c2;
			_0x5d3e8f.onerror = _0x51dd32;
			_0x5d3e8f.onprogress = function () {
			};
			_0x5d3e8f.onabort = function () {
				_0x43a6c1 = true;
			};
			_0x5d3e8f.ontimeout = _0x51dd32;
			_0x5d3e8f.open(_0x20613a, _0x3ec014, !_0x1ebb33, _0x25891b.username, _0x25891b.password);
			if (!_0x1ebb33) {
				_0x5d3e8f.withCredentials = !!_0x25891b.withCredentials;
			}
			if (!_0x1ebb33 && _0x25891b.timeout > 0) {
				_0x2fbf1a = setTimeout(function () {
					if (_0x43a6c1) {
						return;
					}
					_0x43a6c1 = true;
					_0x5d3e8f.abort('timeout');
					var _0x3450e2 = new Error('XMLHttpRequest timeout');
					_0x3450e2.code = 'ETIMEDOUT';
					_0x51dd32(_0x3450e2);
				}, _0x25891b.timeout);
			}
			if (_0x5d3e8f.setRequestHeader) {
				for (_0x1bde69 in _0xb48f9b)
					if (_0xb48f9b.hasOwnProperty(_0x1bde69)) {
						_0x5d3e8f.setRequestHeader(_0x1bde69, _0xb48f9b[_0x1bde69]);
					}
			} else {
				if (_0x25891b.headers && !_0x334ea5(_0x25891b.headers)) {
					throw new Error('Headers cannot be set on an XDomainRequest object');
				}
			}
			if ('responseType' in _0x25891b) {
				_0x5d3e8f.responseType = _0x25891b.responseType;
			}
			if ('beforeSend' in _0x25891b && typeof _0x25891b.beforeSend === 'function') {
				_0x25891b.beforeSend(_0x5d3e8f);
			}
			return _0x5d3e8f.send(_0x95d706 || null), _0x5d3e8f;
		}
		function _0x43da81(_0x1101cf) {
			if (_0x1101cf.responseType === 'document') {
				return _0x1101cf.responseXML;
			}
			var _0x5a30a9 = _0x1101cf.responseXML && _0x1101cf.responseXML.documentElement.nodeName === 'parsererror';
			if (_0x1101cf.responseType === '' && !_0x5a30a9) {
				return _0x1101cf.responseXML;
			}
			return null;
		}
		function _0x51bb6e() {
		}
		_0x31317d.XMLHttpRequest = _0x504cd5.XMLHttpRequest || _0x51bb6e;
		_0x31317d.XDomainRequest = 'withCredentials' in new _0x31317d.XMLHttpRequest() ? _0x31317d.XMLHttpRequest : _0x504cd5.XDomainRequest;
		_0x4eb05e([
			'get',
			'put',
			'post',
			'patch',
			'head',
			'delete'
		], function (_0xfd21a8) {
			_0x31317d[_0xfd21a8 === 'delete' ? 'del' : _0xfd21a8] = function (_0x4e2000, _0x4abd82, _0x125744) {
				return _0x4abd82 = _0x1f8508(_0x4e2000, _0x4abd82, _0x125744), _0x4abd82.method = _0xfd21a8.toUpperCase(), _0x22c8f3(_0x4abd82);
			};
		});
		var _0x5dd82d = function _0x4973bc(_0x4bbd47, _0x43e543) {
			var _0x557c68 = new _0x504cd5.WebVTT.Parser(_0x504cd5, _0x504cd5.vttjs, _0x504cd5.WebVTT.StringDecoder()), _0x545fc7 = [];
			_0x557c68.oncue = function (_0x2579ee) {
				_0x43e543.addCue(_0x2579ee);
			};
			_0x557c68.onparsingerror = function (_0x2ab992) {
				_0x545fc7.push(_0x2ab992);
			};
			_0x557c68.onflush = function () {
				_0x43e543.trigger({
					'type': 'loadeddata',
					'target': _0x43e543
				});
			};
			_0x557c68.parse(_0x4bbd47);
			if (_0x545fc7.length > 0) {
				if (_0x504cd5.console && _0x504cd5.console.groupCollapsed) {
					_0x504cd5.console.groupCollapsed('Text Track parsing errors for ' + _0x43e543.src);
				}
				_0x545fc7.forEach(function (_0x676b39) {
					return _0x4155c5.error(_0x676b39);
				});
				if (_0x504cd5.console && _0x504cd5.console.groupEnd) {
					_0x504cd5.console.groupEnd();
				}
			}
			_0x557c68.flush();
		}, _0x19920f = function _0x110b32(_0x3ca1c8, _0x2de3c6) {
			var _0x4f31c9 = { 'uri': _0x3ca1c8 }, _0x39ef45 = _0x1e9694(_0x3ca1c8);
			if (_0x39ef45) {
				_0x4f31c9.cors = _0x39ef45;
			}
			_0x47536f(_0x4f31c9, _0x5957d4(this, function (_0x384b5e, _0x62bffc, _0xa18180) {
				if (_0x384b5e) {
					return _0x4155c5.error(_0x384b5e, _0x62bffc);
				}
				_0x2de3c6.loaded_ = true;
				if (typeof _0x504cd5.WebVTT !== 'function') {
					if (_0x2de3c6.tech_) {
						var _0x137b5e = function _0x1396f6() {
							return _0x5dd82d(_0xa18180, _0x2de3c6);
						};
						_0x2de3c6.tech_.on('vttjsloaded', _0x137b5e);
						_0x2de3c6.tech_.on('vttjserror', function () {
							_0x4155c5.error('vttjs failed to load, stopping trying to process ' + _0x2de3c6.src);
							_0x2de3c6.tech_.off('vttjsloaded', _0x137b5e);
						});
					}
				} else {
					_0x5dd82d(_0xa18180, _0x2de3c6);
				}
			}));
		}, _0x3e2616 = function (_0x36e7ef) {
			_0x2d47a2(_0x22c5e6, _0x36e7ef);
			function _0x22c5e6() {
				var _0x4bf8d7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				_0x7a6cc0(this, _0x22c5e6);
				if (!_0x4bf8d7.tech) {
					throw new Error('A tech was not provided.');
				}
				var _0x50eb40 = _0x2585aa(_0x4bf8d7, {
					'kind': _0x177f91[_0x4bf8d7.kind] || 'subtitles',
					'language': _0x4bf8d7.language || _0x4bf8d7.srclang || ''
				}), _0x5ae740 = _0x4f359b[_0x50eb40.mode] || 'disabled', _0x20b159 = _0x50eb40.default;
				if (_0x50eb40.kind === 'metadata' || _0x50eb40.kind === 'chapters') {
					_0x5ae740 = 'hidden';
				}
				var _0x3d9a21 = _0x1ab72f(this, _0x36e7ef.call(this, _0x50eb40));
				_0x3d9a21.tech_ = _0x50eb40.tech;
				_0x3d9a21.cues_ = [];
				_0x3d9a21.activeCues_ = [];
				var _0x567ecb = new _0x4dca9b(_0x3d9a21.cues_), _0x2a1946 = new _0x4dca9b(_0x3d9a21.activeCues_), _0x22769a = false, _0x5d9e02 = _0x5957d4(_0x3d9a21, function () {
					this.activeCues = this.activeCues;
					_0x22769a && (this.trigger('cuechange'), _0x22769a = false);
				});
				if (_0x5ae740 !== 'disabled') {
					_0x3d9a21.tech_.ready(function () {
						_0x3d9a21.tech_.on('timeupdate', _0x5d9e02);
					}, true);
				}
				Object.defineProperties(_0x3d9a21, {
					'default': {
						'get': function _0x35e7d9() {
							return _0x20b159;
						},
						'set': function _0x52fd99() {
						}
					},
					'mode': {
						'get': function _0x4e668f() {
							return _0x5ae740;
						},
						'set': function _0x107795(_0x22fefb) {
							var _0x268c1a = this;
							if (!_0x4f359b[_0x22fefb]) {
								return;
							}
							_0x5ae740 = _0x22fefb;
							if (_0x5ae740 === 'showing') {
								this.tech_.ready(function () {
									_0x268c1a.tech_.on('timeupdate', _0x5d9e02);
								}, true);
							}
							this.trigger('modechange');
						}
					},
					'cues': {
						'get': function _0x48e78f() {
							if (!this.loaded_) {
								return null;
							}
							return _0x567ecb;
						},
						'set': function _0x33b3a2() {
						}
					},
					'activeCues': {
						'get': function _0x561331() {
							if (!this.loaded_) {
								return null;
							}
							if (this.cues.length === 0) {
								return _0x2a1946;
							}
							var _0x2b1dac = this.tech_.currentTime(), _0xd8f297 = [];
							for (var _0x55ab21 = 0, _0x298411 = this.cues.length; _0x55ab21 < _0x298411; _0x55ab21++) {
								var _0x520bfd = this.cues[_0x55ab21];
								if (_0x520bfd.startTime <= _0x2b1dac && _0x520bfd.endTime >= _0x2b1dac) {
									_0xd8f297.push(_0x520bfd);
								} else {
									if (_0x520bfd.startTime === _0x520bfd.endTime && _0x520bfd.startTime <= _0x2b1dac && _0x520bfd.startTime + 0.5 >= _0x2b1dac) {
										_0xd8f297.push(_0x520bfd);
									}
								}
							}
							_0x22769a = false;
							if (_0xd8f297.length !== this.activeCues_.length) {
								_0x22769a = true;
							} else {
								for (var _0x25460c = 0; _0x25460c < _0xd8f297.length; _0x25460c++) {
									if (this.activeCues_.indexOf(_0xd8f297[_0x25460c]) === -1) {
										_0x22769a = true;
									}
								}
							}
							return this.activeCues_ = _0xd8f297, _0x2a1946.setCues_(this.activeCues_), _0x2a1946;
						},
						'set': function _0x310789() {
						}
					}
				});
				if (_0x50eb40.src) {
					_0x3d9a21.src = _0x50eb40.src;
					_0x19920f(_0x50eb40.src, _0x3d9a21);
				} else {
					_0x3d9a21.loaded_ = true;
				}
				return _0x3d9a21;
			}
			return _0x22c5e6.prototype.addCue = function _0x5897ff(_0x1ee2cd) {
				var _0x447548 = _0x1ee2cd;
				if (_0x504cd5.vttjs && !(_0x1ee2cd instanceof _0x504cd5.vttjs.VTTCue)) {
					_0x447548 = new _0x504cd5.vttjs.VTTCue(_0x1ee2cd.startTime, _0x1ee2cd.endTime, _0x1ee2cd.text);
					for (var _0x53a337 in _0x1ee2cd)
						if (!(_0x53a337 in _0x447548)) {
							_0x447548[_0x53a337] = _0x1ee2cd[_0x53a337];
						}
					_0x447548.id = _0x1ee2cd.id;
					_0x447548.originalCue_ = _0x1ee2cd;
				}
				var _0x3d3d79 = this.tech_.textTracks();
				for (var _0x13f962 = 0; _0x13f962 < _0x3d3d79.length; _0x13f962++) {
					if (_0x3d3d79[_0x13f962] !== this) {
						_0x3d3d79[_0x13f962].removeCue(_0x447548);
					}
				}
				this.cues_.push(_0x447548);
				this.cues.setCues_(this.cues_);
			}, _0x22c5e6.prototype.removeCue = function _0xe720a0(_0x58dd5f) {
				var _0x42094a = this.cues_.length;
				while (_0x42094a--) {
					var _0x48d6af = this.cues_[_0x42094a];
					if (_0x48d6af === _0x58dd5f || _0x48d6af.originalCue_ && _0x48d6af.originalCue_ === _0x58dd5f) {
						this.cues_.splice(_0x42094a, 1);
						this.cues.setCues_(this.cues_);
						break;
					}
				}
			}, _0x22c5e6;
		}(_0x9965f5), _0x4b3584 = (_0x3e2616.prototype.allowedEvents_ = { 'cuechange': 'cuechange' }, function (_0xac6d07) {
			_0x2d47a2(_0x29c731, _0xac6d07);
			function _0x29c731() {
				var _0x49b470 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				_0x7a6cc0(this, _0x29c731);
				var _0x23b976 = _0x2585aa(_0x49b470, { 'kind': _0xab023d[_0x49b470.kind] || '' }), _0x1c2136 = _0x1ab72f(this, _0xac6d07.call(this, _0x23b976)), _0x159d62 = false;
				Object.defineProperty(_0x1c2136, 'enabled', {
					'get': function _0x31e1e6() {
						return _0x159d62;
					},
					'set': function _0x2d81a7(_0x1e4546) {
						if (typeof _0x1e4546 !== 'boolean' || _0x1e4546 === _0x159d62) {
							return;
						}
						_0x159d62 = _0x1e4546;
						this.trigger('enabledchange');
					}
				});
				if (_0x23b976.enabled) {
					_0x1c2136.enabled = _0x23b976.enabled;
				}
				return _0x1c2136.loaded_ = true, _0x1c2136;
			}
			return _0x29c731;
		}(_0x9965f5)), _0x136e17 = function (_0x58bdd8) {
			_0x2d47a2(_0x466cb5, _0x58bdd8);
			function _0x466cb5() {
				var _0x4f22c5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				_0x7a6cc0(this, _0x466cb5);
				var _0x3a25c2 = _0x2585aa(_0x4f22c5, { 'kind': _0x4e0480[_0x4f22c5.kind] || '' }), _0x2373ea = _0x1ab72f(this, _0x58bdd8.call(this, _0x3a25c2)), _0xbae304 = false;
				Object.defineProperty(_0x2373ea, 'selected', {
					'get': function _0x32884a() {
						return _0xbae304;
					},
					'set': function _0x43334e(_0x4e5ab1) {
						if (typeof _0x4e5ab1 !== 'boolean' || _0x4e5ab1 === _0xbae304) {
							return;
						}
						_0xbae304 = _0x4e5ab1;
						this.trigger('selectedchange');
					}
				});
				if (_0x3a25c2.selected) {
					_0x2373ea.selected = _0x3a25c2.selected;
				}
				return _0x2373ea;
			}
			return _0x466cb5;
		}(_0x9965f5), _0x3154b6 = function (_0x40bef9) {
			_0x2d47a2(_0x382174, _0x40bef9);
			function _0x382174() {
				var _0x40e3ba = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				_0x7a6cc0(this, _0x382174);
				var _0x3b6bd0 = _0x1ab72f(this, _0x40bef9.call(this)), _0xf657ec = void 0, _0x1a482a = new _0x3e2616(_0x40e3ba);
				return _0x3b6bd0.kind = _0x1a482a.kind, _0x3b6bd0.src = _0x1a482a.src, _0x3b6bd0.srclang = _0x1a482a.language, _0x3b6bd0.label = _0x1a482a.label, _0x3b6bd0.default = _0x1a482a.default, Object.defineProperties(_0x3b6bd0, {
					'readyState': {
						'get': function _0x13eaa6() {
							return _0xf657ec;
						}
					},
					'track': {
						'get': function _0x1d702c() {
							return _0x1a482a;
						}
					}
				}), _0xf657ec = 0, _0x1a482a.addEventListener('loadeddata', function () {
					_0xf657ec = 2;
					_0x3b6bd0.trigger({
						'type': 'load',
						'target': _0x3b6bd0
					});
				}), _0x3b6bd0;
			}
			return _0x382174;
		}(_0x47c35c), _0x3d5974 = (_0x3154b6.prototype.allowedEvents_ = { 'load': 'load' }, _0x3154b6.NONE = 0, _0x3154b6.LOADING = 1, _0x3154b6.LOADED = 2, _0x3154b6.ERROR = 3, {
			'audio': {
				'ListClass': _0x24442d,
				'TrackClass': _0x4b3584,
				'capitalName': 'Audio'
			},
			'video': {
				'ListClass': _0x1be8ca,
				'TrackClass': _0x136e17,
				'capitalName': 'Video'
			},
			'text': {
				'ListClass': _0x490f37,
				'TrackClass': _0x3e2616,
				'capitalName': 'Text'
			}
		}), _0x298773 = (Object.keys(_0x3d5974).forEach(function (_0x103ae1) {
			_0x3d5974[_0x103ae1].getterName = _0x103ae1 + 'Tracks';
			_0x3d5974[_0x103ae1].privateName = _0x103ae1 + 'Tracks_';
		}), {
			'remoteText': {
				'ListClass': _0x490f37,
				'TrackClass': _0x3e2616,
				'capitalName': 'RemoteText',
				'getterName': 'remoteTextTracks',
				'privateName': 'remoteTextTracks_'
			},
			'remoteTextEl': {
				'ListClass': _0x24512d,
				'TrackClass': _0x3154b6,
				'capitalName': 'RemoteTextTrackEls',
				'getterName': 'remoteTextTrackEls',
				'privateName': 'remoteTextTrackEls_'
			}
		}), _0x2449f5 = _0x2585aa(_0x3d5974, _0x298773), _0x572577 = (_0x298773.names = Object.keys(_0x298773), _0x3d5974.names = Object.keys(_0x3d5974), _0x2449f5.names = [].concat(_0x298773.names).concat(_0x3d5974.names), Object.create || (function () {
			function _0x322af0() {
			}
			return function (_0x457e62) {
				if (arguments.length !== 1) {
					throw new Error('Object.create shim only accepts one parameter.');
				}
				return _0x322af0.prototype = _0x457e62, new _0x322af0();
			};
		}()));
		function _0x242bcd(_0x34fb59, _0x45938c) {
			this.name = 'ParsingError';
			this.code = _0x34fb59.code;
			this.message = _0x45938c || _0x34fb59.message;
		}
		function _0x1d1631(_0x122c05) {
			function _0x14b8a1(_0xb83fd7, _0x10df6c, _0x5b2632, _0x811b64) {
				return (_0xb83fd7 | 0) * 3600 + (_0x10df6c | 0) * 60 + (_0x5b2632 | 0) + (_0x811b64 | 0) / 1000;
			}
			var _0x7d3373 = _0x122c05.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
			if (!_0x7d3373) {
				return null;
			}
			if (_0x7d3373[3]) {
				return _0x14b8a1(_0x7d3373[1], _0x7d3373[2], _0x7d3373[3].replace(':', ''), _0x7d3373[4]);
			} else {
				if (_0x7d3373[1] > 59) {
					return _0x14b8a1(_0x7d3373[1], _0x7d3373[2], 0, _0x7d3373[4]);
				} else {
					return _0x14b8a1(0, _0x7d3373[1], _0x7d3373[2], _0x7d3373[4]);
				}
			}
		}
		function _0x1ac535() {
			this.values = _0x572577(null);
		}
		function _0x8c2787(_0x2a2fe9, _0x15583c, _0xfbad87, _0x4c1721) {
			var _0x54a30b = _0x4c1721 ? _0x2a2fe9.split(_0x4c1721) : [_0x2a2fe9];
			for (var _0xe667f2 in _0x54a30b) {
				if (typeof _0x54a30b[_0xe667f2] !== 'string') {
					continue;
				}
				var _0x67bde = _0x54a30b[_0xe667f2].split(_0xfbad87);
				if (_0x67bde.length !== 2) {
					continue;
				}
				var _0x391a73 = _0x67bde[0], _0x1a9a23 = _0x67bde[1];
				_0x15583c(_0x391a73, _0x1a9a23);
			}
		}
		function _0x319568(_0x538a1e, _0x5961e2, _0x2cd902) {
			var _0x3bb646 = _0x538a1e;
			function _0x2d8089() {
				var _0x523906 = _0x1d1631(_0x538a1e);
				if (_0x523906 === null) {
					throw new _0x242bcd(_0x242bcd.Errors.BadTimeStamp, 'Malformed timestamp: ' + _0x3bb646);
				}
				return _0x538a1e = _0x538a1e.replace(/^[^\sa-zA-Z-]+/, ''), _0x523906;
			}
			function _0x1b5e9b(_0x2df882, _0x1e6e41) {
				var _0x140c06 = new _0x1ac535();
				_0x8c2787(_0x2df882, function (_0x5720d3, _0x4bce7e) {
					switch (_0x5720d3) {
						case 'region':
							for (var _0x2c2737 = _0x2cd902.length - 1; _0x2c2737 >= 0; _0x2c2737--) {
								if (_0x2cd902[_0x2c2737].id === _0x4bce7e) {
									_0x140c06.set(_0x5720d3, _0x2cd902[_0x2c2737].region);
									break;
								}
							}
							break;
						case 'vertical':
							_0x140c06.alt(_0x5720d3, _0x4bce7e, [
								'rl',
								'lr'
							]);
							break;
						case 'line':
							var _0xab445d = _0x4bce7e.split(','), _0x3d20a6 = _0xab445d[0];
							_0x140c06.integer(_0x5720d3, _0x3d20a6), _0x140c06.percent(_0x5720d3, _0x3d20a6) ? _0x140c06.set('snapToLines', false) : null, _0x140c06.alt(_0x5720d3, _0x3d20a6, ['auto']);
							if (_0xab445d.length === 2) {
								_0x140c06.alt('lineAlign', _0xab445d[1], [
									'start',
									'middle',
									'end'
								]);
							}
							break;
						case 'position':
							_0xab445d = _0x4bce7e.split(','), _0x140c06.percent(_0x5720d3, _0xab445d[0]);
							if (_0xab445d.length === 2) {
								_0x140c06.alt('positionAlign', _0xab445d[1], [
									'start',
									'middle',
									'end'
								]);
							}
							break;
						case 'size':
							_0x140c06.percent(_0x5720d3, _0x4bce7e);
							break;
						case 'align':
							_0x140c06.alt(_0x5720d3, _0x4bce7e, [
								'start',
								'middle',
								'end',
								'left',
								'right'
							]);
							break;
					}
				}, /:/, /\s/);
				_0x1e6e41.region = _0x140c06.get('region', null);
				_0x1e6e41.vertical = _0x140c06.get('vertical', '');
				_0x1e6e41.line = _0x140c06.get('line', 'auto');
				_0x1e6e41.lineAlign = _0x140c06.get('lineAlign', 'start');
				_0x1e6e41.snapToLines = _0x140c06.get('snapToLines', true);
				_0x1e6e41.size = _0x140c06.get('size', 100);
				_0x1e6e41.align = _0x140c06.get('align', 'middle');
				_0x1e6e41.position = _0x140c06.get('position', {
					'start': 0,
					'left': 0,
					'middle': 50,
					'end': 100,
					'right': 100
				}, _0x1e6e41.align);
				_0x1e6e41.positionAlign = _0x140c06.get('positionAlign', {
					'start': 'start',
					'left': 'start',
					'middle': 'middle',
					'end': 'end',
					'right': 'end'
				}, _0x1e6e41.align);
			}
			function _0x3ef2de() {
				_0x538a1e = _0x538a1e.replace(/^\s+/, '');
			}
			_0x3ef2de();
			_0x5961e2.startTime = _0x2d8089();
			_0x3ef2de();
			if (_0x538a1e.substr(0, 3) !== '-->') {
				throw new _0x242bcd(_0x242bcd.Errors.BadTimeStamp, 'Malformed time stamp (time stamps must be separated by \'-->\'): ' + _0x3bb646);
			}
			_0x538a1e = _0x538a1e.substr(3);
			_0x3ef2de();
			_0x5961e2.endTime = _0x2d8089();
			_0x3ef2de();
			_0x1b5e9b(_0x538a1e, _0x5961e2);
		}
		((_0x242bcd.prototype = _0x572577(Error.prototype)).constructor = _0x242bcd).Errors = {
			'BadSignature': {
				'code': 0,
				'message': 'Malformed WebVTT signature.'
			},
			'BadTimeStamp': {
				'code': 1,
				'message': 'Malformed time stamp.'
			}
		};
		_0x1ac535.prototype = {
			'set': function _0x3bc0ce(_0x1cf70a, _0x1c6de6) {
				if (!this.get(_0x1cf70a) && _0x1c6de6 !== '') {
					this.values[_0x1cf70a] = _0x1c6de6;
				}
			},
			'get': function _0x2cd4a8(_0x4c6364, _0x1fdd3e, _0x1776af) {
				if (_0x1776af) {
					return this.has(_0x4c6364) ? this.values[_0x4c6364] : _0x1fdd3e[_0x1776af];
				}
				return this.has(_0x4c6364) ? this.values[_0x4c6364] : _0x1fdd3e;
			},
			'has': function _0x3dcea3(_0x381fe0) {
				return _0x381fe0 in this.values;
			},
			'alt': function _0x5bffba(_0x2ad26c, _0x1b9fce, _0x5effb2) {
				for (var _0x950bf = 0; _0x950bf < _0x5effb2.length; ++_0x950bf) {
					if (_0x1b9fce === _0x5effb2[_0x950bf]) {
						this.set(_0x2ad26c, _0x1b9fce);
						break;
					}
				}
			},
			'integer': function _0x48308f(_0x4ebe70, _0x37f595) {
				if (/^-?\d+$/.test(_0x37f595)) {
					this.set(_0x4ebe70, parseInt(_0x37f595, 10));
				}
			},
			'percent': function _0x558104(_0x5d8839, _0x52d394) {
				var _0x31ee58;
				if (_0x31ee58 = _0x52d394.match(/^([\d]{1,3})(\.[\d]*)?%$/)) {
					_0x52d394 = parseFloat(_0x52d394);
					if (_0x52d394 >= 0 && _0x52d394 <= 100) {
						return this.set(_0x5d8839, _0x52d394), true;
					}
				}
				return false;
			}
		};
		var _0x5eae75 = {
			'c': 'span',
			'i': 'i',
			'b': 'b',
			'u': 'u',
			'ruby': 'ruby',
			'rt': 'rt',
			'v': 'span',
			'lang': 'span'
		}, _0x2a2a73 = {
			'v': 'title',
			'lang': 'lang'
		}, _0x1dbc3d = { 'rt': 'ruby' };
		function _0x5a7a09(_0x4f306a, _0x28f075) {
			function _0x142698() {
				if (!_0x28f075) {
					return null;
				}
				function _0x5d1e70(_0x4da0f2) {
					return _0x28f075 = _0x28f075.substr(_0x4da0f2.length), _0x4da0f2;
				}
				var _0x461a00 = _0x28f075.match(/^([^<]*)(<[^>]*>?)?/);
				return _0x5d1e70(_0x461a00[1] ? _0x461a00[1] : _0x461a00[2]);
			}
			function _0x29a4d2(_0x4a8577) {
				return _0x497472[_0x4a8577];
			}
			function _0x463f7d(_0x186dc8) {
				while (_0x1549a9 = _0x186dc8.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)) {
					_0x186dc8 = _0x186dc8.replace(_0x1549a9[0], _0x29a4d2);
				}
				return _0x186dc8;
			}
			function _0x5a68c0(_0x49fc5a, _0x135049) {
				return !_0x1dbc3d[_0x135049.localName] || _0x1dbc3d[_0x135049.localName] === _0x49fc5a.localName;
			}
			function _0x576bd0(_0x4f9ff4, _0x5f3f8d) {
				var _0x5da43b = _0x5eae75[_0x4f9ff4];
				if (!_0x5da43b) {
					return null;
				}
				var _0x59d460 = _0x4f306a.document.createElement(_0x5da43b);
				_0x59d460.localName = _0x5da43b;
				var _0x35c814 = _0x2a2a73[_0x4f9ff4];
				if (_0x35c814 && _0x5f3f8d) {
					_0x59d460[_0x35c814] = _0x5f3f8d.trim();
				}
				return _0x59d460;
			}
			var _0x4b186f = _0x4f306a.document.createElement('div'), _0x5c339e = _0x4b186f, _0xb49270, _0x3a4449 = [];
			while ((_0xb49270 = _0x142698()) !== null) {
				if (_0xb49270[0] === '<') {
					if (_0xb49270[1] === '/') {
						_0x3a4449.length && _0x3a4449[_0x3a4449.length - 1] === _0xb49270.substr(2).replace('>', '') && (_0x3a4449.pop(), _0x5c339e = _0x5c339e.parentNode);
						continue;
					}
					var _0x294d44 = _0x1d1631(_0xb49270.substr(1, _0xb49270.length - 2)), _0x52ec1c;
					if (_0x294d44) {
						_0x52ec1c = _0x4f306a.document.createProcessingInstruction('timestamp', _0x294d44);
						_0x5c339e.appendChild(_0x52ec1c);
						continue;
					}
					var _0x1549a9 = _0xb49270.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);
					if (!_0x1549a9) {
						continue;
					}
					_0x52ec1c = _0x576bd0(_0x1549a9[1], _0x1549a9[3]);
					if (!_0x52ec1c) {
						continue;
					}
					if (!_0x5a68c0(_0x5c339e, _0x52ec1c)) {
						continue;
					}
					if (_0x1549a9[2]) {
						_0x52ec1c.className = _0x1549a9[2].substr(1).replace('.', ' ');
					}
					_0x3a4449.push(_0x1549a9[1]);
					_0x5c339e.appendChild(_0x52ec1c);
					_0x5c339e = _0x52ec1c;
					continue;
				}
				_0x5c339e.appendChild(_0x4f306a.document.createTextNode(_0x463f7d(_0xb49270)));
			}
			return _0x4b186f;
		}
		var _0x1ef3e6 = [
			[
				1470,
				1470
			],
			[
				1472,
				1472
			],
			[
				1475,
				1475
			],
			[
				1478,
				1478
			],
			[
				1488,
				1514
			],
			[
				1520,
				1524
			],
			[
				1544,
				1544
			],
			[
				1547,
				1547
			],
			[
				1549,
				1549
			],
			[
				1563,
				1563
			],
			[
				1566,
				1610
			],
			[
				1645,
				1647
			],
			[
				1649,
				1749
			],
			[
				1765,
				1766
			],
			[
				1774,
				1775
			],
			[
				1786,
				1805
			],
			[
				1807,
				1808
			],
			[
				1810,
				1839
			],
			[
				1869,
				1957
			],
			[
				1969,
				1969
			],
			[
				1984,
				2026
			],
			[
				2036,
				2037
			],
			[
				2042,
				2042
			],
			[
				2048,
				2069
			],
			[
				2074,
				2074
			],
			[
				2084,
				2084
			],
			[
				2088,
				2088
			],
			[
				2096,
				2110
			],
			[
				2112,
				2136
			],
			[
				2142,
				2142
			],
			[
				2208,
				2208
			],
			[
				2210,
				2220
			],
			[
				8207,
				8207
			],
			[
				64285,
				64285
			],
			[
				64287,
				64296
			],
			[
				64298,
				64310
			],
			[
				64312,
				64316
			],
			[
				64318,
				64318
			],
			[
				64320,
				64321
			],
			[
				64323,
				64324
			],
			[
				64326,
				64449
			],
			[
				64467,
				64829
			],
			[
				64848,
				64911
			],
			[
				64914,
				64967
			],
			[
				65008,
				65020
			],
			[
				65136,
				65140
			],
			[
				65142,
				65276
			],
			[
				67584,
				67589
			],
			[
				67592,
				67592
			],
			[
				67594,
				67637
			],
			[
				67639,
				67640
			],
			[
				67644,
				67644
			],
			[
				67647,
				67669
			],
			[
				67671,
				67679
			],
			[
				67840,
				67867
			],
			[
				67872,
				67897
			],
			[
				67903,
				67903
			],
			[
				67968,
				68023
			],
			[
				68030,
				68031
			],
			[
				68096,
				68096
			],
			[
				68112,
				68115
			],
			[
				68117,
				68119
			],
			[
				68121,
				68147
			],
			[
				68160,
				68167
			],
			[
				68176,
				68184
			],
			[
				68192,
				68223
			],
			[
				68352,
				68405
			],
			[
				68416,
				68437
			],
			[
				68440,
				68466
			],
			[
				68472,
				68479
			],
			[
				68608,
				68680
			],
			[
				126464,
				126467
			],
			[
				126469,
				126495
			],
			[
				126497,
				126498
			],
			[
				126500,
				126500
			],
			[
				126503,
				126503
			],
			[
				126505,
				126514
			],
			[
				126516,
				126519
			],
			[
				126521,
				126521
			],
			[
				126523,
				126523
			],
			[
				126530,
				126530
			],
			[
				126535,
				126535
			],
			[
				126537,
				126537
			],
			[
				126539,
				126539
			],
			[
				126541,
				126543
			],
			[
				126545,
				126546
			],
			[
				126548,
				126548
			],
			[
				126551,
				126551
			],
			[
				126553,
				126553
			],
			[
				126555,
				126555
			],
			[
				126557,
				126557
			],
			[
				126559,
				126559
			],
			[
				126561,
				126562
			],
			[
				126564,
				126564
			],
			[
				126567,
				126570
			],
			[
				126572,
				126578
			],
			[
				126580,
				126583
			],
			[
				126585,
				126588
			],
			[
				126590,
				126590
			],
			[
				126592,
				126601
			],
			[
				126603,
				126619
			],
			[
				126625,
				126627
			],
			[
				126629,
				126633
			],
			[
				126635,
				126651
			],
			[
				1114109,
				1114109
			]
		];
		function _0x5075ed(_0x5b8717) {
			for (var _0x26bfa3 = 0; _0x26bfa3 < _0x1ef3e6.length; _0x26bfa3++) {
				var _0x2e0706 = _0x1ef3e6[_0x26bfa3];
				if (_0x5b8717 >= _0x2e0706[0] && _0x5b8717 <= _0x2e0706[1]) {
					return true;
				}
			}
			return false;
		}
		function _0x2504ff(_0x52b05c) {
			var _0x32ba1f = [], _0x1bf1e4 = '', _0x268793;
			if (!_0x52b05c || !_0x52b05c.childNodes) {
				return 'ltr';
			}
			function _0x1cdf60(_0x4cc533, _0x8b0887) {
				for (var _0x58b068 = _0x8b0887.childNodes.length - 1; _0x58b068 >= 0; _0x58b068--) {
					_0x4cc533.push(_0x8b0887.childNodes[_0x58b068]);
				}
			}
			function _0x9746e5(_0x2a62b1) {
				if (!_0x2a62b1 || !_0x2a62b1.length) {
					return null;
				}
				var _0x5f5bc0 = _0x2a62b1.pop(), _0x2b8d71 = _0x5f5bc0.textContent || _0x5f5bc0.innerText;
				if (_0x2b8d71) {
					var _0x3266d6 = _0x2b8d71.match(/^.*(\n|\r)/);
					if (_0x3266d6) {
						return _0x2a62b1.length = 0, _0x3266d6[0];
					}
					return _0x2b8d71;
				}
				if (_0x5f5bc0.tagName === 'ruby') {
					return _0x9746e5(_0x2a62b1);
				}
				if (_0x5f5bc0.childNodes) {
					return _0x1cdf60(_0x2a62b1, _0x5f5bc0), _0x9746e5(_0x2a62b1);
				}
			}
			_0x1cdf60(_0x32ba1f, _0x52b05c);
			while (_0x1bf1e4 = _0x9746e5(_0x32ba1f)) {
				for (var _0x2681c3 = 0; _0x2681c3 < _0x1bf1e4.length; _0x2681c3++) {
					_0x268793 = _0x1bf1e4.charCodeAt(_0x2681c3);
					if (_0x5075ed(_0x268793)) {
						return 'rtl';
					}
				}
			}
			return 'ltr';
		}
		function _0x13645c(_0x337220) {
			if (typeof _0x337220.line === 'number' && (_0x337220.snapToLines || _0x337220.line >= 0 && _0x337220.line <= 100)) {
				return _0x337220.line;
			}
			if (!_0x337220.track || !_0x337220.track.textTrackList || !_0x337220.track.textTrackList.mediaElement) {
				return -1;
			}
			var _0x28bab5 = _0x337220.track, _0x5deff4 = _0x28bab5.textTrackList, _0x5b3ade = 0;
			for (var _0x2edbb4 = 0; _0x2edbb4 < _0x5deff4.length && _0x5deff4[_0x2edbb4] !== _0x28bab5; _0x2edbb4++) {
				if (_0x5deff4[_0x2edbb4].mode === 'showing') {
					_0x5b3ade++;
				}
			}
			return ++_0x5b3ade * -1;
		}
		function _0xbd0124() {
		}
		function _0x45f4e0(_0x369398, _0xc60cb1, _0x4741a0) {
			_0xbd0124.call(this);
			this.cue = _0xc60cb1;
			this.cueDiv = _0x5a7a09(_0x369398, _0xc60cb1.text);
			var _0x3291e4 = {
				'color': 'rgba(255, 255, 255, 1)',
				'backgroundColor': 'rgba(0, 0, 0, 0.8)',
				'position': 'relative',
				'left': 0,
				'right': 0,
				'top': 0,
				'bottom': 0,
				'display': 'inline',
				'writingMode': _0xc60cb1.vertical === '' ? 'horizontal-tb' : _0xc60cb1.vertical === 'lr' ? 'vertical-lr' : 'vertical-rl',
				'unicodeBidi': 'plaintext'
			};
			this.applyStyles(_0x3291e4, this.cueDiv);
			this.div = _0x369398.document.createElement('div');
			_0x3291e4 = {
				'direction': _0x2504ff(this.cueDiv),
				'writingMode': _0xc60cb1.vertical === '' ? 'horizontal-tb' : _0xc60cb1.vertical === 'lr' ? 'vertical-lr' : 'vertical-rl',
				'unicodeBidi': 'plaintext',
				'textAlign': _0xc60cb1.align === 'middle' ? 'center' : _0xc60cb1.align,
				'font': _0x4741a0.font,
				'whiteSpace': 'pre-line',
				'position': 'absolute'
			};
			this.applyStyles(_0x3291e4);
			this.div.appendChild(this.cueDiv);
			var _0x288dc4 = 0;
			switch (_0xc60cb1.positionAlign) {
				case 'start':
					_0x288dc4 = _0xc60cb1.position;
					break;
				case 'middle':
					_0x288dc4 = _0xc60cb1.position - _0xc60cb1.size / 2;
					break;
				case 'end':
					_0x288dc4 = _0xc60cb1.position - _0xc60cb1.size;
					break;
			}
			if (_0xc60cb1.vertical === '') {
				this.applyStyles({
					'left': this.formatStyle(_0x288dc4, '%'),
					'width': this.formatStyle(_0xc60cb1.size, '%')
				});
			} else {
				this.applyStyles({
					'top': this.formatStyle(_0x288dc4, '%'),
					'height': this.formatStyle(_0xc60cb1.size, '%')
				});
			}
			this.move = function (_0x58683e) {
				this.applyStyles({
					'top': this.formatStyle(_0x58683e.top, 'px'),
					'bottom': this.formatStyle(_0x58683e.bottom, 'px'),
					'left': this.formatStyle(_0x58683e.left, 'px'),
					'right': this.formatStyle(_0x58683e.right, 'px'),
					'height': this.formatStyle(_0x58683e.height, 'px'),
					'width': this.formatStyle(_0x58683e.width, 'px')
				});
			};
		}
		function _0x10ee0c(_0xf94c5e) {
			var _0x1bfef6, _0x3d71e3, _0xc106dc, _0x20816d;
			if (_0xf94c5e.div) {
				_0x3d71e3 = _0xf94c5e.div.offsetHeight;
				_0xc106dc = _0xf94c5e.div.offsetWidth;
				_0x20816d = _0xf94c5e.div.offsetTop;
				var _0x1721e8 = (_0x1721e8 = _0xf94c5e.div.childNodes) && (_0x1721e8 = _0x1721e8[0]) && _0x1721e8.getClientRects && _0x1721e8.getClientRects();
				_0xf94c5e = _0xf94c5e.div.getBoundingClientRect();
				_0x1bfef6 = _0x1721e8 ? Math.max(_0x1721e8[0] && _0x1721e8[0].height || 0, _0xf94c5e.height / _0x1721e8.length) : 0;
			}
			this.left = _0xf94c5e.left;
			this.right = _0xf94c5e.right;
			this.top = _0xf94c5e.top || _0x20816d;
			this.height = _0xf94c5e.height || _0x3d71e3;
			this.bottom = _0xf94c5e.bottom || _0x20816d + (_0xf94c5e.height || _0x3d71e3);
			this.width = _0xf94c5e.width || _0xc106dc;
			this.lineHeight = _0x1bfef6 !== undefined ? _0x1bfef6 : _0xf94c5e.lineHeight;
		}
		function _0xf01f90(_0x4652f6, _0x1a5252, _0x36cd0f, _0x200b08) {
			function _0x2a8b73(_0x5cb4e6, _0x19d44f) {
				var _0x2f1b4a, _0x3a7164 = new _0x10ee0c(_0x5cb4e6), _0x4deea5 = 1;
				for (var _0x1f8fd1 = 0; _0x1f8fd1 < _0x19d44f.length; _0x1f8fd1++) {
					while (_0x5cb4e6.overlapsOppositeAxis(_0x36cd0f, _0x19d44f[_0x1f8fd1]) || _0x5cb4e6.within(_0x36cd0f) && _0x5cb4e6.overlapsAny(_0x200b08)) {
						_0x5cb4e6.move(_0x19d44f[_0x1f8fd1]);
					}
					if (_0x5cb4e6.within(_0x36cd0f)) {
						return _0x5cb4e6;
					}
					var _0x5b9780 = _0x5cb4e6.intersectPercentage(_0x36cd0f);
					if (_0x4deea5 > _0x5b9780) {
						_0x2f1b4a = new _0x10ee0c(_0x5cb4e6);
						_0x4deea5 = _0x5b9780;
					}
					_0x5cb4e6 = new _0x10ee0c(_0x3a7164);
				}
				return _0x2f1b4a || _0x3a7164;
			}
			var _0x46a5c5 = new _0x10ee0c(_0x1a5252), _0x9dee48 = _0x1a5252.cue, _0x1be02c = _0x13645c(_0x9dee48), _0x384d58 = [];
			if (_0x9dee48.snapToLines) {
				var _0x1e4808;
				switch (_0x9dee48.vertical) {
					case '':
						_0x384d58 = [
							'+y',
							'-y'
						], _0x1e4808 = 'height';
						break;
					case 'rl':
						_0x384d58 = [
							'+x',
							'-x'
						], _0x1e4808 = 'width';
						break;
					case 'lr':
						_0x384d58 = [
							'-x',
							'+x'
						], _0x1e4808 = 'width';
						break;
				}
				var _0x647908 = _0x46a5c5.lineHeight, _0x533faa = _0x647908 * Math.round(_0x1be02c), _0x521d33 = _0x36cd0f[_0x1e4808] + _0x647908, _0x33f253 = _0x384d58[0];
				if (Math.abs(_0x533faa) > _0x521d33) {
					_0x533faa = _0x533faa < 0 ? -1 : 1;
					_0x533faa *= Math.ceil(_0x521d33 / _0x647908) * _0x647908;
				}
				if (_0x1be02c < 0) {
					_0x533faa += _0x9dee48.vertical === '' ? _0x36cd0f.height : _0x36cd0f.width;
					_0x384d58 = _0x384d58.reverse();
				}
				_0x46a5c5.move(_0x33f253, _0x533faa);
			} else {
				var _0x12b628 = _0x46a5c5.lineHeight / _0x36cd0f.height * 100;
				switch (_0x9dee48.lineAlign) {
					case 'middle':
						_0x1be02c -= _0x12b628 / 2;
						break;
					case 'end':
						_0x1be02c -= _0x12b628;
						break;
				}
				switch (_0x9dee48.vertical) {
					case '':
						_0x1a5252.applyStyles({ 'top': _0x1a5252.formatStyle(_0x1be02c, '%') });
						break;
					case 'rl':
						_0x1a5252.applyStyles({ 'left': _0x1a5252.formatStyle(_0x1be02c, '%') });
						break;
					case 'lr':
						_0x1a5252.applyStyles({ 'right': _0x1a5252.formatStyle(_0x1be02c, '%') });
						break;
				}
				_0x384d58 = [
					'+y',
					'-x',
					'+x',
					'-y'
				];
				_0x46a5c5 = new _0x10ee0c(_0x1a5252);
			}
			var _0x49e9b4 = _0x2a8b73(_0x46a5c5, _0x384d58);
			_0x1a5252.move(_0x49e9b4.toCSSCompatValues(_0x36cd0f));
		}
		function _0x34d289() {
		}
		_0xbd0124.prototype.applyStyles = function (_0x4b3587, _0x362139) {
			_0x362139 = _0x362139 || this.div;
			for (var _0x24a6c4 in _0x4b3587)
				if (_0x4b3587.hasOwnProperty(_0x24a6c4)) {
					_0x362139.style[_0x24a6c4] = _0x4b3587[_0x24a6c4];
				}
		};
		_0xbd0124.prototype.formatStyle = function (_0x21308e, _0x331cd2) {
			return _0x21308e === 0 ? 0 : _0x21308e + _0x331cd2;
		};
		(_0x45f4e0.prototype = _0x572577(_0xbd0124.prototype)).constructor = _0x45f4e0;
		_0x10ee0c.prototype.move = function (_0x1dee28, _0x45f653) {
			_0x45f653 = _0x45f653 !== undefined ? _0x45f653 : this.lineHeight;
			switch (_0x1dee28) {
				case '+x':
					this.left += _0x45f653, this.right += _0x45f653;
					break;
				case '-x':
					this.left -= _0x45f653, this.right -= _0x45f653;
					break;
				case '+y':
					this.top += _0x45f653, this.bottom += _0x45f653;
					break;
				case '-y':
					this.top -= _0x45f653, this.bottom -= _0x45f653;
					break;
			}
		};
		_0x10ee0c.prototype.overlaps = function (_0x4503ac) {
			return this.left < _0x4503ac.right && this.right > _0x4503ac.left && this.top < _0x4503ac.bottom && this.bottom > _0x4503ac.top;
		};
		_0x10ee0c.prototype.overlapsAny = function (_0x93c46e) {
			for (var _0x45aa88 = 0; _0x45aa88 < _0x93c46e.length; _0x45aa88++) {
				if (this.overlaps(_0x93c46e[_0x45aa88])) {
					return true;
				}
			}
			return false;
		};
		_0x10ee0c.prototype.within = function (_0x129a5d) {
			return this.top >= _0x129a5d.top && this.bottom <= _0x129a5d.bottom && this.left >= _0x129a5d.left && this.right <= _0x129a5d.right;
		};
		_0x10ee0c.prototype.overlapsOppositeAxis = function (_0x5cd095, _0x11ee20) {
			switch (_0x11ee20) {
				case '+x':
					return this.left < _0x5cd095.left;
				case '-x':
					return this.right > _0x5cd095.right;
				case '+y':
					return this.top < _0x5cd095.top;
				case '-y':
					return this.bottom > _0x5cd095.bottom;
			}
		};
		_0x10ee0c.prototype.intersectPercentage = function (_0x255e83) {
			var _0x5b3b1b = Math.max(0, Math.min(this.right, _0x255e83.right) - Math.max(this.left, _0x255e83.left)), _0x3aa103 = Math.max(0, Math.min(this.bottom, _0x255e83.bottom) - Math.max(this.top, _0x255e83.top)), _0x42a809 = _0x5b3b1b * _0x3aa103;
			return _0x42a809 / (this.height * this.width);
		};
		_0x10ee0c.prototype.toCSSCompatValues = function (_0x4bec32) {
			return {
				'top': this.top - _0x4bec32.top,
				'bottom': _0x4bec32.bottom - this.bottom,
				'left': this.left - _0x4bec32.left,
				'right': _0x4bec32.right - this.right,
				'height': this.height,
				'width': this.width
			};
		};
		_0x10ee0c.getSimpleBoxPosition = function (_0x39359b) {
			var _0x2409bb = _0x39359b.div ? _0x39359b.div.offsetHeight : _0x39359b.tagName ? _0x39359b.offsetHeight : 0, _0x3cd7ce = _0x39359b.div ? _0x39359b.div.offsetWidth : _0x39359b.tagName ? _0x39359b.offsetWidth : 0, _0x7da334 = _0x39359b.div ? _0x39359b.div.offsetTop : _0x39359b.tagName ? _0x39359b.offsetTop : 0;
			_0x39359b = _0x39359b.div ? _0x39359b.div.getBoundingClientRect() : _0x39359b.tagName ? _0x39359b.getBoundingClientRect() : _0x39359b;
			var _0x1b81a0 = {
				'left': _0x39359b.left,
				'right': _0x39359b.right,
				'top': _0x39359b.top || _0x7da334,
				'height': _0x39359b.height || _0x2409bb,
				'bottom': _0x39359b.bottom || _0x7da334 + (_0x39359b.height || _0x2409bb),
				'width': _0x39359b.width || _0x3cd7ce
			};
			return _0x1b81a0;
		};
		_0x34d289.StringDecoder = function () {
			return {
				'decode': function _0x79110e(_0x463d4e) {
					if (!_0x463d4e) {
						return '';
					}
					if (typeof _0x463d4e !== 'string') {
						throw new Error('Error - expected string data.');
					}
					return decodeURIComponent(encodeURIComponent(_0x463d4e));
				}
			};
		};
		_0x34d289.convertCueToDOMTree = function (_0x53e4cc, _0x117b21) {
			if (!_0x53e4cc || !_0x117b21) {
				return null;
			}
			return _0x5a7a09(_0x53e4cc, _0x117b21);
		};
		var _0x433903 = 'sans-serif', _0x1673f2 = '1.5%', _0x46c36c = (_0x34d289.processCues = function (_0x5418e4, _0x377d9c, _0x12bd5a) {
			if (!_0x5418e4 || !_0x377d9c || !_0x12bd5a) {
				return null;
			}
			while (_0x12bd5a.firstChild) {
				_0x12bd5a.removeChild(_0x12bd5a.firstChild);
			}
			var _0x2c6f3c = _0x5418e4.document.createElement('div');
			_0x2c6f3c.style.position = 'absolute';
			_0x2c6f3c.style.left = '0';
			_0x2c6f3c.style.right = '0';
			_0x2c6f3c.style.top = '0';
			_0x2c6f3c.style.bottom = '0';
			_0x2c6f3c.style.margin = _0x1673f2;
			_0x12bd5a.appendChild(_0x2c6f3c);
			function _0x866e5e(_0x3cd48a) {
				for (var _0x50f90b = 0; _0x50f90b < _0x3cd48a.length; _0x50f90b++) {
					if (_0x3cd48a[_0x50f90b].hasBeenReset || !_0x3cd48a[_0x50f90b].displayState) {
						return true;
					}
				}
				return false;
			}
			if (!_0x866e5e(_0x377d9c)) {
				for (var _0x1f90e9 = 0; _0x1f90e9 < _0x377d9c.length; _0x1f90e9++) {
					_0x2c6f3c.appendChild(_0x377d9c[_0x1f90e9].displayState);
				}
				return;
			}
			var _0x39ebc0 = [], _0x5d7d68 = _0x10ee0c.getSimpleBoxPosition(_0x2c6f3c), _0x387b66 = Math.round(_0x5d7d68.height * 0.05 * 100) / 100, _0x2c44c7 = { 'font': _0x387b66 + 'px ' + _0x433903 };
			(function () {
				var _0x13264f, _0x2e4020;
				for (var _0x2e1540 = 0; _0x2e1540 < _0x377d9c.length; _0x2e1540++) {
					_0x2e4020 = _0x377d9c[_0x2e1540];
					_0x13264f = new _0x45f4e0(_0x5418e4, _0x2e4020, _0x2c44c7);
					_0x2c6f3c.appendChild(_0x13264f.div);
					_0xf01f90(_0x5418e4, _0x13264f, _0x5d7d68, _0x39ebc0);
					_0x2e4020.displayState = _0x13264f.div;
					_0x39ebc0.push(_0x10ee0c.getSimpleBoxPosition(_0x13264f));
				}
			}());
		}, (_0x34d289.Parser = function (_0x4d2ffd, _0x277380, _0x5c8ca9) {
			!_0x5c8ca9 && (_0x5c8ca9 = _0x277380, _0x277380 = {});
			if (!_0x277380) {
				_0x277380 = {};
			}
			this.window = _0x4d2ffd;
			this.vttjs = _0x277380;
			this.state = 'INITIAL';
			this.buffer = '';
			this.decoder = _0x5c8ca9 || new TextDecoder('utf8');
			this.regionList = [];
		}).prototype = {
				'reportOrThrowError': function _0x1f6d24(_0x529377) {
					if (_0x529377 instanceof _0x242bcd) {
						this.onparsingerror && this.onparsingerror(_0x529377);
					} else {
						throw _0x529377;
					}
				},
				'parse': function _0x2320ea(_0x5f316e) {
					var _0x4749cd = this;
					if (_0x5f316e) {
						_0x4749cd.buffer += _0x4749cd.decoder.decode(_0x5f316e, { 'stream': true });
					}
					function _0x5e397f() {
						var _0x5d251f = _0x4749cd.buffer, _0x53b118 = 0;
						while (_0x53b118 < _0x5d251f.length && _0x5d251f[_0x53b118] !== '\r' && _0x5d251f[_0x53b118] !== '\n') {
							++_0x53b118;
						}
						var _0x5b88e2 = _0x5d251f.substr(0, _0x53b118);
						if (_0x5d251f[_0x53b118] === '\r') {
							++_0x53b118;
						}
						if (_0x5d251f[_0x53b118] === '\n') {
							++_0x53b118;
						}
						return _0x4749cd.buffer = _0x5d251f.substr(_0x53b118), _0x5b88e2;
					}
					function _0x48abe6(_0x631305) {
						var _0x47fa53 = new _0x1ac535();
						_0x8c2787(_0x631305, function (_0x365199, _0x34cbd7) {
							switch (_0x365199) {
								case 'id':
									_0x47fa53.set(_0x365199, _0x34cbd7);
									break;
								case 'width':
									_0x47fa53.percent(_0x365199, _0x34cbd7);
									break;
								case 'lines':
									_0x47fa53.integer(_0x365199, _0x34cbd7);
									break;
								case 'regionanchor':
								case 'viewportanchor':
									var _0x3916f6 = _0x34cbd7.split(',');
									if (_0x3916f6.length !== 2) {
										break;
									}
									var _0x437a99 = new _0x1ac535();
									_0x437a99.percent('x', _0x3916f6[0]), _0x437a99.percent('y', _0x3916f6[1]);
									if (!_0x437a99.has('x') || !_0x437a99.has('y')) {
										break;
									}
									_0x47fa53.set(_0x365199 + 'X', _0x437a99.get('x')), _0x47fa53.set(_0x365199 + 'Y', _0x437a99.get('y'));
									break;
								case 'scroll':
									_0x47fa53.alt(_0x365199, _0x34cbd7, ['up']);
									break;
							}
						}, /=/, /\s/);
						if (_0x47fa53.has('id')) {
							var _0x59bfa3 = new (_0x4749cd.vttjs.VTTRegion || _0x4749cd.window.VTTRegion)();
							_0x59bfa3.width = _0x47fa53.get('width', 100);
							_0x59bfa3.lines = _0x47fa53.get('lines', 3);
							_0x59bfa3.regionAnchorX = _0x47fa53.get('regionanchorX', 0);
							_0x59bfa3.regionAnchorY = _0x47fa53.get('regionanchorY', 100);
							_0x59bfa3.viewportAnchorX = _0x47fa53.get('viewportanchorX', 0);
							_0x59bfa3.viewportAnchorY = _0x47fa53.get('viewportanchorY', 100);
							_0x59bfa3.scroll = _0x47fa53.get('scroll', '');
							_0x4749cd.onregion && _0x4749cd.onregion(_0x59bfa3);
							_0x4749cd.regionList.push({
								'id': _0x47fa53.get('id'),
								'region': _0x59bfa3
							});
						}
					}
					function _0x9b3cbe(_0x1bd7b1) {
						var _0x35eddb = new _0x1ac535();
						_0x8c2787(_0x1bd7b1, function (_0x447b78, _0x46ea4b) {
							switch (_0x447b78) {
								case 'MPEGT':
									_0x35eddb.integer(_0x447b78 + 'S', _0x46ea4b);
									break;
								case 'LOCA':
									_0x35eddb.set(_0x447b78 + 'L', _0x1d1631(_0x46ea4b));
									break;
							}
						}, /[^\d]:/, /,/);
						_0x4749cd.ontimestampmap && _0x4749cd.ontimestampmap({
							'MPEGTS': _0x35eddb.get('MPEGTS'),
							'LOCAL': _0x35eddb.get('LOCAL')
						});
					}
					function _0x4c1525(_0x34ab7a) {
						if (_0x34ab7a.match(/X-TIMESTAMP-MAP/)) {
							_0x8c2787(_0x34ab7a, function (_0x5b9855, _0xbf1bd6) {
								switch (_0x5b9855) {
									case 'X-TIMESTAMP-MAP':
										_0x9b3cbe(_0xbf1bd6);
										break;
								}
							}, /=/);
						} else {
							_0x8c2787(_0x34ab7a, function (_0x1fb19f, _0x353107) {
								switch (_0x1fb19f) {
									case 'Region':
										_0x48abe6(_0x353107);
										break;
								}
							}, /:/);
						}
					}
					try {
						var _0x42593f;
						if (_0x4749cd.state === 'INITIAL') {
							if (!/\r\n|\n/.test(_0x4749cd.buffer)) {
								return this;
							}
							_0x42593f = _0x5e397f();
							var _0x46011c = _0x42593f.match(/^WEBVTT([ \t].*)?$/);
							if (!_0x46011c || !_0x46011c[0]) {
								throw new _0x242bcd(_0x242bcd.Errors.BadSignature);
							}
							_0x4749cd.state = 'HEADER';
						}
						var _0x124784 = false;
						while (_0x4749cd.buffer) {
							if (!/\r\n|\n/.test(_0x4749cd.buffer)) {
								return this;
							}
							if (!_0x124784) {
								_0x42593f = _0x5e397f();
							} else {
								_0x124784 = false;
							}
							switch (_0x4749cd.state) {
								case 'HEADER':
									if (/:/.test(_0x42593f)) {
										_0x4c1525(_0x42593f);
									} else {
										if (!_0x42593f) {
											_0x4749cd.state = 'ID';
										}
									}
									continue;
								case 'NOTE':
									if (!_0x42593f) {
										_0x4749cd.state = 'ID';
									}
									continue;
								case 'ID':
									if (/^NOTE($|[ \t])/.test(_0x42593f)) {
										_0x4749cd.state = 'NOTE';
										break;
									}
									if (!_0x42593f) {
										continue;
									}
									_0x4749cd.cue = new (_0x4749cd.vttjs.VTTCue || _0x4749cd.window.VTTCue)(0, 0, ''), _0x4749cd.state = 'CUE';
									if (_0x42593f.indexOf('-->') === -1) {
										_0x4749cd.cue.id = _0x42593f;
										continue;
									}
								case 'CUE':
									try {
										_0x319568(_0x42593f, _0x4749cd.cue, _0x4749cd.regionList);
									} catch (_0x5b7863) {
										_0x4749cd.reportOrThrowError(_0x5b7863);
										_0x4749cd.cue = null;
										_0x4749cd.state = 'BADCUE';
										continue;
									}
									_0x4749cd.state = 'CUETEXT';
									continue;
								case 'CUETEXT':
									var _0x439379 = _0x42593f.indexOf('-->') !== -1;
									if (!_0x42593f || _0x439379 && (_0x124784 = true)) {
										_0x4749cd.oncue && _0x4749cd.oncue(_0x4749cd.cue);
										_0x4749cd.cue = null;
										_0x4749cd.state = 'ID';
										continue;
									}
									if (_0x4749cd.cue.text) {
										_0x4749cd.cue.text += '\n';
									}
									_0x4749cd.cue.text += _0x42593f;
									continue;
								case 'BADCUE':
									if (!_0x42593f) {
										_0x4749cd.state = 'ID';
									}
									continue;
							}
						}
					} catch (_0x1fca2c) {
						_0x4749cd.reportOrThrowError(_0x1fca2c);
						if (_0x4749cd.state === 'CUETEXT' && _0x4749cd.cue && _0x4749cd.oncue) {
							_0x4749cd.oncue(_0x4749cd.cue);
						}
						_0x4749cd.cue = null;
						_0x4749cd.state = _0x4749cd.state === 'INITIAL' ? 'BADWEBVTT' : 'BADCUE';
					}
					return this;
				},
				'flush': function _0x4516f1() {
					var _0x5730d7 = this;
					try {
						_0x5730d7.buffer += _0x5730d7.decoder.decode();
						(_0x5730d7.cue || _0x5730d7.state === 'HEADER') && (_0x5730d7.buffer += '\n\n', _0x5730d7.parse());
						if (_0x5730d7.state === 'INITIAL') {
							throw new _0x242bcd(_0x242bcd.Errors.BadSignature);
						}
					} catch (_0x39871c) {
						_0x5730d7.reportOrThrowError(_0x39871c);
					}
					return _0x5730d7.onflush && _0x5730d7.onflush(), this;
				}
			}, _0x34d289), _0x4dbdfc = Object.freeze({
				'default': _0x46c36c,
				'__moduleExports': _0x46c36c
			}), _0x60c7ce = 'auto';
		function _0x555555(_0x270e8a) {
			if (typeof _0x270e8a !== 'string') {
				return false;
			}
			var _0xb50075 = _0x155383[_0x270e8a.toLowerCase()];
			return _0xb50075 ? _0x270e8a.toLowerCase() : false;
		}
		function _0x6a9873(_0x31c14d) {
			if (typeof _0x31c14d !== 'string') {
				return false;
			}
			var _0x1f4f2f = _0x250ff7[_0x31c14d.toLowerCase()];
			return _0x1f4f2f ? _0x31c14d.toLowerCase() : false;
		}
		function _0x503f4e(_0x47c4b6, _0x4cd5a0, _0x3aa03c) {
			this.hasBeenReset = false;
			var _0x5381b7 = '', _0x50d5e6 = false, _0x459e6b = _0x47c4b6, _0x213a7d = _0x4cd5a0, _0xc0b06c = _0x3aa03c, _0x357a61 = null, _0x20a0ec = '', _0x2eb6b4 = true, _0x43f441 = 'auto', _0x10fabe = 'start', _0x4d8d68 = 50, _0x391c09 = 'middle', _0x4a0c14 = 50, _0x1e31d5 = 'middle';
			Object.defineProperties(this, {
				'id': {
					'enumerable': true,
					'get': function _0x504d5a() {
						return _0x5381b7;
					},
					'set': function _0x3788c1(_0x5e4581) {
						_0x5381b7 = '' + _0x5e4581;
					}
				},
				'pauseOnExit': {
					'enumerable': true,
					'get': function _0x16b6d7() {
						return _0x50d5e6;
					},
					'set': function _0x2d677e(_0x3f20dc) {
						_0x50d5e6 = !!_0x3f20dc;
					}
				},
				'startTime': {
					'enumerable': true,
					'get': function _0x4fbd51() {
						return _0x459e6b;
					},
					'set': function _0x47b91d(_0x5693f9) {
						if (typeof _0x5693f9 !== 'number') {
							throw new TypeError('Start time must be set to a number.');
						}
						_0x459e6b = _0x5693f9;
						this.hasBeenReset = true;
					}
				},
				'endTime': {
					'enumerable': true,
					'get': function _0x10c4ea() {
						return _0x213a7d;
					},
					'set': function _0x395bc3(_0x2c174f) {
						if (typeof _0x2c174f !== 'number') {
							throw new TypeError('End time must be set to a number.');
						}
						_0x213a7d = _0x2c174f;
						this.hasBeenReset = true;
					}
				},
				'text': {
					'enumerable': true,
					'get': function _0x14a9e0() {
						return _0xc0b06c;
					},
					'set': function _0x49e98d(_0x31200a) {
						_0xc0b06c = '' + _0x31200a;
						this.hasBeenReset = true;
					}
				},
				'region': {
					'enumerable': true,
					'get': function _0x391bee() {
						return _0x357a61;
					},
					'set': function _0x14979f(_0x2d74ab) {
						_0x357a61 = _0x2d74ab;
						this.hasBeenReset = true;
					}
				},
				'vertical': {
					'enumerable': true,
					'get': function _0x1b9c3e() {
						return _0x20a0ec;
					},
					'set': function _0x15d667(_0x12f3fc) {
						var _0x5d8a6d = _0x555555(_0x12f3fc);
						if (_0x5d8a6d === false) {
							throw new SyntaxError('An invalid or illegal string was specified.');
						}
						_0x20a0ec = _0x5d8a6d;
						this.hasBeenReset = true;
					}
				},
				'snapToLines': {
					'enumerable': true,
					'get': function _0x5704a6() {
						return _0x2eb6b4;
					},
					'set': function _0x3b004d(_0x2271bb) {
						_0x2eb6b4 = !!_0x2271bb;
						this.hasBeenReset = true;
					}
				},
				'line': {
					'enumerable': true,
					'get': function _0x447c6b() {
						return _0x43f441;
					},
					'set': function _0x436d9d(_0xc3c35d) {
						if (typeof _0xc3c35d !== 'number' && _0xc3c35d !== _0x60c7ce) {
							throw new SyntaxError('An invalid number or illegal string was specified.');
						}
						_0x43f441 = _0xc3c35d;
						this.hasBeenReset = true;
					}
				},
				'lineAlign': {
					'enumerable': true,
					'get': function _0x51aa9f() {
						return _0x10fabe;
					},
					'set': function _0x2dc256(_0x4a6d0a) {
						var _0x301a87 = _0x6a9873(_0x4a6d0a);
						if (!_0x301a87) {
							throw new SyntaxError('An invalid or illegal string was specified.');
						}
						_0x10fabe = _0x301a87;
						this.hasBeenReset = true;
					}
				},
				'position': {
					'enumerable': true,
					'get': function _0x28d9cf() {
						return _0x4d8d68;
					},
					'set': function _0x238532(_0x5cfdbb) {
						if (_0x5cfdbb < 0 || _0x5cfdbb > 100) {
							throw new Error('Position must be between 0 and 100.');
						}
						_0x4d8d68 = _0x5cfdbb;
						this.hasBeenReset = true;
					}
				},
				'positionAlign': {
					'enumerable': true,
					'get': function _0x345a38() {
						return _0x391c09;
					},
					'set': function _0x2bf436(_0x41d695) {
						var _0x121b4d = _0x6a9873(_0x41d695);
						if (!_0x121b4d) {
							throw new SyntaxError('An invalid or illegal string was specified.');
						}
						_0x391c09 = _0x121b4d;
						this.hasBeenReset = true;
					}
				},
				'size': {
					'enumerable': true,
					'get': function _0x153055() {
						return _0x4a0c14;
					},
					'set': function _0x5616be(_0x373869) {
						if (_0x373869 < 0 || _0x373869 > 100) {
							throw new Error('Size must be between 0 and 100.');
						}
						_0x4a0c14 = _0x373869;
						this.hasBeenReset = true;
					}
				},
				'align': {
					'enumerable': true,
					'get': function _0x4fd0a9() {
						return _0x1e31d5;
					},
					'set': function _0x133d34(_0x466324) {
						var _0x59702d = _0x6a9873(_0x466324);
						if (!_0x59702d) {
							throw new SyntaxError('An invalid or illegal string was specified.');
						}
						_0x1e31d5 = _0x59702d;
						this.hasBeenReset = true;
					}
				}
			});
			this.displayState = undefined;
		}
		_0x503f4e.prototype.getCueAsHTML = function () {
			return WebVTT.convertCueToDOMTree(window, this.text);
		};
		var _0x41e106, _0x248133 = Object.freeze({
			'default': _0x503f4e,
			'__moduleExports': _0x503f4e
		});
		function _0x2ca91f(_0x278b5d) {
			if (typeof _0x278b5d !== 'string') {
				return false;
			}
			var _0xaf8ad0 = _0x2df70c[_0x278b5d.toLowerCase()];
			return _0xaf8ad0 ? _0x278b5d.toLowerCase() : false;
		}
		function _0x24b635(_0x2ef2fe) {
			return typeof _0x2ef2fe === 'number' && _0x2ef2fe >= 0 && _0x2ef2fe <= 100;
		}
		function _0x220498() {
			var _0x47400d = 100, _0x43e462 = 3, _0x2a832c = 0, _0x5187e4 = 100, _0x8d22c4 = 0, _0x1b623f = 100, _0x554737 = '';
			Object.defineProperties(this, {
				'width': {
					'enumerable': true,
					'get': function _0x44e28f() {
						return _0x47400d;
					},
					'set': function _0x7768fc(_0x1f303d) {
						if (!_0x24b635(_0x1f303d)) {
							throw new Error('Width must be between 0 and 100.');
						}
						_0x47400d = _0x1f303d;
					}
				},
				'lines': {
					'enumerable': true,
					'get': function _0x34c02f() {
						return _0x43e462;
					},
					'set': function _0x74f439(_0x403971) {
						if (typeof _0x403971 !== 'number') {
							throw new TypeError('Lines must be set to a number.');
						}
						_0x43e462 = _0x403971;
					}
				},
				'regionAnchorY': {
					'enumerable': true,
					'get': function _0x5b5dff() {
						return _0x5187e4;
					},
					'set': function _0x4cb6d1(_0x2fc6fe) {
						if (!_0x24b635(_0x2fc6fe)) {
							throw new Error('RegionAnchorX must be between 0 and 100.');
						}
						_0x5187e4 = _0x2fc6fe;
					}
				},
				'regionAnchorX': {
					'enumerable': true,
					'get': function _0x459518() {
						return _0x2a832c;
					},
					'set': function _0x372a52(_0x1ab704) {
						if (!_0x24b635(_0x1ab704)) {
							throw new Error('RegionAnchorY must be between 0 and 100.');
						}
						_0x2a832c = _0x1ab704;
					}
				},
				'viewportAnchorY': {
					'enumerable': true,
					'get': function _0x27a68d() {
						return _0x1b623f;
					},
					'set': function _0x2fdaea(_0x4f5496) {
						if (!_0x24b635(_0x4f5496)) {
							throw new Error('ViewportAnchorY must be between 0 and 100.');
						}
						_0x1b623f = _0x4f5496;
					}
				},
				'viewportAnchorX': {
					'enumerable': true,
					'get': function _0x5506a0() {
						return _0x8d22c4;
					},
					'set': function _0x2fa2d4(_0x532b36) {
						if (!_0x24b635(_0x532b36)) {
							throw new Error('ViewportAnchorX must be between 0 and 100.');
						}
						_0x8d22c4 = _0x532b36;
					}
				},
				'scroll': {
					'enumerable': true,
					'get': function _0x3f98c2() {
						return _0x554737;
					},
					'set': function _0x2b2997(_0x5ed0c8) {
						var _0x3efaa6 = _0x2ca91f(_0x5ed0c8);
						if (_0x3efaa6 === false) {
							throw new SyntaxError('An invalid or illegal string was specified.');
						}
						_0x554737 = _0x3efaa6;
					}
				}
			});
		}
		var _0x280bda, _0x15343c = Object.freeze({
			'default': _0x220498,
			'__moduleExports': _0x220498
		}), _0x4fc6bb = _0x4dbdfc && _0x46c36c || _0x4dbdfc, _0x4f3f04 = _0x248133 && _0x503f4e || _0x248133, _0x153b81 = _0x15343c && _0x220498 || _0x15343c, _0x4c7546 = _0x4ed392(function (_0x4a74f6) {
			var _0x423280 = _0x4a74f6.exports = {
				'WebVTT': _0x4fc6bb,
				'VTTCue': _0x4f3f04,
				'VTTRegion': _0x153b81
			};
			_0x504cd5.vttjs = _0x423280;
			_0x504cd5.WebVTT = _0x423280.WebVTT;
			var _0x5e895c = _0x423280.VTTCue, _0x597eea = _0x423280.VTTRegion, _0x4b4712 = _0x504cd5.VTTCue, _0x3e079a = _0x504cd5.VTTRegion;
			_0x423280.shim = function () {
				_0x504cd5.VTTCue = _0x5e895c;
				_0x504cd5.VTTRegion = _0x597eea;
			};
			_0x423280.restore = function () {
				_0x504cd5.VTTCue = _0x4b4712;
				_0x504cd5.VTTRegion = _0x3e079a;
			};
			if (!_0x504cd5.VTTCue) {
				_0x423280.shim();
			}
		}), _0x6bffc2 = _0x4c7546.WebVTT, _0x2ba958 = _0x4c7546.VTTCue, _0x21d9da = _0x4c7546.VTTRegion;
		function _0xe96fc(_0x3f6812, _0x3d89ee, _0x21b92f, _0x2e6293) {
			var _0x94a31 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {}, _0x59f8ec = _0x3f6812.textTracks();
			_0x94a31.kind = _0x3d89ee;
			if (_0x21b92f) {
				_0x94a31.label = _0x21b92f;
			}
			if (_0x2e6293) {
				_0x94a31.language = _0x2e6293;
			}
			_0x94a31.tech = _0x3f6812;
			var _0x2f70c6 = new _0x2449f5.text.TrackClass(_0x94a31);
			return _0x59f8ec.addTrack(_0x2f70c6), _0x2f70c6;
		}
		var _0x11cff8 = function (_0xdacc83) {
			_0x2d47a2(_0x34b574, _0xdacc83);
			function _0x34b574() {
				var _0x116978 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _0x545b0c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
				};
				_0x7a6cc0(this, _0x34b574);
				_0x116978.reportTouchActivity = false;
				var _0x5ae8f5 = _0x1ab72f(this, _0xdacc83.call(this, null, _0x116978, _0x545b0c));
				_0x5ae8f5.hasStarted_ = false;
				_0x5ae8f5.on('playing', function () {
					this.hasStarted_ = true;
				});
				_0x5ae8f5.on('loadstart', function () {
					this.hasStarted_ = false;
				});
				_0x2449f5.names.forEach(function (_0x138787) {
					var _0x18b71b = _0x2449f5[_0x138787];
					if (_0x116978 && _0x116978[_0x18b71b.getterName]) {
						_0x5ae8f5[_0x18b71b.privateName] = _0x116978[_0x18b71b.getterName];
					}
				});
				if (!_0x5ae8f5.featuresProgressEvents) {
					_0x5ae8f5.manualProgressOn();
				}
				if (!_0x5ae8f5.featuresTimeupdateEvents) {
					_0x5ae8f5.manualTimeUpdatesOn();
				}
				[
					'Text',
					'Audio',
					'Video'
				].forEach(function (_0x38de71) {
					if (_0x116978['native' + _0x38de71 + 'Tracks'] === false) {
						_0x5ae8f5['featuresNative' + _0x38de71 + 'Tracks'] = false;
					}
				});
				if (_0x116978.nativeCaptions === false || _0x116978.nativeTextTracks === false) {
					_0x5ae8f5.featuresNativeTextTracks = false;
				} else {
					if (_0x116978.nativeCaptions === true || _0x116978.nativeTextTracks === true) {
						_0x5ae8f5.featuresNativeTextTracks = true;
					}
				}
				if (!_0x5ae8f5.featuresNativeTextTracks) {
					_0x5ae8f5.emulateTextTracks();
				}
				_0x5ae8f5.autoRemoteTextTracks_ = new _0x2449f5.text.ListClass();
				_0x5ae8f5.initTrackListeners();
				if (!_0x116978.nativeControlsForTouch) {
					_0x5ae8f5.emitTapEvents();
				}
				if (_0x5ae8f5.constructor) {
					_0x5ae8f5.name_ = _0x5ae8f5.constructor.name || 'Unknown Tech';
				}
				return _0x5ae8f5;
			}
			return _0x34b574.prototype.triggerSourceset = function _0x2ea8a8(_0x2dcec2) {
				var _0x4f8d15 = this;
				if (!this.isReady_) {
					this.one('ready', function () {
						return _0x4f8d15.setTimeout(function () {
							return _0x4f8d15.triggerSourceset(_0x2dcec2);
						}, 1);
					});
				}
				this.trigger({
					'src': _0x2dcec2,
					'type': 'sourceset'
				});
			}, _0x34b574.prototype.manualProgressOn = function _0x14672f() {
				this.on('durationchange', this.onDurationChange);
				this.manualProgress = true;
				this.one('ready', this.trackProgress);
			}, _0x34b574.prototype.manualProgressOff = function _0x3b252b() {
				this.manualProgress = false;
				this.stopTrackingProgress();
				this.off('durationchange', this.onDurationChange);
			}, _0x34b574.prototype.trackProgress = function _0x3a2728(_0x30278f) {
				this.stopTrackingProgress();
				this.progressInterval = this.setInterval(_0x5957d4(this, function () {
					var _0x5ed2eb = this.bufferedPercent();
					if (this.bufferedPercent_ !== _0x5ed2eb) {
						this.trigger('progress');
					}
					this.bufferedPercent_ = _0x5ed2eb;
					if (_0x5ed2eb === 1) {
						this.stopTrackingProgress();
					}
				}), 500);
			}, _0x34b574.prototype.onDurationChange = function _0x346761(_0x345f58) {
				this.duration_ = this.duration();
			}, _0x34b574.prototype.buffered = function _0x524222() {
				return _0x5b18c6(0, 0);
			}, _0x34b574.prototype.bufferedPercent = function _0x5dc41c() {
				return _0xb3e450(this.buffered(), this.duration_);
			}, _0x34b574.prototype.stopTrackingProgress = function _0x2182d3() {
				this.clearInterval(this.progressInterval);
			}, _0x34b574.prototype.manualTimeUpdatesOn = function _0x50f8b8() {
				this.manualTimeUpdates = true;
				this.on('play', this.trackCurrentTime);
				this.on('pause', this.stopTrackingCurrentTime);
			}, _0x34b574.prototype.manualTimeUpdatesOff = function _0x57a597() {
				this.manualTimeUpdates = false;
				this.stopTrackingCurrentTime();
				this.off('play', this.trackCurrentTime);
				this.off('pause', this.stopTrackingCurrentTime);
			}, _0x34b574.prototype.trackCurrentTime = function _0x218d2e() {
				if (this.currentTimeInterval) {
					this.stopTrackingCurrentTime();
				}
				this.currentTimeInterval = this.setInterval(function () {
					this.trigger({
						'type': 'timeupdate',
						'target': this,
						'manuallyTriggered': true
					});
				}, 250);
			}, _0x34b574.prototype.stopTrackingCurrentTime = function _0x4b27a8() {
				this.clearInterval(this.currentTimeInterval);
				this.trigger({
					'type': 'timeupdate',
					'target': this,
					'manuallyTriggered': true
				});
			}, _0x34b574.prototype.dispose = function _0x56c038() {
				this.clearTracks(_0x3d5974.names);
				if (this.manualProgress) {
					this.manualProgressOff();
				}
				if (this.manualTimeUpdates) {
					this.manualTimeUpdatesOff();
				}
				_0xdacc83.prototype.dispose.call(this);
			}, _0x34b574.prototype.clearTracks = function _0x5b63a1(_0x79e439) {
				var _0x31edab = this;
				_0x79e439 = [].concat(_0x79e439);
				_0x79e439.forEach(function (_0x19ce96) {
					var _0x2ecf62 = _0x31edab[_0x19ce96 + 'Tracks']() || [], _0x55fa08 = _0x2ecf62.length;
					while (_0x55fa08--) {
						var _0x1ed6b0 = _0x2ecf62[_0x55fa08];
						if (_0x19ce96 === 'text') {
							_0x31edab.removeRemoteTextTrack(_0x1ed6b0);
						}
						_0x2ecf62.removeTrack(_0x1ed6b0);
					}
				});
			}, _0x34b574.prototype.cleanupAutoTextTracks = function _0x1804ad() {
				var _0x51e728 = this.autoRemoteTextTracks_ || [], _0x2438f8 = _0x51e728.length;
				while (_0x2438f8--) {
					var _0x5def84 = _0x51e728[_0x2438f8];
					this.removeRemoteTextTrack(_0x5def84);
				}
			}, _0x34b574.prototype.reset = function _0x3cf11f() {
			}, _0x34b574.prototype.error = function _0x4567b0(_0x3eb157) {
				return _0x3eb157 !== undefined && (this.error_ = new _0x2cbd98(_0x3eb157), this.trigger('error')), this.error_;
			}, _0x34b574.prototype.played = function _0x1b7584() {
				if (this.hasStarted_) {
					return _0x5b18c6(0, 0);
				}
				return _0x5b18c6();
			}, _0x34b574.prototype.setCurrentTime = function _0x56dc4e() {
				if (this.manualTimeUpdates) {
					this.trigger({
						'type': 'timeupdate',
						'target': this,
						'manuallyTriggered': true
					});
				}
			}, _0x34b574.prototype.initTrackListeners = function _0x220a30() {
				var _0xde202a = this;
				_0x3d5974.names.forEach(function (_0x190208) {
					var _0x271ca0 = _0x3d5974[_0x190208], _0x44b343 = function _0x126c6d() {
						_0xde202a.trigger(_0x190208 + 'trackchange');
					}, _0xcfc72a = _0xde202a[_0x271ca0.getterName]();
					_0xcfc72a.addEventListener('removetrack', _0x44b343);
					_0xcfc72a.addEventListener('addtrack', _0x44b343);
					_0xde202a.on('dispose', function () {
						_0xcfc72a.removeEventListener('removetrack', _0x44b343);
						_0xcfc72a.removeEventListener('addtrack', _0x44b343);
					});
				});
			}, _0x34b574.prototype.addWebVttScript_ = function _0x437ccd() {
				var _0x4bcf39 = this;
				if (_0x504cd5.WebVTT) {
					return;
				}
				if (_0x19e198.body.contains(this.el())) {
					if (!this.options_['vtt.js'] && _0x4307a4(_0x4c7546) && Object.keys(_0x4c7546).length > 0) {
						this.trigger('vttjsloaded');
						return;
					}
					var _0x31f1f1 = _0x19e198.createElement('script');
					_0x31f1f1.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';
					_0x31f1f1.onload = function () {
						_0x4bcf39.trigger('vttjsloaded');
					};
					_0x31f1f1.onerror = function () {
						_0x4bcf39.trigger('vttjserror');
					};
					this.on('dispose', function () {
						_0x31f1f1.onload = null;
						_0x31f1f1.onerror = null;
					});
					_0x504cd5.WebVTT = true;
					this.el().parentNode.appendChild(_0x31f1f1);
				} else {
					this.ready(this.addWebVttScript_);
				}
			}, _0x34b574.prototype.emulateTextTracks = function _0x21c8f2() {
				var _0x210d9c = this, _0x53e0a4 = this.textTracks(), _0xc162a7 = this.remoteTextTracks(), _0xa89bcf = function _0x2bbb0c(_0x19fc05) {
					return _0x53e0a4.addTrack(_0x19fc05.track);
				}, _0x26a914 = function _0xedcaca(_0x1d47e2) {
					return _0x53e0a4.removeTrack(_0x1d47e2.track);
				};
				_0xc162a7.on('addtrack', _0xa89bcf);
				_0xc162a7.on('removetrack', _0x26a914);
				this.addWebVttScript_();
				var _0x38c4e5 = function _0x4b87f5() {
					return _0x210d9c.trigger('texttrackchange');
				}, _0x3cd38d = function _0x3c3c1d() {
					_0x38c4e5();
					for (var _0x2a5012 = 0; _0x2a5012 < _0x53e0a4.length; _0x2a5012++) {
						var _0xcae3bd = _0x53e0a4[_0x2a5012];
						_0xcae3bd.removeEventListener('cuechange', _0x38c4e5);
						if (_0xcae3bd.mode === 'showing') {
							_0xcae3bd.addEventListener('cuechange', _0x38c4e5);
						}
					}
				};
				_0x3cd38d();
				_0x53e0a4.addEventListener('change', _0x3cd38d);
				_0x53e0a4.addEventListener('addtrack', _0x3cd38d);
				_0x53e0a4.addEventListener('removetrack', _0x3cd38d);
				this.on('dispose', function () {
					_0xc162a7.off('addtrack', _0xa89bcf);
					_0xc162a7.off('removetrack', _0x26a914);
					_0x53e0a4.removeEventListener('change', _0x3cd38d);
					_0x53e0a4.removeEventListener('addtrack', _0x3cd38d);
					_0x53e0a4.removeEventListener('removetrack', _0x3cd38d);
					for (var _0x5f10ec = 0; _0x5f10ec < _0x53e0a4.length; _0x5f10ec++) {
						var _0x2cb547 = _0x53e0a4[_0x5f10ec];
						_0x2cb547.removeEventListener('cuechange', _0x38c4e5);
					}
				});
			}, _0x34b574.prototype.addTextTrack = function _0x40ae77(_0x5b5954, _0x3b52f9, _0x17aa14) {
				if (!_0x5b5954) {
					throw new Error('TextTrack kind is required but was not provided');
				}
				return _0xe96fc(this, _0x5b5954, _0x3b52f9, _0x17aa14);
			}, _0x34b574.prototype.createRemoteTextTrack = function _0x1d9ac8(_0x415cff) {
				var _0x5c6553 = _0x2585aa(_0x415cff, { 'tech': this });
				return new _0x298773.remoteTextEl.TrackClass(_0x5c6553);
			}, _0x34b574.prototype.addRemoteTextTrack = function _0x2aa6ea() {
				var _0x66053e = this, _0x44132b = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _0x945a08 = arguments[1], _0x38714d = this.createRemoteTextTrack(_0x44132b);
				_0x945a08 !== true && _0x945a08 !== false && (_0x4155c5.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js'), _0x945a08 = true);
				this.remoteTextTrackEls().addTrackElement_(_0x38714d);
				this.remoteTextTracks().addTrack(_0x38714d.track);
				if (_0x945a08 !== true) {
					this.ready(function () {
						return _0x66053e.autoRemoteTextTracks_.addTrack(_0x38714d.track);
					});
				}
				return _0x38714d;
			}, _0x34b574.prototype.removeRemoteTextTrack = function _0x5baa25(_0x334127) {
				var _0x4b56e7 = this.remoteTextTrackEls().getTrackElementByTrack_(_0x334127);
				this.remoteTextTrackEls().removeTrackElement_(_0x4b56e7);
				this.remoteTextTracks().removeTrack(_0x334127);
				this.autoRemoteTextTracks_.removeTrack(_0x334127);
			}, _0x34b574.prototype.getVideoPlaybackQuality = function _0x5daaad() {
				return {};
			}, _0x34b574.prototype.setPoster = function _0xa421c9() {
			}, _0x34b574.prototype.playsinline = function _0x385177() {
			}, _0x34b574.prototype.setPlaysinline = function _0x336d0() {
			}, _0x34b574.prototype.overrideNativeAudioTracks = function _0x22282c() {
			}, _0x34b574.prototype.overrideNativeVideoTracks = function _0x3da788() {
			}, _0x34b574.prototype.canPlayType = function _0x5c6f6f() {
				return '';
			}, _0x34b574.canPlayType = function _0x2b5448() {
				return '';
			}, _0x34b574.canPlaySource = function _0x2fa2bb(_0xe1294c, _0x198fbe) {
				return _0x34b574.canPlayType(_0xe1294c.type);
			}, _0x34b574.isTech = function _0x9c24cd(_0x4c618c) {
				return _0x4c618c.prototype instanceof _0x34b574 || _0x4c618c instanceof _0x34b574 || _0x4c618c === _0x34b574;
			}, _0x34b574.registerTech = function _0x41007e(_0x68b301, _0x3d24e6) {
				if (!_0x34b574.techs_) {
					_0x34b574.techs_ = {};
				}
				if (!_0x34b574.isTech(_0x3d24e6)) {
					throw new Error('Tech ' + _0x68b301 + ' must be a Tech');
				}
				if (!_0x34b574.canPlayType) {
					throw new Error('Techs must have a static canPlayType method on them');
				}
				if (!_0x34b574.canPlaySource) {
					throw new Error('Techs must have a static canPlaySource method on them');
				}
				_0x68b301 = _0x363c2b(_0x68b301);
				_0x34b574.techs_[_0x68b301] = _0x3d24e6;
				if (_0x68b301 !== 'Tech') {
					_0x34b574.defaultTechOrder_.push(_0x68b301);
				}
				return _0x3d24e6;
			}, _0x34b574.getTech = function _0x235304(_0x124de0) {
				if (!_0x124de0) {
					return;
				}
				_0x124de0 = _0x363c2b(_0x124de0);
				if (_0x34b574.techs_ && _0x34b574.techs_[_0x124de0]) {
					return _0x34b574.techs_[_0x124de0];
				}
				if (_0x504cd5 && _0x504cd5.videojs && _0x504cd5.videojs[_0x124de0]) {
					return _0x4155c5.warn('The ' + _0x124de0 + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)'), _0x504cd5.videojs[_0x124de0];
				}
			}, _0x34b574;
		}(_0x2ab435), _0x469a54 = (_0x2449f5.names.forEach(function (_0x49f739) {
			var _0x267cb6 = _0x2449f5[_0x49f739];
			_0x11cff8.prototype[_0x267cb6.getterName] = function () {
				return this[_0x267cb6.privateName] = this[_0x267cb6.privateName] || new _0x267cb6.ListClass(), this[_0x267cb6.privateName];
			};
		}), _0x11cff8.prototype.featuresVolumeControl = true, _0x11cff8.prototype.featuresMuteControl = true, _0x11cff8.prototype.featuresFullscreenResize = false, _0x11cff8.prototype.featuresPlaybackRate = false, _0x11cff8.prototype.featuresProgressEvents = false, _0x11cff8.prototype.featuresSourceset = false, _0x11cff8.prototype.featuresTimeupdateEvents = false, _0x11cff8.prototype.featuresNativeTextTracks = false, _0x11cff8.withSourceHandlers = function (_0x3eaf8e) {
			_0x3eaf8e.registerSourceHandler = function (_0x289c36, _0x602b44) {
				var _0x2c9062 = _0x3eaf8e.sourceHandlers;
				if (!_0x2c9062) {
					_0x2c9062 = _0x3eaf8e.sourceHandlers = [];
				}
				if (_0x602b44 === undefined) {
					_0x602b44 = _0x2c9062.length;
				}
				_0x2c9062.splice(_0x602b44, 0, _0x289c36);
			};
			_0x3eaf8e.canPlayType = function (_0x547458) {
				var _0x1b28c = _0x3eaf8e.sourceHandlers || [], _0xb5e663 = void 0;
				for (var _0x5c9c95 = 0; _0x5c9c95 < _0x1b28c.length; _0x5c9c95++) {
					_0xb5e663 = _0x1b28c[_0x5c9c95].canPlayType(_0x547458);
					if (_0xb5e663) {
						return _0xb5e663;
					}
				}
				return '';
			};
			_0x3eaf8e.selectSourceHandler = function (_0x5a11bd, _0x41a261) {
				var _0x474f63 = _0x3eaf8e.sourceHandlers || [], _0x3ced0c = void 0;
				for (var _0x5e790b = 0; _0x5e790b < _0x474f63.length; _0x5e790b++) {
					_0x3ced0c = _0x474f63[_0x5e790b].canHandleSource(_0x5a11bd, _0x41a261);
					if (_0x3ced0c) {
						return _0x474f63[_0x5e790b];
					}
				}
				return null;
			};
			_0x3eaf8e.canPlaySource = function (_0x41a3a6, _0x7a2d43) {
				var _0x23964f = _0x3eaf8e.selectSourceHandler(_0x41a3a6, _0x7a2d43);
				if (_0x23964f) {
					return _0x23964f.canHandleSource(_0x41a3a6, _0x7a2d43);
				}
				return '';
			};
			var _0xf03184 = [
				'seekable',
				'seeking',
				'duration'
			];
			_0xf03184.forEach(function (_0x2b3036) {
				var _0x35b7d6 = this[_0x2b3036];
				if (typeof _0x35b7d6 !== 'function') {
					return;
				}
				this[_0x2b3036] = function () {
					if (this.sourceHandler_ && this.sourceHandler_[_0x2b3036]) {
						return this.sourceHandler_[_0x2b3036].apply(this.sourceHandler_, arguments);
					}
					return _0x35b7d6.apply(this, arguments);
				};
			}, _0x3eaf8e.prototype);
			_0x3eaf8e.prototype.setSource = function (_0x50503f) {
				var _0x2f0dae = _0x3eaf8e.selectSourceHandler(_0x50503f, this.options_);
				if (!_0x2f0dae) {
					if (_0x3eaf8e.nativeSourceHandler) {
						_0x2f0dae = _0x3eaf8e.nativeSourceHandler;
					} else {
						_0x4155c5.error('No source handler found for the current source.');
					}
				}
				this.disposeSourceHandler();
				this.off('dispose', this.disposeSourceHandler);
				if (_0x2f0dae !== _0x3eaf8e.nativeSourceHandler) {
					this.currentSource_ = _0x50503f;
				}
				this.sourceHandler_ = _0x2f0dae.handleSource(_0x50503f, this, this.options_);
				this.on('dispose', this.disposeSourceHandler);
			};
			_0x3eaf8e.prototype.disposeSourceHandler = function () {
				this.currentSource_ && (this.clearTracks([
					'audio',
					'video'
				]), this.currentSource_ = null);
				this.cleanupAutoTextTracks();
				if (this.sourceHandler_) {
					if (this.sourceHandler_.dispose) {
						this.sourceHandler_.dispose();
					}
					this.sourceHandler_ = null;
				}
			};
		}, _0x2ab435.registerComponent('Tech', _0x11cff8), _0x11cff8.registerTech('Tech', _0x11cff8), _0x11cff8.defaultTechOrder_ = [], {}), _0x1790a5 = {}, _0x3da144 = {};
		function _0x29f852(_0x4ca179, _0x177b32) {
			_0x469a54[_0x4ca179] = _0x469a54[_0x4ca179] || [];
			_0x469a54[_0x4ca179].push(_0x177b32);
		}
		function _0x651764(_0x5c6b69, _0x4bf1f5, _0x354c0a) {
			_0x5c6b69.setTimeout(function () {
				return _0x25327d(_0x4bf1f5, _0x469a54[_0x4bf1f5.type], _0x354c0a, _0x5c6b69);
			}, 1);
		}
		function _0x4a6ffc(_0x52dcb5, _0x1ef453) {
			_0x52dcb5.forEach(function (_0x4672f7) {
				return _0x4672f7.setTech && _0x4672f7.setTech(_0x1ef453);
			});
		}
		function _0x229dbe(_0x2a6477, _0x4ee36f, _0x537fad) {
			return _0x2a6477.reduceRight(_0x2d987b(_0x537fad), _0x4ee36f[_0x537fad]());
		}
		function _0x5ae4ee(_0x4fc57b, _0x3789dc, _0x20f67d, _0x3cca4d) {
			return _0x3789dc[_0x20f67d](_0x4fc57b.reduce(_0x2d987b(_0x20f67d), _0x3cca4d));
		}
		function _0x5d332a(_0x119ef3, _0xdcac80, _0x3747f6) {
			var _0x41825a = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null, _0x3e456b = 'call' + _0x363c2b(_0x3747f6), _0x4c93a7 = _0x119ef3.reduce(_0x2d987b(_0x3e456b), _0x41825a), _0xfabce2 = _0x4c93a7 === _0x3da144, _0x19f2ad = _0xfabce2 ? null : _0xdcac80[_0x3747f6](_0x4c93a7);
			return _0x5e1580(_0x119ef3, _0x3747f6, _0x19f2ad, _0xfabce2), _0x19f2ad;
		}
		function _0x2d987b(_0x4d11ab) {
			return function (_0x480921, _0x358981) {
				if (_0x480921 === _0x3da144) {
					return _0x3da144;
				}
				if (_0x358981[_0x4d11ab]) {
					return _0x358981[_0x4d11ab](_0x480921);
				}
				return _0x480921;
			};
		}
		function _0x5e1580(_0x567fee, _0x35b7bc, _0x57743f, _0x43e4e5) {
			for (var _0x1a5173 = _0x567fee.length - 1; _0x1a5173 >= 0; _0x1a5173--) {
				var _0x3f4162 = _0x567fee[_0x1a5173];
				if (_0x3f4162[_0x35b7bc]) {
					_0x3f4162[_0x35b7bc](_0x43e4e5, _0x57743f);
				}
			}
		}
		function _0xf072a4(_0x28409e) {
			_0x1790a5[_0x28409e.id()] = null;
		}
		function _0x559521(_0x2fc070, _0x77c287) {
			var _0x38b999 = _0x1790a5[_0x2fc070.id()], _0x1ac22a = null;
			if (_0x38b999 === undefined || _0x38b999 === null) {
				return _0x1ac22a = _0x77c287(_0x2fc070), _0x1790a5[_0x2fc070.id()] = [[
					_0x77c287,
					_0x1ac22a
				]], _0x1ac22a;
			}
			for (var _0x3e41f7 = 0; _0x3e41f7 < _0x38b999.length; _0x3e41f7++) {
				var _0x214c50 = _0x38b999[_0x3e41f7], _0x54cad1 = _0x214c50[0], _0x1e0ddf = _0x214c50[1];
				if (_0x54cad1 !== _0x77c287) {
					continue;
				}
				_0x1ac22a = _0x1e0ddf;
			}
			return _0x1ac22a === null && (_0x1ac22a = _0x77c287(_0x2fc070), _0x38b999.push([
				_0x77c287,
				_0x1ac22a
			])), _0x1ac22a;
		}
		function _0x25327d() {
			var _0x2bad98 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _0x4182ea = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [], _0x52e8b7 = arguments[2], _0x236a75 = arguments[3], _0x234eab = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [], _0x574c70 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false, _0x37e27d = _0x4182ea[0], _0x4bc3cb = _0x4182ea.slice(1);
			if (typeof _0x37e27d === 'string') {
				_0x25327d(_0x2bad98, _0x469a54[_0x37e27d], _0x52e8b7, _0x236a75, _0x234eab, _0x574c70);
			} else {
				if (_0x37e27d) {
					var _0x4c6c2f = _0x559521(_0x236a75, _0x37e27d);
					if (!_0x4c6c2f.setSource) {
						return _0x234eab.push(_0x4c6c2f), _0x25327d(_0x2bad98, _0x4bc3cb, _0x52e8b7, _0x236a75, _0x234eab, _0x574c70);
					}
					_0x4c6c2f.setSource(_0x2e82a9({}, _0x2bad98), function (_0x24d33e, _0x2f0084) {
						if (_0x24d33e) {
							return _0x25327d(_0x2bad98, _0x4bc3cb, _0x52e8b7, _0x236a75, _0x234eab, _0x574c70);
						}
						_0x234eab.push(_0x4c6c2f);
						_0x25327d(_0x2f0084, _0x2bad98.type === _0x2f0084.type ? _0x4bc3cb : _0x469a54[_0x2f0084.type], _0x52e8b7, _0x236a75, _0x234eab, _0x574c70);
					});
				} else {
					if (_0x4bc3cb.length) {
						_0x25327d(_0x2bad98, _0x4bc3cb, _0x52e8b7, _0x236a75, _0x234eab, _0x574c70);
					} else {
						if (_0x574c70) {
							_0x52e8b7(_0x2bad98, _0x234eab);
						} else {
							_0x25327d(_0x2bad98, _0x469a54['*'], _0x52e8b7, _0x236a75, _0x234eab, true);
						}
					}
				}
			}
		}
		var _0x56fa96 = {
			'opus': 'video/ogg',
			'ogv': 'video/ogg',
			'mp4': 'video/mp4',
			'mov': 'video/mp4',
			'm4v': 'video/mp4',
			'mkv': 'video/x-matroska',
			'mp3': 'audio/mpeg',
			'aac': 'audio/aac',
			'oga': 'audio/ogg',
			'm3u8': 'application/x-mpegURL'
		}, _0x1dcab2 = function _0x55259c() {
			var _0x2cd21a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '', _0xb1e136 = _0x301eb1(_0x2cd21a), _0x504c2b = _0x56fa96[_0xb1e136.toLowerCase()];
			return _0x504c2b || '';
		}, _0x1882b3 = function _0x135f28(_0x23fcaf, _0x43f725) {
			if (!_0x43f725) {
				return '';
			}
			if (_0x23fcaf.cache_.source.src === _0x43f725 && _0x23fcaf.cache_.source.type) {
				return _0x23fcaf.cache_.source.type;
			}
			var _0x5792cf = _0x23fcaf.cache_.sources.filter(function (_0x34c0bd) {
				return _0x34c0bd.src === _0x43f725;
			});
			if (_0x5792cf.length) {
				return _0x5792cf[0].type;
			}
			var _0x43b5bd = _0x23fcaf['$$']('source');
			for (var _0x5ab2af = 0; _0x5ab2af < _0x43b5bd.length; _0x5ab2af++) {
				var _0x52a238 = _0x43b5bd[_0x5ab2af];
				if (_0x52a238.type && _0x52a238.src && _0x52a238.src === _0x43f725) {
					return _0x52a238.type;
				}
			}
			return _0x1dcab2(_0x43f725);
		}, _0x528af1 = function _0x20a436(_0x22049e) {
			if (Array.isArray(_0x22049e)) {
				var _0x283249 = [];
				_0x22049e.forEach(function (_0x2ef659) {
					_0x2ef659 = _0x20a436(_0x2ef659);
					if (Array.isArray(_0x2ef659)) {
						_0x283249 = _0x283249.concat(_0x2ef659);
					} else {
						if (_0x31ba86(_0x2ef659)) {
							_0x283249.push(_0x2ef659);
						}
					}
				});
				_0x22049e = _0x283249;
			} else {
				if (typeof _0x22049e === 'string' && _0x22049e.trim()) {
					_0x22049e = [_0xf3ad59({ 'src': _0x22049e })];
				} else {
					if (_0x31ba86(_0x22049e) && typeof _0x22049e.src === 'string' && _0x22049e.src && _0x22049e.src.trim()) {
						_0x22049e = [_0xf3ad59(_0x22049e)];
					} else {
						_0x22049e = [];
					}
				}
			}
			return _0x22049e;
		};
		function _0xf3ad59(_0x18d340) {
			var _0x3dbf6f = _0x1dcab2(_0x18d340.src);
			if (!_0x18d340.type && _0x3dbf6f) {
				_0x18d340.type = _0x3dbf6f;
			}
			return _0x18d340;
		}
		var _0x454b63 = function (_0xb25698) {
			_0x2d47a2(_0x39b598, _0xb25698);
			function _0x39b598(_0x301d6d, _0x31f5c2, _0xe2fb74) {
				_0x7a6cc0(this, _0x39b598);
				var _0x5613d8 = _0x2585aa({ 'createEl': false }, _0x31f5c2), _0x3a2894 = _0x1ab72f(this, _0xb25698.call(this, _0x301d6d, _0x5613d8, _0xe2fb74));
				if (!_0x31f5c2.playerOptions.sources || _0x31f5c2.playerOptions.sources.length === 0) {
					for (var _0x74e225 = 0, _0x57c4a7 = _0x31f5c2.playerOptions.techOrder; _0x74e225 < _0x57c4a7.length; _0x74e225++) {
						var _0x36c8e2 = _0x363c2b(_0x57c4a7[_0x74e225]), _0x4a7d3a = _0x11cff8.getTech(_0x36c8e2);
						if (!_0x36c8e2) {
							_0x4a7d3a = _0x2ab435.getComponent(_0x36c8e2);
						}
						if (_0x4a7d3a && _0x4a7d3a.isSupported()) {
							_0x301d6d.loadTech_(_0x36c8e2);
							break;
						}
					}
				} else {
					_0x301d6d.src(_0x31f5c2.playerOptions.sources);
				}
				return _0x3a2894;
			}
			return _0x39b598;
		}(_0x2ab435), _0x1c5762 = (_0x2ab435.registerComponent('MediaLoader', _0x454b63), function (_0x65c2ae) {
			_0x2d47a2(_0x53c6c9, _0x65c2ae);
			function _0x53c6c9(_0x1a96e6, _0x45d0b1) {
				_0x7a6cc0(this, _0x53c6c9);
				var _0x3fab04 = _0x1ab72f(this, _0x65c2ae.call(this, _0x1a96e6, _0x45d0b1));
				return _0x3fab04.emitTapEvents(), _0x3fab04.enable(), _0x3fab04;
			}
			return _0x53c6c9.prototype.createEl = function _0xb0238c() {
				var _0x512087 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div', _0x543a27 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x425030 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				_0x543a27 = _0x2e82a9({
					'innerHTML': '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
					'className': this.buildCSSClass(),
					'tabIndex': 0
				}, _0x543a27);
				if (_0x512087 === 'button') {
					_0x4155c5.error('Creating a ClickableComponent with an HTML element of ' + _0x512087 + ' is not supported; use a Button instead.');
				}
				_0x425030 = _0x2e82a9({ 'role': 'button' }, _0x425030);
				this.tabIndex_ = _0x543a27.tabIndex;
				var _0x4dd8cc = _0x65c2ae.prototype.createEl.call(this, _0x512087, _0x543a27, _0x425030);
				return this.createControlTextEl(_0x4dd8cc), _0x4dd8cc;
			}, _0x53c6c9.prototype.dispose = function _0xc90d8() {
				this.controlTextEl_ = null;
				_0x65c2ae.prototype.dispose.call(this);
			}, _0x53c6c9.prototype.createControlTextEl = function _0x5f2a34(_0x4c606d) {
				this.controlTextEl_ = _0x1a554c('span', { 'className': 'vjs-control-text' }, { 'aria-live': 'polite' });
				if (_0x4c606d) {
					_0x4c606d.appendChild(this.controlTextEl_);
				}
				return this.controlText(this.controlText_, _0x4c606d), this.controlTextEl_;
			}, _0x53c6c9.prototype.controlText = function _0x43c511(_0x2ca5e5) {
				var _0x3ae541 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();
				if (_0x2ca5e5 === undefined) {
					return this.controlText_ || 'Need Text';
				}
				var _0x2a9400 = this.localize(_0x2ca5e5);
				this.controlText_ = _0x2ca5e5;
				_0x36bbb1(this.controlTextEl_, _0x2a9400);
				if (!this.nonIconControl) {
					_0x3ae541.setAttribute('title', _0x2a9400);
				}
			}, _0x53c6c9.prototype.buildCSSClass = function _0xc0d345() {
				return 'vjs-control vjs-button ' + _0x65c2ae.prototype.buildCSSClass.call(this);
			}, _0x53c6c9.prototype.enable = function _0x3c1647() {
				if (!this.enabled_) {
					this.enabled_ = true;
					this.removeClass('vjs-disabled');
					this.el_.setAttribute('aria-disabled', 'false');
					if (typeof this.tabIndex_ !== 'undefined') {
						this.el_.setAttribute('tabIndex', this.tabIndex_);
					}
					this.on([
						'tap',
						'click'
					], this.handleClick);
					this.on('focus', this.handleFocus);
					this.on('blur', this.handleBlur);
				}
			}, _0x53c6c9.prototype.disable = function _0x4befaa() {
				this.enabled_ = false;
				this.addClass('vjs-disabled');
				this.el_.setAttribute('aria-disabled', 'true');
				if (typeof this.tabIndex_ !== 'undefined') {
					this.el_.removeAttribute('tabIndex');
				}
				this.off([
					'tap',
					'click'
				], this.handleClick);
				this.off('focus', this.handleFocus);
				this.off('blur', this.handleBlur);
			}, _0x53c6c9.prototype.handleClick = function _0x14613d(_0x483c54) {
			}, _0x53c6c9.prototype.handleFocus = function _0x46b2b0(_0x311a18) {
				_0x53fd98(_0x19e198, 'keydown', _0x5957d4(this, this.handleKeyPress));
			}, _0x53c6c9.prototype.handleKeyPress = function _0x440b83(_0x14d786) {
				if (_0x14d786.which === 32 || _0x14d786.which === 13) {
					_0x14d786.preventDefault();
					this.trigger('click');
				} else {
					if (_0x65c2ae.prototype.handleKeyPress) {
						_0x65c2ae.prototype.handleKeyPress.call(this, _0x14d786);
					}
				}
			}, _0x53c6c9.prototype.handleBlur = function _0x4fdec5(_0x19d835) {
				_0x85dba1(_0x19e198, 'keydown', _0x5957d4(this, this.handleKeyPress));
			}, _0x53c6c9;
		}(_0x2ab435)), _0x210dca = (_0x2ab435.registerComponent('ClickableComponent', _0x1c5762), function (_0x5beb53) {
			_0x2d47a2(_0x248197, _0x5beb53);
			function _0x248197(_0x501e01, _0x3809c6) {
				_0x7a6cc0(this, _0x248197);
				var _0x156735 = _0x1ab72f(this, _0x5beb53.call(this, _0x501e01, _0x3809c6));
				return _0x156735.update(), _0x501e01.on('posterchange', _0x5957d4(_0x156735, _0x156735.update)), _0x156735;
			}
			return _0x248197.prototype.dispose = function _0x3105be() {
				this.player().off('posterchange', this.update);
				_0x5beb53.prototype.dispose.call(this);
			}, _0x248197.prototype.createEl = function _0xc57f03() {
				var _0x33817f = _0x1a554c('div', {
					'className': 'vjs-poster',
					'tabIndex': -1
				});
				return _0x33817f;
			}, _0x248197.prototype.update = function _0x3cb0f1(_0x32fe2d) {
				var _0x2aa2f5 = this.player().poster();
				this.setSrc(_0x2aa2f5);
				if (_0x2aa2f5) {
					this.show();
				} else {
					this.hide();
				}
			}, _0x248197.prototype.setSrc = function _0x2b5ba1(_0x10b152) {
				var _0x381663 = '';
				if (_0x10b152) {
					_0x381663 = 'url("' + _0x10b152 + '")';
				}
				this.el_.style.backgroundImage = _0x381663;
			}, _0x248197.prototype.handleClick = function _0x2c1f1e(_0x1574de) {
				if (!this.player_.controls()) {
					return;
				}
				if (this.player_.paused()) {
					_0x4a9c2c(this.player_.play());
				} else {
					this.player_.pause();
				}
			}, _0x248197;
		}(_0x1c5762)), _0x163c2d = (_0x2ab435.registerComponent('PosterImage', _0x210dca), '#222'), _0x21003b = '#ccc', _0x4e66f7 = {
			'monospace': 'monospace',
			'sansSerif': 'sans-serif',
			'serif': 'serif',
			'monospaceSansSerif': '"Andale Mono", "Lucida Console", monospace',
			'monospaceSerif': '"Courier New", monospace',
			'proportionalSansSerif': 'sans-serif',
			'proportionalSerif': 'serif',
			'casual': '"Comic Sans MS", Impact, fantasy',
			'script': '"Monotype Corsiva", cursive',
			'smallcaps': '"Andale Mono", "Lucida Console", monospace, sans-serif'
		};
		function _0x3c1373(_0x54fa8e, _0x460d56) {
			var _0x935f60 = void 0;
			if (_0x54fa8e.length === 4) {
				_0x935f60 = _0x54fa8e[1] + _0x54fa8e[1] + _0x54fa8e[2] + _0x54fa8e[2] + _0x54fa8e[3] + _0x54fa8e[3];
			} else {
				if (_0x54fa8e.length === 7) {
					_0x935f60 = _0x54fa8e.slice(1);
				} else {
					throw new Error('Invalid color code provided, ' + _0x54fa8e + '; must be formatted as e.g. #f0e or #f604e2.');
				}
			}
			return 'rgba(' + parseInt(_0x935f60.slice(0, 2), 16) + ',' + parseInt(_0x935f60.slice(2, 4), 16) + ',' + parseInt(_0x935f60.slice(4, 6), 16) + ',' + _0x460d56 + ')';
		}
		function _0x1c77de(_0x4666fc, _0x4968ef, _0x165e29) {
			try {
				_0x4666fc.style[_0x4968ef] = _0x165e29;
			} catch (_0x84dc28) {
				return;
			}
		}
		var _0xf19cf5 = function (_0x284774) {
			_0x2d47a2(_0x1794ea, _0x284774);
			function _0x1794ea(_0x2cadce, _0x3a5174, _0x4de914) {
				_0x7a6cc0(this, _0x1794ea);
				var _0x337943 = _0x1ab72f(this, _0x284774.call(this, _0x2cadce, _0x3a5174, _0x4de914));
				return _0x2cadce.on('loadstart', _0x5957d4(_0x337943, _0x337943.toggleDisplay)), _0x2cadce.on('texttrackchange', _0x5957d4(_0x337943, _0x337943.updateDisplay)), _0x2cadce.on('loadstart', _0x5957d4(_0x337943, _0x337943.preselectTrack)), _0x2cadce.ready(_0x5957d4(_0x337943, function () {
					if (_0x2cadce.tech_ && _0x2cadce.tech_.featuresNativeTextTracks) {
						this.hide();
						return;
					}
					_0x2cadce.on('fullscreenchange', _0x5957d4(this, this.updateDisplay));
					var _0x17d0ef = this.options_.playerOptions.tracks || [];
					for (var _0x547bac = 0; _0x547bac < _0x17d0ef.length; _0x547bac++) {
						this.player_.addRemoteTextTrack(_0x17d0ef[_0x547bac], true);
					}
					this.preselectTrack();
				})), _0x337943;
			}
			return _0x1794ea.prototype.preselectTrack = function _0x1b4c61() {
				var _0x4c0c63 = this.player_.textTracks(), _0x4b33b3 = this.player_.cache_.selectedLanguage, _0x123e40 = void 0, _0x21e30c = void 0, _0xda33e0 = void 0;
				for (var _0x5a0726 = 0; _0x5a0726 < _0x4c0c63.length; _0x5a0726++) {
					var _0x5a942e = _0x4c0c63[_0x5a0726];
					if (_0x4b33b3 && _0x4b33b3.enabled && _0x4b33b3.language === _0x5a942e.language) {
						if (_0x5a942e.kind === _0x4b33b3.kind) {
							_0xda33e0 = _0x5a942e;
						} else {
							if (!_0xda33e0) {
								_0xda33e0 = _0x5a942e;
							}
						}
					} else {
						if (_0x4b33b3 && !_0x4b33b3.enabled) {
							_0xda33e0 = null;
							_0x123e40 = null;
							_0x21e30c = null;
						} else {
							if (_0x5a942e.default) {
								if (_0x5a942e.kind === 'descriptions' && !_0x123e40) {
									_0x123e40 = _0x5a942e;
								} else {
									if (_0x5a942e.kind in _0x482e43 && !_0x21e30c) {
										_0x21e30c = _0x5a942e;
									}
								}
							}
						}
					}
				}
				if (_0xda33e0) {
					_0xda33e0.mode = 'showing';
				} else {
					if (_0x21e30c) {
						_0x21e30c.mode = 'showing';
					} else {
						if (_0x123e40) {
							_0x123e40.mode = 'showing';
						}
					}
				}
			}, _0x1794ea.prototype.toggleDisplay = function _0x5ee523() {
				if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {
					this.hide();
				} else {
					this.show();
				}
			}, _0x1794ea.prototype.createEl = function _0x3f92d3() {
				return _0x284774.prototype.createEl.call(this, 'div', { 'className': 'vjs-text-track-display' }, {
					'aria-live': 'off',
					'aria-atomic': 'true'
				});
			}, _0x1794ea.prototype.clearDisplay = function _0xfdb8a8() {
				if (typeof _0x504cd5.WebVTT === 'function') {
					_0x504cd5.WebVTT.processCues(_0x504cd5, [], this.el_);
				}
			}, _0x1794ea.prototype.updateDisplay = function _0x24b883() {
				var _0x17b0ec = this.player_.textTracks();
				this.clearDisplay();
				var _0x44c45a = null, _0xeda07d = null, _0x3ff0da = _0x17b0ec.length;
				while (_0x3ff0da--) {
					var _0x5496b1 = _0x17b0ec[_0x3ff0da];
					if (_0x5496b1.mode === 'showing') {
						if (_0x5496b1.kind === 'descriptions') {
							_0x44c45a = _0x5496b1;
						} else {
							_0xeda07d = _0x5496b1;
						}
					}
				}
				if (_0xeda07d) {
					if (this.getAttribute('aria-live') !== 'off') {
						this.setAttribute('aria-live', 'off');
					}
					this.updateForTrack(_0xeda07d);
				} else {
					if (_0x44c45a) {
						if (this.getAttribute('aria-live') !== 'assertive') {
							this.setAttribute('aria-live', 'assertive');
						}
						this.updateForTrack(_0x44c45a);
					}
				}
			}, _0x1794ea.prototype.updateForTrack = function _0x2ce4a2(_0xdf170a) {
				if (typeof _0x504cd5.WebVTT !== 'function' || !_0xdf170a.activeCues) {
					return;
				}
				var _0x39e417 = [];
				for (var _0x49c2bb = 0; _0x49c2bb < _0xdf170a.activeCues.length; _0x49c2bb++) {
					_0x39e417.push(_0xdf170a.activeCues[_0x49c2bb]);
				}
				_0x504cd5.WebVTT.processCues(_0x504cd5, _0x39e417, this.el_);
				if (!this.player_.textTrackSettings) {
					return;
				}
				var _0x3113d7 = this.player_.textTrackSettings.getValues(), _0x3ff36e = _0x39e417.length;
				while (_0x3ff36e--) {
					var _0x28f259 = _0x39e417[_0x3ff36e];
					if (!_0x28f259) {
						continue;
					}
					var _0x56e026 = _0x28f259.displayState;
					if (_0x3113d7.color) {
						_0x56e026.firstChild.style.color = _0x3113d7.color;
					}
					if (_0x3113d7.textOpacity) {
						_0x1c77de(_0x56e026.firstChild, 'color', _0x3c1373(_0x3113d7.color || '#fff', _0x3113d7.textOpacity));
					}
					if (_0x3113d7.backgroundColor) {
						_0x56e026.firstChild.style.backgroundColor = _0x3113d7.backgroundColor;
					}
					if (_0x3113d7.backgroundOpacity) {
						_0x1c77de(_0x56e026.firstChild, 'backgroundColor', _0x3c1373(_0x3113d7.backgroundColor || '#000', _0x3113d7.backgroundOpacity));
					}
					if (_0x3113d7.windowColor) {
						if (_0x3113d7.windowOpacity) {
							_0x1c77de(_0x56e026, 'backgroundColor', _0x3c1373(_0x3113d7.windowColor, _0x3113d7.windowOpacity));
						} else {
							_0x56e026.style.backgroundColor = _0x3113d7.windowColor;
						}
					}
					if (_0x3113d7.edgeStyle) {
						if (_0x3113d7.edgeStyle === 'dropshadow') {
							_0x56e026.firstChild.style.textShadow = '2px 2px 3px ' + _0x163c2d + ', 2px 2px 4px ' + _0x163c2d + ', 2px 2px 5px ' + _0x163c2d;
						} else {
							if (_0x3113d7.edgeStyle === 'raised') {
								_0x56e026.firstChild.style.textShadow = '1px 1px ' + _0x163c2d + ', 2px 2px ' + _0x163c2d + ', 3px 3px ' + _0x163c2d;
							} else {
								if (_0x3113d7.edgeStyle === 'depressed') {
									_0x56e026.firstChild.style.textShadow = '1px 1px ' + _0x21003b + ', 0 1px ' + _0x21003b + ', -1px -1px ' + _0x163c2d + ', 0 -1px ' + _0x163c2d;
								} else {
									if (_0x3113d7.edgeStyle === 'uniform') {
										_0x56e026.firstChild.style.textShadow = '0 0 4px ' + _0x163c2d + ', 0 0 4px ' + _0x163c2d + ', 0 0 4px ' + _0x163c2d + ', 0 0 4px ' + _0x163c2d;
									}
								}
							}
						}
					}
					if (_0x3113d7.fontPercent && _0x3113d7.fontPercent !== 1) {
						var _0x5cfc53 = _0x504cd5.parseFloat(_0x56e026.style.fontSize);
						_0x56e026.style.fontSize = _0x5cfc53 * _0x3113d7.fontPercent + 'px';
						_0x56e026.style.height = 'auto';
						_0x56e026.style.top = 'auto';
						_0x56e026.style.bottom = '2px';
					}
					if (_0x3113d7.fontFamily && _0x3113d7.fontFamily !== 'default') {
						if (_0x3113d7.fontFamily === 'small-caps') {
							_0x56e026.firstChild.style.fontVariant = 'small-caps';
						} else {
							_0x56e026.firstChild.style.fontFamily = _0x4e66f7[_0x3113d7.fontFamily];
						}
					}
				}
			}, _0x1794ea;
		}(_0x2ab435), _0x2b9eaa = (_0x2ab435.registerComponent('TextTrackDisplay', _0xf19cf5), function (_0x32af4b) {
			_0x2d47a2(_0x2b0860, _0x32af4b);
			function _0x2b0860() {
				return _0x7a6cc0(this, _0x2b0860), _0x1ab72f(this, _0x32af4b.apply(this, arguments));
			}
			return _0x2b0860.prototype.createEl = function _0x27d10f() {
				var _0xc68dd5 = this.player_.isAudio(), _0x3d0b9d = this.localize(_0xc68dd5 ? 'Audio Player' : 'Video Player'), _0x4e1579 = _0x1a554c('span', {
					'className': 'vjs-control-text',
					'innerHTML': this.localize('{1} is loading.', [_0x3d0b9d])
				}), _0x333cf2 = _0x32af4b.prototype.createEl.call(this, 'div', {
					'className': 'vjs-loading-spinner',
					'dir': 'ltr'
				});
				return _0x333cf2.appendChild(_0x4e1579), _0x333cf2;
			}, _0x2b0860;
		}(_0x2ab435)), _0x754cd1 = (_0x2ab435.registerComponent('LoadingSpinner', _0x2b9eaa), function (_0x2e221b) {
			_0x2d47a2(_0x35f547, _0x2e221b);
			function _0x35f547() {
				return _0x7a6cc0(this, _0x35f547), _0x1ab72f(this, _0x2e221b.apply(this, arguments));
			}
			return _0x35f547.prototype.createEl = function _0x4f61c7(_0x16fe1f) {
				var _0x48123d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x3e68d7 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				_0x16fe1f = 'button';
				_0x48123d = _0x2e82a9({
					'innerHTML': '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
					'className': this.buildCSSClass()
				}, _0x48123d);
				_0x3e68d7 = _0x2e82a9({ 'type': 'button' }, _0x3e68d7);
				var _0x448f00 = _0x2ab435.prototype.createEl.call(this, _0x16fe1f, _0x48123d, _0x3e68d7);
				return this.createControlTextEl(_0x448f00), _0x448f00;
			}, _0x35f547.prototype.addChild = function _0x2db835(_0x52d56c) {
				var _0x21aab9 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x4b4005 = this.constructor.name;
				return _0x4155c5.warn('Adding an actionable (user controllable) child to a Button (' + _0x4b4005 + ') is not supported; use a ClickableComponent instead.'), _0x2ab435.prototype.addChild.call(this, _0x52d56c, _0x21aab9);
			}, _0x35f547.prototype.enable = function _0x535755() {
				_0x2e221b.prototype.enable.call(this);
				this.el_.removeAttribute('disabled');
			}, _0x35f547.prototype.disable = function _0x54f6ef() {
				_0x2e221b.prototype.disable.call(this);
				this.el_.setAttribute('disabled', 'disabled');
			}, _0x35f547.prototype.handleKeyPress = function _0x171610(_0x497a7a) {
				if (_0x497a7a.which === 32 || _0x497a7a.which === 13) {
					return;
				}
				_0x2e221b.prototype.handleKeyPress.call(this, _0x497a7a);
			}, _0x35f547;
		}(_0x1c5762)), _0x5f2599 = (_0x2ab435.registerComponent('Button', _0x754cd1), function (_0x2b27e5) {
			_0x2d47a2(_0x5e85ad, _0x2b27e5);
			function _0x5e85ad(_0x37a4c3, _0x5203ad) {
				_0x7a6cc0(this, _0x5e85ad);
				var _0x2d69fb = _0x1ab72f(this, _0x2b27e5.call(this, _0x37a4c3, _0x5203ad));
				return _0x2d69fb.mouseused_ = false, _0x2d69fb.on('mousedown', _0x2d69fb.handleMouseDown), _0x2d69fb;
			}
			return _0x5e85ad.prototype.buildCSSClass = function _0x440b45() {
				return 'vjs-big-play-button';
			}, _0x5e85ad.prototype.handleClick = function _0x380ea3(_0x1b30a7) {
				var _0x524e30 = this.player_.play();
				if (this.mouseused_ && _0x1b30a7.clientX && _0x1b30a7.clientY) {
					_0x4a9c2c(_0x524e30);
					return;
				}
				var _0xaa75c9 = this.player_.getChild('controlBar'), _0x311952 = _0xaa75c9 && _0xaa75c9.getChild('playToggle');
				if (!_0x311952) {
					this.player_.focus();
					return;
				}
				var _0xd3299a = function _0x4c811b() {
					return _0x311952.focus();
				};
				if (_0x56f39f(_0x524e30)) {
					_0x524e30.then(_0xd3299a, function () {
					});
				} else {
					this.setTimeout(_0xd3299a, 1);
				}
			}, _0x5e85ad.prototype.handleKeyPress = function _0x35cd3d(_0x2dd557) {
				this.mouseused_ = false;
				_0x2b27e5.prototype.handleKeyPress.call(this, _0x2dd557);
			}, _0x5e85ad.prototype.handleMouseDown = function _0x2642cf(_0x5df088) {
				this.mouseused_ = true;
			}, _0x5e85ad;
		}(_0x754cd1)), _0x5e7867 = (_0x5f2599.prototype.controlText_ = 'Play Video', _0x2ab435.registerComponent('BigPlayButton', _0x5f2599), function (_0x1e3db9) {
			_0x2d47a2(_0x33deb1, _0x1e3db9);
			function _0x33deb1(_0xc8e5fb, _0x54ec70) {
				_0x7a6cc0(this, _0x33deb1);
				var _0x530503 = _0x1ab72f(this, _0x1e3db9.call(this, _0xc8e5fb, _0x54ec70));
				return _0x530503.controlText(_0x54ec70 && _0x54ec70.controlText || _0x530503.localize('Close')), _0x530503;
			}
			return _0x33deb1.prototype.buildCSSClass = function _0x451aa7() {
				return 'vjs-close-button ' + _0x1e3db9.prototype.buildCSSClass.call(this);
			}, _0x33deb1.prototype.handleClick = function _0x422891(_0x22c488) {
				this.trigger({
					'type': 'close',
					'bubbles': false
				});
			}, _0x33deb1;
		}(_0x754cd1)), _0x5dd0d5 = (_0x2ab435.registerComponent('CloseButton', _0x5e7867), function (_0x13b12e) {
			_0x2d47a2(_0x27e5f7, _0x13b12e);
			function _0x27e5f7(_0x36b07f, _0x646e73) {
				_0x7a6cc0(this, _0x27e5f7);
				var _0x135d03 = _0x1ab72f(this, _0x13b12e.call(this, _0x36b07f, _0x646e73));
				return _0x135d03.on(_0x36b07f, 'play', _0x135d03.handlePlay), _0x135d03.on(_0x36b07f, 'pause', _0x135d03.handlePause), _0x135d03.on(_0x36b07f, 'ended', _0x135d03.handleEnded), _0x135d03;
			}
			return _0x27e5f7.prototype.buildCSSClass = function _0x1a6d1a() {
				return 'vjs-play-control ' + _0x13b12e.prototype.buildCSSClass.call(this);
			}, _0x27e5f7.prototype.handleClick = function _0x3da96e(_0x14e91c) {
				if (this.player_.paused()) {
					this.player_.play();
				} else {
					this.player_.pause();
				}
			}, _0x27e5f7.prototype.handleSeeked = function _0x530e72(_0x1bbb18) {
				this.removeClass('vjs-ended');
				if (this.player_.paused()) {
					this.handlePause(_0x1bbb18);
				} else {
					this.handlePlay(_0x1bbb18);
				}
			}, _0x27e5f7.prototype.handlePlay = function _0x2bc983(_0x58a4d6) {
				this.removeClass('vjs-ended');
				this.removeClass('vjs-paused');
				this.addClass('vjs-playing');
				this.controlText('Pause');
			}, _0x27e5f7.prototype.handlePause = function _0xd1a83(_0x18c55c) {
				this.removeClass('vjs-playing');
				this.addClass('vjs-paused');
				this.controlText('Play');
			}, _0x27e5f7.prototype.handleEnded = function _0xa0c8a(_0x2c9eb7) {
				this.removeClass('vjs-playing');
				this.addClass('vjs-ended');
				this.controlText('Replay');
				this.one(this.player_, 'seeked', this.handleSeeked);
			}, _0x27e5f7;
		}(_0x754cd1)), _0x1b5fc9 = (_0x5dd0d5.prototype.controlText_ = 'Play', _0x2ab435.registerComponent('PlayToggle', _0x5dd0d5), function _0x3c5bc5(_0x518cfa, _0x15e96b) {
			_0x518cfa = _0x518cfa < 0 ? 0 : _0x518cfa;
			var _0x22a1cf = Math.floor(_0x518cfa % 60), _0x397441 = Math.floor(_0x518cfa / 60 % 60), _0x50ed0f = Math.floor(_0x518cfa / 3600), _0x3a02e5 = Math.floor(_0x15e96b / 60 % 60), _0x522696 = Math.floor(_0x15e96b / 3600);
			if (isNaN(_0x518cfa) || _0x518cfa === Infinity) {
				_0x50ed0f = _0x397441 = _0x22a1cf = '-';
			}
			return _0x50ed0f = _0x50ed0f > 0 || _0x522696 > 0 ? _0x50ed0f + ':' : '', _0x397441 = ((_0x50ed0f || _0x3a02e5 >= 10) && _0x397441 < 10 ? '0' + _0x397441 : _0x397441) + ':', _0x22a1cf = _0x22a1cf < 10 ? '0' + _0x22a1cf : _0x22a1cf, _0x50ed0f + _0x397441 + _0x22a1cf;
		}), _0xd4bd20 = _0x1b5fc9;
		function _0x5b5a38(_0x36713f) {
			_0xd4bd20 = _0x36713f;
		}
		function _0x1ce7ca() {
			_0xd4bd20 = _0x1b5fc9;
		}
		function _0x4a0b80(_0x5e5425) {
			var _0x5e0399 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _0x5e5425;
			return _0xd4bd20(_0x5e5425, _0x5e0399);
		}
		var _0x5771d6 = function (_0x1c8ad0) {
			_0x2d47a2(_0x157273, _0x1c8ad0);
			function _0x157273(_0x293276, _0x469dd8) {
				_0x7a6cc0(this, _0x157273);
				var _0x1e50bf = _0x1ab72f(this, _0x1c8ad0.call(this, _0x293276, _0x469dd8));
				return _0x1e50bf.throttledUpdateContent = _0x4dd2a3(_0x5957d4(_0x1e50bf, _0x1e50bf.updateContent), 25), _0x1e50bf.on(_0x293276, 'timeupdate', _0x1e50bf.throttledUpdateContent), _0x1e50bf;
			}
			return _0x157273.prototype.createEl = function _0xfab743(_0x53c4e9) {
				var _0x24ac56 = this.buildCSSClass(), _0x123d02 = _0x1c8ad0.prototype.createEl.call(this, 'div', {
					'className': _0x24ac56 + ' vjs-time-control vjs-control',
					'innerHTML': '<span class="vjs-control-text">' + this.localize(this.labelText_) + '\xA0</span>'
				});
				return this.contentEl_ = _0x1a554c('span', { 'className': _0x24ac56 + '-display' }, { 'aria-live': 'off' }), this.updateTextNode_(), _0x123d02.appendChild(this.contentEl_), _0x123d02;
			}, _0x157273.prototype.dispose = function _0x2fb651() {
				this.contentEl_ = null;
				this.textNode_ = null;
				_0x1c8ad0.prototype.dispose.call(this);
			}, _0x157273.prototype.updateTextNode_ = function _0x2c9398() {
				if (!this.contentEl_) {
					return;
				}
				while (this.contentEl_.firstChild) {
					this.contentEl_.removeChild(this.contentEl_.firstChild);
				}
				this.textNode_ = _0x19e198.createTextNode(this.formattedTime_ || this.formatTime_(0));
				this.contentEl_.appendChild(this.textNode_);
			}, _0x157273.prototype.formatTime_ = function _0x1a7f7c(_0x3cff51) {
				return _0x4a0b80(_0x3cff51);
			}, _0x157273.prototype.updateFormattedTime_ = function _0x53d09b(_0x2c322d) {
				var _0x27e611 = this.formatTime_(_0x2c322d);
				if (_0x27e611 === this.formattedTime_) {
					return;
				}
				this.formattedTime_ = _0x27e611;
				this.requestAnimationFrame(this.updateTextNode_);
			}, _0x157273.prototype.updateContent = function _0x5b6daa(_0x167886) {
			}, _0x157273;
		}(_0x2ab435), _0x2175c0 = (_0x5771d6.prototype.labelText_ = 'Time', _0x5771d6.prototype.controlText_ = 'Time', _0x2ab435.registerComponent('TimeDisplay', _0x5771d6), function (_0x193e15) {
			_0x2d47a2(_0x4bf031, _0x193e15);
			function _0x4bf031(_0x192be7, _0x38e580) {
				_0x7a6cc0(this, _0x4bf031);
				var _0x4ea4c1 = _0x1ab72f(this, _0x193e15.call(this, _0x192be7, _0x38e580));
				return _0x4ea4c1.on(_0x192be7, 'ended', _0x4ea4c1.handleEnded), _0x4ea4c1;
			}
			return _0x4bf031.prototype.buildCSSClass = function _0x132473() {
				return 'vjs-current-time';
			}, _0x4bf031.prototype.updateContent = function _0xa2fcec(_0x233b6c) {
				var _0x107785 = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
				this.updateFormattedTime_(_0x107785);
			}, _0x4bf031.prototype.handleEnded = function _0x33eeda(_0x5bd4f2) {
				if (!this.player_.duration()) {
					return;
				}
				this.updateFormattedTime_(this.player_.duration());
			}, _0x4bf031;
		}(_0x5771d6)), _0x3c18ed = (_0x2175c0.prototype.labelText_ = 'Current Time', _0x2175c0.prototype.controlText_ = 'Current Time', _0x2ab435.registerComponent('CurrentTimeDisplay', _0x2175c0), function (_0x2eec20) {
			_0x2d47a2(_0x511788, _0x2eec20);
			function _0x511788(_0x1cbe42, _0x5a189e) {
				_0x7a6cc0(this, _0x511788);
				var _0x1484b3 = _0x1ab72f(this, _0x2eec20.call(this, _0x1cbe42, _0x5a189e));
				return _0x1484b3.on(_0x1cbe42, 'durationchange', _0x1484b3.updateContent), _0x1484b3.on(_0x1cbe42, 'loadedmetadata', _0x1484b3.throttledUpdateContent), _0x1484b3;
			}
			return _0x511788.prototype.buildCSSClass = function _0xc265f0() {
				return 'vjs-duration';
			}, _0x511788.prototype.updateContent = function _0x50111b(_0xda6ab0) {
				var _0x2e8994 = this.player_.duration();
				_0x2e8994 && this.duration_ !== _0x2e8994 && (this.duration_ = _0x2e8994, this.updateFormattedTime_(_0x2e8994));
			}, _0x511788;
		}(_0x5771d6)), _0x142d57 = (_0x3c18ed.prototype.labelText_ = 'Duration', _0x3c18ed.prototype.controlText_ = 'Duration', _0x2ab435.registerComponent('DurationDisplay', _0x3c18ed), function (_0x234aeb) {
			_0x2d47a2(_0x5d1d0f, _0x234aeb);
			function _0x5d1d0f() {
				return _0x7a6cc0(this, _0x5d1d0f), _0x1ab72f(this, _0x234aeb.apply(this, arguments));
			}
			return _0x5d1d0f.prototype.createEl = function _0x547e67() {
				return _0x234aeb.prototype.createEl.call(this, 'div', {
					'className': 'vjs-time-control vjs-time-divider',
					'innerHTML': '<div><span>/</span></div>'
				});
			}, _0x5d1d0f;
		}(_0x2ab435)), _0x3f58dd = (_0x2ab435.registerComponent('TimeDivider', _0x142d57), function (_0x4b5198) {
			_0x2d47a2(_0x3b6f92, _0x4b5198);
			function _0x3b6f92(_0x6e2a96, _0x116243) {
				_0x7a6cc0(this, _0x3b6f92);
				var _0x1d6a31 = _0x1ab72f(this, _0x4b5198.call(this, _0x6e2a96, _0x116243));
				return _0x1d6a31.on(_0x6e2a96, 'durationchange', _0x1d6a31.throttledUpdateContent), _0x1d6a31.on(_0x6e2a96, 'ended', _0x1d6a31.handleEnded), _0x1d6a31;
			}
			return _0x3b6f92.prototype.buildCSSClass = function _0x29ffd8() {
				return 'vjs-remaining-time';
			}, _0x3b6f92.prototype.formatTime_ = function _0x50379f(_0x5241fc) {
				return '-' + _0x4b5198.prototype.formatTime_.call(this, _0x5241fc);
			}, _0x3b6f92.prototype.updateContent = function _0x32cef5(_0x203c92) {
				if (!this.player_.duration()) {
					return;
				}
				if (this.player_.remainingTimeDisplay) {
					this.updateFormattedTime_(this.player_.remainingTimeDisplay());
				} else {
					this.updateFormattedTime_(this.player_.remainingTime());
				}
			}, _0x3b6f92.prototype.handleEnded = function _0x53d28e(_0x37239e) {
				if (!this.player_.duration()) {
					return;
				}
				this.updateFormattedTime_(0);
			}, _0x3b6f92;
		}(_0x5771d6)), _0x435fea = (_0x3f58dd.prototype.labelText_ = 'Remaining Time', _0x3f58dd.prototype.controlText_ = 'Remaining Time', _0x2ab435.registerComponent('RemainingTimeDisplay', _0x3f58dd), function (_0xc08f3c) {
			_0x2d47a2(_0x368a5d, _0xc08f3c);
			function _0x368a5d(_0x56de54, _0x6814e6) {
				_0x7a6cc0(this, _0x368a5d);
				var _0x250595 = _0x1ab72f(this, _0xc08f3c.call(this, _0x56de54, _0x6814e6));
				return _0x250595.updateShowing(), _0x250595.on(_0x250595.player(), 'durationchange', _0x250595.updateShowing), _0x250595;
			}
			return _0x368a5d.prototype.createEl = function _0x37a236() {
				var _0x555e12 = _0xc08f3c.prototype.createEl.call(this, 'div', { 'className': 'vjs-live-control vjs-control' });
				return this.contentEl_ = _0x1a554c('div', {
					'className': 'vjs-live-display',
					'innerHTML': '<span class="vjs-control-text">' + this.localize('Stream Type') + '\xA0</span>' + this.localize('LIVE')
				}, { 'aria-live': 'off' }), _0x555e12.appendChild(this.contentEl_), _0x555e12;
			}, _0x368a5d.prototype.dispose = function _0x680236() {
				this.contentEl_ = null;
				_0xc08f3c.prototype.dispose.call(this);
			}, _0x368a5d.prototype.updateShowing = function _0x61244d(_0xead693) {
				if (this.player().duration() === Infinity) {
					this.show();
				} else {
					this.hide();
				}
			}, _0x368a5d;
		}(_0x2ab435)), _0x490f17 = (_0x2ab435.registerComponent('LiveDisplay', _0x435fea), function (_0x51f0ea) {
			_0x2d47a2(_0x5d4f88, _0x51f0ea);
			function _0x5d4f88(_0x192110, _0x7c33d8) {
				_0x7a6cc0(this, _0x5d4f88);
				var _0x4d1743 = _0x1ab72f(this, _0x51f0ea.call(this, _0x192110, _0x7c33d8));
				return _0x4d1743.bar = _0x4d1743.getChild(_0x4d1743.options_.barName), _0x4d1743.vertical(!!_0x4d1743.options_.vertical), _0x4d1743.enable(), _0x4d1743;
			}
			return _0x5d4f88.prototype.enabled = function _0x5116d4() {
				return this.enabled_;
			}, _0x5d4f88.prototype.enable = function _0x2e6752() {
				if (this.enabled()) {
					return;
				}
				this.on('mousedown', this.handleMouseDown);
				this.on('touchstart', this.handleMouseDown);
				this.on('focus', this.handleFocus);
				this.on('blur', this.handleBlur);
				this.on('click', this.handleClick);
				this.on(this.player_, 'controlsvisible', this.update);
				if (this.playerEvent) {
					this.on(this.player_, this.playerEvent, this.update);
				}
				this.removeClass('disabled');
				this.setAttribute('tabindex', 0);
				this.enabled_ = true;
			}, _0x5d4f88.prototype.disable = function _0x1b59fb() {
				if (!this.enabled()) {
					return;
				}
				var _0x4fdd70 = this.bar.el_.ownerDocument;
				this.off('mousedown', this.handleMouseDown);
				this.off('touchstart', this.handleMouseDown);
				this.off('focus', this.handleFocus);
				this.off('blur', this.handleBlur);
				this.off('click', this.handleClick);
				this.off(this.player_, 'controlsvisible', this.update);
				this.off(_0x4fdd70, 'mousemove', this.handleMouseMove);
				this.off(_0x4fdd70, 'mouseup', this.handleMouseUp);
				this.off(_0x4fdd70, 'touchmove', this.handleMouseMove);
				this.off(_0x4fdd70, 'touchend', this.handleMouseUp);
				this.removeAttribute('tabindex');
				this.addClass('disabled');
				if (this.playerEvent) {
					this.off(this.player_, this.playerEvent, this.update);
				}
				this.enabled_ = false;
			}, _0x5d4f88.prototype.createEl = function _0x389f16(_0x4b6bc7) {
				var _0x1508d8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x48a69e = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
				return _0x1508d8.className = _0x1508d8.className + ' vjs-slider', _0x1508d8 = _0x2e82a9({ 'tabIndex': 0 }, _0x1508d8), _0x48a69e = _0x2e82a9({
					'role': 'slider',
					'aria-valuenow': 0,
					'aria-valuemin': 0,
					'aria-valuemax': 100,
					'tabIndex': 0
				}, _0x48a69e), _0x51f0ea.prototype.createEl.call(this, _0x4b6bc7, _0x1508d8, _0x48a69e);
			}, _0x5d4f88.prototype.handleMouseDown = function _0x1debd6(_0x3e1d5f) {
				var _0x217179 = this.bar.el_.ownerDocument;
				if (_0x3e1d5f.type === 'mousedown') {
					_0x3e1d5f.preventDefault();
				}
				if (_0x3e1d5f.type === 'touchstart' && !_0x2c8fe3) {
					_0x3e1d5f.preventDefault();
				}
				_0x3c0c1d();
				this.addClass('vjs-sliding');
				this.trigger('slideractive');
				this.on(_0x217179, 'mousemove', this.handleMouseMove);
				this.on(_0x217179, 'mouseup', this.handleMouseUp);
				this.on(_0x217179, 'touchmove', this.handleMouseMove);
				this.on(_0x217179, 'touchend', this.handleMouseUp);
				this.handleMouseMove(_0x3e1d5f);
			}, _0x5d4f88.prototype.handleMouseMove = function _0x201536(_0x2b879b) {
			}, _0x5d4f88.prototype.handleMouseUp = function _0x21ea5c() {
				var _0x59400e = this.bar.el_.ownerDocument;
				_0x48a0bb();
				this.removeClass('vjs-sliding');
				this.trigger('sliderinactive');
				this.off(_0x59400e, 'mousemove', this.handleMouseMove);
				this.off(_0x59400e, 'mouseup', this.handleMouseUp);
				this.off(_0x59400e, 'touchmove', this.handleMouseMove);
				this.off(_0x59400e, 'touchend', this.handleMouseUp);
				this.update();
			}, _0x5d4f88.prototype.update = function _0x5d842d() {
				if (!this.el_) {
					return;
				}
				var _0x2b79ad = this.getPercent(), _0x1fb348 = this.bar;
				if (!_0x1fb348) {
					return;
				}
				if (typeof _0x2b79ad !== 'number' || _0x2b79ad !== _0x2b79ad || _0x2b79ad < 0 || _0x2b79ad === Infinity) {
					_0x2b79ad = 0;
				}
				var _0x40a351 = (_0x2b79ad * 100).toFixed(2) + '%', _0x19b18d = _0x1fb348.el().style;
				if (this.vertical()) {
					_0x19b18d.height = _0x40a351;
				} else {
					_0x19b18d.width = _0x40a351;
				}
				return _0x2b79ad;
			}, _0x5d4f88.prototype.calculateDistance = function _0x3109f2(_0x5b3f3a) {
				var _0x310e07 = _0x8e1751(this.el_, _0x5b3f3a);
				if (this.vertical()) {
					return _0x310e07.y;
				}
				return _0x310e07.x;
			}, _0x5d4f88.prototype.handleFocus = function _0x56bc10() {
				this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);
			}, _0x5d4f88.prototype.handleKeyPress = function _0x52fc44(_0x20e067) {
				if (_0x20e067.which === 37 || _0x20e067.which === 40) {
					_0x20e067.preventDefault();
					this.stepBack();
				} else {
					(_0x20e067.which === 38 || _0x20e067.which === 39) && (_0x20e067.preventDefault(), this.stepForward());
				}
			}, _0x5d4f88.prototype.handleBlur = function _0x1c48b7() {
				this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);
			}, _0x5d4f88.prototype.handleClick = function _0x2fdb3d(_0x41842d) {
				_0x41842d.stopImmediatePropagation();
				_0x41842d.preventDefault();
			}, _0x5d4f88.prototype.vertical = function _0x184659(_0x1c55dc) {
				if (_0x1c55dc === undefined) {
					return this.vertical_ || false;
				}
				this.vertical_ = !!_0x1c55dc;
				if (this.vertical_) {
					this.addClass('vjs-slider-vertical');
				} else {
					this.addClass('vjs-slider-horizontal');
				}
			}, _0x5d4f88;
		}(_0x2ab435)), _0x447dba = (_0x2ab435.registerComponent('Slider', _0x490f17), function (_0xabc296) {
			_0x2d47a2(_0x3293f7, _0xabc296);
			function _0x3293f7(_0x3d8861, _0x52421b) {
				_0x7a6cc0(this, _0x3293f7);
				var _0x68f68b = _0x1ab72f(this, _0xabc296.call(this, _0x3d8861, _0x52421b));
				return _0x68f68b.partEls_ = [], _0x68f68b.on(_0x3d8861, 'progress', _0x68f68b.update), _0x68f68b;
			}
			return _0x3293f7.prototype.createEl = function _0x3688f1() {
				return _0xabc296.prototype.createEl.call(this, 'div', {
					'className': 'vjs-load-progress',
					'innerHTML': '<span class="vjs-control-text"><span>' + this.localize('Loaded') + '</span>: 0%</span>'
				});
			}, _0x3293f7.prototype.dispose = function _0x177474() {
				this.partEls_ = null;
				_0xabc296.prototype.dispose.call(this);
			}, _0x3293f7.prototype.update = function _0x22dd71(_0x4f5337) {
				var _0x4008ed = this.player_.buffered(), _0x2544fb = this.player_.duration(), _0x14fb79 = this.player_.bufferedEnd(), _0x157974 = this.partEls_, _0x4a8aeb = function _0x48809e(_0x200d1e, _0x22ca4c) {
					var _0x128ae0 = _0x200d1e / _0x22ca4c || 0;
					return (_0x128ae0 >= 1 ? 1 : _0x128ae0) * 100 + '%';
				};
				this.el_.style.width = _0x4a8aeb(_0x14fb79, _0x2544fb);
				for (var _0x80f950 = 0; _0x80f950 < _0x4008ed.length; _0x80f950++) {
					var _0x21d127 = _0x4008ed.start(_0x80f950), _0x3b4b0c = _0x4008ed.end(_0x80f950), _0x3b46fd = _0x157974[_0x80f950];
					!_0x3b46fd && (_0x3b46fd = this.el_.appendChild(_0x1a554c()), _0x157974[_0x80f950] = _0x3b46fd);
					_0x3b46fd.style.left = _0x4a8aeb(_0x21d127, _0x14fb79);
					_0x3b46fd.style.width = _0x4a8aeb(_0x3b4b0c - _0x21d127, _0x14fb79);
				}
				for (var _0x1f8e96 = _0x157974.length; _0x1f8e96 > _0x4008ed.length; _0x1f8e96--) {
					this.el_.removeChild(_0x157974[_0x1f8e96 - 1]);
				}
				_0x157974.length = _0x4008ed.length;
			}, _0x3293f7;
		}(_0x2ab435)), _0x1a67ef = (_0x2ab435.registerComponent('LoadProgressBar', _0x447dba), function (_0x53f51d) {
			_0x2d47a2(_0x3328a7, _0x53f51d);
			function _0x3328a7() {
				return _0x7a6cc0(this, _0x3328a7), _0x1ab72f(this, _0x53f51d.apply(this, arguments));
			}
			return _0x3328a7.prototype.createEl = function _0x6213e9() {
				return _0x53f51d.prototype.createEl.call(this, 'div', { 'className': 'vjs-time-tooltip' });
			}, _0x3328a7.prototype.update = function _0x5857a0(_0x30a2d5, _0x431cd3, _0xb188b) {
				var _0x8a74bb = _0x502078(this.el_), _0x2a24ec = _0x502078(this.player_.el()), _0x17ad39 = _0x30a2d5.width * _0x431cd3;
				if (!_0x2a24ec || !_0x8a74bb) {
					return;
				}
				var _0x217dab = _0x30a2d5.left - _0x2a24ec.left + _0x17ad39, _0x2be9dc = _0x30a2d5.width - _0x17ad39 + (_0x2a24ec.right - _0x30a2d5.right), _0x3b2bed = _0x8a74bb.width / 2;
				if (_0x217dab < _0x3b2bed) {
					_0x3b2bed += _0x3b2bed - _0x217dab;
				} else {
					if (_0x2be9dc < _0x3b2bed) {
						_0x3b2bed = _0x2be9dc;
					}
				}
				if (_0x3b2bed < 0) {
					_0x3b2bed = 0;
				} else {
					if (_0x3b2bed > _0x8a74bb.width) {
						_0x3b2bed = _0x8a74bb.width;
					}
				}
				this.el_.style.right = '-' + _0x3b2bed + 'px';
				_0x36bbb1(this.el_, _0xb188b);
			}, _0x3328a7;
		}(_0x2ab435)), _0x514047 = (_0x2ab435.registerComponent('TimeTooltip', _0x1a67ef), function (_0x231c84) {
			_0x2d47a2(_0x143f31, _0x231c84);
			function _0x143f31() {
				return _0x7a6cc0(this, _0x143f31), _0x1ab72f(this, _0x231c84.apply(this, arguments));
			}
			return _0x143f31.prototype.createEl = function _0x4d39bd() {
				return _0x231c84.prototype.createEl.call(this, 'div', {
					'className': 'vjs-play-progress vjs-slider-bar',
					'innerHTML': '<span class="vjs-control-text"><span>' + this.localize('Progress') + '</span>: 0%</span>'
				});
			}, _0x143f31.prototype.update = function _0xc0843e(_0x208f02, _0x4bbfca) {
				var _0x96d41 = this;
				if (this.rafId_) {
					this.cancelAnimationFrame(this.rafId_);
				}
				this.rafId_ = this.requestAnimationFrame(function () {
					var _0x18ca1a = _0x96d41.player_.scrubbing() ? _0x96d41.player_.getCache().currentTime : _0x96d41.player_.currentTime(), _0x473422 = _0x4a0b80(_0x18ca1a, _0x96d41.player_.duration()), _0x478b7a = _0x96d41.getChild('timeTooltip');
					if (_0x478b7a) {
						_0x478b7a.update(_0x208f02, _0x4bbfca, _0x473422);
					}
				});
			}, _0x143f31;
		}(_0x2ab435));
		if (_0x514047.prototype.options_ = { 'children': [] }, !_0x31e406 && !_0x440e94) {
			_0x514047.prototype.options_.children.push('timeTooltip');
		}
		_0x2ab435.registerComponent('PlayProgressBar', _0x514047);
		var _0x314a1b = function (_0x8d4384) {
			_0x2d47a2(_0x452a5b, _0x8d4384);
			function _0x452a5b(_0x13ca92, _0xef8b88) {
				_0x7a6cc0(this, _0x452a5b);
				var _0x1d8351 = _0x1ab72f(this, _0x8d4384.call(this, _0x13ca92, _0xef8b88));
				return _0x1d8351.update = _0x4dd2a3(_0x5957d4(_0x1d8351, _0x1d8351.update), 25), _0x1d8351;
			}
			return _0x452a5b.prototype.createEl = function _0xc4d1c3() {
				return _0x8d4384.prototype.createEl.call(this, 'div', { 'className': 'vjs-mouse-display' });
			}, _0x452a5b.prototype.update = function _0xe9604a(_0x3f6a96, _0x4416d7) {
				var _0x4f6cb8 = this;
				if (this.rafId_) {
					this.cancelAnimationFrame(this.rafId_);
				}
				this.rafId_ = this.requestAnimationFrame(function () {
					var _0x509373 = _0x4f6cb8.player_.duration(), _0x4ab059 = _0x4a0b80(_0x4416d7 * _0x509373, _0x509373);
					_0x4f6cb8.el_.style.left = _0x3f6a96.width * _0x4416d7 + 'px';
					_0x4f6cb8.getChild('timeTooltip').update(_0x3f6a96, _0x4416d7, _0x4ab059);
				});
			}, _0x452a5b;
		}(_0x2ab435), _0x1bd3e2 = (_0x314a1b.prototype.options_ = { 'children': ['timeTooltip'] }, _0x2ab435.registerComponent('MouseTimeDisplay', _0x314a1b), 5), _0x40194f = function (_0x360d9f) {
			_0x2d47a2(_0x5eb13d, _0x360d9f);
			function _0x5eb13d(_0x50b0b9, _0x18e23c) {
				_0x7a6cc0(this, _0x5eb13d);
				var _0xdde9c7 = _0x1ab72f(this, _0x360d9f.call(this, _0x50b0b9, _0x18e23c));
				return _0xdde9c7.setEventHandlers_(), _0xdde9c7;
			}
			return _0x5eb13d.prototype.setEventHandlers_ = function _0x3e6501() {
				var _0x1ebd12 = this;
				this.update = _0x4dd2a3(_0x5957d4(this, this.update), 30);
				this.on(this.player_, 'timeupdate', this.update);
				this.on(this.player_, 'ended', this.handleEnded);
				this.updateInterval = null;
				this.on(this.player_, ['playing'], function () {
					_0x1ebd12.clearInterval(_0x1ebd12.updateInterval);
					_0x1ebd12.updateInterval = _0x1ebd12.setInterval(function () {
						_0x1ebd12.requestAnimationFrame(function () {
							_0x1ebd12.update();
						});
					}, 30);
				});
				this.on(this.player_, [
					'ended',
					'pause',
					'waiting'
				], function () {
					_0x1ebd12.clearInterval(_0x1ebd12.updateInterval);
				});
				this.on(this.player_, [
					'timeupdate',
					'ended'
				], this.update);
			}, _0x5eb13d.prototype.createEl = function _0x4c4161() {
				return _0x360d9f.prototype.createEl.call(this, 'div', { 'className': 'vjs-progress-holder' }, { 'aria-label': this.localize('Progress Bar') });
			}, _0x5eb13d.prototype.update_ = function _0xd28a90(_0x87de5a, _0x3efe49) {
				var _0x5b7e5a = this.player_.duration();
				this.el_.setAttribute('aria-valuenow', (_0x3efe49 * 100).toFixed(2));
				this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [
					_0x4a0b80(_0x87de5a, _0x5b7e5a),
					_0x4a0b80(_0x5b7e5a, _0x5b7e5a)
				], '{1} of {2}'));
				this.bar.update(_0x502078(this.el_), _0x3efe49);
			}, _0x5eb13d.prototype.update = function _0x3beecc(_0x335096) {
				var _0x57a656 = _0x360d9f.prototype.update.call(this);
				return this.update_(this.getCurrentTime_(), _0x57a656), _0x57a656;
			}, _0x5eb13d.prototype.getCurrentTime_ = function _0x58328b() {
				return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
			}, _0x5eb13d.prototype.handleEnded = function _0x3b05e9(_0x17f9c3) {
				this.update_(this.player_.duration(), 1);
			}, _0x5eb13d.prototype.getPercent = function _0x2d1a6e() {
				var _0x2ce38b = this.getCurrentTime_() / this.player_.duration();
				return _0x2ce38b >= 1 ? 1 : _0x2ce38b || 0;
			}, _0x5eb13d.prototype.handleMouseDown = function _0x513ba5(_0x5c4008) {
				if (!_0x3953f7(_0x5c4008)) {
					return;
				}
				_0x5c4008.stopPropagation();
				this.player_.scrubbing(true);
				this.videoWasPlaying = !this.player_.paused();
				this.player_.pause();
				_0x360d9f.prototype.handleMouseDown.call(this, _0x5c4008);
			}, _0x5eb13d.prototype.handleMouseMove = function _0x168c48(_0x2db657) {
				if (!_0x3953f7(_0x2db657)) {
					return;
				}
				var _0x5b9109 = this.calculateDistance(_0x2db657) * this.player_.duration();
				if (_0x5b9109 === this.player_.duration()) {
					_0x5b9109 = _0x5b9109 - 0.1;
				}
				this.player_.currentTime(_0x5b9109);
			}, _0x5eb13d.prototype.enable = function _0xf30b75() {
				_0x360d9f.prototype.enable.call(this);
				var _0x3bc97c = this.getChild('mouseTimeDisplay');
				if (!_0x3bc97c) {
					return;
				}
				_0x3bc97c.show();
			}, _0x5eb13d.prototype.disable = function _0x4c20e4() {
				_0x360d9f.prototype.disable.call(this);
				var _0x1d31fb = this.getChild('mouseTimeDisplay');
				if (!_0x1d31fb) {
					return;
				}
				_0x1d31fb.hide();
			}, _0x5eb13d.prototype.handleMouseUp = function _0x255872(_0x3b5a16) {
				_0x360d9f.prototype.handleMouseUp.call(this, _0x3b5a16);
				if (_0x3b5a16) {
					_0x3b5a16.stopPropagation();
				}
				this.player_.scrubbing(false);
				this.player_.trigger({
					'type': 'timeupdate',
					'target': this,
					'manuallyTriggered': true
				});
				if (this.videoWasPlaying) {
					_0x4a9c2c(this.player_.play());
				}
			}, _0x5eb13d.prototype.stepForward = function _0x35ff80() {
				this.player_.currentTime(this.player_.currentTime() + _0x1bd3e2);
			}, _0x5eb13d.prototype.stepBack = function _0x3312cf() {
				this.player_.currentTime(this.player_.currentTime() - _0x1bd3e2);
			}, _0x5eb13d.prototype.handleAction = function _0xb1eb4(_0x2c67f1) {
				if (this.player_.paused()) {
					this.player_.play();
				} else {
					this.player_.pause();
				}
			}, _0x5eb13d.prototype.handleKeyPress = function _0x596637(_0x3dcb71) {
				if (_0x3dcb71.which === 32 || _0x3dcb71.which === 13) {
					_0x3dcb71.preventDefault();
					this.handleAction(_0x3dcb71);
				} else {
					if (_0x360d9f.prototype.handleKeyPress) {
						_0x360d9f.prototype.handleKeyPress.call(this, _0x3dcb71);
					}
				}
			}, _0x5eb13d;
		}(_0x490f17);
		if (_0x40194f.prototype.options_ = {
			'children': [
				'loadProgressBar',
				'playProgressBar'
			],
			'barName': 'playProgressBar'
		}, !_0x31e406 && !_0x440e94) {
			_0x40194f.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');
		}
		_0x40194f.prototype.playerEvent = 'timeupdate';
		_0x2ab435.registerComponent('SeekBar', _0x40194f);
		var _0x42ae80 = function (_0x224c18) {
			_0x2d47a2(_0x3cb8cd, _0x224c18);
			function _0x3cb8cd(_0x21a48f, _0x15d67e) {
				_0x7a6cc0(this, _0x3cb8cd);
				var _0x5254b2 = _0x1ab72f(this, _0x224c18.call(this, _0x21a48f, _0x15d67e));
				return _0x5254b2.handleMouseMove = _0x4dd2a3(_0x5957d4(_0x5254b2, _0x5254b2.handleMouseMove), 25), _0x5254b2.throttledHandleMouseSeek = _0x4dd2a3(_0x5957d4(_0x5254b2, _0x5254b2.handleMouseSeek), 25), _0x5254b2.enable(), _0x5254b2;
			}
			return _0x3cb8cd.prototype.createEl = function _0xc51450() {
				return _0x224c18.prototype.createEl.call(this, 'div', { 'className': 'vjs-progress-control vjs-control' });
			}, _0x3cb8cd.prototype.handleMouseMove = function _0x2ef8b8(_0x4986d0) {
				var _0x5b59e9 = this.getChild('seekBar');
				if (_0x5b59e9) {
					var _0x365a4d = _0x5b59e9.getChild('mouseTimeDisplay'), _0x4b9b74 = _0x5b59e9.el(), _0x1f0836 = _0x502078(_0x4b9b74), _0x82ac50 = _0x8e1751(_0x4b9b74, _0x4986d0).x;
					if (_0x82ac50 > 1) {
						_0x82ac50 = 1;
					} else {
						if (_0x82ac50 < 0) {
							_0x82ac50 = 0;
						}
					}
					if (_0x365a4d) {
						_0x365a4d.update(_0x1f0836, _0x82ac50);
					}
				}
			}, _0x3cb8cd.prototype.handleMouseSeek = function _0x14aa73(_0x16f4c0) {
				var _0xb56518 = this.getChild('seekBar');
				if (_0xb56518) {
					_0xb56518.handleMouseMove(_0x16f4c0);
				}
			}, _0x3cb8cd.prototype.enabled = function _0x2258c6() {
				return this.enabled_;
			}, _0x3cb8cd.prototype.disable = function _0x17f698() {
				this.children().forEach(function (_0x478344) {
					return _0x478344.disable && _0x478344.disable();
				});
				if (!this.enabled()) {
					return;
				}
				this.off([
					'mousedown',
					'touchstart'
				], this.handleMouseDown);
				this.off(this.el_, 'mousemove', this.handleMouseMove);
				this.handleMouseUp();
				this.addClass('disabled');
				this.enabled_ = false;
			}, _0x3cb8cd.prototype.enable = function _0x4e3487() {
				this.children().forEach(function (_0xcc37a3) {
					return _0xcc37a3.enable && _0xcc37a3.enable();
				});
				if (this.enabled()) {
					return;
				}
				this.on([
					'mousedown',
					'touchstart'
				], this.handleMouseDown);
				this.on(this.el_, 'mousemove', this.handleMouseMove);
				this.removeClass('disabled');
				this.enabled_ = true;
			}, _0x3cb8cd.prototype.handleMouseDown = function _0x384552(_0xe7e104) {
				var _0x28e31d = this.el_.ownerDocument, _0x88abbf = this.getChild('seekBar');
				if (_0x88abbf) {
					_0x88abbf.handleMouseDown(_0xe7e104);
				}
				this.on(_0x28e31d, 'mousemove', this.throttledHandleMouseSeek);
				this.on(_0x28e31d, 'touchmove', this.throttledHandleMouseSeek);
				this.on(_0x28e31d, 'mouseup', this.handleMouseUp);
				this.on(_0x28e31d, 'touchend', this.handleMouseUp);
			}, _0x3cb8cd.prototype.handleMouseUp = function _0x1382ea(_0x27f280) {
				var _0xe34fcc = this.el_.ownerDocument, _0x1318f3 = this.getChild('seekBar');
				if (_0x1318f3) {
					_0x1318f3.handleMouseUp(_0x27f280);
				}
				this.off(_0xe34fcc, 'mousemove', this.throttledHandleMouseSeek);
				this.off(_0xe34fcc, 'touchmove', this.throttledHandleMouseSeek);
				this.off(_0xe34fcc, 'mouseup', this.handleMouseUp);
				this.off(_0xe34fcc, 'touchend', this.handleMouseUp);
			}, _0x3cb8cd;
		}(_0x2ab435), _0x48e9b5 = (_0x42ae80.prototype.options_ = { 'children': ['seekBar'] }, _0x2ab435.registerComponent('ProgressControl', _0x42ae80), function (_0xe236e7) {
			_0x2d47a2(_0x442428, _0xe236e7);
			function _0x442428(_0x2ac28a, _0xbcdb17) {
				_0x7a6cc0(this, _0x442428);
				var _0xe5332c = _0x1ab72f(this, _0xe236e7.call(this, _0x2ac28a, _0xbcdb17));
				_0xe5332c.on(_0x2ac28a, 'fullscreenchange', _0xe5332c.handleFullscreenChange);
				if (_0x19e198[_0x62dcca.fullscreenEnabled] === false) {
					_0xe5332c.disable();
				}
				return _0xe5332c;
			}
			return _0x442428.prototype.buildCSSClass = function _0x2772a8() {
				return 'vjs-fullscreen-control ' + _0xe236e7.prototype.buildCSSClass.call(this);
			}, _0x442428.prototype.handleFullscreenChange = function _0x4a0adb(_0x158cf0) {
				if (this.player_.isFullscreen()) {
					this.controlText('Non-Fullscreen');
				} else {
					this.controlText('Fullscreen');
				}
			}, _0x442428.prototype.handleClick = function _0x4d4388(_0x1cb91c) {
				if (!this.player_.isFullscreen()) {
					this.player_.requestFullscreen();
				} else {
					this.player_.exitFullscreen();
				}
			}, _0x442428;
		}(_0x754cd1)), _0x29a16e = (_0x48e9b5.prototype.controlText_ = 'Fullscreen', _0x2ab435.registerComponent('FullscreenToggle', _0x48e9b5), function _0x5c212a(_0x218239, _0x382037) {
			if (_0x382037.tech_ && !_0x382037.tech_.featuresVolumeControl) {
				_0x218239.addClass('vjs-hidden');
			}
			_0x218239.on(_0x382037, 'loadstart', function () {
				if (!_0x382037.tech_.featuresVolumeControl) {
					_0x218239.addClass('vjs-hidden');
				} else {
					_0x218239.removeClass('vjs-hidden');
				}
			});
		}), _0xbe6bc6 = function (_0x3c90e2) {
			_0x2d47a2(_0x811a18, _0x3c90e2);
			function _0x811a18() {
				return _0x7a6cc0(this, _0x811a18), _0x1ab72f(this, _0x3c90e2.apply(this, arguments));
			}
			return _0x811a18.prototype.createEl = function _0x10a155() {
				return _0x3c90e2.prototype.createEl.call(this, 'div', {
					'className': 'vjs-volume-level',
					'innerHTML': '<span class="vjs-control-text"></span>'
				});
			}, _0x811a18;
		}(_0x2ab435), _0x4ad022 = (_0x2ab435.registerComponent('VolumeLevel', _0xbe6bc6), function (_0x2cd587) {
			_0x2d47a2(_0x5d9319, _0x2cd587);
			function _0x5d9319(_0x52f2a4, _0x4fd2e7) {
				_0x7a6cc0(this, _0x5d9319);
				var _0x35e6b1 = _0x1ab72f(this, _0x2cd587.call(this, _0x52f2a4, _0x4fd2e7));
				return _0x35e6b1.on('slideractive', _0x35e6b1.updateLastVolume_), _0x35e6b1.on(_0x52f2a4, 'volumechange', _0x35e6b1.updateARIAAttributes), _0x52f2a4.ready(function () {
					return _0x35e6b1.updateARIAAttributes();
				}), _0x35e6b1;
			}
			return _0x5d9319.prototype.createEl = function _0x1770ff() {
				return _0x2cd587.prototype.createEl.call(this, 'div', { 'className': 'vjs-volume-bar vjs-slider-bar' }, {
					'aria-label': this.localize('Volume Level'),
					'aria-live': 'polite'
				});
			}, _0x5d9319.prototype.handleMouseDown = function _0xd60e15(_0x5755f8) {
				if (!_0x3953f7(_0x5755f8)) {
					return;
				}
				_0x2cd587.prototype.handleMouseDown.call(this, _0x5755f8);
			}, _0x5d9319.prototype.handleMouseMove = function _0x1d1049(_0x5a575d) {
				if (!_0x3953f7(_0x5a575d)) {
					return;
				}
				this.checkMuted();
				this.player_.volume(this.calculateDistance(_0x5a575d));
			}, _0x5d9319.prototype.checkMuted = function _0x2ffebd() {
				if (this.player_.muted()) {
					this.player_.muted(false);
				}
			}, _0x5d9319.prototype.getPercent = function _0xdf79f5() {
				if (this.player_.muted()) {
					return 0;
				}
				return this.player_.volume();
			}, _0x5d9319.prototype.stepForward = function _0x2ba656() {
				this.checkMuted();
				this.player_.volume(this.player_.volume() + 0.1);
			}, _0x5d9319.prototype.stepBack = function _0x3748b1() {
				this.checkMuted();
				this.player_.volume(this.player_.volume() - 0.1);
			}, _0x5d9319.prototype.updateARIAAttributes = function _0x530c0e(_0x352da2) {
				var _0x130cd7 = this.player_.muted() ? 0 : this.volumeAsPercentage_();
				this.el_.setAttribute('aria-valuenow', _0x130cd7);
				this.el_.setAttribute('aria-valuetext', _0x130cd7 + '%');
			}, _0x5d9319.prototype.volumeAsPercentage_ = function _0x5184c2() {
				return Math.round(this.player_.volume() * 100);
			}, _0x5d9319.prototype.updateLastVolume_ = function _0x326544() {
				var _0x4aec88 = this, _0x5863df = this.player_.volume();
				this.one('sliderinactive', function () {
					if (_0x4aec88.player_.volume() === 0) {
						_0x4aec88.player_.lastVolume_(_0x5863df);
					}
				});
			}, _0x5d9319;
		}(_0x490f17)), _0x58a122 = (_0x4ad022.prototype.options_ = {
			'children': ['volumeLevel'],
			'barName': 'volumeLevel'
		}, _0x4ad022.prototype.playerEvent = 'volumechange', _0x2ab435.registerComponent('VolumeBar', _0x4ad022), function (_0xb67e0d) {
			_0x2d47a2(_0x43308e, _0xb67e0d);
			function _0x43308e(_0x13cdda) {
				var _0x41386a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				_0x7a6cc0(this, _0x43308e);
				_0x41386a.vertical = _0x41386a.vertical || false;
				(typeof _0x41386a.volumeBar === 'undefined' || _0x4307a4(_0x41386a.volumeBar)) && (_0x41386a.volumeBar = _0x41386a.volumeBar || {}, _0x41386a.volumeBar.vertical = _0x41386a.vertical);
				var _0x5f49cb = _0x1ab72f(this, _0xb67e0d.call(this, _0x13cdda, _0x41386a));
				return _0x29a16e(_0x5f49cb, _0x13cdda), _0x5f49cb.throttledHandleMouseMove = _0x4dd2a3(_0x5957d4(_0x5f49cb, _0x5f49cb.handleMouseMove), 25), _0x5f49cb.on('mousedown', _0x5f49cb.handleMouseDown), _0x5f49cb.on('touchstart', _0x5f49cb.handleMouseDown), _0x5f49cb.on(_0x5f49cb.volumeBar, [
					'focus',
					'slideractive'
				], function () {
					_0x5f49cb.volumeBar.addClass('vjs-slider-active');
					_0x5f49cb.addClass('vjs-slider-active');
					_0x5f49cb.trigger('slideractive');
				}), _0x5f49cb.on(_0x5f49cb.volumeBar, [
					'blur',
					'sliderinactive'
				], function () {
					_0x5f49cb.volumeBar.removeClass('vjs-slider-active');
					_0x5f49cb.removeClass('vjs-slider-active');
					_0x5f49cb.trigger('sliderinactive');
				}), _0x5f49cb;
			}
			return _0x43308e.prototype.createEl = function _0x49fe09() {
				var _0x127700 = 'vjs-volume-horizontal';
				if (this.options_.vertical) {
					_0x127700 = 'vjs-volume-vertical';
				}
				return _0xb67e0d.prototype.createEl.call(this, 'div', { 'className': 'vjs-volume-control vjs-control ' + _0x127700 });
			}, _0x43308e.prototype.handleMouseDown = function _0x23213d(_0x522811) {
				var _0x57abee = this.el_.ownerDocument;
				this.on(_0x57abee, 'mousemove', this.throttledHandleMouseMove);
				this.on(_0x57abee, 'touchmove', this.throttledHandleMouseMove);
				this.on(_0x57abee, 'mouseup', this.handleMouseUp);
				this.on(_0x57abee, 'touchend', this.handleMouseUp);
			}, _0x43308e.prototype.handleMouseUp = function _0x6197ea(_0x41d114) {
				var _0x50331b = this.el_.ownerDocument;
				this.off(_0x50331b, 'mousemove', this.throttledHandleMouseMove);
				this.off(_0x50331b, 'touchmove', this.throttledHandleMouseMove);
				this.off(_0x50331b, 'mouseup', this.handleMouseUp);
				this.off(_0x50331b, 'touchend', this.handleMouseUp);
			}, _0x43308e.prototype.handleMouseMove = function _0x5e2266(_0xe783f5) {
				this.volumeBar.handleMouseMove(_0xe783f5);
			}, _0x43308e;
		}(_0x2ab435)), _0x29c248 = (_0x58a122.prototype.options_ = { 'children': ['volumeBar'] }, _0x2ab435.registerComponent('VolumeControl', _0x58a122), function _0x3420b6(_0x80a362, _0x31332e) {
			if (_0x31332e.tech_ && !_0x31332e.tech_.featuresMuteControl) {
				_0x80a362.addClass('vjs-hidden');
			}
			_0x80a362.on(_0x31332e, 'loadstart', function () {
				if (!_0x31332e.tech_.featuresMuteControl) {
					_0x80a362.addClass('vjs-hidden');
				} else {
					_0x80a362.removeClass('vjs-hidden');
				}
			});
		}), _0x55dff1 = function (_0x10ded5) {
			_0x2d47a2(_0x25538c, _0x10ded5);
			function _0x25538c(_0x14cbd2, _0x5a9a4c) {
				_0x7a6cc0(this, _0x25538c);
				var _0x120246 = _0x1ab72f(this, _0x10ded5.call(this, _0x14cbd2, _0x5a9a4c));
				return _0x29c248(_0x120246, _0x14cbd2), _0x120246.on(_0x14cbd2, [
					'loadstart',
					'volumechange'
				], _0x120246.update), _0x120246;
			}
			return _0x25538c.prototype.buildCSSClass = function _0x2b6f15() {
				return 'vjs-mute-control ' + _0x10ded5.prototype.buildCSSClass.call(this);
			}, _0x25538c.prototype.handleClick = function _0x1006a4(_0x398c7e) {
				var _0x1423c5 = this.player_.volume(), _0x2102d2 = this.player_.lastVolume_();
				if (_0x1423c5 === 0) {
					var _0x6edff0 = _0x2102d2 < 0.1 ? 0.1 : _0x2102d2;
					this.player_.volume(_0x6edff0);
					this.player_.muted(false);
				} else {
					this.player_.muted(this.player_.muted() ? false : true);
				}
			}, _0x25538c.prototype.update = function _0x118d1c(_0x2f200f) {
				this.updateIcon_();
				this.updateControlText_();
			}, _0x25538c.prototype.updateIcon_ = function _0x4963f9() {
				var _0xa499a4 = this.player_.volume(), _0x52d670 = 3;
				if (_0x31e406) {
					this.player_.muted(this.player_.tech_.el_.muted);
				}
				if (_0xa499a4 === 0 || this.player_.muted()) {
					_0x52d670 = 0;
				} else {
					if (_0xa499a4 < 0.33) {
						_0x52d670 = 1;
					} else {
						if (_0xa499a4 < 0.67) {
							_0x52d670 = 2;
						}
					}
				}
				for (var _0x59228c = 0; _0x59228c < 4; _0x59228c++) {
					_0x12a354(this.el_, 'vjs-vol-' + _0x59228c);
				}
				_0x58fceb(this.el_, 'vjs-vol-' + _0x52d670);
			}, _0x25538c.prototype.updateControlText_ = function _0x30ab72() {
				var _0x29b4da = this.player_.muted() || this.player_.volume() === 0, _0x2befb3 = _0x29b4da ? 'Unmute' : 'Mute';
				if (this.controlText() !== _0x2befb3) {
					this.controlText(_0x2befb3);
				}
			}, _0x25538c;
		}(_0x754cd1), _0x30e861 = (_0x55dff1.prototype.controlText_ = 'Mute', _0x2ab435.registerComponent('MuteToggle', _0x55dff1), function (_0x533f8d) {
			_0x2d47a2(_0x5622bb, _0x533f8d);
			function _0x5622bb(_0x415773) {
				var _0xdb1296 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				_0x7a6cc0(this, _0x5622bb);
				if (typeof _0xdb1296.inline !== 'undefined') {
					_0xdb1296.inline = _0xdb1296.inline;
				} else {
					_0xdb1296.inline = true;
				}
				(typeof _0xdb1296.volumeControl === 'undefined' || _0x4307a4(_0xdb1296.volumeControl)) && (_0xdb1296.volumeControl = _0xdb1296.volumeControl || {}, _0xdb1296.volumeControl.vertical = !_0xdb1296.inline);
				var _0x16bae2 = _0x1ab72f(this, _0x533f8d.call(this, _0x415773, _0xdb1296));
				return _0x16bae2.on(_0x415773, ['loadstart'], _0x16bae2.volumePanelState_), _0x16bae2.on(_0x16bae2.volumeControl, ['slideractive'], _0x16bae2.sliderActive_), _0x16bae2.on(_0x16bae2.volumeControl, ['sliderinactive'], _0x16bae2.sliderInactive_), _0x16bae2;
			}
			return _0x5622bb.prototype.sliderActive_ = function _0x4fd11f() {
				this.addClass('vjs-slider-active');
			}, _0x5622bb.prototype.sliderInactive_ = function _0x5be6ce() {
				this.removeClass('vjs-slider-active');
			}, _0x5622bb.prototype.volumePanelState_ = function _0x3f876b() {
				if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {
					this.addClass('vjs-hidden');
				}
				if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {
					this.addClass('vjs-mute-toggle-only');
				}
			}, _0x5622bb.prototype.createEl = function _0x538e5a() {
				var _0x9f8626 = 'vjs-volume-panel-horizontal';
				if (!this.options_.inline) {
					_0x9f8626 = 'vjs-volume-panel-vertical';
				}
				return _0x533f8d.prototype.createEl.call(this, 'div', { 'className': 'vjs-volume-panel vjs-control ' + _0x9f8626 });
			}, _0x5622bb;
		}(_0x2ab435)), _0x4738ee = (_0x30e861.prototype.options_ = {
			'children': [
				'muteToggle',
				'volumeControl'
			]
		}, _0x2ab435.registerComponent('VolumePanel', _0x30e861), function (_0x4b9928) {
			_0x2d47a2(_0x4e1bac, _0x4b9928);
			function _0x4e1bac(_0x502790, _0x15ca1d) {
				_0x7a6cc0(this, _0x4e1bac);
				var _0x1e42b2 = _0x1ab72f(this, _0x4b9928.call(this, _0x502790, _0x15ca1d));
				if (_0x15ca1d) {
					_0x1e42b2.menuButton_ = _0x15ca1d.menuButton;
				}
				return _0x1e42b2.focusedChild_ = -1, _0x1e42b2.on('keydown', _0x1e42b2.handleKeyPress), _0x1e42b2;
			}
			return _0x4e1bac.prototype.addItem = function _0x197db3(_0x326ab1) {
				this.addChild(_0x326ab1);
				_0x326ab1.on('click', _0x5957d4(this, function (_0x454caf) {
					if (this.menuButton_) {
						this.menuButton_.unpressButton();
						if (_0x326ab1.name() !== 'CaptionSettingsMenuItem') {
							this.menuButton_.focus();
						}
					}
				}));
			}, _0x4e1bac.prototype.createEl = function _0x52132a() {
				var _0x4aaa01 = this.options_.contentElType || 'ul';
				this.contentEl_ = _0x1a554c(_0x4aaa01, { 'className': 'vjs-menu-content' });
				this.contentEl_.setAttribute('role', 'menu');
				var _0x23dc24 = _0x4b9928.prototype.createEl.call(this, 'div', {
					'append': this.contentEl_,
					'className': 'vjs-menu'
				});
				return _0x23dc24.appendChild(this.contentEl_), _0x53fd98(_0x23dc24, 'click', function (_0x281496) {
					_0x281496.preventDefault();
					_0x281496.stopImmediatePropagation();
				}), _0x23dc24;
			}, _0x4e1bac.prototype.dispose = function _0x1dcb93() {
				this.contentEl_ = null;
				_0x4b9928.prototype.dispose.call(this);
			}, _0x4e1bac.prototype.handleKeyPress = function _0x424819(_0x56a2fa) {
				if (_0x56a2fa.which === 37 || _0x56a2fa.which === 40) {
					_0x56a2fa.preventDefault();
					this.stepForward();
				} else {
					(_0x56a2fa.which === 38 || _0x56a2fa.which === 39) && (_0x56a2fa.preventDefault(), this.stepBack());
				}
			}, _0x4e1bac.prototype.stepForward = function _0x503637() {
				var _0x5c0e68 = 0;
				if (this.focusedChild_ !== undefined) {
					_0x5c0e68 = this.focusedChild_ + 1;
				}
				this.focus(_0x5c0e68);
			}, _0x4e1bac.prototype.stepBack = function _0x9ffcb2() {
				var _0x291200 = 0;
				if (this.focusedChild_ !== undefined) {
					_0x291200 = this.focusedChild_ - 1;
				}
				this.focus(_0x291200);
			}, _0x4e1bac.prototype.focus = function _0x33b21e() {
				var _0x1db9f5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0, _0x2faacf = this.children().slice(), _0x57feca = _0x2faacf.length && _0x2faacf[0].className && /vjs-menu-title/.test(_0x2faacf[0].className);
				if (_0x57feca) {
					_0x2faacf.shift();
				}
				if (_0x2faacf.length > 0) {
					if (_0x1db9f5 < 0) {
						_0x1db9f5 = 0;
					} else {
						if (_0x1db9f5 >= _0x2faacf.length) {
							_0x1db9f5 = _0x2faacf.length - 1;
						}
					}
					this.focusedChild_ = _0x1db9f5;
					_0x2faacf[_0x1db9f5].el_.focus();
				}
			}, _0x4e1bac;
		}(_0x2ab435)), _0x4e50fd = (_0x2ab435.registerComponent('Menu', _0x4738ee), function (_0x3edabb) {
			_0x2d47a2(_0x4b852e, _0x3edabb);
			function _0x4b852e(_0xd063b7) {
				var _0x4c5d33 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				_0x7a6cc0(this, _0x4b852e);
				var _0x290c96 = _0x1ab72f(this, _0x3edabb.call(this, _0xd063b7, _0x4c5d33));
				_0x290c96.menuButton_ = new _0x754cd1(_0xd063b7, _0x4c5d33);
				_0x290c96.menuButton_.controlText(_0x290c96.controlText_);
				_0x290c96.menuButton_.el_.setAttribute('aria-haspopup', 'true');
				var _0x5cf436 = _0x754cd1.prototype.buildCSSClass();
				return _0x290c96.menuButton_.el_.className = _0x290c96.buildCSSClass() + ' ' + _0x5cf436, _0x290c96.menuButton_.removeClass('vjs-control'), _0x290c96.addChild(_0x290c96.menuButton_), _0x290c96.update(), _0x290c96.enabled_ = true, _0x290c96.on(_0x290c96.menuButton_, 'tap', _0x290c96.handleClick), _0x290c96.on(_0x290c96.menuButton_, 'click', _0x290c96.handleClick), _0x290c96.on(_0x290c96.menuButton_, 'focus', _0x290c96.handleFocus), _0x290c96.on(_0x290c96.menuButton_, 'blur', _0x290c96.handleBlur), _0x290c96.on('keydown', _0x290c96.handleSubmenuKeyPress), _0x290c96;
			}
			return _0x4b852e.prototype.update = function _0x57a16e() {
				var _0x1a60c0 = this.createMenu();
				this.menu && (this.menu.dispose(), this.removeChild(this.menu));
				this.menu = _0x1a60c0;
				this.addChild(_0x1a60c0);
				this.buttonPressed_ = false;
				this.menuButton_.el_.setAttribute('aria-expanded', 'false');
				if (this.items && this.items.length <= this.hideThreshold_) {
					this.hide();
				} else {
					this.show();
				}
			}, _0x4b852e.prototype.createMenu = function _0x15ce0a() {
				var _0x489455 = new _0x4738ee(this.player_, { 'menuButton': this });
				this.hideThreshold_ = 0;
				if (this.options_.title) {
					var _0x4f536f = _0x1a554c('li', {
						'className': 'vjs-menu-title',
						'innerHTML': _0x363c2b(this.options_.title),
						'tabIndex': -1
					});
					this.hideThreshold_ += 1;
					_0x489455.children_.unshift(_0x4f536f);
					_0x55a4e6(_0x4f536f, _0x489455.contentEl());
				}
				this.items = this.createItems();
				if (this.items) {
					for (var _0x3f751b = 0; _0x3f751b < this.items.length; _0x3f751b++) {
						_0x489455.addItem(this.items[_0x3f751b]);
					}
				}
				return _0x489455;
			}, _0x4b852e.prototype.createItems = function _0x3cf55c() {
			}, _0x4b852e.prototype.createEl = function _0x216b79() {
				return _0x3edabb.prototype.createEl.call(this, 'div', { 'className': this.buildWrapperCSSClass() }, {});
			}, _0x4b852e.prototype.buildWrapperCSSClass = function _0xebe931() {
				var _0x535c26 = 'vjs-menu-button';
				if (this.options_.inline === true) {
					_0x535c26 += '-inline';
				} else {
					_0x535c26 += '-popup';
				}
				var _0x46b4a3 = _0x754cd1.prototype.buildCSSClass();
				return 'vjs-menu-button ' + _0x535c26 + ' ' + _0x46b4a3 + ' ' + _0x3edabb.prototype.buildCSSClass.call(this);
			}, _0x4b852e.prototype.buildCSSClass = function _0x666998() {
				var _0x428049 = 'vjs-menu-button';
				if (this.options_.inline === true) {
					_0x428049 += '-inline';
				} else {
					_0x428049 += '-popup';
				}
				return 'vjs-menu-button ' + _0x428049 + ' ' + _0x3edabb.prototype.buildCSSClass.call(this);
			}, _0x4b852e.prototype.controlText = function _0x3d394c(_0x2657da) {
				var _0x10b9d1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();
				return this.menuButton_.controlText(_0x2657da, _0x10b9d1);
			}, _0x4b852e.prototype.handleClick = function _0x4b2a62(_0x3332df) {
				this.one(this.menu.contentEl(), 'mouseleave', _0x5957d4(this, function (_0x19bc14) {
					this.unpressButton();
					this.el_.blur();
				}));
				if (this.buttonPressed_) {
					this.unpressButton();
				} else {
					this.pressButton();
				}
			}, _0x4b852e.prototype.focus = function _0x5847f9() {
				this.menuButton_.focus();
			}, _0x4b852e.prototype.blur = function _0x5eeba7() {
				this.menuButton_.blur();
			}, _0x4b852e.prototype.handleFocus = function _0x160e96() {
				_0x53fd98(_0x19e198, 'keydown', _0x5957d4(this, this.handleKeyPress));
			}, _0x4b852e.prototype.handleBlur = function _0x1cbb65() {
				_0x85dba1(_0x19e198, 'keydown', _0x5957d4(this, this.handleKeyPress));
			}, _0x4b852e.prototype.handleKeyPress = function _0x23d002(_0x2c3d3b) {
				if (_0x2c3d3b.which === 27 || _0x2c3d3b.which === 9) {
					if (this.buttonPressed_) {
						this.unpressButton();
					}
					if (_0x2c3d3b.which !== 9) {
						_0x2c3d3b.preventDefault();
						this.menuButton_.el_.focus();
					}
				} else {
					if (_0x2c3d3b.which === 38 || _0x2c3d3b.which === 40) {
						!this.buttonPressed_ && (this.pressButton(), _0x2c3d3b.preventDefault());
					}
				}
			}, _0x4b852e.prototype.handleSubmenuKeyPress = function _0x141954(_0x47a509) {
				if (_0x47a509.which === 27 || _0x47a509.which === 9) {
					if (this.buttonPressed_) {
						this.unpressButton();
					}
					if (_0x47a509.which !== 9) {
						_0x47a509.preventDefault();
						this.menuButton_.el_.focus();
					}
				}
			}, _0x4b852e.prototype.pressButton = function _0xe31f08() {
				if (this.enabled_) {
					this.buttonPressed_ = true;
					this.menu.lockShowing();
					this.menuButton_.el_.setAttribute('aria-expanded', 'true');
					if (_0x31e406 && _0x595a3f()) {
						return;
					}
					this.menu.focus();
				}
			}, _0x4b852e.prototype.unpressButton = function _0x1fc601() {
				this.enabled_ && (this.buttonPressed_ = false, this.menu.unlockShowing(), this.menuButton_.el_.setAttribute('aria-expanded', 'false'));
			}, _0x4b852e.prototype.disable = function _0x24fba5() {
				this.unpressButton();
				this.enabled_ = false;
				this.addClass('vjs-disabled');
				this.menuButton_.disable();
			}, _0x4b852e.prototype.enable = function _0x191101() {
				this.enabled_ = true;
				this.removeClass('vjs-disabled');
				this.menuButton_.enable();
			}, _0x4b852e;
		}(_0x2ab435)), _0x4059db = (_0x2ab435.registerComponent('MenuButton', _0x4e50fd), function (_0x4f0c46) {
			_0x2d47a2(_0xdd8f58, _0x4f0c46);
			function _0xdd8f58(_0x444772, _0x5d85fc) {
				_0x7a6cc0(this, _0xdd8f58);
				var _0x517ca9 = _0x5d85fc.tracks, _0x10a954 = _0x1ab72f(this, _0x4f0c46.call(this, _0x444772, _0x5d85fc));
				if (_0x10a954.items.length <= 1) {
					_0x10a954.hide();
				}
				if (!_0x517ca9) {
					return _0x1ab72f(_0x10a954);
				}
				var _0x53e737 = _0x5957d4(_0x10a954, _0x10a954.update);
				return _0x517ca9.addEventListener('removetrack', _0x53e737), _0x517ca9.addEventListener('addtrack', _0x53e737), _0x10a954.player_.on('ready', _0x53e737), _0x10a954.player_.on('dispose', function () {
					_0x517ca9.removeEventListener('removetrack', _0x53e737);
					_0x517ca9.removeEventListener('addtrack', _0x53e737);
				}), _0x10a954;
			}
			return _0xdd8f58;
		}(_0x4e50fd)), _0x5e4aea = (_0x2ab435.registerComponent('TrackButton', _0x4059db), function (_0x126c96) {
			_0x2d47a2(_0x328f6a, _0x126c96);
			function _0x328f6a(_0x3a710c, _0x35f42f) {
				_0x7a6cc0(this, _0x328f6a);
				var _0x296eb2 = _0x1ab72f(this, _0x126c96.call(this, _0x3a710c, _0x35f42f));
				_0x296eb2.selectable = _0x35f42f.selectable;
				_0x296eb2.isSelected_ = _0x35f42f.selected || false;
				_0x296eb2.multiSelectable = _0x35f42f.multiSelectable;
				_0x296eb2.selected(_0x296eb2.isSelected_);
				if (_0x296eb2.selectable) {
					if (_0x296eb2.multiSelectable) {
						_0x296eb2.el_.setAttribute('role', 'menuitemcheckbox');
					} else {
						_0x296eb2.el_.setAttribute('role', 'menuitemradio');
					}
				} else {
					_0x296eb2.el_.setAttribute('role', 'menuitem');
				}
				return _0x296eb2;
			}
			return _0x328f6a.prototype.createEl = function _0xb390be(_0x30621f, _0xeb80b5, _0x2b8aaf) {
				return this.nonIconControl = true, _0x126c96.prototype.createEl.call(this, 'li', _0x2e82a9({
					'className': 'vjs-menu-item',
					'innerHTML': '<span class="vjs-menu-item-text">' + this.localize(this.options_.label) + '</span>',
					'tabIndex': -1
				}, _0xeb80b5), _0x2b8aaf);
			}, _0x328f6a.prototype.handleClick = function _0x1a52bd(_0x4d62f4) {
				this.selected(true);
			}, _0x328f6a.prototype.selected = function _0x3d8641(_0x1bad6f) {
				if (this.selectable) {
					_0x1bad6f ? (this.addClass('vjs-selected'), this.el_.setAttribute('aria-checked', 'true'), this.controlText(', selected'), this.isSelected_ = true) : (this.removeClass('vjs-selected'), this.el_.setAttribute('aria-checked', 'false'), this.controlText(''), this.isSelected_ = false);
				}
			}, _0x328f6a;
		}(_0x1c5762)), _0x5993ab = (_0x2ab435.registerComponent('MenuItem', _0x5e4aea), function (_0x91b902) {
			_0x2d47a2(_0x3298a6, _0x91b902);
			function _0x3298a6(_0x382aa0, _0x480d0b) {
				_0x7a6cc0(this, _0x3298a6);
				var _0x1bea55 = _0x480d0b.track, _0x2e53de = _0x382aa0.textTracks();
				_0x480d0b.label = _0x1bea55.label || _0x1bea55.language || 'Unknown';
				_0x480d0b.selected = _0x1bea55.mode === 'showing';
				var _0x1d88f6 = _0x1ab72f(this, _0x91b902.call(this, _0x382aa0, _0x480d0b));
				_0x1d88f6.track = _0x1bea55;
				var _0x643c25 = function _0x3a81c3() {
					for (var _0xc65333 = arguments.length, _0x4cb817 = Array(_0xc65333), _0x210f13 = 0; _0x210f13 < _0xc65333; _0x210f13++) {
						_0x4cb817[_0x210f13] = arguments[_0x210f13];
					}
					_0x1d88f6.handleTracksChange.apply(_0x1d88f6, _0x4cb817);
				}, _0x52edf2 = function _0x28b5f1() {
					for (var _0x250922 = arguments.length, _0x207a95 = Array(_0x250922), _0x419c05 = 0; _0x419c05 < _0x250922; _0x419c05++) {
						_0x207a95[_0x419c05] = arguments[_0x419c05];
					}
					_0x1d88f6.handleSelectedLanguageChange.apply(_0x1d88f6, _0x207a95);
				};
				_0x382aa0.on([
					'loadstart',
					'texttrackchange'
				], _0x643c25);
				_0x2e53de.addEventListener('change', _0x643c25);
				_0x2e53de.addEventListener('selectedlanguagechange', _0x52edf2);
				_0x1d88f6.on('dispose', function () {
					_0x382aa0.off([
						'loadstart',
						'texttrackchange'
					], _0x643c25);
					_0x2e53de.removeEventListener('change', _0x643c25);
					_0x2e53de.removeEventListener('selectedlanguagechange', _0x52edf2);
				});
				if (_0x2e53de.onchange === undefined) {
					var _0x2158bd = void 0;
					_0x1d88f6.on([
						'tap',
						'click'
					], function () {
						if (_0x413e18(_0x504cd5.Event) !== 'object') {
							try {
								_0x2158bd = new _0x504cd5.Event('change');
							} catch (_0x12fe15) {
							}
						}
						!_0x2158bd && (_0x2158bd = _0x19e198.createEvent('Event'), _0x2158bd.initEvent('change', true, true));
						_0x2e53de.dispatchEvent(_0x2158bd);
					});
				}
				return _0x1d88f6.handleTracksChange(), _0x1d88f6;
			}
			return _0x3298a6.prototype.handleClick = function _0x70a20b(_0x11a438) {
				var _0x5ebc01 = this.track.kind, _0x1aa88f = this.track.kinds, _0xc3afff = this.player_.textTracks();
				if (!_0x1aa88f) {
					_0x1aa88f = [_0x5ebc01];
				}
				_0x91b902.prototype.handleClick.call(this, _0x11a438);
				if (!_0xc3afff) {
					return;
				}
				for (var _0x1ec6b9 = 0; _0x1ec6b9 < _0xc3afff.length; _0x1ec6b9++) {
					var _0x2437df = _0xc3afff[_0x1ec6b9];
					if (_0x2437df === this.track && _0x1aa88f.indexOf(_0x2437df.kind) > -1) {
						if (_0x2437df.mode !== 'showing') {
							_0x2437df.mode = 'showing';
						}
					} else {
						if (_0x2437df.mode !== 'disabled') {
							_0x2437df.mode = 'disabled';
						}
					}
				}
			}, _0x3298a6.prototype.handleTracksChange = function _0x587299(_0x3201ff) {
				var _0x3ee25c = this.track.mode === 'showing';
				if (_0x3ee25c !== this.isSelected_) {
					this.selected(_0x3ee25c);
				}
			}, _0x3298a6.prototype.handleSelectedLanguageChange = function _0x11b235(_0xe1d718) {
				if (this.track.mode === 'showing') {
					var _0x138b03 = this.player_.cache_.selectedLanguage;
					if (_0x138b03 && _0x138b03.enabled && _0x138b03.language === this.track.language && _0x138b03.kind !== this.track.kind) {
						return;
					}
					this.player_.cache_.selectedLanguage = {
						'enabled': true,
						'language': this.track.language,
						'kind': this.track.kind
					};
				}
			}, _0x3298a6.prototype.dispose = function _0x2e340d() {
				this.track = null;
				_0x91b902.prototype.dispose.call(this);
			}, _0x3298a6;
		}(_0x5e4aea)), _0xf17974 = (_0x2ab435.registerComponent('TextTrackMenuItem', _0x5993ab), function (_0xc7ca55) {
			_0x2d47a2(_0xacf805, _0xc7ca55);
			function _0xacf805(_0x3f5cbe, _0x59144b) {
				_0x7a6cc0(this, _0xacf805);
				_0x59144b.track = {
					'player': _0x3f5cbe,
					'kind': _0x59144b.kind,
					'kinds': _0x59144b.kinds,
					'default': false,
					'mode': 'disabled'
				};
				if (!_0x59144b.kinds) {
					_0x59144b.kinds = [_0x59144b.kind];
				}
				if (_0x59144b.label) {
					_0x59144b.track.label = _0x59144b.label;
				} else {
					_0x59144b.track.label = _0x59144b.kinds.join(' and ') + ' off';
				}
				return _0x59144b.selectable = true, _0x59144b.multiSelectable = false, _0x1ab72f(this, _0xc7ca55.call(this, _0x3f5cbe, _0x59144b));
			}
			return _0xacf805.prototype.handleTracksChange = function _0x571d60(_0x1f76f9) {
				var _0x4a04bf = this.player().textTracks(), _0x3c8565 = true;
				for (var _0x4d03f9 = 0, _0x511825 = _0x4a04bf.length; _0x4d03f9 < _0x511825; _0x4d03f9++) {
					var _0x37d30c = _0x4a04bf[_0x4d03f9];
					if (this.options_.kinds.indexOf(_0x37d30c.kind) > -1 && _0x37d30c.mode === 'showing') {
						_0x3c8565 = false;
						break;
					}
				}
				if (_0x3c8565 !== this.isSelected_) {
					this.selected(_0x3c8565);
				}
			}, _0xacf805.prototype.handleSelectedLanguageChange = function _0x44ced8(_0x1b3159) {
				var _0x3587aa = this.player().textTracks(), _0x15227b = true;
				for (var _0xf0a122 = 0, _0x16a3a5 = _0x3587aa.length; _0xf0a122 < _0x16a3a5; _0xf0a122++) {
					var _0x4bdaaf = _0x3587aa[_0xf0a122];
					if ([
						'captions',
						'descriptions',
						'subtitles'
					].indexOf(_0x4bdaaf.kind) > -1 && _0x4bdaaf.mode === 'showing') {
						_0x15227b = false;
						break;
					}
				}
				if (_0x15227b) {
					this.player_.cache_.selectedLanguage = { 'enabled': false };
				}
			}, _0xacf805;
		}(_0x5993ab)), _0x4ee111 = (_0x2ab435.registerComponent('OffTextTrackMenuItem', _0xf17974), function (_0x2d7fa6) {
			_0x2d47a2(_0x580892, _0x2d7fa6);
			function _0x580892(_0x42ed10) {
				var _0x5b8d7c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return _0x7a6cc0(this, _0x580892), _0x5b8d7c.tracks = _0x42ed10.textTracks(), _0x1ab72f(this, _0x2d7fa6.call(this, _0x42ed10, _0x5b8d7c));
			}
			return _0x580892.prototype.createItems = function _0x56c776() {
				var _0xa794ac = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [], _0x1e2f07 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _0x5993ab, _0x4d1f7a = void 0;
				if (this.label_) {
					_0x4d1f7a = this.label_ + ' off';
				}
				_0xa794ac.push(new _0xf17974(this.player_, {
					'kinds': this.kinds_,
					'kind': this.kind_,
					'label': _0x4d1f7a
				}));
				this.hideThreshold_ += 1;
				var _0x5338f8 = this.player_.textTracks();
				if (!Array.isArray(this.kinds_)) {
					this.kinds_ = [this.kind_];
				}
				for (var _0x34758a = 0; _0x34758a < _0x5338f8.length; _0x34758a++) {
					var _0x2b8fdb = _0x5338f8[_0x34758a];
					if (this.kinds_.indexOf(_0x2b8fdb.kind) > -1) {
						var _0x4ea2ce = new _0x1e2f07(this.player_, {
							'track': _0x2b8fdb,
							'selectable': true,
							'multiSelectable': false
						});
						_0x4ea2ce.addClass('vjs-' + _0x2b8fdb.kind + '-menu-item');
						_0xa794ac.push(_0x4ea2ce);
					}
				}
				return _0xa794ac;
			}, _0x580892;
		}(_0x4059db)), _0x20a809 = (_0x2ab435.registerComponent('TextTrackButton', _0x4ee111), function (_0x3a98f5) {
			_0x2d47a2(_0x4f5b4a, _0x3a98f5);
			function _0x4f5b4a(_0x4bb89a, _0x172834) {
				_0x7a6cc0(this, _0x4f5b4a);
				var _0x4a848e = _0x172834.track, _0x10f855 = _0x172834.cue, _0x2f8042 = _0x4bb89a.currentTime();
				_0x172834.selectable = true;
				_0x172834.multiSelectable = false;
				_0x172834.label = _0x10f855.text;
				_0x172834.selected = _0x10f855.startTime <= _0x2f8042 && _0x2f8042 < _0x10f855.endTime;
				var _0x40043b = _0x1ab72f(this, _0x3a98f5.call(this, _0x4bb89a, _0x172834));
				return _0x40043b.track = _0x4a848e, _0x40043b.cue = _0x10f855, _0x4a848e.addEventListener('cuechange', _0x5957d4(_0x40043b, _0x40043b.update)), _0x40043b;
			}
			return _0x4f5b4a.prototype.handleClick = function _0x5e7259(_0x127e59) {
				_0x3a98f5.prototype.handleClick.call(this);
				this.player_.currentTime(this.cue.startTime);
				this.update(this.cue.startTime);
			}, _0x4f5b4a.prototype.update = function _0x11bfe4(_0x43c5ca) {
				var _0x2e37b5 = this.cue, _0x2f9b97 = this.player_.currentTime();
				this.selected(_0x2e37b5.startTime <= _0x2f9b97 && _0x2f9b97 < _0x2e37b5.endTime);
			}, _0x4f5b4a;
		}(_0x5e4aea)), _0x2bca05 = (_0x2ab435.registerComponent('ChaptersTrackMenuItem', _0x20a809), function (_0x382b42) {
			_0x2d47a2(_0x1b5246, _0x382b42);
			function _0x1b5246(_0x2a6212, _0x14a40c, _0x1a164c) {
				return _0x7a6cc0(this, _0x1b5246), _0x1ab72f(this, _0x382b42.call(this, _0x2a6212, _0x14a40c, _0x1a164c));
			}
			return _0x1b5246.prototype.buildCSSClass = function _0x5007e1() {
				return 'vjs-chapters-button ' + _0x382b42.prototype.buildCSSClass.call(this);
			}, _0x1b5246.prototype.buildWrapperCSSClass = function _0x2fccf9() {
				return 'vjs-chapters-button ' + _0x382b42.prototype.buildWrapperCSSClass.call(this);
			}, _0x1b5246.prototype.update = function _0x40a494(_0x2f7419) {
				if (!this.track_ || _0x2f7419 && (_0x2f7419.type === 'addtrack' || _0x2f7419.type === 'removetrack')) {
					this.setTrack(this.findChaptersTrack());
				}
				_0x382b42.prototype.update.call(this);
			}, _0x1b5246.prototype.setTrack = function _0x538f2d(_0x45fc7d) {
				if (this.track_ === _0x45fc7d) {
					return;
				}
				if (!this.updateHandler_) {
					this.updateHandler_ = this.update.bind(this);
				}
				if (this.track_) {
					var _0x25d0b5 = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
					if (_0x25d0b5) {
						_0x25d0b5.removeEventListener('load', this.updateHandler_);
					}
					this.track_ = null;
				}
				this.track_ = _0x45fc7d;
				if (this.track_) {
					this.track_.mode = 'hidden';
					var _0x23dc39 = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
					if (_0x23dc39) {
						_0x23dc39.addEventListener('load', this.updateHandler_);
					}
				}
			}, _0x1b5246.prototype.findChaptersTrack = function _0xa66c9d() {
				var _0x486242 = this.player_.textTracks() || [];
				for (var _0x43fc4a = _0x486242.length - 1; _0x43fc4a >= 0; _0x43fc4a--) {
					var _0x42c36b = _0x486242[_0x43fc4a];
					if (_0x42c36b.kind === this.kind_) {
						return _0x42c36b;
					}
				}
			}, _0x1b5246.prototype.getMenuCaption = function _0x5134fb() {
				if (this.track_ && this.track_.label) {
					return this.track_.label;
				}
				return this.localize(_0x363c2b(this.kind_));
			}, _0x1b5246.prototype.createMenu = function _0x548945() {
				return this.options_.title = this.getMenuCaption(), _0x382b42.prototype.createMenu.call(this);
			}, _0x1b5246.prototype.createItems = function _0x3f2d5a() {
				var _0x27b0d1 = [];
				if (!this.track_) {
					return _0x27b0d1;
				}
				var _0x3b9951 = this.track_.cues;
				if (!_0x3b9951) {
					return _0x27b0d1;
				}
				for (var _0x2dcbf2 = 0, _0x2ccabb = _0x3b9951.length; _0x2dcbf2 < _0x2ccabb; _0x2dcbf2++) {
					var _0x1be076 = _0x3b9951[_0x2dcbf2], _0x544329 = new _0x20a809(this.player_, {
						'track': this.track_,
						'cue': _0x1be076
					});
					_0x27b0d1.push(_0x544329);
				}
				return _0x27b0d1;
			}, _0x1b5246;
		}(_0x4ee111)), _0x638de = (_0x2bca05.prototype.kind_ = 'chapters', _0x2bca05.prototype.controlText_ = 'Chapters', _0x2ab435.registerComponent('ChaptersButton', _0x2bca05), function (_0x5ac0b1) {
			_0x2d47a2(_0x1cf867, _0x5ac0b1);
			function _0x1cf867(_0x54ac96, _0x460af7, _0x2709e5) {
				_0x7a6cc0(this, _0x1cf867);
				var _0x149b1a = _0x1ab72f(this, _0x5ac0b1.call(this, _0x54ac96, _0x460af7, _0x2709e5)), _0x1c3144 = _0x54ac96.textTracks(), _0x45091f = _0x5957d4(_0x149b1a, _0x149b1a.handleTracksChange);
				return _0x1c3144.addEventListener('change', _0x45091f), _0x149b1a.on('dispose', function () {
					_0x1c3144.removeEventListener('change', _0x45091f);
				}), _0x149b1a;
			}
			return _0x1cf867.prototype.handleTracksChange = function _0x1b1df8(_0x53eefc) {
				var _0x2a341e = this.player().textTracks(), _0x4d1c63 = false;
				for (var _0x4dc649 = 0, _0x2b768d = _0x2a341e.length; _0x4dc649 < _0x2b768d; _0x4dc649++) {
					var _0x183faa = _0x2a341e[_0x4dc649];
					if (_0x183faa.kind !== this.kind_ && _0x183faa.mode === 'showing') {
						_0x4d1c63 = true;
						break;
					}
				}
				if (_0x4d1c63) {
					this.disable();
				} else {
					this.enable();
				}
			}, _0x1cf867.prototype.buildCSSClass = function _0x440db8() {
				return 'vjs-descriptions-button ' + _0x5ac0b1.prototype.buildCSSClass.call(this);
			}, _0x1cf867.prototype.buildWrapperCSSClass = function _0x15fcf5() {
				return 'vjs-descriptions-button ' + _0x5ac0b1.prototype.buildWrapperCSSClass.call(this);
			}, _0x1cf867;
		}(_0x4ee111)), _0x5367ba = (_0x638de.prototype.kind_ = 'descriptions', _0x638de.prototype.controlText_ = 'Descriptions', _0x2ab435.registerComponent('DescriptionsButton', _0x638de), function (_0x1180f9) {
			_0x2d47a2(_0x39e0f8, _0x1180f9);
			function _0x39e0f8(_0x437240, _0xfa3498, _0x482255) {
				return _0x7a6cc0(this, _0x39e0f8), _0x1ab72f(this, _0x1180f9.call(this, _0x437240, _0xfa3498, _0x482255));
			}
			return _0x39e0f8.prototype.buildCSSClass = function _0x3cc238() {
				return 'vjs-subtitles-button ' + _0x1180f9.prototype.buildCSSClass.call(this);
			}, _0x39e0f8.prototype.buildWrapperCSSClass = function _0x99b447() {
				return 'vjs-subtitles-button ' + _0x1180f9.prototype.buildWrapperCSSClass.call(this);
			}, _0x39e0f8;
		}(_0x4ee111)), _0xa27535 = (_0x5367ba.prototype.kind_ = 'subtitles', _0x5367ba.prototype.controlText_ = 'Subtitles', _0x2ab435.registerComponent('SubtitlesButton', _0x5367ba), function (_0x2c5ee0) {
			_0x2d47a2(_0x2ba419, _0x2c5ee0);
			function _0x2ba419(_0x2c6df9, _0x272cd5) {
				_0x7a6cc0(this, _0x2ba419);
				_0x272cd5.track = {
					'player': _0x2c6df9,
					'kind': _0x272cd5.kind,
					'label': _0x272cd5.kind + ' settings',
					'selectable': false,
					'default': false,
					'mode': 'disabled'
				};
				_0x272cd5.selectable = false;
				_0x272cd5.name = 'CaptionSettingsMenuItem';
				var _0x6f106 = _0x1ab72f(this, _0x2c5ee0.call(this, _0x2c6df9, _0x272cd5));
				return _0x6f106.addClass('vjs-texttrack-settings'), _0x6f106.controlText(', opens ' + _0x272cd5.kind + ' settings dialog'), _0x6f106;
			}
			return _0x2ba419.prototype.handleClick = function _0x4d3102(_0x1e88c2) {
				this.player().getChild('textTrackSettings').open();
			}, _0x2ba419;
		}(_0x5993ab)), _0x351893 = (_0x2ab435.registerComponent('CaptionSettingsMenuItem', _0xa27535), function (_0x6ab22c) {
			_0x2d47a2(_0x50a3f3, _0x6ab22c);
			function _0x50a3f3(_0x41f325, _0x5c213e, _0x54cf2e) {
				return _0x7a6cc0(this, _0x50a3f3), _0x1ab72f(this, _0x6ab22c.call(this, _0x41f325, _0x5c213e, _0x54cf2e));
			}
			return _0x50a3f3.prototype.buildCSSClass = function _0x4871b2() {
				return 'vjs-captions-button ' + _0x6ab22c.prototype.buildCSSClass.call(this);
			}, _0x50a3f3.prototype.buildWrapperCSSClass = function _0x22f6a7() {
				return 'vjs-captions-button ' + _0x6ab22c.prototype.buildWrapperCSSClass.call(this);
			}, _0x50a3f3.prototype.createItems = function _0x3581cf() {
				var _0x58d60e = [];
				return !(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings') && (_0x58d60e.push(new _0xa27535(this.player_, { 'kind': this.kind_ })), this.hideThreshold_ += 1), _0x6ab22c.prototype.createItems.call(this, _0x58d60e);
			}, _0x50a3f3;
		}(_0x4ee111)), _0x48879a = (_0x351893.prototype.kind_ = 'captions', _0x351893.prototype.controlText_ = 'Captions', _0x2ab435.registerComponent('CaptionsButton', _0x351893), function (_0x318775) {
			_0x2d47a2(_0x1baff1, _0x318775);
			function _0x1baff1() {
				return _0x7a6cc0(this, _0x1baff1), _0x1ab72f(this, _0x318775.apply(this, arguments));
			}
			return _0x1baff1.prototype.createEl = function _0x16ad63(_0x32b10b, _0x522031, _0x572a25) {
				var _0x113bbf = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
				if (this.options_.track.kind === 'captions') {
					_0x113bbf += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize('Captions') + '</span>\n      ';
				}
				_0x113bbf += '</span>';
				var _0x16afe5 = _0x318775.prototype.createEl.call(this, _0x32b10b, _0x2e82a9({ 'innerHTML': _0x113bbf }, _0x522031), _0x572a25);
				return _0x16afe5;
			}, _0x1baff1;
		}(_0x5993ab)), _0x82f2f5 = (_0x2ab435.registerComponent('SubsCapsMenuItem', _0x48879a), function (_0x25f9f6) {
			_0x2d47a2(_0x3435e2, _0x25f9f6);
			function _0x3435e2(_0x56906a) {
				var _0x385f36 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				_0x7a6cc0(this, _0x3435e2);
				var _0x206243 = _0x1ab72f(this, _0x25f9f6.call(this, _0x56906a, _0x385f36));
				_0x206243.label_ = 'subtitles';
				if ([
					'en',
					'en-us',
					'en-ca',
					'fr-ca'
				].indexOf(_0x206243.player_.language_) > -1) {
					_0x206243.label_ = 'captions';
				}
				return _0x206243.menuButton_.controlText(_0x363c2b(_0x206243.label_)), _0x206243;
			}
			return _0x3435e2.prototype.buildCSSClass = function _0x4aa50f() {
				return 'vjs-subs-caps-button ' + _0x25f9f6.prototype.buildCSSClass.call(this);
			}, _0x3435e2.prototype.buildWrapperCSSClass = function _0x5a3cc4() {
				return 'vjs-subs-caps-button ' + _0x25f9f6.prototype.buildWrapperCSSClass.call(this);
			}, _0x3435e2.prototype.createItems = function _0x443870() {
				var _0x483937 = [];
				return !(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings') && (_0x483937.push(new _0xa27535(this.player_, { 'kind': this.label_ })), this.hideThreshold_ += 1), _0x483937 = _0x25f9f6.prototype.createItems.call(this, _0x483937, _0x48879a), _0x483937;
			}, _0x3435e2;
		}(_0x4ee111)), _0x2cebe2 = (_0x82f2f5.prototype.kinds_ = [
			'captions',
			'subtitles'
		], _0x82f2f5.prototype.controlText_ = 'Subtitles', _0x2ab435.registerComponent('SubsCapsButton', _0x82f2f5), function (_0x14f47f) {
			_0x2d47a2(_0x11e19b, _0x14f47f);
			function _0x11e19b(_0x4d3c0c, _0x10aadb) {
				_0x7a6cc0(this, _0x11e19b);
				var _0x5cbdb3 = _0x10aadb.track, _0x472fc7 = _0x4d3c0c.audioTracks();
				_0x10aadb.label = _0x5cbdb3.label || _0x5cbdb3.language || 'Unknown';
				_0x10aadb.selected = _0x5cbdb3.enabled;
				var _0x2a34ad = _0x1ab72f(this, _0x14f47f.call(this, _0x4d3c0c, _0x10aadb));
				_0x2a34ad.track = _0x5cbdb3;
				_0x2a34ad.addClass('vjs-' + _0x5cbdb3.kind + '-menu-item');
				var _0x5dcda1 = function _0x462021() {
					for (var _0x4b6b62 = arguments.length, _0x4326ef = Array(_0x4b6b62), _0x27d1e6 = 0; _0x27d1e6 < _0x4b6b62; _0x27d1e6++) {
						_0x4326ef[_0x27d1e6] = arguments[_0x27d1e6];
					}
					_0x2a34ad.handleTracksChange.apply(_0x2a34ad, _0x4326ef);
				};
				return _0x472fc7.addEventListener('change', _0x5dcda1), _0x2a34ad.on('dispose', function () {
					_0x472fc7.removeEventListener('change', _0x5dcda1);
				}), _0x2a34ad;
			}
			return _0x11e19b.prototype.createEl = function _0x1121f0(_0x253d5f, _0x40747c, _0x32ca6a) {
				var _0x425f32 = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
				if (this.options_.track.kind === 'main-desc') {
					_0x425f32 += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize('Descriptions') + '</span>\n      ';
				}
				_0x425f32 += '</span>';
				var _0x414489 = _0x14f47f.prototype.createEl.call(this, _0x253d5f, _0x2e82a9({ 'innerHTML': _0x425f32 }, _0x40747c), _0x32ca6a);
				return _0x414489;
			}, _0x11e19b.prototype.handleClick = function _0x2e7d75(_0x4b33e6) {
				var _0x1d577b = this.player_.audioTracks();
				_0x14f47f.prototype.handleClick.call(this, _0x4b33e6);
				for (var _0x126cd1 = 0; _0x126cd1 < _0x1d577b.length; _0x126cd1++) {
					var _0x1b1fa7 = _0x1d577b[_0x126cd1];
					_0x1b1fa7.enabled = _0x1b1fa7 === this.track;
				}
			}, _0x11e19b.prototype.handleTracksChange = function _0x4b164c(_0x12608c) {
				this.selected(this.track.enabled);
			}, _0x11e19b;
		}(_0x5e4aea)), _0x2d3540 = (_0x2ab435.registerComponent('AudioTrackMenuItem', _0x2cebe2), function (_0x94197) {
			_0x2d47a2(_0x326197, _0x94197);
			function _0x326197(_0x10bd06) {
				var _0x1d6880 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return _0x7a6cc0(this, _0x326197), _0x1d6880.tracks = _0x10bd06.audioTracks(), _0x1ab72f(this, _0x94197.call(this, _0x10bd06, _0x1d6880));
			}
			return _0x326197.prototype.buildCSSClass = function _0x266bef() {
				return 'vjs-audio-button ' + _0x94197.prototype.buildCSSClass.call(this);
			}, _0x326197.prototype.buildWrapperCSSClass = function _0x12d3ea() {
				return 'vjs-audio-button ' + _0x94197.prototype.buildWrapperCSSClass.call(this);
			}, _0x326197.prototype.createItems = function _0x3b36e4() {
				var _0x5b0755 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
				this.hideThreshold_ = 1;
				var _0x5b249a = this.player_.audioTracks();
				for (var _0x4a4438 = 0; _0x4a4438 < _0x5b249a.length; _0x4a4438++) {
					var _0x54a0f3 = _0x5b249a[_0x4a4438];
					_0x5b0755.push(new _0x2cebe2(this.player_, {
						'track': _0x54a0f3,
						'selectable': true,
						'multiSelectable': false
					}));
				}
				return _0x5b0755;
			}, _0x326197;
		}(_0x4059db)), _0x4e3464 = (_0x2d3540.prototype.controlText_ = 'Audio Track', _0x2ab435.registerComponent('AudioTrackButton', _0x2d3540), function (_0x4d44d6) {
			_0x2d47a2(_0x26bc36, _0x4d44d6);
			function _0x26bc36(_0x448485, _0x2ffa8f) {
				_0x7a6cc0(this, _0x26bc36);
				var _0x294246 = _0x2ffa8f.rate, _0x20ca55 = parseFloat(_0x294246, 10);
				_0x2ffa8f.label = _0x294246;
				_0x2ffa8f.selected = _0x20ca55 === 1;
				_0x2ffa8f.selectable = true;
				_0x2ffa8f.multiSelectable = false;
				var _0x5a9e53 = _0x1ab72f(this, _0x4d44d6.call(this, _0x448485, _0x2ffa8f));
				return _0x5a9e53.label = _0x294246, _0x5a9e53.rate = _0x20ca55, _0x5a9e53.on(_0x448485, 'ratechange', _0x5a9e53.update), _0x5a9e53;
			}
			return _0x26bc36.prototype.handleClick = function _0x4e740d(_0x14f94a) {
				_0x4d44d6.prototype.handleClick.call(this);
				this.player().playbackRate(this.rate);
			}, _0x26bc36.prototype.update = function _0x53f7cd(_0x32125e) {
				this.selected(this.player().playbackRate() === this.rate);
			}, _0x26bc36;
		}(_0x5e4aea)), _0x3e3445 = (_0x4e3464.prototype.contentElType = 'button', _0x2ab435.registerComponent('PlaybackRateMenuItem', _0x4e3464), function (_0x125c28) {
			_0x2d47a2(_0x21aa2d, _0x125c28);
			function _0x21aa2d(_0x6eae82, _0xd2d818) {
				_0x7a6cc0(this, _0x21aa2d);
				var _0x9cfddb = _0x1ab72f(this, _0x125c28.call(this, _0x6eae82, _0xd2d818));
				return _0x9cfddb.updateVisibility(), _0x9cfddb.updateLabel(), _0x9cfddb.on(_0x6eae82, 'loadstart', _0x9cfddb.updateVisibility), _0x9cfddb.on(_0x6eae82, 'ratechange', _0x9cfddb.updateLabel), _0x9cfddb;
			}
			return _0x21aa2d.prototype.createEl = function _0x33caf9() {
				var _0x36922b = _0x125c28.prototype.createEl.call(this);
				return this.labelEl_ = _0x1a554c('div', {
					'className': 'vjs-playback-rate-value',
					'innerHTML': '1x'
				}), _0x36922b.appendChild(this.labelEl_), _0x36922b;
			}, _0x21aa2d.prototype.dispose = function _0x18f7f1() {
				this.labelEl_ = null;
				_0x125c28.prototype.dispose.call(this);
			}, _0x21aa2d.prototype.buildCSSClass = function _0x375581() {
				return 'vjs-playback-rate ' + _0x125c28.prototype.buildCSSClass.call(this);
			}, _0x21aa2d.prototype.buildWrapperCSSClass = function _0x211af6() {
				return 'vjs-playback-rate ' + _0x125c28.prototype.buildWrapperCSSClass.call(this);
			}, _0x21aa2d.prototype.createMenu = function _0x517679() {
				var _0x4408c9 = new _0x4738ee(this.player()), _0x560d1f = this.playbackRates();
				if (_0x560d1f) {
					for (var _0x16a5aa = _0x560d1f.length - 1; _0x16a5aa >= 0; _0x16a5aa--) {
						_0x4408c9.addChild(new _0x4e3464(this.player(), { 'rate': _0x560d1f[_0x16a5aa] + 'x' }));
					}
				}
				return _0x4408c9;
			}, _0x21aa2d.prototype.updateARIAAttributes = function _0x302b7c() {
				this.el().setAttribute('aria-valuenow', this.player().playbackRate());
			}, _0x21aa2d.prototype.handleClick = function _0xdf2bcd(_0x11d15d) {
				var _0x27b063 = this.player().playbackRate(), _0xa4b060 = this.playbackRates(), _0x3c1dca = _0xa4b060[0];
				for (var _0x190374 = 0; _0x190374 < _0xa4b060.length; _0x190374++) {
					if (_0xa4b060[_0x190374] > _0x27b063) {
						_0x3c1dca = _0xa4b060[_0x190374];
						break;
					}
				}
				this.player().playbackRate(_0x3c1dca);
			}, _0x21aa2d.prototype.playbackRates = function _0x3a650d() {
				return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;
			}, _0x21aa2d.prototype.playbackRateSupported = function _0x2cdc3f() {
				return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;
			}, _0x21aa2d.prototype.updateVisibility = function _0x2ccce5(_0x3c2493) {
				if (this.playbackRateSupported()) {
					this.removeClass('vjs-hidden');
				} else {
					this.addClass('vjs-hidden');
				}
			}, _0x21aa2d.prototype.updateLabel = function _0x183239(_0x5a2fd8) {
				if (this.playbackRateSupported()) {
					this.labelEl_.innerHTML = this.player().playbackRate() + 'x';
				}
			}, _0x21aa2d;
		}(_0x4e50fd)), _0x2a5c4f = (_0x3e3445.prototype.controlText_ = 'Playback Rate', _0x2ab435.registerComponent('PlaybackRateMenuButton', _0x3e3445), function (_0x5d9966) {
			_0x2d47a2(_0x1f6d1a, _0x5d9966);
			function _0x1f6d1a() {
				return _0x7a6cc0(this, _0x1f6d1a), _0x1ab72f(this, _0x5d9966.apply(this, arguments));
			}
			return _0x1f6d1a.prototype.buildCSSClass = function _0x4a1ff8() {
				return 'vjs-spacer ' + _0x5d9966.prototype.buildCSSClass.call(this);
			}, _0x1f6d1a.prototype.createEl = function _0x2ae9af() {
				return _0x5d9966.prototype.createEl.call(this, 'div', { 'className': this.buildCSSClass() });
			}, _0x1f6d1a;
		}(_0x2ab435)), _0x429022 = (_0x2ab435.registerComponent('Spacer', _0x2a5c4f), function (_0x136c43) {
			_0x2d47a2(_0x5b98f4, _0x136c43);
			function _0x5b98f4() {
				return _0x7a6cc0(this, _0x5b98f4), _0x1ab72f(this, _0x136c43.apply(this, arguments));
			}
			return _0x5b98f4.prototype.buildCSSClass = function _0x66903b() {
				return 'vjs-custom-control-spacer ' + _0x136c43.prototype.buildCSSClass.call(this);
			}, _0x5b98f4.prototype.createEl = function _0x28538f() {
				var _0x50bb83 = _0x136c43.prototype.createEl.call(this, { 'className': this.buildCSSClass() });
				return _0x50bb83.innerHTML = '\xA0', _0x50bb83;
			}, _0x5b98f4;
		}(_0x2a5c4f)), _0x559599 = (_0x2ab435.registerComponent('CustomControlSpacer', _0x429022), function (_0x2b6491) {
			_0x2d47a2(_0x969e15, _0x2b6491);
			function _0x969e15() {
				return _0x7a6cc0(this, _0x969e15), _0x1ab72f(this, _0x2b6491.apply(this, arguments));
			}
			return _0x969e15.prototype.createEl = function _0x2a87f4() {
				return _0x2b6491.prototype.createEl.call(this, 'div', {
					'className': 'vjs-control-bar',
					'dir': 'ltr'
				});
			}, _0x969e15;
		}(_0x2ab435)), _0x4cab77 = (_0x559599.prototype.options_ = {
			'children': [
				'playToggle',
				'volumePanel',
				'currentTimeDisplay',
				'timeDivider',
				'durationDisplay',
				'progressControl',
				'liveDisplay',
				'remainingTimeDisplay',
				'customControlSpacer',
				'playbackRateMenuButton',
				'chaptersButton',
				'descriptionsButton',
				'subsCapsButton',
				'audioTrackButton',
				'fullscreenToggle'
			]
		}, _0x2ab435.registerComponent('ControlBar', _0x559599), function (_0x5b7976) {
			_0x2d47a2(_0x2da351, _0x5b7976);
			function _0x2da351(_0x4101ed, _0xf3380f) {
				_0x7a6cc0(this, _0x2da351);
				var _0xed1a5e = _0x1ab72f(this, _0x5b7976.call(this, _0x4101ed, _0xf3380f));
				return _0xed1a5e.on(_0x4101ed, 'error', _0xed1a5e.open), _0xed1a5e;
			}
			return _0x2da351.prototype.buildCSSClass = function _0x205c84() {
				return 'vjs-error-display ' + _0x5b7976.prototype.buildCSSClass.call(this);
			}, _0x2da351.prototype.content = function _0x4c827e() {
				var _0x4612d6 = this.player().error();
				return _0x4612d6 ? this.localize(_0x4612d6.message) : '';
			}, _0x2da351;
		}(_0x4daefe)), _0x54af2a = (_0x4cab77.prototype.options_ = _0x2585aa(_0x4daefe.prototype.options_, {
			'pauseOnOpen': false,
			'fillAlways': true,
			'temporary': false,
			'uncloseable': true
		}), _0x2ab435.registerComponent('ErrorDisplay', _0x4cab77), 'vjs-text-track-settings'), _0x12ca91 = [
			'#000',
			'Black'
		], _0xb75249 = [
			'#00F',
			'Blue'
		], _0x1885be = [
			'#0FF',
			'Cyan'
		], _0x2450a3 = [
			'#0F0',
			'Green'
		], _0x4ebe88 = [
			'#F0F',
			'Magenta'
		], _0x13ba4a = [
			'#F00',
			'Red'
		], _0x2c3d38 = [
			'#FFF',
			'White'
		], _0x12b2f5 = [
			'#FF0',
			'Yellow'
		], _0x31feb9 = [
			'1',
			'Opaque'
		], _0x5c5060 = [
			'0.5',
			'Semi-Transparent'
		], _0x4c7b10 = [
			'0',
			'Transparent'
		], _0x26f3a1 = {
			'backgroundColor': {
				'selector': '.vjs-bg-color > select',
				'id': 'captions-background-color-%s',
				'label': 'Color',
				'options': [
					_0x12ca91,
					_0x2c3d38,
					_0x13ba4a,
					_0x2450a3,
					_0xb75249,
					_0x12b2f5,
					_0x4ebe88,
					_0x1885be
				]
			},
			'backgroundOpacity': {
				'selector': '.vjs-bg-opacity > select',
				'id': 'captions-background-opacity-%s',
				'label': 'Transparency',
				'options': [
					_0x31feb9,
					_0x5c5060,
					_0x4c7b10
				]
			},
			'color': {
				'selector': '.vjs-fg-color > select',
				'id': 'captions-foreground-color-%s',
				'label': 'Color',
				'options': [
					_0x2c3d38,
					_0x12ca91,
					_0x13ba4a,
					_0x2450a3,
					_0xb75249,
					_0x12b2f5,
					_0x4ebe88,
					_0x1885be
				]
			},
			'edgeStyle': {
				'selector': '.vjs-edge-style > select',
				'id': '%s',
				'label': 'Text Edge Style',
				'options': [
					[
						'none',
						'None'
					],
					[
						'raised',
						'Raised'
					],
					[
						'depressed',
						'Depressed'
					],
					[
						'uniform',
						'Uniform'
					],
					[
						'dropshadow',
						'Dropshadow'
					]
				]
			},
			'fontFamily': {
				'selector': '.vjs-font-family > select',
				'id': 'captions-font-family-%s',
				'label': 'Font Family',
				'options': [
					[
						'proportionalSansSerif',
						'Proportional Sans-Serif'
					],
					[
						'monospaceSansSerif',
						'Monospace Sans-Serif'
					],
					[
						'proportionalSerif',
						'Proportional Serif'
					],
					[
						'monospaceSerif',
						'Monospace Serif'
					],
					[
						'casual',
						'Casual'
					],
					[
						'script',
						'Script'
					],
					[
						'small-caps',
						'Small Caps'
					]
				]
			},
			'fontPercent': {
				'selector': '.vjs-font-percent > select',
				'id': 'captions-font-size-%s',
				'label': 'Font Size',
				'options': [
					[
						'0.50',
						'50%'
					],
					[
						'0.75',
						'75%'
					],
					[
						'1.00',
						'100%'
					],
					[
						'1.25',
						'125%'
					],
					[
						'1.50',
						'150%'
					],
					[
						'1.75',
						'175%'
					],
					[
						'2.00',
						'200%'
					],
					[
						'3.00',
						'300%'
					],
					[
						'4.00',
						'400%'
					]
				],
				'default': 2,
				'parser': function _0x294f3f(_0x4b4b8a) {
					return _0x4b4b8a === '1.00' ? null : Number(_0x4b4b8a);
				}
			},
			'textOpacity': {
				'selector': '.vjs-text-opacity > select',
				'id': 'captions-foreground-opacity-%s',
				'label': 'Transparency',
				'options': [
					_0x31feb9,
					_0x5c5060
				]
			},
			'windowColor': {
				'selector': '.vjs-window-color > select',
				'id': 'captions-window-color-%s',
				'label': 'Color'
			},
			'windowOpacity': {
				'selector': '.vjs-window-opacity > select',
				'id': 'captions-window-opacity-%s',
				'label': 'Transparency',
				'options': [
					_0x4c7b10,
					_0x5c5060,
					_0x31feb9
				]
			}
		};
		function _0x2c0699(_0x1f3cb2, _0x39d1c8) {
			if (_0x39d1c8) {
				_0x1f3cb2 = _0x39d1c8(_0x1f3cb2);
			}
			if (_0x1f3cb2 && _0x1f3cb2 !== 'none') {
				return _0x1f3cb2;
			}
		}
		function _0x36bd1d(_0x107a8c, _0x2ee52f) {
			var _0x2d4e13 = _0x107a8c.options[_0x107a8c.options.selectedIndex].value;
			return _0x2c0699(_0x2d4e13, _0x2ee52f);
		}
		function _0x148895(_0x2cdc96, _0x696d7b, _0xe0e80b) {
			if (!_0x696d7b) {
				return;
			}
			for (var _0x38d1ad = 0; _0x38d1ad < _0x2cdc96.options.length; _0x38d1ad++) {
				if (_0x2c0699(_0x2cdc96.options[_0x38d1ad].value, _0xe0e80b) === _0x696d7b) {
					_0x2cdc96.selectedIndex = _0x38d1ad;
					break;
				}
			}
		}
		_0x26f3a1.windowColor.options = _0x26f3a1.backgroundColor.options;
		var _0x110ee1 = function (_0x3e8959) {
			_0x2d47a2(_0xcd16d2, _0x3e8959);
			function _0xcd16d2(_0x326780, _0x15368d) {
				_0x7a6cc0(this, _0xcd16d2);
				_0x15368d.temporary = false;
				var _0x3aa4d6 = _0x1ab72f(this, _0x3e8959.call(this, _0x326780, _0x15368d));
				_0x3aa4d6.updateDisplay = _0x5957d4(_0x3aa4d6, _0x3aa4d6.updateDisplay);
				_0x3aa4d6.fill();
				_0x3aa4d6.hasBeenOpened_ = _0x3aa4d6.hasBeenFilled_ = true;
				_0x3aa4d6.endDialog = _0x1a554c('p', {
					'className': 'vjs-control-text',
					'textContent': _0x3aa4d6.localize('End of dialog window.')
				});
				_0x3aa4d6.el().appendChild(_0x3aa4d6.endDialog);
				_0x3aa4d6.setDefaults();
				if (_0x15368d.persistTextTrackSettings === undefined) {
					_0x3aa4d6.options_.persistTextTrackSettings = _0x3aa4d6.options_.playerOptions.persistTextTrackSettings;
				}
				_0x3aa4d6.on(_0x3aa4d6['$']('.vjs-done-button'), 'click', function () {
					_0x3aa4d6.saveSettings();
					_0x3aa4d6.close();
				});
				_0x3aa4d6.on(_0x3aa4d6['$']('.vjs-default-button'), 'click', function () {
					_0x3aa4d6.setDefaults();
					_0x3aa4d6.updateDisplay();
				});
				_0x487c1f(_0x26f3a1, function (_0x3fdab3) {
					_0x3aa4d6.on(_0x3aa4d6['$'](_0x3fdab3.selector), 'change', _0x3aa4d6.updateDisplay);
				});
				if (_0x3aa4d6.options_.persistTextTrackSettings) {
					_0x3aa4d6.restoreSettings();
				}
				return _0x3aa4d6;
			}
			return _0xcd16d2.prototype.dispose = function _0xde41a6() {
				this.endDialog = null;
				_0x3e8959.prototype.dispose.call(this);
			}, _0xcd16d2.prototype.createElSelect_ = function _0x45661c(_0x28dfdc) {
				var _0x39eb6a = this, _0x260a8b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '', _0x28e835 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label', _0x419c29 = _0x26f3a1[_0x28dfdc], _0x4dab41 = _0x419c29.id.replace('%s', this.id_), _0x3998f3 = [
					_0x260a8b,
					_0x4dab41
				].join(' ').trim();
				return [
					'<' + _0x28e835 + ' id="' + _0x4dab41 + '" class="' + (_0x28e835 === 'label' ? 'vjs-label' : '') + '">',
					this.localize(_0x419c29.label),
					'</' + _0x28e835 + '>',
					'<select aria-labelledby="' + _0x3998f3 + '">'
				].concat(_0x419c29.options.map(function (_0x8d7cc3) {
					var _0x288354 = _0x4dab41 + '-' + _0x8d7cc3[1].replace(/\W+/g, '');
					return [
						'<option id="' + _0x288354 + '" value="' + _0x8d7cc3[0] + '" ',
						'aria-labelledby="' + _0x3998f3 + ' ' + _0x288354 + '">',
						_0x39eb6a.localize(_0x8d7cc3[1]),
						'</option>'
					].join('');
				})).concat('</select>').join('');
			}, _0xcd16d2.prototype.createElFgColor_ = function _0xe2a46f() {
				var _0x3562aa = 'captions-text-legend-' + this.id_;
				return [
					'<fieldset class="vjs-fg-color vjs-track-setting">',
					'<legend id="' + _0x3562aa + '">',
					this.localize('Text'),
					'</legend>',
					this.createElSelect_('color', _0x3562aa),
					'<span class="vjs-text-opacity vjs-opacity">',
					this.createElSelect_('textOpacity', _0x3562aa),
					'</span>',
					'</fieldset>'
				].join('');
			}, _0xcd16d2.prototype.createElBgColor_ = function _0x4bcc4c() {
				var _0x573858 = 'captions-background-' + this.id_;
				return [
					'<fieldset class="vjs-bg-color vjs-track-setting">',
					'<legend id="' + _0x573858 + '">',
					this.localize('Background'),
					'</legend>',
					this.createElSelect_('backgroundColor', _0x573858),
					'<span class="vjs-bg-opacity vjs-opacity">',
					this.createElSelect_('backgroundOpacity', _0x573858),
					'</span>',
					'</fieldset>'
				].join('');
			}, _0xcd16d2.prototype.createElWinColor_ = function _0x5e45f6() {
				var _0x21bf08 = 'captions-window-' + this.id_;
				return [
					'<fieldset class="vjs-window-color vjs-track-setting">',
					'<legend id="' + _0x21bf08 + '">',
					this.localize('Window'),
					'</legend>',
					this.createElSelect_('windowColor', _0x21bf08),
					'<span class="vjs-window-opacity vjs-opacity">',
					this.createElSelect_('windowOpacity', _0x21bf08),
					'</span>',
					'</fieldset>'
				].join('');
			}, _0xcd16d2.prototype.createElColors_ = function _0x46a9be() {
				return _0x1a554c('div', {
					'className': 'vjs-track-settings-colors',
					'innerHTML': [
						this.createElFgColor_(),
						this.createElBgColor_(),
						this.createElWinColor_()
					].join('')
				});
			}, _0xcd16d2.prototype.createElFont_ = function _0x5ff16e() {
				return _0x1a554c('div', {
					'className': 'vjs-track-settings-font',
					'innerHTML': [
						'<fieldset class="vjs-font-percent vjs-track-setting">',
						this.createElSelect_('fontPercent', '', 'legend'),
						'</fieldset>',
						'<fieldset class="vjs-edge-style vjs-track-setting">',
						this.createElSelect_('edgeStyle', '', 'legend'),
						'</fieldset>',
						'<fieldset class="vjs-font-family vjs-track-setting">',
						this.createElSelect_('fontFamily', '', 'legend'),
						'</fieldset>'
					].join('')
				});
			}, _0xcd16d2.prototype.createElControls_ = function _0x3cd741() {
				var _0x432160 = this.localize('restore all settings to the default values');
				return _0x1a554c('div', {
					'className': 'vjs-track-settings-controls',
					'innerHTML': [
						'<button class="vjs-default-button" title="' + _0x432160 + '">',
						this.localize('Reset'),
						'<span class="vjs-control-text"> ' + _0x432160 + '</span>',
						'</button>',
						'<button class="vjs-done-button">' + this.localize('Done') + '</button>'
					].join('')
				});
			}, _0xcd16d2.prototype.content = function _0x8e1ea6() {
				return [
					this.createElColors_(),
					this.createElFont_(),
					this.createElControls_()
				];
			}, _0xcd16d2.prototype.label = function _0x20f506() {
				return this.localize('Caption Settings Dialog');
			}, _0xcd16d2.prototype.description = function _0x24445e() {
				return this.localize('Beginning of dialog window. Escape will cancel and close the window.');
			}, _0xcd16d2.prototype.buildCSSClass = function _0x34e895() {
				return _0x3e8959.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';
			}, _0xcd16d2.prototype.getValues = function _0x8aca03() {
				var _0x7c853c = this;
				return _0x3fce9e(_0x26f3a1, function (_0x24c5b6, _0x503116, _0x17c4bf) {
					var _0xf452d2 = _0x36bd1d(_0x7c853c['$'](_0x503116.selector), _0x503116.parser);
					if (_0xf452d2 !== undefined) {
						_0x24c5b6[_0x17c4bf] = _0xf452d2;
					}
					return _0x24c5b6;
				}, {});
			}, _0xcd16d2.prototype.setValues = function _0x98d211(_0x2f9c7e) {
				var _0x42a4d6 = this;
				_0x487c1f(_0x26f3a1, function (_0x2aa7b9, _0x2e1a57) {
					_0x148895(_0x42a4d6['$'](_0x2aa7b9.selector), _0x2f9c7e[_0x2e1a57], _0x2aa7b9.parser);
				});
			}, _0xcd16d2.prototype.setDefaults = function _0x141804() {
				var _0x2fd23a = this;
				_0x487c1f(_0x26f3a1, function (_0xecc1fc) {
					var _0x1cc5b7 = _0xecc1fc.hasOwnProperty('default') ? _0xecc1fc.default : 0;
					_0x2fd23a['$'](_0xecc1fc.selector).selectedIndex = _0x1cc5b7;
				});
			}, _0xcd16d2.prototype.restoreSettings = function _0x15988e() {
				var _0x4e7351 = void 0;
				try {
					_0x4e7351 = JSON.parse(_0x504cd5.localStorage.getItem(_0x54af2a));
				} catch (_0x3d045a) {
					_0x4155c5.warn(_0x3d045a);
				}
				if (_0x4e7351) {
					this.setValues(_0x4e7351);
				}
			}, _0xcd16d2.prototype.saveSettings = function _0x553a21() {
				if (!this.options_.persistTextTrackSettings) {
					return;
				}
				var _0x6e0729 = this.getValues();
				try {
					if (Object.keys(_0x6e0729).length) {
						_0x504cd5.localStorage.setItem(_0x54af2a, JSON.stringify(_0x6e0729));
					} else {
						_0x504cd5.localStorage.removeItem(_0x54af2a);
					}
				} catch (_0x3cbedd) {
					_0x4155c5.warn(_0x3cbedd);
				}
			}, _0xcd16d2.prototype.updateDisplay = function _0x4cc78e() {
				var _0x1b0cda = this.player_.getChild('textTrackDisplay');
				if (_0x1b0cda) {
					_0x1b0cda.updateDisplay();
				}
			}, _0xcd16d2.prototype.conditionalBlur_ = function _0x19d594() {
				this.previouslyActiveEl_ = null;
				this.off(_0x19e198, 'keydown', this.handleKeyDown);
				var _0x3486d0 = this.player_.controlBar, _0x58e3f6 = _0x3486d0 && _0x3486d0.subsCapsButton, _0x9d9298 = _0x3486d0 && _0x3486d0.captionsButton;
				if (_0x58e3f6) {
					_0x58e3f6.focus();
				} else {
					if (_0x9d9298) {
						_0x9d9298.focus();
					}
				}
			}, _0xcd16d2;
		}(_0x4daefe), _0x5a4268 = (_0x2ab435.registerComponent('TextTrackSettings', _0x110ee1), function (_0x2159c3) {
			_0x2d47a2(_0x3e8d53, _0x2159c3);
			function _0x3e8d53(_0x1636e3, _0xa8abde) {
				_0x7a6cc0(this, _0x3e8d53);
				var _0x3526b0 = _0xa8abde.ResizeObserver || _0x504cd5.ResizeObserver;
				if (_0xa8abde.ResizeObserver === null) {
					_0x3526b0 = false;
				}
				var _0xfc75ff = _0x2585aa({
					'createEl': !_0x3526b0,
					'reportTouchActivity': false
				}, _0xa8abde), _0x227dd3 = _0x1ab72f(this, _0x2159c3.call(this, _0x1636e3, _0xfc75ff));
				return _0x227dd3.ResizeObserver = _0xa8abde.ResizeObserver || _0x504cd5.ResizeObserver, _0x227dd3.loadListener_ = null, _0x227dd3.resizeObserver_ = null, _0x227dd3.debouncedHandler_ = _0x6eabf1(function () {
					_0x227dd3.resizeHandler();
				}, 100, false, _0x1636e3), _0x3526b0 ? (_0x227dd3.resizeObserver_ = new _0x227dd3.ResizeObserver(_0x227dd3.debouncedHandler_), _0x227dd3.resizeObserver_.observe(_0x1636e3.el())) : (_0x227dd3.loadListener_ = function () {
					if (_0x227dd3.el_.contentWindow) {
						_0x53fd98(_0x227dd3.el_.contentWindow, 'resize', _0x227dd3.debouncedHandler_);
					}
					_0x227dd3.off('load', _0x227dd3.loadListener_);
				}, _0x227dd3.on('load', _0x227dd3.loadListener_)), _0x227dd3;
			}
			return _0x3e8d53.prototype.createEl = function _0x17d993() {
				return _0x2159c3.prototype.createEl.call(this, 'iframe', { 'className': 'vjs-resize-manager' });
			}, _0x3e8d53.prototype.resizeHandler = function _0x54df6b() {
				this.player_.trigger('playerresize');
			}, _0x3e8d53.prototype.dispose = function _0xdc8618() {
				if (this.resizeObserver_) {
					if (this.player_.el()) {
						this.resizeObserver_.unobserve(this.player_.el());
					}
					this.resizeObserver_.disconnect();
				}
				if (this.el_ && this.el_.contentWindow) {
					_0x85dba1(this.el_.contentWindow, 'resize', this.debouncedHandler_);
				}
				if (this.loadListener_) {
					this.off('load', this.loadListener_);
				}
				if (this.debouncedHandler_) {
					this.debouncedHandler_.cancel();
				}
				this.ResizeObserver = null;
				this.resizeObserver = null;
				this.debouncedHandler_ = null;
				this.loadListener_ = null;
				_0x2159c3.prototype.dispose.call(this);
			}, _0x3e8d53;
		}(_0x2ab435)), _0x56ece9 = (_0x2ab435.registerComponent('ResizeManager', _0x5a4268), function _0x525483(_0x33c162) {
			var _0x545063 = _0x33c162.el();
			if (_0x545063.hasAttribute('src')) {
				return _0x33c162.triggerSourceset(_0x545063.src), true;
			}
			var _0x5509fb = _0x33c162['$$']('source'), _0x1a2b70 = [], _0x24f457 = '';
			if (!_0x5509fb.length) {
				return false;
			}
			for (var _0x46a689 = 0; _0x46a689 < _0x5509fb.length; _0x46a689++) {
				var _0x26dfb0 = _0x5509fb[_0x46a689].src;
				if (_0x26dfb0 && _0x1a2b70.indexOf(_0x26dfb0) === -1) {
					_0x1a2b70.push(_0x26dfb0);
				}
			}
			if (!_0x1a2b70.length) {
				return false;
			}
			if (_0x1a2b70.length === 1) {
				_0x24f457 = _0x1a2b70[0];
			}
			return _0x33c162.triggerSourceset(_0x24f457), true;
		}), _0x4c2f29 = Object.defineProperty({}, 'innerHTML', {
			'get': function _0xded9a0() {
				return this.cloneNode(true).innerHTML;
			},
			'set': function _0x43ac52(_0x4997d1) {
				var _0x1c4106 = _0x19e198.createElement(this.nodeName.toLowerCase());
				_0x1c4106.innerHTML = _0x4997d1;
				var _0x9e116d = _0x19e198.createDocumentFragment();
				while (_0x1c4106.childNodes.length) {
					_0x9e116d.appendChild(_0x1c4106.childNodes[0]);
				}
				return this.innerText = '', _0x504cd5.Element.prototype.appendChild.call(this, _0x9e116d), this.innerHTML;
			}
		}), _0x3f30af = function _0x323ee4(_0x380271, _0x1713d5) {
			var _0xe4088c = {};
			for (var _0x51d4d3 = 0; _0x51d4d3 < _0x380271.length; _0x51d4d3++) {
				_0xe4088c = Object.getOwnPropertyDescriptor(_0x380271[_0x51d4d3], _0x1713d5);
				if (_0xe4088c && _0xe4088c.set && _0xe4088c.get) {
					break;
				}
			}
			return _0xe4088c.enumerable = true, _0xe4088c.configurable = true, _0xe4088c;
		}, _0x10f911 = function _0x9613ee(_0x4c3079) {
			return _0x3f30af([
				_0x4c3079.el(),
				_0x504cd5.HTMLMediaElement.prototype,
				_0x504cd5.Element.prototype,
				_0x4c2f29
			], 'innerHTML');
		}, _0x1a263b = function _0x448379(_0x29d395) {
			var _0x366e4f = _0x29d395.el();
			if (_0x366e4f.resetSourceWatch_) {
				return;
			}
			var _0x2d5162 = { _0x1429ec: _0x366e4f[_0x1429ec] }, _0x53650a = _0x10f911(_0x29d395), _0x2fa246 = function _0x202136(_0x37963e) {
				return function () {
					for (var _0x3ab6b9 = arguments.length, _0x34e3c7 = Array(_0x3ab6b9), _0x357866 = 0; _0x357866 < _0x3ab6b9; _0x357866++) {
						_0x34e3c7[_0x357866] = arguments[_0x357866];
					}
					var _0x59a83a = _0x37963e.apply(_0x366e4f, _0x34e3c7);
					return _0x56ece9(_0x29d395), _0x59a83a;
				};
			};
			[
				'append',
				'appendChild',
				'insertAdjacentHTML'
			].forEach(function (_0x1429ec) {
				if (!_0x366e4f[_0x1429ec]) {
					return;
				}
				_0x366e4f[_0x1429ec] = _0x2fa246(_0x2d5162[_0x1429ec]);
			});
			Object.defineProperty(_0x366e4f, 'innerHTML', _0x2585aa(_0x53650a, { 'set': _0x2fa246(_0x53650a.set) }));
			_0x366e4f.resetSourceWatch_ = function () {
				_0x366e4f.resetSourceWatch_ = null;
				Object.keys(_0x2d5162).forEach(function (_0x4d1c90) {
					_0x366e4f[_0x4d1c90] = _0x2d5162[_0x4d1c90];
				});
				Object.defineProperty(_0x366e4f, 'innerHTML', _0x53650a);
			};
			_0x29d395.one('sourceset', _0x366e4f.resetSourceWatch_);
		}, _0x2a371f = Object.defineProperty({}, 'src', {
			'get': function _0x95b5f9() {
				if (this.hasAttribute('src')) {
					return _0x2cf91d(_0x504cd5.Element.prototype.getAttribute.call(this, 'src'));
				}
				return '';
			},
			'set': function _0x5acf51(_0x5f46df) {
				return _0x504cd5.Element.prototype.setAttribute.call(this, 'src', _0x5f46df), _0x5f46df;
			}
		}), _0x2ea2d0 = function _0x1bb4ce(_0x1068ad) {
			return _0x3f30af([
				_0x1068ad.el(),
				_0x504cd5.HTMLMediaElement.prototype,
				_0x2a371f
			], 'src');
		}, _0x1a2de4 = function _0x5e5f24(_0x9fcd0e) {
			if (!_0x9fcd0e.featuresSourceset) {
				return;
			}
			var _0x1fb60a = _0x9fcd0e.el();
			if (_0x1fb60a.resetSourceset_) {
				return;
			}
			var _0x1ef56d = _0x2ea2d0(_0x9fcd0e), _0x72c9ab = _0x1fb60a.setAttribute, _0x4caf90 = _0x1fb60a.load;
			Object.defineProperty(_0x1fb60a, 'src', _0x2585aa(_0x1ef56d, {
				'set': function _0x73d7c8(_0x3a8977) {
					var _0xab8088 = _0x1ef56d.set.call(_0x1fb60a, _0x3a8977);
					return _0x9fcd0e.triggerSourceset(_0x1fb60a.src), _0xab8088;
				}
			}));
			_0x1fb60a.setAttribute = function (_0x439a98, _0x1e2531) {
				var _0xdc8d97 = _0x72c9ab.call(_0x1fb60a, _0x439a98, _0x1e2531);
				if (/src/i.test(_0x439a98)) {
					_0x9fcd0e.triggerSourceset(_0x1fb60a.src);
				}
				return _0xdc8d97;
			};
			_0x1fb60a.load = function () {
				var _0x76954e = _0x4caf90.call(_0x1fb60a);
				return !_0x56ece9(_0x9fcd0e) && (_0x9fcd0e.triggerSourceset(''), _0x1a263b(_0x9fcd0e)), _0x76954e;
			};
			if (_0x1fb60a.currentSrc) {
				_0x9fcd0e.triggerSourceset(_0x1fb60a.currentSrc);
			} else {
				if (!_0x56ece9(_0x9fcd0e)) {
					_0x1a263b(_0x9fcd0e);
				}
			}
			_0x1fb60a.resetSourceset_ = function () {
				_0x1fb60a.resetSourceset_ = null;
				_0x1fb60a.load = _0x4caf90;
				_0x1fb60a.setAttribute = _0x72c9ab;
				Object.defineProperty(_0x1fb60a, 'src', _0x1ef56d);
				if (_0x1fb60a.resetSourceWatch_) {
					_0x1fb60a.resetSourceWatch_();
				}
			};
		}, _0x34d9c1 = _0x1b1ded(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\'t used.\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\'t used.\n            This may prevent text tracks from loading.']), _0x23b26d = function (_0x53d0e2) {
			_0x2d47a2(_0x26296b, _0x53d0e2);
			function _0x26296b(_0x4e5d11, _0x4f3153) {
				_0x7a6cc0(this, _0x26296b);
				var _0x591ecc = _0x1ab72f(this, _0x53d0e2.call(this, _0x4e5d11, _0x4f3153)), _0xaa4e86 = _0x4e5d11.source, _0x2e6df1 = false;
				if (_0xaa4e86 && (_0x591ecc.el_.currentSrc !== _0xaa4e86.src || _0x4e5d11.tag && _0x4e5d11.tag.initNetworkState_ === 3)) {
					_0x591ecc.setSource(_0xaa4e86);
				} else {
					_0x591ecc.handleLateInit_(_0x591ecc.el_);
				}
				if (_0x4e5d11.enableSourceset) {
					_0x591ecc.setupSourcesetHandling_();
				}
				if (_0x591ecc.el_.hasChildNodes()) {
					var _0x224052 = _0x591ecc.el_.childNodes, _0x2d4c42 = _0x224052.length, _0x406db7 = [];
					while (_0x2d4c42--) {
						var _0x365d15 = _0x224052[_0x2d4c42], _0x39f535 = _0x365d15.nodeName.toLowerCase();
						if (_0x39f535 === 'track') {
							if (!_0x591ecc.featuresNativeTextTracks) {
								_0x406db7.push(_0x365d15);
							} else {
								_0x591ecc.remoteTextTrackEls().addTrackElement_(_0x365d15);
								_0x591ecc.remoteTextTracks().addTrack(_0x365d15.track);
								_0x591ecc.textTracks().addTrack(_0x365d15.track);
								if (!_0x2e6df1 && !_0x591ecc.el_.hasAttribute('crossorigin') && _0x1e9694(_0x365d15.src)) {
									_0x2e6df1 = true;
								}
							}
						}
					}
					for (var _0x374b74 = 0; _0x374b74 < _0x406db7.length; _0x374b74++) {
						_0x591ecc.el_.removeChild(_0x406db7[_0x374b74]);
					}
				}
				_0x591ecc.proxyNativeTracks_();
				if (_0x591ecc.featuresNativeTextTracks && _0x2e6df1) {
					_0x4155c5.warn(_0x490e57(_0x34d9c1));
				}
				_0x591ecc.restoreMetadataTracksInIOSNativePlayer_();
				if ((_0x363ca1 || _0x244276 || _0x71520b) && _0x4e5d11.nativeControlsForTouch === true) {
					_0x591ecc.setControls(true);
				}
				return _0x591ecc.proxyWebkitFullscreen_(), _0x591ecc.triggerReady(), _0x591ecc;
			}
			return _0x26296b.prototype.dispose = function _0x368f0() {
				if (this.el_ && this.el_.resetSourceset_) {
					this.el_.resetSourceset_();
				}
				_0x26296b.disposeMediaElement(this.el_);
				this.options_ = null;
				_0x53d0e2.prototype.dispose.call(this);
			}, _0x26296b.prototype.setupSourcesetHandling_ = function _0x4d1405() {
				_0x1a2de4(this);
			}, _0x26296b.prototype.restoreMetadataTracksInIOSNativePlayer_ = function _0x3ff86d() {
				var _0x309704 = this.textTracks(), _0x905589 = void 0, _0x2bfcbe = function _0xf1e037() {
					_0x905589 = [];
					for (var _0x373a62 = 0; _0x373a62 < _0x309704.length; _0x373a62++) {
						var _0x5d4866 = _0x309704[_0x373a62];
						if (_0x5d4866.kind === 'metadata') {
							_0x905589.push({
								'track': _0x5d4866,
								'storedMode': _0x5d4866.mode
							});
						}
					}
				};
				_0x2bfcbe();
				_0x309704.addEventListener('change', _0x2bfcbe);
				this.on('dispose', function () {
					return _0x309704.removeEventListener('change', _0x2bfcbe);
				});
				var _0x4de7c7 = function _0x30f0ac() {
					for (var _0x1beccb = 0; _0x1beccb < _0x905589.length; _0x1beccb++) {
						var _0x27a69b = _0x905589[_0x1beccb];
						if (_0x27a69b.track.mode === 'disabled' && _0x27a69b.track.mode !== _0x27a69b.storedMode) {
							_0x27a69b.track.mode = _0x27a69b.storedMode;
						}
					}
					_0x309704.removeEventListener('change', _0x30f0ac);
				};
				this.on('webkitbeginfullscreen', function () {
					_0x309704.removeEventListener('change', _0x2bfcbe);
					_0x309704.removeEventListener('change', _0x4de7c7);
					_0x309704.addEventListener('change', _0x4de7c7);
				});
				this.on('webkitendfullscreen', function () {
					_0x309704.removeEventListener('change', _0x2bfcbe);
					_0x309704.addEventListener('change', _0x2bfcbe);
					_0x309704.removeEventListener('change', _0x4de7c7);
				});
			}, _0x26296b.prototype.overrideNative_ = function _0x20f19(_0x28c23c, _0x1fd812) {
				var _0x45ec97 = this;
				if (_0x1fd812 !== this['featuresNative' + _0x28c23c + 'Tracks']) {
					return;
				}
				var _0x383cae = _0x28c23c.toLowerCase();
				if (this[_0x383cae + 'TracksListeners_']) {
					Object.keys(this[_0x383cae + 'TracksListeners_']).forEach(function (_0x5371ab) {
						var _0xff6b22 = _0x45ec97.el()[_0x383cae + 'Tracks'];
						_0xff6b22.removeEventListener(_0x5371ab, _0x45ec97[_0x383cae + 'TracksListeners_'][_0x5371ab]);
					});
				}
				this['featuresNative' + _0x28c23c + 'Tracks'] = !_0x1fd812;
				this[_0x383cae + 'TracksListeners_'] = null;
				this.proxyNativeTracksForType_(_0x383cae);
			}, _0x26296b.prototype.overrideNativeAudioTracks = function _0x4c501a(_0x56bfdd) {
				this.overrideNative_('Audio', _0x56bfdd);
			}, _0x26296b.prototype.overrideNativeVideoTracks = function _0xe75cd2(_0x2a1798) {
				this.overrideNative_('Video', _0x2a1798);
			}, _0x26296b.prototype.proxyNativeTracksForType_ = function _0x23d13a(_0x4ed63b) {
				var _0x5ea4f2 = this, _0x3000ff = _0x3d5974[_0x4ed63b], _0x1f8aed = this.el()[_0x3000ff.getterName], _0x1b9738 = this[_0x3000ff.getterName]();
				if (!this['featuresNative' + _0x3000ff.capitalName + 'Tracks'] || !_0x1f8aed || !_0x1f8aed.addEventListener) {
					return;
				}
				var _0x4b72f6 = {
					'change': function _0x7ea754(_0x2058e4) {
						_0x1b9738.trigger({
							'type': 'change',
							'target': _0x1b9738,
							'currentTarget': _0x1b9738,
							'srcElement': _0x1b9738
						});
					},
					'addtrack': function _0x4e25e0(_0x22fca0) {
						_0x1b9738.addTrack(_0x22fca0.track);
					},
					'removetrack': function _0xe6f11e(_0x315982) {
						_0x1b9738.removeTrack(_0x315982.track);
					}
				}, _0xbc00be = function _0x5d2eb0() {
					var _0x16651c = [];
					for (var _0x9180db = 0; _0x9180db < _0x1b9738.length; _0x9180db++) {
						var _0x5a7846 = false;
						for (var _0x483ff4 = 0; _0x483ff4 < _0x1f8aed.length; _0x483ff4++) {
							if (_0x1f8aed[_0x483ff4] === _0x1b9738[_0x9180db]) {
								_0x5a7846 = true;
								break;
							}
						}
						if (!_0x5a7846) {
							_0x16651c.push(_0x1b9738[_0x9180db]);
						}
					}
					while (_0x16651c.length) {
						_0x1b9738.removeTrack(_0x16651c.shift());
					}
				};
				this[_0x3000ff.getterName + 'Listeners_'] = _0x4b72f6;
				Object.keys(_0x4b72f6).forEach(function (_0x5523ab) {
					var _0x1c8148 = _0x4b72f6[_0x5523ab];
					_0x1f8aed.addEventListener(_0x5523ab, _0x1c8148);
					_0x5ea4f2.on('dispose', function (_0x5255fb) {
						return _0x1f8aed.removeEventListener(_0x5523ab, _0x1c8148);
					});
				});
				this.on('loadstart', _0xbc00be);
				this.on('dispose', function (_0x199f2c) {
					return _0x5ea4f2.off('loadstart', _0xbc00be);
				});
			}, _0x26296b.prototype.proxyNativeTracks_ = function _0x25e643() {
				var _0x30cf20 = this;
				_0x3d5974.names.forEach(function (_0x544166) {
					_0x30cf20.proxyNativeTracksForType_(_0x544166);
				});
			}, _0x26296b.prototype.createEl = function _0x5a8a72() {
				var _0x2df3e0 = this.options_.tag;
				if (!_0x2df3e0 || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {
					if (_0x2df3e0) {
						var _0x474f71 = _0x2df3e0.cloneNode(true);
						if (_0x2df3e0.parentNode) {
							_0x2df3e0.parentNode.insertBefore(_0x474f71, _0x2df3e0);
						}
						_0x26296b.disposeMediaElement(_0x2df3e0);
						_0x2df3e0 = _0x474f71;
					} else {
						_0x2df3e0 = _0x19e198.createElement('video');
						var _0x1d267d = this.options_.tag && _0x52bddd(this.options_.tag), _0x1848cd = _0x2585aa({}, _0x1d267d);
						if (!_0x363ca1 || this.options_.nativeControlsForTouch !== true) {
							delete _0x1848cd.controls;
						}
						_0x350d94(_0x2df3e0, _0x2e82a9(_0x1848cd, {
							'id': this.options_.techId,
							'class': 'vjs-tech'
						}));
					}
					_0x2df3e0.playerId = this.options_.playerId;
				}
				if (typeof this.options_.preload !== 'undefined') {
					_0x1e9a6d(_0x2df3e0, 'preload', this.options_.preload);
				}
				var _0xd0872d = [
					'loop',
					'muted',
					'playsinline',
					'autoplay'
				];
				for (var _0x24cd05 = 0; _0x24cd05 < _0xd0872d.length; _0x24cd05++) {
					var _0x223d94 = _0xd0872d[_0x24cd05], _0x3e174d = this.options_[_0x223d94];
					if (typeof _0x3e174d !== 'undefined') {
						if (_0x3e174d) {
							_0x1e9a6d(_0x2df3e0, _0x223d94, _0x223d94);
						} else {
							_0x23c504(_0x2df3e0, _0x223d94);
						}
						_0x2df3e0[_0x223d94] = _0x3e174d;
					}
				}
				return _0x2df3e0;
			}, _0x26296b.prototype.handleLateInit_ = function _0x3cba96(_0x1541b6) {
				if (_0x1541b6.networkState === 0 || _0x1541b6.networkState === 3) {
					return;
				}
				if (_0x1541b6.readyState === 0) {
					var _0xa3e3bf = false, _0x5b6f6c = function _0x384468() {
						_0xa3e3bf = true;
					};
					this.on('loadstart', _0x5b6f6c);
					var _0x4587ca = function _0xa4af62() {
						if (!_0xa3e3bf) {
							this.trigger('loadstart');
						}
					};
					this.on('loadedmetadata', _0x4587ca);
					this.ready(function () {
						this.off('loadstart', _0x5b6f6c);
						this.off('loadedmetadata', _0x4587ca);
						if (!_0xa3e3bf) {
							this.trigger('loadstart');
						}
					});
					return;
				}
				var _0x125032 = ['loadstart'];
				_0x125032.push('loadedmetadata');
				if (_0x1541b6.readyState >= 2) {
					_0x125032.push('loadeddata');
				}
				if (_0x1541b6.readyState >= 3) {
					_0x125032.push('canplay');
				}
				if (_0x1541b6.readyState >= 4) {
					_0x125032.push('canplaythrough');
				}
				this.ready(function () {
					_0x125032.forEach(function (_0x543dc9) {
						this.trigger(_0x543dc9);
					}, this);
				});
			}, _0x26296b.prototype.setCurrentTime = function _0x53ab54(_0x1d5d41) {
				try {
					this.el_.currentTime = _0x1d5d41;
				} catch (_0x1b7ccc) {
					_0x4155c5(_0x1b7ccc, 'Video is not ready. (Video.js)');
				}
			}, _0x26296b.prototype.duration = function _0x3ba151() {
				var _0x1c47e2 = this;
				if (this.el_.duration === Infinity && _0x440e94 && _0x2c8fe3 && this.el_.currentTime === 0) {
					var _0x41dd88 = function _0x5784a1() {
						if (_0x1c47e2.el_.currentTime > 0) {
							if (_0x1c47e2.el_.duration === Infinity) {
								_0x1c47e2.trigger('durationchange');
							}
							_0x1c47e2.off('timeupdate', _0x5784a1);
						}
					};
					return this.on('timeupdate', _0x41dd88), NaN;
				}
				return this.el_.duration || NaN;
			}, _0x26296b.prototype.width = function _0x4d1a94() {
				return this.el_.offsetWidth;
			}, _0x26296b.prototype.height = function _0x5d0412() {
				return this.el_.offsetHeight;
			}, _0x26296b.prototype.proxyWebkitFullscreen_ = function _0x3679dd() {
				var _0x213664 = this;
				if (!('webkitDisplayingFullscreen' in this.el_)) {
					return;
				}
				var _0x560ec3 = function _0x29c959() {
					this.trigger('fullscreenchange', { 'isFullscreen': false });
				}, _0x461039 = function _0x5963e9() {
					'webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture' && (this.one('webkitendfullscreen', _0x560ec3), this.trigger('fullscreenchange', { 'isFullscreen': true }));
				};
				this.on('webkitbeginfullscreen', _0x461039);
				this.on('dispose', function () {
					_0x213664.off('webkitbeginfullscreen', _0x461039);
					_0x213664.off('webkitendfullscreen', _0x560ec3);
				});
			}, _0x26296b.prototype.supportsFullScreen = function _0x828572() {
				if (typeof this.el_.webkitEnterFullScreen === 'function') {
					var _0x54ccd5 = _0x504cd5.navigator && _0x504cd5.navigator.userAgent || '';
					if (/Android/.test(_0x54ccd5) || !/Chrome|Mac OS X 10.5/.test(_0x54ccd5)) {
						return true;
					}
				}
				return false;
			}, _0x26296b.prototype.enterFullScreen = function _0x295d52() {
				var _0x4b5a9e = this.el_;
				if (_0x4b5a9e.paused && _0x4b5a9e.networkState <= _0x4b5a9e.HAVE_METADATA) {
					this.el_.play();
					this.setTimeout(function () {
						_0x4b5a9e.pause();
						_0x4b5a9e.webkitEnterFullScreen();
					}, 0);
				} else {
					_0x4b5a9e.webkitEnterFullScreen();
				}
			}, _0x26296b.prototype.exitFullScreen = function _0x203e7f() {
				this.el_.webkitExitFullScreen();
			}, _0x26296b.prototype.src = function _0x497337(_0x524047) {
				if (_0x524047 === undefined) {
					return this.el_.src;
				}
				this.setSrc(_0x524047);
			}, _0x26296b.prototype.reset = function _0x35b0e0() {
				_0x26296b.resetMediaElement(this.el_);
			}, _0x26296b.prototype.currentSrc = function _0x1857d2() {
				if (this.currentSource_) {
					return this.currentSource_.src;
				}
				return this.el_.currentSrc;
			}, _0x26296b.prototype.setControls = function _0x3d5fd1(_0x2809b7) {
				this.el_.controls = !!_0x2809b7;
			}, _0x26296b.prototype.addTextTrack = function _0x2e2c8d(_0x1e9215, _0x16f213, _0x1ae5ec) {
				if (!this.featuresNativeTextTracks) {
					return _0x53d0e2.prototype.addTextTrack.call(this, _0x1e9215, _0x16f213, _0x1ae5ec);
				}
				return this.el_.addTextTrack(_0x1e9215, _0x16f213, _0x1ae5ec);
			}, _0x26296b.prototype.createRemoteTextTrack = function _0x1983d8(_0x5e9727) {
				if (!this.featuresNativeTextTracks) {
					return _0x53d0e2.prototype.createRemoteTextTrack.call(this, _0x5e9727);
				}
				var _0x4e2b2a = _0x19e198.createElement('track');
				if (_0x5e9727.kind) {
					_0x4e2b2a.kind = _0x5e9727.kind;
				}
				if (_0x5e9727.label) {
					_0x4e2b2a.label = _0x5e9727.label;
				}
				if (_0x5e9727.language || _0x5e9727.srclang) {
					_0x4e2b2a.srclang = _0x5e9727.language || _0x5e9727.srclang;
				}
				if (_0x5e9727.default) {
					_0x4e2b2a.default = _0x5e9727.default;
				}
				if (_0x5e9727.id) {
					_0x4e2b2a.id = _0x5e9727.id;
				}
				if (_0x5e9727.src) {
					_0x4e2b2a.src = _0x5e9727.src;
				}
				return _0x4e2b2a;
			}, _0x26296b.prototype.addRemoteTextTrack = function _0x3e974c(_0x284bfe, _0x548dd0) {
				var _0x91e754 = _0x53d0e2.prototype.addRemoteTextTrack.call(this, _0x284bfe, _0x548dd0);
				if (this.featuresNativeTextTracks) {
					this.el().appendChild(_0x91e754);
				}
				return _0x91e754;
			}, _0x26296b.prototype.removeRemoteTextTrack = function _0x2022ec(_0x240448) {
				_0x53d0e2.prototype.removeRemoteTextTrack.call(this, _0x240448);
				if (this.featuresNativeTextTracks) {
					var _0x22ac4e = this['$$']('track'), _0x22cda5 = _0x22ac4e.length;
					while (_0x22cda5--) {
						if (_0x240448 === _0x22ac4e[_0x22cda5] || _0x240448 === _0x22ac4e[_0x22cda5].track) {
							this.el().removeChild(_0x22ac4e[_0x22cda5]);
						}
					}
				}
			}, _0x26296b.prototype.getVideoPlaybackQuality = function _0x11c6a2() {
				if (typeof this.el().getVideoPlaybackQuality === 'function') {
					return this.el().getVideoPlaybackQuality();
				}
				var _0x29795e = {
					creationTime: _0x504cd5.performance.now(),
					creationTime: _0x504cd5.Date.now() - _0x504cd5.performance.timing.navigationStart
				};
				typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined' && (_0x29795e.droppedVideoFrames = this.el().webkitDroppedFrameCount, _0x29795e.totalVideoFrames = this.el().webkitDecodedFrameCount);
				if (_0x504cd5.performance && typeof _0x504cd5.performance.now === 'function') {
				} else {
					if (_0x504cd5.performance && _0x504cd5.performance.timing && typeof _0x504cd5.performance.timing.navigationStart === 'number') {
					}
				}
				return _0x29795e;
			}, _0x26296b;
		}(_0x11cff8);
		if (_0x202338()) {
			_0x23b26d.TEST_VID = _0x19e198.createElement('video');
			var _0x95b052 = _0x19e198.createElement('track');
			_0x95b052.kind = 'captions';
			_0x95b052.srclang = 'en';
			_0x95b052.label = 'English';
			_0x23b26d.TEST_VID.appendChild(_0x95b052);
		}
		_0x23b26d.isSupported = function () {
			try {
				_0x23b26d.TEST_VID.volume = 0.5;
			} catch (_0x122703) {
				return false;
			}
			return !!(_0x23b26d.TEST_VID && _0x23b26d.TEST_VID.canPlayType);
		};
		_0x23b26d.canPlayType = function (_0x102585) {
			return _0x23b26d.TEST_VID.canPlayType(_0x102585);
		};
		_0x23b26d.canPlaySource = function (_0x5add9f, _0x2d87f3) {
			return _0x23b26d.canPlayType(_0x5add9f.type);
		};
		_0x23b26d.canControlVolume = function () {
			try {
				var _0x5e2840 = _0x23b26d.TEST_VID.volume;
				return _0x23b26d.TEST_VID.volume = _0x5e2840 / 2 + 0.1, _0x5e2840 !== _0x23b26d.TEST_VID.volume;
			} catch (_0x2abc70) {
				return false;
			}
		};
		_0x23b26d.canMuteVolume = function () {
			try {
				var _0x1462ce = _0x23b26d.TEST_VID.muted;
				_0x23b26d.TEST_VID.muted = !_0x1462ce;
				if (_0x23b26d.TEST_VID.muted) {
					_0x1e9a6d(_0x23b26d.TEST_VID, 'muted', 'muted');
				} else {
					_0x23c504(_0x23b26d.TEST_VID, 'muted', 'muted');
				}
				return _0x1462ce !== _0x23b26d.TEST_VID.muted;
			} catch (_0x25984d) {
				return false;
			}
		};
		_0x23b26d.canControlPlaybackRate = function () {
			if (_0x440e94 && _0x2c8fe3 && _0x2f2e62 < 58) {
				return false;
			}
			try {
				var _0x114c45 = _0x23b26d.TEST_VID.playbackRate;
				return _0x23b26d.TEST_VID.playbackRate = _0x114c45 / 2 + 0.1, _0x114c45 !== _0x23b26d.TEST_VID.playbackRate;
			} catch (_0x5a7077) {
				return false;
			}
		};
		_0x23b26d.canOverrideAttributes = function () {
			try {
				var _0x12553e = function _0x153ae8() {
				};
				Object.defineProperty(_0x19e198.createElement('video'), 'src', {
					'get': _0x12553e,
					'set': _0x12553e
				});
				Object.defineProperty(_0x19e198.createElement('audio'), 'src', {
					'get': _0x12553e,
					'set': _0x12553e
				});
				Object.defineProperty(_0x19e198.createElement('video'), 'innerHTML', {
					'get': _0x12553e,
					'set': _0x12553e
				});
				Object.defineProperty(_0x19e198.createElement('audio'), 'innerHTML', {
					'get': _0x12553e,
					'set': _0x12553e
				});
			} catch (_0x1b86d0) {
				return false;
			}
			return true;
		};
		_0x23b26d.supportsNativeTextTracks = function () {
			return _0x3b23ad || _0x31e406 && _0x2c8fe3;
		};
		_0x23b26d.supportsNativeVideoTracks = function () {
			return !!(_0x23b26d.TEST_VID && _0x23b26d.TEST_VID.videoTracks);
		};
		_0x23b26d.supportsNativeAudioTracks = function () {
			return !!(_0x23b26d.TEST_VID && _0x23b26d.TEST_VID.audioTracks);
		};
		_0x23b26d.Events = [
			'loadstart',
			'suspend',
			'abort',
			'error',
			'emptied',
			'stalled',
			'loadedmetadata',
			'loadeddata',
			'canplay',
			'canplaythrough',
			'playing',
			'waiting',
			'seeking',
			'seeked',
			'ended',
			'durationchange',
			'timeupdate',
			'progress',
			'play',
			'pause',
			'ratechange',
			'resize',
			'volumechange'
		];
		_0x23b26d.prototype.featuresVolumeControl = _0x23b26d.canControlVolume();
		_0x23b26d.prototype.featuresMuteControl = _0x23b26d.canMuteVolume();
		_0x23b26d.prototype.featuresPlaybackRate = _0x23b26d.canControlPlaybackRate();
		_0x23b26d.prototype.featuresSourceset = _0x23b26d.canOverrideAttributes();
		_0x23b26d.prototype.movingMediaElementInDOM = !_0x31e406;
		_0x23b26d.prototype.featuresFullscreenResize = true;
		_0x23b26d.prototype.featuresProgressEvents = true;
		_0x23b26d.prototype.featuresTimeupdateEvents = true;
		_0x23b26d.prototype.featuresNativeTextTracks = _0x23b26d.supportsNativeTextTracks();
		_0x23b26d.prototype.featuresNativeVideoTracks = _0x23b26d.supportsNativeVideoTracks();
		_0x23b26d.prototype.featuresNativeAudioTracks = _0x23b26d.supportsNativeAudioTracks();
		var _0x6622b7 = _0x23b26d.TEST_VID && _0x23b26d.TEST_VID.constructor.prototype.canPlayType, _0xa65279 = (_0x23b26d.patchCanPlayType = function () {
			if (_0x581e73 >= 4 && !_0x13fbed && !_0x2c8fe3) {
				_0x23b26d.TEST_VID.constructor.prototype.canPlayType = function (_0x2065d1) {
					if (_0x2065d1 && /^application\/(?:x-|vnd\.apple\.)mpegurl/i.test(_0x2065d1)) {
						return 'maybe';
					}
					return _0x6622b7.call(this, _0x2065d1);
				};
			}
		}, _0x23b26d.unpatchCanPlayType = function () {
			var _0x34303a = _0x23b26d.TEST_VID.constructor.prototype.canPlayType;
			return _0x23b26d.TEST_VID.constructor.prototype.canPlayType = _0x6622b7, _0x34303a;
		}, _0x23b26d.patchCanPlayType(), _0x23b26d.disposeMediaElement = function (_0x27724d) {
			if (!_0x27724d) {
				return;
			}
			if (_0x27724d.parentNode) {
				_0x27724d.parentNode.removeChild(_0x27724d);
			}
			while (_0x27724d.hasChildNodes()) {
				_0x27724d.removeChild(_0x27724d.firstChild);
			}
			_0x27724d.removeAttribute('src');
			if (typeof _0x27724d.load === 'function') {
				(function () {
					try {
						_0x27724d.load();
					} catch (_0x5936d6) {
					}
				}());
			}
		}, _0x23b26d.resetMediaElement = function (_0x431f9e) {
			if (!_0x431f9e) {
				return;
			}
			var _0x45cdad = _0x431f9e.querySelectorAll('source'), _0x135e7b = _0x45cdad.length;
			while (_0x135e7b--) {
				_0x431f9e.removeChild(_0x45cdad[_0x135e7b]);
			}
			_0x431f9e.removeAttribute('src');
			if (typeof _0x431f9e.load === 'function') {
				(function () {
					try {
						_0x431f9e.load();
					} catch (_0x34beea) {
					}
				}());
			}
		}, [
			'muted',
			'defaultMuted',
			'autoplay',
			'controls',
			'loop',
			'playsinline'
		].forEach(function (_0x26816a) {
			_0x23b26d.prototype[_0x26816a] = function () {
				return this.el_[_0x26816a] || this.el_.hasAttribute(_0x26816a);
			};
		}), [
			'muted',
			'defaultMuted',
			'autoplay',
			'loop',
			'playsinline'
		].forEach(function (_0x5856bd) {
			_0x23b26d.prototype['set' + _0x363c2b(_0x5856bd)] = function (_0x35e574) {
				this.el_[_0x5856bd] = _0x35e574;
				if (_0x35e574) {
					this.el_.setAttribute(_0x5856bd, _0x5856bd);
				} else {
					this.el_.removeAttribute(_0x5856bd);
				}
			};
		}), [
			'paused',
			'currentTime',
			'buffered',
			'volume',
			'poster',
			'preload',
			'error',
			'seeking',
			'seekable',
			'ended',
			'playbackRate',
			'defaultPlaybackRate',
			'played',
			'networkState',
			'readyState',
			'videoWidth',
			'videoHeight'
		].forEach(function (_0x4a1306) {
			_0x23b26d.prototype[_0x4a1306] = function () {
				return this.el_[_0x4a1306];
			};
		}), [
			'volume',
			'src',
			'poster',
			'preload',
			'playbackRate',
			'defaultPlaybackRate'
		].forEach(function (_0xc5a1a0) {
			_0x23b26d.prototype['set' + _0x363c2b(_0xc5a1a0)] = function (_0x4acc9b) {
				this.el_[_0xc5a1a0] = _0x4acc9b;
			};
		}), [
			'pause',
			'load',
			'play'
		].forEach(function (_0x46de0a) {
			_0x23b26d.prototype[_0x46de0a] = function () {
				return this.el_[_0x46de0a]();
			};
		}), _0x11cff8.withSourceHandlers(_0x23b26d), _0x23b26d.nativeSourceHandler = {}, _0x23b26d.nativeSourceHandler.canPlayType = function (_0xec1e39) {
			try {
				return _0x23b26d.TEST_VID.canPlayType(_0xec1e39);
			} catch (_0x265f07) {
				return '';
			}
		}, _0x23b26d.nativeSourceHandler.canHandleSource = function (_0x4b7917, _0x5a70ba) {
			if (_0x4b7917.type) {
				return _0x23b26d.nativeSourceHandler.canPlayType(_0x4b7917.type);
			} else {
				if (_0x4b7917.src) {
					var _0x3d11b9 = _0x301eb1(_0x4b7917.src);
					return _0x23b26d.nativeSourceHandler.canPlayType('video/' + _0x3d11b9);
				}
			}
			return '';
		}, _0x23b26d.nativeSourceHandler.handleSource = function (_0x8570d8, _0x35c612, _0x59e23b) {
			_0x35c612.setSrc(_0x8570d8.src);
		}, _0x23b26d.nativeSourceHandler.dispose = function () {
		}, _0x23b26d.registerSourceHandler(_0x23b26d.nativeSourceHandler), _0x11cff8.registerTech('Html5', _0x23b26d), _0x1b1ded(['\n        Using the tech directly can be dangerous. I hope you know what you\'re doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      '], ['\n        Using the tech directly can be dangerous. I hope you know what you\'re doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      '])), _0x500793 = [
			'progress',
			'abort',
			'suspend',
			'emptied',
			'stalled',
			'loadedmetadata',
			'loadeddata',
			'timeupdate',
			'resize',
			'volumechange',
			'texttrackchange'
		], _0x3b6b3e = {
			'canplay': 'CanPlay',
			'canplaythrough': 'CanPlayThrough',
			'playing': 'Playing',
			'seeked': 'Seeked'
		}, _0x3aa936 = function (_0x42920d) {
			_0x2d47a2(_0x14964f, _0x42920d);
			function _0x14964f(_0x10ea9c, _0x11a52a, _0x20fa53) {
				_0x7a6cc0(this, _0x14964f);
				_0x10ea9c.id = _0x10ea9c.id || _0x11a52a.id || 'vjs_video_' + _0x1a4203();
				_0x11a52a = _0x2e82a9(_0x14964f.getTagSettings(_0x10ea9c), _0x11a52a);
				_0x11a52a.initChildren = false;
				_0x11a52a.createEl = false;
				_0x11a52a.evented = false;
				_0x11a52a.reportTouchActivity = false;
				if (!_0x11a52a.language) {
					if (typeof _0x10ea9c.closest === 'function') {
						var _0x427af4 = _0x10ea9c.closest('[lang]');
						if (_0x427af4 && _0x427af4.getAttribute) {
							_0x11a52a.language = _0x427af4.getAttribute('lang');
						}
					} else {
						var _0x4bbace = _0x10ea9c;
						while (_0x4bbace && _0x4bbace.nodeType === 1) {
							if (_0x52bddd(_0x4bbace).hasOwnProperty('lang')) {
								_0x11a52a.language = _0x4bbace.getAttribute('lang');
								break;
							}
							_0x4bbace = _0x4bbace.parentNode;
						}
					}
				}
				var _0x3cb780 = _0x1ab72f(this, _0x42920d.call(this, null, _0x11a52a, _0x20fa53));
				_0x3cb780.isPosterFromTech_ = false;
				_0x3cb780.queuedCallbacks_ = [];
				_0x3cb780.isReady_ = false;
				_0x3cb780.hasStarted_ = false;
				_0x3cb780.userActive_ = false;
				if (!_0x3cb780.options_ || !_0x3cb780.options_.techOrder || !_0x3cb780.options_.techOrder.length) {
					throw new Error('No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?');
				}
				_0x3cb780.tag = _0x10ea9c;
				_0x3cb780.tagAttributes = _0x10ea9c && _0x52bddd(_0x10ea9c);
				_0x3cb780.language(_0x3cb780.options_.language);
				if (_0x11a52a.languages) {
					var _0x5a79b6 = {};
					Object.getOwnPropertyNames(_0x11a52a.languages).forEach(function (_0x56824d) {
						_0x5a79b6[_0x56824d.toLowerCase()] = _0x11a52a.languages[_0x56824d];
					});
					_0x3cb780.languages_ = _0x5a79b6;
				} else {
					_0x3cb780.languages_ = _0x14964f.prototype.options_.languages;
				}
				_0x3cb780.cache_ = {};
				_0x3cb780.poster_ = _0x11a52a.poster || '';
				_0x3cb780.controls_ = !!_0x11a52a.controls;
				_0x3cb780.cache_.lastVolume = 1;
				_0x10ea9c.controls = false;
				_0x10ea9c.removeAttribute('controls');
				if (_0x10ea9c.hasAttribute('autoplay')) {
					_0x3cb780.options_.autoplay = true;
				} else {
					_0x3cb780.autoplay(_0x3cb780.options_.autoplay);
				}
				_0x3cb780.scrubbing_ = false;
				_0x3cb780.el_ = _0x3cb780.createEl();
				_0x3cb780.cache_.lastPlaybackRate = _0x3cb780.defaultPlaybackRate();
				_0x2fa2ea(_0x3cb780, { 'eventBusKey': 'el_' });
				var _0x42d903 = _0x2585aa(_0x3cb780.options_);
				if (_0x11a52a.plugins) {
					var _0x3b78d8 = _0x11a52a.plugins;
					Object.keys(_0x3b78d8).forEach(function (_0x5324f8) {
						if (typeof this[_0x5324f8] === 'function') {
							this[_0x5324f8](_0x3b78d8[_0x5324f8]);
						} else {
							throw new Error('plugin "' + _0x5324f8 + '" does not exist');
						}
					}, _0x3cb780);
				}
				_0x3cb780.options_.playerOptions = _0x42d903;
				_0x3cb780.middleware_ = [];
				_0x3cb780.initChildren();
				_0x3cb780.isAudio(_0x10ea9c.nodeName.toLowerCase() === 'audio');
				if (_0x3cb780.controls()) {
					_0x3cb780.addClass('vjs-controls-enabled');
				} else {
					_0x3cb780.addClass('vjs-controls-disabled');
				}
				_0x3cb780.el_.setAttribute('role', 'region');
				if (_0x3cb780.isAudio()) {
					_0x3cb780.el_.setAttribute('aria-label', _0x3cb780.localize('Audio Player'));
				} else {
					_0x3cb780.el_.setAttribute('aria-label', _0x3cb780.localize('Video Player'));
				}
				if (_0x3cb780.isAudio()) {
					_0x3cb780.addClass('vjs-audio');
				}
				if (_0x3cb780.flexNotSupported_()) {
					_0x3cb780.addClass('vjs-no-flex');
				}
				if (!_0x31e406) {
					_0x3cb780.addClass('vjs-workinghover');
				}
				_0x14964f.players[_0x3cb780.id_] = _0x3cb780;
				var _0x24dd09 = _0x4b1ff3.split('.')[0];
				return _0x3cb780.addClass('vjs-v' + _0x24dd09), _0x3cb780.userActive(true), _0x3cb780.reportUserActivity(), _0x3cb780.one('play', _0x3cb780.listenForUserActivity_), _0x3cb780.on('fullscreenchange', _0x3cb780.handleFullscreenChange_), _0x3cb780.on('stageclick', _0x3cb780.handleStageClick_), _0x3cb780.changingSrc_ = false, _0x3cb780.playWaitingForReady_ = false, _0x3cb780.playOnLoadstart_ = null, _0x3cb780;
			}
			return _0x14964f.prototype.dispose = function _0x50da03() {
				this.trigger('dispose');
				this.off('dispose');
				this.styleEl_ && this.styleEl_.parentNode && (this.styleEl_.parentNode.removeChild(this.styleEl_), this.styleEl_ = null);
				_0x14964f.players[this.id_] = null;
				if (this.tag && this.tag.player) {
					this.tag.player = null;
				}
				if (this.el_ && this.el_.player) {
					this.el_.player = null;
				}
				this.tech_ && (this.tech_.dispose(), this.isPosterFromTech_ = false, this.poster_ = '');
				if (this.playerElIngest_) {
					this.playerElIngest_ = null;
				}
				if (this.tag) {
					this.tag = null;
				}
				_0xf072a4(this);
				_0x42920d.prototype.dispose.call(this);
			}, _0x14964f.prototype.createEl = function _0x2a9f29() {
				var _0x4f5a4a = this.tag, _0x247169 = void 0, _0x14805f = this.playerElIngest_ = _0x4f5a4a.parentNode && _0x4f5a4a.parentNode.hasAttribute && _0x4f5a4a.parentNode.hasAttribute('data-vjs-player'), _0x32a535 = this.tag.tagName.toLowerCase() === 'video-js';
				if (_0x14805f) {
					_0x247169 = this.el_ = _0x4f5a4a.parentNode;
				} else {
					if (!_0x32a535) {
						_0x247169 = this.el_ = _0x42920d.prototype.createEl.call(this, 'div');
					}
				}
				var _0x335d22 = _0x52bddd(_0x4f5a4a);
				if (_0x32a535) {
					_0x247169 = this.el_ = _0x4f5a4a;
					_0x4f5a4a = this.tag = _0x19e198.createElement('video');
					while (_0x247169.children.length) {
						_0x4f5a4a.appendChild(_0x247169.firstChild);
					}
					if (!_0x1b9851(_0x247169, 'video-js')) {
						_0x58fceb(_0x247169, 'video-js');
					}
					_0x247169.appendChild(_0x4f5a4a);
					_0x14805f = this.playerElIngest_ = _0x247169;
					Object.keys(_0x247169).forEach(function (_0x1bec08) {
						_0x4f5a4a[_0x1bec08] = _0x247169[_0x1bec08];
					});
				}
				_0x4f5a4a.setAttribute('tabindex', '-1');
				if (_0x21fa8a) {
					_0x4f5a4a.setAttribute('role', 'application');
				}
				_0x4f5a4a.removeAttribute('width');
				_0x4f5a4a.removeAttribute('height');
				Object.getOwnPropertyNames(_0x335d22).forEach(function (_0x3aa6af) {
					if (!(_0x32a535 && _0x3aa6af === 'class')) {
						_0x247169.setAttribute(_0x3aa6af, _0x335d22[_0x3aa6af]);
					}
					if (_0x32a535) {
						_0x4f5a4a.setAttribute(_0x3aa6af, _0x335d22[_0x3aa6af]);
					}
				});
				_0x4f5a4a.playerId = _0x4f5a4a.id;
				_0x4f5a4a.id += '_html5_api';
				_0x4f5a4a.className = 'vjs-tech';
				_0x4f5a4a.player = _0x247169.player = this;
				this.addClass('vjs-paused');
				if (_0x504cd5.VIDEOJS_NO_DYNAMIC_STYLE !== true) {
					this.styleEl_ = _0x2c39ec('vjs-styles-dimensions');
					var _0x28615f = _0x4cda25('.vjs-styles-defaults'), _0xd5a539 = _0x4cda25('head');
					_0xd5a539.insertBefore(this.styleEl_, _0x28615f ? _0x28615f.nextSibling : _0xd5a539.firstChild);
				}
				this.width(this.options_.width);
				this.height(this.options_.height);
				this.fluid(this.options_.fluid);
				this.aspectRatio(this.options_.aspectRatio);
				var _0x4adc93 = _0x4f5a4a.getElementsByTagName('a');
				for (var _0x25571b = 0; _0x25571b < _0x4adc93.length; _0x25571b++) {
					var _0x34869a = _0x4adc93.item(_0x25571b);
					_0x58fceb(_0x34869a, 'vjs-hidden');
					_0x34869a.setAttribute('hidden', 'hidden');
				}
				_0x4f5a4a.initNetworkState_ = _0x4f5a4a.networkState;
				if (_0x4f5a4a.parentNode && !_0x14805f) {
					_0x4f5a4a.parentNode.insertBefore(_0x247169, _0x4f5a4a);
				}
				return _0x55a4e6(_0x4f5a4a, _0x247169), this.children_.unshift(_0x4f5a4a), this.el_.setAttribute('lang', this.language_), this.el_ = _0x247169, _0x247169;
			}, _0x14964f.prototype.width = function _0x827890(_0x5894f6) {
				return this.dimension('width', _0x5894f6);
			}, _0x14964f.prototype.height = function _0x1fca5a(_0x1e9141) {
				return this.dimension('height', _0x1e9141);
			}, _0x14964f.prototype.dimension = function _0x5a8b5e(_0x58d64c, _0x173416) {
				var _0xd60f80 = _0x58d64c + '_';
				if (_0x173416 === undefined) {
					return this[_0xd60f80] || 0;
				}
				if (_0x173416 === '') {
					this[_0xd60f80] = undefined;
					this.updateStyleEl_();
					return;
				}
				var _0x40214d = parseFloat(_0x173416);
				if (isNaN(_0x40214d)) {
					_0x4155c5.error('Improper value "' + _0x173416 + '" supplied for for ' + _0x58d64c);
					return;
				}
				this[_0xd60f80] = _0x40214d;
				this.updateStyleEl_();
			}, _0x14964f.prototype.fluid = function _0x34e8a8(_0x2203d9) {
				if (_0x2203d9 === undefined) {
					return !!this.fluid_;
				}
				this.fluid_ = !!_0x2203d9;
				if (_0x2203d9) {
					this.addClass('vjs-fluid');
				} else {
					this.removeClass('vjs-fluid');
				}
				this.updateStyleEl_();
			}, _0x14964f.prototype.aspectRatio = function _0x51b857(_0x232572) {
				if (_0x232572 === undefined) {
					return this.aspectRatio_;
				}
				if (!/^\d+\:\d+$/.test(_0x232572)) {
					throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');
				}
				this.aspectRatio_ = _0x232572;
				this.fluid(true);
				this.updateStyleEl_();
			}, _0x14964f.prototype.updateStyleEl_ = function _0x114984() {
				if (_0x504cd5.VIDEOJS_NO_DYNAMIC_STYLE === true) {
					var _0x2cda69 = typeof this.width_ === 'number' ? this.width_ : this.options_.width, _0x400910 = typeof this.height_ === 'number' ? this.height_ : this.options_.height, _0x49bcfa = this.tech_ && this.tech_.el();
					if (_0x49bcfa) {
						if (_0x2cda69 >= 0) {
							_0x49bcfa.width = _0x2cda69;
						}
						if (_0x400910 >= 0) {
							_0x49bcfa.height = _0x400910;
						}
					}
					return;
				}
				var _0x4a4c9e = void 0, _0x3edbda = void 0, _0x34ed46 = void 0, _0x5ea329 = void 0;
				if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {
					_0x34ed46 = this.aspectRatio_;
				} else {
					if (this.videoWidth() > 0) {
						_0x34ed46 = this.videoWidth() + ':' + this.videoHeight();
					} else {
						_0x34ed46 = '16:9';
					}
				}
				var _0x250f25 = _0x34ed46.split(':'), _0xbb6fcd = _0x250f25[1] / _0x250f25[0];
				if (this.width_ !== undefined) {
					_0x4a4c9e = this.width_;
				} else {
					if (this.height_ !== undefined) {
						_0x4a4c9e = this.height_ / _0xbb6fcd;
					} else {
						_0x4a4c9e = this.videoWidth() || 300;
					}
				}
				if (this.height_ !== undefined) {
					_0x3edbda = this.height_;
				} else {
					_0x3edbda = _0x4a4c9e * _0xbb6fcd;
				}
				if (/^[^a-zA-Z]/.test(this.id())) {
					_0x5ea329 = 'dimensions-' + this.id();
				} else {
					_0x5ea329 = this.id() + '-dimensions';
				}
				this.addClass(_0x5ea329);
				_0x526a82(this.styleEl_, '\n      .' + _0x5ea329 + ' {\n        width: ' + _0x4a4c9e + 'px;\n        height: ' + _0x3edbda + 'px;\n      }\n\n      .' + _0x5ea329 + '.vjs-fluid {\n        padding-top: ' + _0xbb6fcd * 100 + '%;\n      }\n    ');
			}, _0x14964f.prototype.loadTech_ = function _0x414c23(_0x43f43f, _0x30cb5f) {
				var _0x201b0c = this;
				if (this.tech_) {
					this.unloadTech_();
				}
				var _0x1f748c = _0x363c2b(_0x43f43f), _0x5a6b71 = _0x43f43f.charAt(0).toLowerCase() + _0x43f43f.slice(1);
				_0x1f748c !== 'Html5' && this.tag && (_0x11cff8.getTech('Html5').disposeMediaElement(this.tag), this.tag.player = null, this.tag = null);
				this.techName_ = _0x1f748c;
				this.isReady_ = false;
				var _0x5298b4 = typeof this.autoplay() === 'string' ? false : this.autoplay(), _0x237b98 = {
					'source': _0x30cb5f,
					'autoplay': _0x5298b4,
					'nativeControlsForTouch': this.options_.nativeControlsForTouch,
					'playerId': this.id(),
					'techId': this.id() + '_' + _0x1f748c + '_api',
					'playsinline': this.options_.playsinline,
					'preload': this.options_.preload,
					'loop': this.options_.loop,
					'muted': this.options_.muted,
					'poster': this.poster(),
					'language': this.language(),
					'playerElIngest': this.playerElIngest_ || false,
					'vtt.js': this.options_['vtt.js'],
					'canOverridePoster': !!this.options_.techCanOverridePoster,
					'enableSourceset': this.options_.enableSourceset
				};
				_0x2449f5.names.forEach(function (_0x425be3) {
					var _0x1911bd = _0x2449f5[_0x425be3];
					_0x237b98[_0x1911bd.getterName] = _0x201b0c[_0x1911bd.privateName];
				});
				_0x2e82a9(_0x237b98, this.options_[_0x1f748c]);
				_0x2e82a9(_0x237b98, this.options_[_0x5a6b71]);
				_0x2e82a9(_0x237b98, this.options_[_0x43f43f.toLowerCase()]);
				if (this.tag) {
					_0x237b98.tag = this.tag;
				}
				if (_0x30cb5f && _0x30cb5f.src === this.cache_.src && this.cache_.currentTime > 0) {
					_0x237b98.startTime = this.cache_.currentTime;
				}
				var _0x194126 = _0x11cff8.getTech(_0x43f43f);
				if (!_0x194126) {
					throw new Error('No Tech named \'' + _0x1f748c + '\' exists! \'' + _0x1f748c + '\' should be registered using videojs.registerTech()\'');
				}
				this.tech_ = new _0x194126(_0x237b98);
				this.tech_.ready(_0x5957d4(this, this.handleTechReady_), true);
				_0x228b90.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);
				_0x500793.forEach(function (_0x38bd78) {
					_0x201b0c.on(_0x201b0c.tech_, _0x38bd78, _0x201b0c['handleTech' + _0x363c2b(_0x38bd78) + '_']);
				});
				Object.keys(_0x3b6b3e).forEach(function (_0x212cc2) {
					_0x201b0c.on(_0x201b0c.tech_, _0x212cc2, function (_0x1426b8) {
						if (_0x201b0c.tech_.playbackRate() === 0 && _0x201b0c.tech_.seeking()) {
							_0x201b0c.queuedCallbacks_.push({
								'callback': _0x201b0c['handleTech' + _0x3b6b3e[_0x212cc2] + '_'].bind(_0x201b0c),
								'event': _0x1426b8
							});
							return;
						}
						_0x201b0c['handleTech' + _0x3b6b3e[_0x212cc2] + '_'](_0x1426b8);
					});
				});
				this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);
				this.on(this.tech_, 'sourceset', this.handleTechSourceset_);
				this.on(this.tech_, 'waiting', this.handleTechWaiting_);
				this.on(this.tech_, 'ended', this.handleTechEnded_);
				this.on(this.tech_, 'seeking', this.handleTechSeeking_);
				this.on(this.tech_, 'play', this.handleTechPlay_);
				this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);
				this.on(this.tech_, 'pause', this.handleTechPause_);
				this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);
				this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);
				this.on(this.tech_, 'error', this.handleTechError_);
				this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);
				this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);
				this.on(this.tech_, 'textdata', this.handleTechTextData_);
				this.on(this.tech_, 'ratechange', this.handleTechRateChange_);
				this.usingNativeControls(this.techGet_('controls'));
				if (this.controls() && !this.usingNativeControls()) {
					this.addTechControlsListeners_();
				}
				if (this.tech_.el().parentNode !== this.el() && (_0x1f748c !== 'Html5' || !this.tag)) {
					_0x55a4e6(this.tech_.el(), this.el());
				}
				this.tag && (this.tag.player = null, this.tag = null);
			}, _0x14964f.prototype.unloadTech_ = function _0x51c9d6() {
				var _0x52fc47 = this;
				_0x2449f5.names.forEach(function (_0x55e6e1) {
					var _0x5968d6 = _0x2449f5[_0x55e6e1];
					_0x52fc47[_0x5968d6.privateName] = _0x52fc47[_0x5968d6.getterName]();
				});
				this.textTracksJson_ = _0x228b90.textTracksToJson(this.tech_);
				this.isReady_ = false;
				this.tech_.dispose();
				this.tech_ = false;
				this.isPosterFromTech_ && (this.poster_ = '', this.trigger('posterchange'));
				this.isPosterFromTech_ = false;
			}, _0x14964f.prototype.tech = function _0x4b61e5(_0x4d62d2) {
				if (_0x4d62d2 === undefined) {
					_0x4155c5.warn(_0x490e57(_0xa65279));
				}
				return this.tech_;
			}, _0x14964f.prototype.addTechControlsListeners_ = function _0x5cdb76() {
				this.removeTechControlsListeners_();
				this.on(this.tech_, 'mousedown', this.handleTechClick_);
				this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);
				this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);
				this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);
				this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);
				this.on(this.tech_, 'tap', this.handleTechTap_);
			}, _0x14964f.prototype.removeTechControlsListeners_ = function _0x306fd5() {
				this.off(this.tech_, 'tap', this.handleTechTap_);
				this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);
				this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);
				this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);
				this.off(this.tech_, 'mousedown', this.handleTechClick_);
				this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);
			}, _0x14964f.prototype.handleTechReady_ = function _0x51a1fd() {
				this.triggerReady();
				if (this.cache_.volume) {
					this.techCall_('setVolume', this.cache_.volume);
				}
				this.handleTechPosterChange_();
				this.handleTechDurationChange_();
			}, _0x14964f.prototype.handleTechLoadStart_ = function _0x554cd6() {
				this.removeClass('vjs-ended');
				this.removeClass('vjs-seeking');
				this.error(null);
				!this.paused() ? (this.trigger('loadstart'), this.trigger('firstplay')) : (this.hasStarted(false), this.trigger('loadstart'));
				this.manualAutoplay_(this.autoplay());
			}, _0x14964f.prototype.manualAutoplay_ = function _0x2e3b4f(_0x10e280) {
				var _0x142c83 = this;
				if (!this.tech_ || typeof _0x10e280 !== 'string') {
					return;
				}
				var _0xe46d3d = function _0xb73c87() {
					var _0x339748 = _0x142c83.muted();
					_0x142c83.muted(true);
					var _0x106c83 = _0x142c83.play();
					if (!_0x106c83 || !_0x106c83.then || !_0x106c83.catch) {
						return;
					}
					return _0x106c83.catch(function (_0x389de7) {
						_0x142c83.muted(_0x339748);
					});
				}, _0x2b1bd1 = void 0;
				if (_0x10e280 === 'any') {
					_0x2b1bd1 = this.play();
					if (_0x2b1bd1 && _0x2b1bd1.then && _0x2b1bd1.catch) {
						_0x2b1bd1.catch(function () {
							return _0xe46d3d();
						});
					}
				} else {
					if (_0x10e280 === 'muted') {
						_0x2b1bd1 = _0xe46d3d();
					} else {
						_0x2b1bd1 = this.play();
					}
				}
				if (!_0x2b1bd1 || !_0x2b1bd1.then || !_0x2b1bd1.catch) {
					return;
				}
				return _0x2b1bd1.then(function () {
					_0x142c83.trigger({
						'type': 'autoplay-success',
						'autoplay': _0x10e280
					});
				}).catch(function (_0x44f543) {
					_0x142c83.trigger({
						'type': 'autoplay-failure',
						'autoplay': _0x10e280
					});
				});
			}, _0x14964f.prototype.updateSourceCaches_ = function _0x4f478a() {
				var _0x1a959b = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '', _0x533f92 = _0x1a959b, _0x2de0ad = '';
				if (typeof _0x533f92 !== 'string') {
					_0x533f92 = _0x1a959b.src;
					_0x2de0ad = _0x1a959b.type;
				}
				if (/^blob:/.test(_0x533f92)) {
					return;
				}
				this.cache_.source = this.cache_.source || {};
				this.cache_.sources = this.cache_.sources || [];
				if (_0x533f92 && !_0x2de0ad) {
					_0x2de0ad = _0x1882b3(this, _0x533f92);
				}
				this.cache_.source = _0x2585aa({}, _0x1a959b, {
					'src': _0x533f92,
					'type': _0x2de0ad
				});
				var _0x2a5ad9 = this.cache_.sources.filter(function (_0x4cb4e1) {
					return _0x4cb4e1.src && _0x4cb4e1.src === _0x533f92;
				}), _0x43e629 = [], _0x54652b = this['$$']('source'), _0x40afe2 = [];
				for (var _0x3c54d9 = 0; _0x3c54d9 < _0x54652b.length; _0x3c54d9++) {
					var _0x2ddc2d = _0x52bddd(_0x54652b[_0x3c54d9]);
					_0x43e629.push(_0x2ddc2d);
					if (_0x2ddc2d.src && _0x2ddc2d.src === _0x533f92) {
						_0x40afe2.push(_0x2ddc2d.src);
					}
				}
				if (_0x40afe2.length && !_0x2a5ad9.length) {
					this.cache_.sources = _0x43e629;
				} else {
					if (!_0x2a5ad9.length) {
						this.cache_.sources = [this.cache_.source];
					}
				}
				this.cache_.src = _0x533f92;
			}, _0x14964f.prototype.handleTechSourceset_ = function _0x338421(_0x3ae15c) {
				var _0xa77bc4 = this;
				if (!this.changingSrc_) {
					this.updateSourceCaches_(_0x3ae15c.src);
					if (!_0x3ae15c.src) {
						var _0x416e4f = function _0x108c5d(_0x349d99) {
							if (_0x349d99.type !== 'sourceset') {
								_0xa77bc4.updateSourceCaches_(_0xa77bc4.techGet_('currentSrc'));
							}
							_0xa77bc4.tech_.off([
								'sourceset',
								'loadstart'
							], _0x108c5d);
						};
						this.tech_.one([
							'sourceset',
							'loadstart'
						], _0x416e4f);
					}
				}
				this.trigger({
					'src': _0x3ae15c.src,
					'type': 'sourceset'
				});
			}, _0x14964f.prototype.hasStarted = function _0x14bb44(_0xa6a8b0) {
				if (_0xa6a8b0 === undefined) {
					return this.hasStarted_;
				}
				if (_0xa6a8b0 === this.hasStarted_) {
					return;
				}
				this.hasStarted_ = _0xa6a8b0;
				if (this.hasStarted_) {
					this.addClass('vjs-has-started');
					this.trigger('firstplay');
				} else {
					this.removeClass('vjs-has-started');
				}
			}, _0x14964f.prototype.handleTechPlay_ = function _0x826a5c() {
				this.removeClass('vjs-ended');
				this.removeClass('vjs-paused');
				this.addClass('vjs-playing');
				this.hasStarted(true);
				this.trigger('play');
			}, _0x14964f.prototype.handleTechRateChange_ = function _0x40d555() {
				this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0 && (this.queuedCallbacks_.forEach(function (_0x154b47) {
					return _0x154b47.callback(_0x154b47.event);
				}), this.queuedCallbacks_ = []);
				this.cache_.lastPlaybackRate = this.tech_.playbackRate();
				this.trigger('ratechange');
			}, _0x14964f.prototype.handleTechWaiting_ = function _0x12bc99() {
				var _0x1db300 = this;
				this.addClass('vjs-waiting');
				this.trigger('waiting');
				this.one('timeupdate', function () {
					return _0x1db300.removeClass('vjs-waiting');
				});
			}, _0x14964f.prototype.handleTechCanPlay_ = function _0x2b1a01() {
				this.removeClass('vjs-waiting');
				this.trigger('canplay');
			}, _0x14964f.prototype.handleTechCanPlayThrough_ = function _0x5a39d8() {
				this.removeClass('vjs-waiting');
				this.trigger('canplaythrough');
			}, _0x14964f.prototype.handleTechPlaying_ = function _0x3b35cc() {
				this.removeClass('vjs-waiting');
				this.trigger('playing');
			}, _0x14964f.prototype.handleTechSeeking_ = function _0x5b8915() {
				this.addClass('vjs-seeking');
				this.trigger('seeking');
			}, _0x14964f.prototype.handleTechSeeked_ = function _0x1849d7() {
				this.removeClass('vjs-seeking');
				this.trigger('seeked');
			}, _0x14964f.prototype.handleTechFirstPlay_ = function _0x168258() {
				this.options_.starttime && (_0x4155c5.warn('Passing the `starttime` option to the player will be deprecated in 6.0'), this.currentTime(this.options_.starttime));
				this.addClass('vjs-has-started');
				this.trigger('firstplay');
			}, _0x14964f.prototype.handleTechPause_ = function _0x1092c2() {
				this.removeClass('vjs-playing');
				this.addClass('vjs-paused');
				this.trigger('pause');
			}, _0x14964f.prototype.handleTechEnded_ = function _0x20a9cf() {
				this.addClass('vjs-ended');
				if (this.options_.loop) {
					this.currentTime(0);
					this.play();
				} else {
					if (!this.paused()) {
						this.pause();
					}
				}
				this.trigger('ended');
			}, _0x14964f.prototype.handleTechDurationChange_ = function _0x3ee48a() {
				this.duration(this.techGet_('duration'));
			}, _0x14964f.prototype.handleTechClick_ = function _0x280f31(_0x2e29ad) {
				if (!_0x3953f7(_0x2e29ad)) {
					return;
				}
				if (!this.controls_) {
					return;
				}
				if (this.paused()) {
					_0x4a9c2c(this.play());
				} else {
					this.pause();
				}
			}, _0x14964f.prototype.handleTechDoubleClick_ = function _0x192c4d(_0x58b661) {
				if (!this.controls_) {
					return;
				}
				var _0x120003 = Array.prototype.some.call(this['$$']('.vjs-control-bar, .vjs-modal-dialog'), function (_0x43e2ba) {
					return _0x43e2ba.contains(_0x58b661.target);
				});
				if (!_0x120003) {
					if (this.isFullscreen()) {
						this.exitFullscreen();
					} else {
						this.requestFullscreen();
					}
				}
			}, _0x14964f.prototype.handleTechTap_ = function _0x3acca2() {
				this.userActive(!this.userActive());
			}, _0x14964f.prototype.handleTechTouchStart_ = function _0xd1456b() {
				this.userWasActive = this.userActive();
			}, _0x14964f.prototype.handleTechTouchMove_ = function _0x333158() {
				if (this.userWasActive) {
					this.reportUserActivity();
				}
			}, _0x14964f.prototype.handleTechTouchEnd_ = function _0x2a6b77(_0x2a6557) {
				_0x2a6557.preventDefault();
			}, _0x14964f.prototype.handleFullscreenChange_ = function _0x33a410() {
				if (this.isFullscreen()) {
					this.addClass('vjs-fullscreen');
				} else {
					this.removeClass('vjs-fullscreen');
				}
			}, _0x14964f.prototype.handleStageClick_ = function _0xf60433() {
				this.reportUserActivity();
			}, _0x14964f.prototype.handleTechFullscreenChange_ = function _0x532425(_0x4ca64b, _0x17cfb4) {
				if (_0x17cfb4) {
					this.isFullscreen(_0x17cfb4.isFullscreen);
				}
				this.trigger('fullscreenchange');
			}, _0x14964f.prototype.handleTechError_ = function _0x2025c3() {
				var _0x5e7525 = this.tech_.error();
				this.error(_0x5e7525);
			}, _0x14964f.prototype.handleTechTextData_ = function _0x4775f6() {
				var _0x9adf7b = null;
				if (arguments.length > 1) {
					_0x9adf7b = arguments[1];
				}
				this.trigger('textdata', _0x9adf7b);
			}, _0x14964f.prototype.getCache = function _0x518979() {
				return this.cache_;
			}, _0x14964f.prototype.techCall_ = function _0x3c1946(_0x12d243, _0x11f30c) {
				this.ready(function () {
					if (_0x12d243 in _0x4d813b) {
						return _0x5ae4ee(this.middleware_, this.tech_, _0x12d243, _0x11f30c);
					} else {
						if (_0x12d243 in _0x588d28) {
							return _0x5d332a(this.middleware_, this.tech_, _0x12d243, _0x11f30c);
						}
					}
					try {
						if (this.tech_) {
							this.tech_[_0x12d243](_0x11f30c);
						}
					} catch (_0x3b28e7) {
						_0x4155c5(_0x3b28e7);
						throw _0x3b28e7;
					}
				}, true);
			}, _0x14964f.prototype.techGet_ = function _0xd6a9b4(_0x46d7e5) {
				if (!this.tech_ || !this.tech_.isReady_) {
					return;
				}
				if (_0x46d7e5 in _0x286e50) {
					return _0x229dbe(this.middleware_, this.tech_, _0x46d7e5);
				} else {
					if (_0x46d7e5 in _0x588d28) {
						return _0x5d332a(this.middleware_, this.tech_, _0x46d7e5);
					}
				}
				try {
					return this.tech_[_0x46d7e5]();
				} catch (_0x3b1903) {
					if (this.tech_[_0x46d7e5] === undefined) {
						_0x4155c5('Video.js: ' + _0x46d7e5 + ' method not defined for ' + this.techName_ + ' playback technology.', _0x3b1903);
						throw _0x3b1903;
					}
					if (_0x3b1903.name === 'TypeError') {
						_0x4155c5('Video.js: ' + _0x46d7e5 + ' unavailable on ' + this.techName_ + ' playback technology element.', _0x3b1903);
						this.tech_.isReady_ = false;
						throw _0x3b1903;
					}
					_0x4155c5(_0x3b1903);
					throw _0x3b1903;
				}
			}, _0x14964f.prototype.play = function _0x39fc5b() {
				var _0x230c73 = this, _0x4f6b83 = this.options_.Promise || _0x504cd5.Promise;
				if (_0x4f6b83) {
					return new _0x4f6b83(function (_0x21566f) {
						_0x230c73.play_(_0x21566f);
					});
				}
				return this.play_();
			}, _0x14964f.prototype.play_ = function _0x44b19a() {
				var _0x550ab1 = this, _0x1ee86a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _0x4a9c2c;
				if (this.playOnLoadstart_) {
					this.off('loadstart', this.playOnLoadstart_);
				}
				if (!this.isReady_) {
					if (this.playWaitingForReady_) {
						return;
					}
					this.playWaitingForReady_ = true;
					this.ready(function () {
						_0x550ab1.playWaitingForReady_ = false;
						_0x1ee86a(_0x550ab1.play());
					});
				} else {
					if (!this.changingSrc_ && (this.src() || this.currentSrc())) {
						_0x1ee86a(this.techGet_('play'));
						return;
					} else {
						this.playOnLoadstart_ = function () {
							_0x550ab1.playOnLoadstart_ = null;
							_0x1ee86a(_0x550ab1.play());
						};
						this.one('loadstart', this.playOnLoadstart_);
					}
				}
			}, _0x14964f.prototype.pause = function _0x5d0938() {
				this.techCall_('pause');
			}, _0x14964f.prototype.paused = function _0x1ef838() {
				return this.techGet_('paused') === false ? false : true;
			}, _0x14964f.prototype.played = function _0x171893() {
				return this.techGet_('played') || _0x5b18c6(0, 0);
			}, _0x14964f.prototype.scrubbing = function _0x22d770(_0x54b0cd) {
				if (typeof _0x54b0cd === 'undefined') {
					return this.scrubbing_;
				}
				this.scrubbing_ = !!_0x54b0cd;
				if (_0x54b0cd) {
					this.addClass('vjs-scrubbing');
				} else {
					this.removeClass('vjs-scrubbing');
				}
			}, _0x14964f.prototype.currentTime = function _0xc7c2bf(_0x2f4f5d) {
				if (typeof _0x2f4f5d !== 'undefined') {
					if (_0x2f4f5d < 0) {
						_0x2f4f5d = 0;
					}
					this.techCall_('setCurrentTime', _0x2f4f5d);
					return;
				}
				return this.cache_.currentTime = this.techGet_('currentTime') || 0, this.cache_.currentTime;
			}, _0x14964f.prototype.duration = function _0x391f80(_0xf9c434) {
				if (_0xf9c434 === undefined) {
					return this.cache_.duration !== undefined ? this.cache_.duration : NaN;
				}
				_0xf9c434 = parseFloat(_0xf9c434);
				if (_0xf9c434 < 0) {
					_0xf9c434 = Infinity;
				}
				if (_0xf9c434 !== this.cache_.duration) {
					this.cache_.duration = _0xf9c434;
					if (_0xf9c434 === Infinity) {
						this.addClass('vjs-live');
					} else {
						this.removeClass('vjs-live');
					}
					this.trigger('durationchange');
				}
			}, _0x14964f.prototype.remainingTime = function _0x45a917() {
				return this.duration() - this.currentTime();
			}, _0x14964f.prototype.remainingTimeDisplay = function _0x2dfeb7() {
				return Math.floor(this.duration()) - Math.floor(this.currentTime());
			}, _0x14964f.prototype.buffered = function _0x2ec1f5() {
				var _0x31b7f6 = this.techGet_('buffered');
				if (!_0x31b7f6 || !_0x31b7f6.length) {
					_0x31b7f6 = _0x5b18c6(0, 0);
				}
				return _0x31b7f6;
			}, _0x14964f.prototype.bufferedPercent = function _0x314c4e() {
				return _0xb3e450(this.buffered(), this.duration());
			}, _0x14964f.prototype.bufferedEnd = function _0x43f799() {
				var _0x8ebb7f = this.buffered(), _0x5b7f19 = this.duration(), _0xf210e4 = _0x8ebb7f.end(_0x8ebb7f.length - 1);
				if (_0xf210e4 > _0x5b7f19) {
					_0xf210e4 = _0x5b7f19;
				}
				return _0xf210e4;
			}, _0x14964f.prototype.volume = function _0x88e23b(_0x5a09d5) {
				var _0x57d131 = void 0;
				if (_0x5a09d5 !== undefined) {
					_0x57d131 = Math.max(0, Math.min(1, parseFloat(_0x5a09d5)));
					this.cache_.volume = _0x57d131;
					this.techCall_('setVolume', _0x57d131);
					if (_0x57d131 > 0) {
						this.lastVolume_(_0x57d131);
					}
					return;
				}
				return _0x57d131 = parseFloat(this.techGet_('volume')), isNaN(_0x57d131) ? 1 : _0x57d131;
			}, _0x14964f.prototype.muted = function _0x4ee251(_0x33fd70) {
				if (_0x33fd70 !== undefined) {
					this.techCall_('setMuted', _0x33fd70);
					return;
				}
				return this.techGet_('muted') || false;
			}, _0x14964f.prototype.defaultMuted = function _0xca4e60(_0x2b1932) {
				if (_0x2b1932 !== undefined) {
					return this.techCall_('setDefaultMuted', _0x2b1932);
				}
				return this.techGet_('defaultMuted') || false;
			}, _0x14964f.prototype.lastVolume_ = function _0x46c6de(_0x26af09) {
				if (_0x26af09 !== undefined && _0x26af09 !== 0) {
					this.cache_.lastVolume = _0x26af09;
					return;
				}
				return this.cache_.lastVolume;
			}, _0x14964f.prototype.supportsFullScreen = function _0x41c5cb() {
				return this.techGet_('supportsFullScreen') || false;
			}, _0x14964f.prototype.isFullscreen = function _0x4f5c02(_0x11be6b) {
				if (_0x11be6b !== undefined) {
					this.isFullscreen_ = !!_0x11be6b;
					return;
				}
				return !!this.isFullscreen_;
			}, _0x14964f.prototype.requestFullscreen = function _0x4bccb3() {
				var _0x320357 = _0x62dcca;
				this.isFullscreen(true);
				if (_0x320357.requestFullscreen) {
					_0x53fd98(_0x19e198, _0x320357.fullscreenchange, _0x5957d4(this, function _0x3f47e1(_0x4236c7) {
						this.isFullscreen(_0x19e198[_0x320357.fullscreenElement]);
						if (this.isFullscreen() === false) {
							_0x85dba1(_0x19e198, _0x320357.fullscreenchange, _0x3f47e1);
						}
						this.trigger('fullscreenchange');
					}));
					this.el_[_0x320357.requestFullscreen]();
				} else {
					if (this.tech_.supportsFullScreen()) {
						this.techCall_('enterFullScreen');
					} else {
						this.enterFullWindow();
						this.trigger('fullscreenchange');
					}
				}
			}, _0x14964f.prototype.exitFullscreen = function _0x3ff8ec() {
				var _0x1d3c9b = _0x62dcca;
				this.isFullscreen(false);
				if (_0x1d3c9b.requestFullscreen) {
					_0x19e198[_0x1d3c9b.exitFullscreen]();
				} else {
					if (this.tech_.supportsFullScreen()) {
						this.techCall_('exitFullScreen');
					} else {
						this.exitFullWindow();
						this.trigger('fullscreenchange');
					}
				}
			}, _0x14964f.prototype.enterFullWindow = function _0x3d662f() {
				this.isFullWindow = true;
				this.docOrigOverflow = _0x19e198.documentElement.style.overflow;
				_0x53fd98(_0x19e198, 'keydown', _0x5957d4(this, this.fullWindowOnEscKey));
				_0x19e198.documentElement.style.overflow = 'hidden';
				_0x58fceb(_0x19e198.body, 'vjs-full-window');
				this.trigger('enterFullWindow');
			}, _0x14964f.prototype.fullWindowOnEscKey = function _0x26ddea(_0x349f3c) {
				if (_0x349f3c.keyCode === 27) {
					if (this.isFullscreen() === true) {
						this.exitFullscreen();
					} else {
						this.exitFullWindow();
					}
				}
			}, _0x14964f.prototype.exitFullWindow = function _0x5bf013() {
				this.isFullWindow = false;
				_0x85dba1(_0x19e198, 'keydown', this.fullWindowOnEscKey);
				_0x19e198.documentElement.style.overflow = this.docOrigOverflow;
				_0x12a354(_0x19e198.body, 'vjs-full-window');
				this.trigger('exitFullWindow');
			}, _0x14964f.prototype.canPlayType = function _0x1b42e3(_0x3495d8) {
				var _0x2eaceb = void 0;
				for (var _0x435e59 = 0, _0x18c8bf = this.options_.techOrder; _0x435e59 < _0x18c8bf.length; _0x435e59++) {
					var _0x48d836 = _0x18c8bf[_0x435e59], _0x4178af = _0x11cff8.getTech(_0x48d836);
					if (!_0x4178af) {
						_0x4178af = _0x2ab435.getComponent(_0x48d836);
					}
					if (!_0x4178af) {
						_0x4155c5.error('The "' + _0x48d836 + '" tech is undefined. Skipped browser support check for that tech.');
						continue;
					}
					if (_0x4178af.isSupported()) {
						_0x2eaceb = _0x4178af.canPlayType(_0x3495d8);
						if (_0x2eaceb) {
							return _0x2eaceb;
						}
					}
				}
				return '';
			}, _0x14964f.prototype.selectSource = function _0x2c0f2f(_0x5bd0cc) {
				var _0x28c3a5 = this, _0x1a03aa = this.options_.techOrder.map(function (_0x4f454a) {
					return [
						_0x4f454a,
						_0x11cff8.getTech(_0x4f454a)
					];
				}).filter(function (_0x239bb6) {
					var _0x471f78 = _0x239bb6[0], _0x3d2493 = _0x239bb6[1];
					if (_0x3d2493) {
						return _0x3d2493.isSupported();
					}
					return _0x4155c5.error('The "' + _0x471f78 + '" tech is undefined. Skipped browser support check for that tech.'), false;
				}), _0x35ee97 = function _0xa20c9a(_0x357c57, _0x2f518b, _0x1a6e90) {
					var _0x29b2df = void 0;
					return _0x357c57.some(function (_0x56ab9f) {
						return _0x2f518b.some(function (_0x362cc1) {
							_0x29b2df = _0x1a6e90(_0x56ab9f, _0x362cc1);
							if (_0x29b2df) {
								return true;
							}
						});
					}), _0x29b2df;
				}, _0x367c32 = void 0, _0x491d1a = function _0x32f2e5(_0x39b634) {
					return function (_0x122c28, _0x16ca78) {
						return _0x39b634(_0x16ca78, _0x122c28);
					};
				}, _0x5e4e6c = function _0x312198(_0x3d17fe, _0x2bba5a) {
					var _0x14273a = _0x3d17fe[0], _0x34b7a8 = _0x3d17fe[1];
					if (_0x34b7a8.canPlaySource(_0x2bba5a, _0x28c3a5.options_[_0x14273a.toLowerCase()])) {
						return {
							'source': _0x2bba5a,
							'tech': _0x14273a
						};
					}
				};
				if (this.options_.sourceOrder) {
					_0x367c32 = _0x35ee97(_0x5bd0cc, _0x1a03aa, _0x491d1a(_0x5e4e6c));
				} else {
					_0x367c32 = _0x35ee97(_0x1a03aa, _0x5bd0cc, _0x5e4e6c);
				}
				return _0x367c32 || false;
			}, _0x14964f.prototype.src = function _0x2ea5bf(_0x2891d3) {
				var _0x43facb = this;
				if (typeof _0x2891d3 === 'undefined') {
					return this.cache_.src || '';
				}
				var _0x501c1b = _0x528af1(_0x2891d3);
				if (!_0x501c1b.length) {
					this.setTimeout(function () {
						this.error({
							'code': 4,
							'message': this.localize(this.options_.notSupportedMessage)
						});
					}, 0);
					return;
				}
				this.changingSrc_ = true;
				this.cache_.sources = _0x501c1b;
				this.updateSourceCaches_(_0x501c1b[0]);
				_0x651764(this, _0x501c1b[0], function (_0x5c3bec, _0x3eaa07) {
					_0x43facb.middleware_ = _0x3eaa07;
					_0x43facb.cache_.sources = _0x501c1b;
					_0x43facb.updateSourceCaches_(_0x5c3bec);
					var _0x2ac6ea = _0x43facb.src_(_0x5c3bec);
					if (_0x2ac6ea) {
						if (_0x501c1b.length > 1) {
							return _0x43facb.src(_0x501c1b.slice(1));
						}
						_0x43facb.changingSrc_ = false;
						_0x43facb.setTimeout(function () {
							this.error({
								'code': 4,
								'message': this.localize(this.options_.notSupportedMessage)
							});
						}, 0);
						_0x43facb.triggerReady();
						return;
					}
					_0x4a6ffc(_0x3eaa07, _0x43facb.tech_);
				});
			}, _0x14964f.prototype.src_ = function _0xfbc996(_0x1a2545) {
				var _0x5a2ff6 = this, _0xdccdba = this.selectSource([_0x1a2545]);
				if (!_0xdccdba) {
					return true;
				}
				if (!_0x36911b(_0xdccdba.tech, this.techName_)) {
					return this.changingSrc_ = true, this.loadTech_(_0xdccdba.tech, _0xdccdba.source), this.tech_.ready(function () {
						_0x5a2ff6.changingSrc_ = false;
					}), false;
				}
				return this.ready(function () {
					if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {
						this.techCall_('setSource', _0x1a2545);
					} else {
						this.techCall_('src', _0x1a2545.src);
					}
					this.changingSrc_ = false;
				}, true), false;
			}, _0x14964f.prototype.load = function _0x3bc312() {
				this.techCall_('load');
			}, _0x14964f.prototype.reset = function _0x43891b() {
				if (this.tech_) {
					this.tech_.clearTracks('text');
				}
				this.loadTech_(this.options_.techOrder[0], null);
				this.techCall_('reset');
			}, _0x14964f.prototype.currentSources = function _0x30b875() {
				var _0x28b4c5 = this.currentSource(), _0x52c900 = [];
				if (Object.keys(_0x28b4c5).length !== 0) {
					_0x52c900.push(_0x28b4c5);
				}
				return this.cache_.sources || _0x52c900;
			}, _0x14964f.prototype.currentSource = function _0x3a6781() {
				return this.cache_.source || {};
			}, _0x14964f.prototype.currentSrc = function _0x256898() {
				return this.currentSource() && this.currentSource().src || '';
			}, _0x14964f.prototype.currentType = function _0x11bd67() {
				return this.currentSource() && this.currentSource().type || '';
			}, _0x14964f.prototype.preload = function _0x2d1065(_0x2967e7) {
				if (_0x2967e7 !== undefined) {
					this.techCall_('setPreload', _0x2967e7);
					this.options_.preload = _0x2967e7;
					return;
				}
				return this.techGet_('preload');
			}, _0x14964f.prototype.autoplay = function _0xc4b77b(_0x60942) {
				if (_0x60942 === undefined) {
					return this.options_.autoplay || false;
				}
				var _0x12d82f = void 0;
				if (typeof _0x60942 === 'string' && /(any|play|muted)/.test(_0x60942)) {
					this.options_.autoplay = _0x60942;
					this.manualAutoplay_(_0x60942);
					_0x12d82f = false;
				} else {
					if (!_0x60942) {
						this.options_.autoplay = false;
					} else {
						this.options_.autoplay = true;
					}
				}
				_0x12d82f = _0x12d82f || this.options_.autoplay;
				if (this.tech_) {
					this.techCall_('setAutoplay', _0x12d82f);
				}
			}, _0x14964f.prototype.playsinline = function _0x6fa616(_0xe0ddc5) {
				if (_0xe0ddc5 !== undefined) {
					return this.techCall_('setPlaysinline', _0xe0ddc5), this.options_.playsinline = _0xe0ddc5, this;
				}
				return this.techGet_('playsinline');
			}, _0x14964f.prototype.loop = function _0x3de4e5(_0x25b5b4) {
				if (_0x25b5b4 !== undefined) {
					this.techCall_('setLoop', _0x25b5b4);
					this.options_.loop = _0x25b5b4;
					return;
				}
				return this.techGet_('loop');
			}, _0x14964f.prototype.poster = function _0x16d78f(_0x2bf11c) {
				if (_0x2bf11c === undefined) {
					return this.poster_;
				}
				if (!_0x2bf11c) {
					_0x2bf11c = '';
				}
				if (_0x2bf11c === this.poster_) {
					return;
				}
				this.poster_ = _0x2bf11c;
				this.techCall_('setPoster', _0x2bf11c);
				this.isPosterFromTech_ = false;
				this.trigger('posterchange');
			}, _0x14964f.prototype.handleTechPosterChange_ = function _0x53ed66() {
				if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
					var _0x4d2900 = this.tech_.poster() || '';
					if (_0x4d2900 !== this.poster_) {
						this.poster_ = _0x4d2900;
						this.isPosterFromTech_ = true;
						this.trigger('posterchange');
					}
				}
			}, _0x14964f.prototype.controls = function _0x4ea504(_0x38443e) {
				if (_0x38443e === undefined) {
					return !!this.controls_;
				}
				_0x38443e = !!_0x38443e;
				if (this.controls_ === _0x38443e) {
					return;
				}
				this.controls_ = _0x38443e;
				if (this.usingNativeControls()) {
					this.techCall_('setControls', _0x38443e);
				}
				if (this.controls_) {
					this.removeClass('vjs-controls-disabled');
					this.addClass('vjs-controls-enabled');
					this.trigger('controlsenabled');
					if (!this.usingNativeControls()) {
						this.addTechControlsListeners_();
					}
				} else {
					this.removeClass('vjs-controls-enabled');
					this.addClass('vjs-controls-disabled');
					this.trigger('controlsdisabled');
					if (!this.usingNativeControls()) {
						this.removeTechControlsListeners_();
					}
				}
			}, _0x14964f.prototype.usingNativeControls = function _0x438364(_0x38530b) {
				if (_0x38530b === undefined) {
					return !!this.usingNativeControls_;
				}
				_0x38530b = !!_0x38530b;
				if (this.usingNativeControls_ === _0x38530b) {
					return;
				}
				this.usingNativeControls_ = _0x38530b;
				this.usingNativeControls_ ? (this.addClass('vjs-using-native-controls'), this.trigger('usingnativecontrols')) : (this.removeClass('vjs-using-native-controls'), this.trigger('usingcustomcontrols'));
			}, _0x14964f.prototype.error = function _0x280e2d(_0x59fc24) {
				if (_0x59fc24 === undefined) {
					return this.error_ || null;
				}
				if (_0x59fc24 === null) {
					this.error_ = _0x59fc24;
					this.removeClass('vjs-error');
					if (this.errorDisplay) {
						this.errorDisplay.close();
					}
					return;
				}
				this.error_ = new _0x2cbd98(_0x59fc24);
				this.addClass('vjs-error');
				_0x4155c5.error('(CODE:' + this.error_.code + ' ' + _0x2cbd98.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);
				this.trigger('error');
				return;
			}, _0x14964f.prototype.reportUserActivity = function _0x163929(_0x576dd4) {
				this.userActivity_ = true;
			}, _0x14964f.prototype.userActive = function _0x27f5dd(_0xba86cb) {
				if (_0xba86cb === undefined) {
					return this.userActive_;
				}
				_0xba86cb = !!_0xba86cb;
				if (_0xba86cb === this.userActive_) {
					return;
				}
				this.userActive_ = _0xba86cb;
				if (this.userActive_) {
					this.userActivity_ = true;
					this.removeClass('vjs-user-inactive');
					this.addClass('vjs-user-active');
					this.trigger('useractive');
					return;
				}
				if (this.tech_) {
					this.tech_.one('mousemove', function (_0x91dc61) {
						_0x91dc61.stopPropagation();
						_0x91dc61.preventDefault();
					});
				}
				this.userActivity_ = false;
				this.removeClass('vjs-user-active');
				this.addClass('vjs-user-inactive');
				this.trigger('userinactive');
			}, _0x14964f.prototype.listenForUserActivity_ = function _0x209aaa() {
				var _0x19101e = void 0, _0x2b8370 = void 0, _0x5180d9 = void 0, _0x22250c = _0x5957d4(this, this.reportUserActivity), _0x4c3ddf = function _0x170dd3(_0x193d60) {
					(_0x193d60.screenX !== _0x2b8370 || _0x193d60.screenY !== _0x5180d9) && (_0x2b8370 = _0x193d60.screenX, _0x5180d9 = _0x193d60.screenY, _0x22250c());
				}, _0x1e6602 = function _0x20fb5d() {
					_0x22250c();
					this.clearInterval(_0x19101e);
					_0x19101e = this.setInterval(_0x22250c, 250);
				}, _0x4318fa = function _0x3635b8(_0x10fc29) {
					_0x22250c();
					this.clearInterval(_0x19101e);
				};
				this.on('mousedown', _0x1e6602);
				this.on('mousemove', _0x4c3ddf);
				this.on('mouseup', _0x4318fa);
				this.on('keydown', _0x22250c);
				this.on('keyup', _0x22250c);
				var _0x122eb6 = void 0;
				this.setInterval(function () {
					if (!this.userActivity_) {
						return;
					}
					this.userActivity_ = false;
					this.userActive(true);
					this.clearTimeout(_0x122eb6);
					var _0x9c01ed = this.options_.inactivityTimeout;
					if (_0x9c01ed <= 0) {
						return;
					}
					_0x122eb6 = this.setTimeout(function () {
						if (!this.userActivity_) {
							this.userActive(false);
						}
					}, _0x9c01ed);
				}, 250);
			}, _0x14964f.prototype.playbackRate = function _0x189345(_0x2341b5) {
				if (_0x2341b5 !== undefined) {
					this.techCall_('setPlaybackRate', _0x2341b5);
					return;
				}
				if (this.tech_ && this.tech_.featuresPlaybackRate) {
					return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');
				}
				return 1;
			}, _0x14964f.prototype.defaultPlaybackRate = function _0x5681ef(_0x329945) {
				if (_0x329945 !== undefined) {
					return this.techCall_('setDefaultPlaybackRate', _0x329945);
				}
				if (this.tech_ && this.tech_.featuresPlaybackRate) {
					return this.techGet_('defaultPlaybackRate');
				}
				return 1;
			}, _0x14964f.prototype.isAudio = function _0x387490(_0x2d896d) {
				if (_0x2d896d !== undefined) {
					this.isAudio_ = !!_0x2d896d;
					return;
				}
				return !!this.isAudio_;
			}, _0x14964f.prototype.addTextTrack = function _0xb669fb(_0x95c16, _0x162fa6, _0x534068) {
				if (this.tech_) {
					return this.tech_.addTextTrack(_0x95c16, _0x162fa6, _0x534068);
				}
			}, _0x14964f.prototype.addRemoteTextTrack = function _0x100f99(_0x17519e, _0x2545a9) {
				if (this.tech_) {
					return this.tech_.addRemoteTextTrack(_0x17519e, _0x2545a9);
				}
			}, _0x14964f.prototype.removeRemoteTextTrack = function _0x5ec5d4() {
				var _0x2da9fd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _0x517c33 = _0x2da9fd.track, _0x478eb9 = _0x517c33 === undefined ? arguments[0] : _0x517c33;
				if (this.tech_) {
					return this.tech_.removeRemoteTextTrack(_0x478eb9);
				}
			}, _0x14964f.prototype.getVideoPlaybackQuality = function _0x6b7cad() {
				return this.techGet_('getVideoPlaybackQuality');
			}, _0x14964f.prototype.videoWidth = function _0x548cd5() {
				return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;
			}, _0x14964f.prototype.videoHeight = function _0x51109f() {
				return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;
			}, _0x14964f.prototype.language = function _0x4dc79f(_0x5ec00d) {
				if (_0x5ec00d === undefined) {
					return this.language_;
				}
				this.language_ = String(_0x5ec00d).toLowerCase();
			}, _0x14964f.prototype.languages = function _0x113316() {
				return _0x2585aa(_0x14964f.prototype.options_.languages, this.languages_);
			}, _0x14964f.prototype.toJSON = function _0x164b23() {
				var _0x2b306c = _0x2585aa(this.options_), _0x54d37a = _0x2b306c.tracks;
				_0x2b306c.tracks = [];
				for (var _0x53ce70 = 0; _0x53ce70 < _0x54d37a.length; _0x53ce70++) {
					var _0x4cf9eb = _0x54d37a[_0x53ce70];
					_0x4cf9eb = _0x2585aa(_0x4cf9eb);
					_0x4cf9eb.player = undefined;
					_0x2b306c.tracks[_0x53ce70] = _0x4cf9eb;
				}
				return _0x2b306c;
			}, _0x14964f.prototype.createModal = function _0x144fe4(_0x1a1acc, _0x5c4506) {
				var _0xb8f9a9 = this;
				_0x5c4506 = _0x5c4506 || {};
				_0x5c4506.content = _0x1a1acc || '';
				var _0x26e654 = new _0x4daefe(this, _0x5c4506);
				return this.addChild(_0x26e654), _0x26e654.on('dispose', function () {
					_0xb8f9a9.removeChild(_0x26e654);
				}), _0x26e654.open(), _0x26e654;
			}, _0x14964f.getTagSettings = function _0x483d70(_0x1e3fad) {
				var _0x4b19e6 = {
					'sources': [],
					'tracks': []
				}, _0x363e29 = _0x52bddd(_0x1e3fad), _0x14e3ab = _0x363e29['data-setup'];
				if (_0x1b9851(_0x1e3fad, 'vjs-fluid')) {
					_0x363e29.fluid = true;
				}
				if (_0x14e3ab !== null) {
					var _0x12cc90 = _0x1215d0(_0x14e3ab || '{}'), _0x59baf7 = _0x12cc90[0], _0x25349d = _0x12cc90[1];
					if (_0x59baf7) {
						_0x4155c5.error(_0x59baf7);
					}
					_0x2e82a9(_0x363e29, _0x25349d);
				}
				_0x2e82a9(_0x4b19e6, _0x363e29);
				if (_0x1e3fad.hasChildNodes()) {
					var _0x138294 = _0x1e3fad.childNodes;
					for (var _0x71a736 = 0, _0x169bd2 = _0x138294.length; _0x71a736 < _0x169bd2; _0x71a736++) {
						var _0xd9cd59 = _0x138294[_0x71a736], _0xf0ae6a = _0xd9cd59.nodeName.toLowerCase();
						if (_0xf0ae6a === 'source') {
							_0x4b19e6.sources.push(_0x52bddd(_0xd9cd59));
						} else {
							if (_0xf0ae6a === 'track') {
								_0x4b19e6.tracks.push(_0x52bddd(_0xd9cd59));
							}
						}
					}
				}
				return _0x4b19e6;
			}, _0x14964f.prototype.flexNotSupported_ = function _0x3f6fca() {
				var _0x20f080 = _0x19e198.createElement('i');
				return !('flexBasis' in _0x20f080.style || 'webkitFlexBasis' in _0x20f080.style || 'mozFlexBasis' in _0x20f080.style || 'msFlexBasis' in _0x20f080.style || 'msFlexOrder' in _0x20f080.style);
			}, _0x14964f;
		}(_0x2ab435), _0x319654 = (_0x2449f5.names.forEach(function (_0x90d11f) {
			var _0x551796 = _0x2449f5[_0x90d11f];
			_0x3aa936.prototype[_0x551796.getterName] = function () {
				if (this.tech_) {
					return this.tech_[_0x551796.getterName]();
				}
				return this[_0x551796.privateName] = this[_0x551796.privateName] || new _0x551796.ListClass(), this[_0x551796.privateName];
			};
		}), _0x3aa936.players = {}, _0x504cd5.navigator), _0x3e6ff1 = (_0x3aa936.prototype.options_ = {
			'techOrder': _0x11cff8.defaultTechOrder_,
			'html5': {},
			'flash': {},
			'inactivityTimeout': 2000,
			'playbackRates': [],
			'children': [
				'mediaLoader',
				'posterImage',
				'textTrackDisplay',
				'loadingSpinner',
				'bigPlayButton',
				'controlBar',
				'errorDisplay',
				'textTrackSettings',
				'resizeManager'
			],
			'language': _0x319654 && (_0x319654.languages && _0x319654.languages[0] || _0x319654.userLanguage || _0x319654.language) || 'en',
			'languages': {},
			'notSupportedMessage': 'No compatible source was found for this media.'
		}, [
			'ended',
			'seeking',
			'seekable',
			'networkState',
			'readyState'
		].forEach(function (_0x32caac) {
			_0x3aa936.prototype[_0x32caac] = function () {
				return this.techGet_(_0x32caac);
			};
		}), _0x500793.forEach(function (_0x2f56a6) {
			_0x3aa936.prototype['handleTech' + _0x363c2b(_0x2f56a6) + '_'] = function () {
				return this.trigger(_0x2f56a6);
			};
		}), _0x2ab435.registerComponent('Player', _0x3aa936), console.log('学习是一种信仰...v9'), Object.defineProperty(_0x2ab435.components_, 'Player', {
			'configurable': false,
			'writable': false
		}), 'plugin'), _0x88f2ad = 'activePlugins_', _0x56f0f4 = { _0x172795: _0x495c8e }, _0x599562 = function _0x479eee(_0x4a89a6) {
			return _0x56f0f4.hasOwnProperty(_0x4a89a6);
		}, _0x577adf = function _0x2ca892(_0x173517) {
			return _0x599562(_0x173517) ? _0x56f0f4[_0x173517] : undefined;
		}, _0x484585 = function _0x1d7e42(_0x229490, _0x3002dc) {
			_0x229490[_0x88f2ad] = _0x229490[_0x88f2ad] || {};
			_0x229490[_0x88f2ad][_0x3002dc] = true;
		}, _0x223610 = function _0x4ca448(_0x562294, _0x51d8d9, _0x3523d5) {
			var _0x569be1 = (_0x3523d5 ? 'before' : '') + 'pluginsetup';
			_0x562294.trigger(_0x569be1, _0x51d8d9);
			_0x562294.trigger(_0x569be1 + ':' + _0x51d8d9.name, _0x51d8d9);
		}, _0x1dfd2c = function _0x1d1f32(_0x7c286e, _0x3946a2) {
			var _0x59269a = function _0x1507ed() {
				_0x223610(this, {
					'name': _0x7c286e,
					'plugin': _0x3946a2,
					'instance': null
				}, true);
				var _0x2abd02 = _0x3946a2.apply(this, arguments);
				return _0x484585(this, _0x7c286e), _0x223610(this, {
					'name': _0x7c286e,
					'plugin': _0x3946a2,
					'instance': _0x2abd02
				}), _0x2abd02;
			};
			return Object.keys(_0x3946a2).forEach(function (_0x15b087) {
				_0x59269a[_0x15b087] = _0x3946a2[_0x15b087];
			}), _0x59269a;
		}, _0x3f087b = function _0x28276c(_0x312eda, _0x26b5d2) {
			return _0x26b5d2.prototype.name = _0x312eda, function () {
				_0x223610(this, {
					'name': _0x312eda,
					'plugin': _0x26b5d2,
					'instance': null
				}, true);
				for (var _0x27324c = arguments.length, _0x225b17 = Array(_0x27324c), _0x2b1cf7 = 0; _0x2b1cf7 < _0x27324c; _0x2b1cf7++) {
					_0x225b17[_0x2b1cf7] = arguments[_0x2b1cf7];
				}
				var _0x34e3ce = new (Function.prototype.bind.apply(_0x26b5d2, [null].concat([this].concat(_0x225b17))))();
				return this[_0x312eda] = function () {
					return _0x34e3ce;
				}, _0x223610(this, _0x34e3ce.getEventHash()), _0x34e3ce;
			};
		}, _0x2fcfc = (function () {
			function _0x3a3fac(_0x9dc83e) {
				_0x7a6cc0(this, _0x3a3fac);
				if (this.constructor === _0x3a3fac) {
					throw new Error('Plugin must be sub-classed; not directly instantiated.');
				}
				this.player = _0x9dc83e;
				_0x2fa2ea(this);
				delete this.trigger;
				_0x279893(this, this.constructor.defaultState);
				_0x484585(_0x9dc83e, this.name);
				this.dispose = _0x5957d4(this, this.dispose);
				_0x9dc83e.on('dispose', this.dispose);
			}
			return _0x3a3fac.prototype.version = function _0x384a12() {
				return this.constructor.VERSION;
			}, _0x3a3fac.prototype.getEventHash = function _0x226b65() {
				var _0x45288d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
				return _0x45288d.name = this.name, _0x45288d.plugin = this.constructor, _0x45288d.instance = this, _0x45288d;
			}, _0x3a3fac.prototype.trigger = function _0x3b2974(_0x29a015) {
				var _0x3efc5b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				return _0x5ec8a4(this.eventBusEl_, _0x29a015, this.getEventHash(_0x3efc5b));
			}, _0x3a3fac.prototype.handleStateChanged = function _0x57816b(_0x4cf40c) {
			}, _0x3a3fac.prototype.dispose = function _0x192094() {
				var _0x1199e5 = this.name, _0x555af0 = this.player;
				this.trigger('dispose');
				this.off();
				_0x555af0.off('dispose', this.dispose);
				_0x555af0[_0x88f2ad][_0x1199e5] = false;
				this.player = this.state = null;
				_0x555af0[_0x1199e5] = _0x3f087b(_0x1199e5, _0x56f0f4[_0x1199e5]);
			}, _0x3a3fac.isBasic = function _0x4139c3(_0x6719d8) {
				var _0x55b6d3 = typeof _0x6719d8 === 'string' ? _0x577adf(_0x6719d8) : _0x6719d8;
				return typeof _0x55b6d3 === 'function' && !_0x3a3fac.prototype.isPrototypeOf(_0x55b6d3.prototype);
			}, _0x3a3fac.registerPlugin = function _0x1c9fba(_0x172795, _0x495c8e) {
				if (typeof _0x172795 !== 'string') {
					throw new Error('Illegal plugin name, "' + _0x172795 + '", must be a string, was ' + (typeof _0x172795 === 'undefined' ? 'undefined' : _0x413e18(_0x172795)) + '.');
				}
				if (_0x599562(_0x172795)) {
					_0x4155c5.warn('A plugin named "' + _0x172795 + '" already exists. You may want to avoid re-registering plugins!');
				} else {
					if (_0x3aa936.prototype.hasOwnProperty(_0x172795)) {
						throw new Error('Illegal plugin name, "' + _0x172795 + '", cannot share a name with an existing player method!');
					}
				}
				if (typeof _0x495c8e !== 'function') {
					throw new Error('Illegal plugin for "' + _0x172795 + '", must be a function, was ' + (typeof _0x495c8e === 'undefined' ? 'undefined' : _0x413e18(_0x495c8e)) + '.');
				}
				if (_0x172795 !== _0x3e6ff1) {
					if (_0x3a3fac.isBasic(_0x495c8e)) {
						_0x3aa936.prototype[_0x172795] = _0x1dfd2c(_0x172795, _0x495c8e);
					} else {
						_0x3aa936.prototype[_0x172795] = _0x3f087b(_0x172795, _0x495c8e);
					}
				}
				return _0x495c8e;
			}, _0x3a3fac.deregisterPlugin = function _0x26501e(_0x3cd2e8) {
				if (_0x3cd2e8 === _0x3e6ff1) {
					throw new Error('Cannot de-register base plugin.');
				}
				_0x599562(_0x3cd2e8) && (delete _0x56f0f4[_0x3cd2e8], delete _0x3aa936.prototype[_0x3cd2e8]);
			}, _0x3a3fac.getPlugins = function _0x51bf2e() {
				var _0x128ad6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(_0x56f0f4), _0x29f1d0 = void 0;
				return _0x128ad6.forEach(function (_0x5397c8) {
					var _0x26f6ed = _0x577adf(_0x5397c8);
					_0x26f6ed && (_0x29f1d0 = _0x29f1d0 || {}, _0x29f1d0[_0x5397c8] = _0x26f6ed);
				}), _0x29f1d0;
			}, _0x3a3fac.getPluginVersion = function _0x44f28c(_0x429855) {
				var _0x17b85a = _0x577adf(_0x429855);
				return _0x17b85a && _0x17b85a.VERSION || '';
			}, _0x3a3fac;
		}()), _0x350080 = (_0x2fcfc.getPlugin = _0x577adf, _0x2fcfc.BASE_PLUGIN_NAME = _0x3e6ff1, _0x2fcfc.registerPlugin(_0x3e6ff1, _0x2fcfc), _0x3aa936.prototype.usingPlugin = function (_0x2d4f17) {
			return !!this[_0x88f2ad] && this[_0x88f2ad][_0x2d4f17] === true;
		}, _0x3aa936.prototype.hasPlugin = function (_0x38e818) {
			return !!_0x599562(_0x38e818);
		}, function _0x3905cd(_0x39f768, _0x448528) {
			if (typeof _0x448528 !== 'function' && _0x448528 !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof _0x448528 === 'undefined' ? 'undefined' : _0x413e18(_0x448528)));
			}
			_0x39f768.prototype = Object.create(_0x448528 && _0x448528.prototype, {
				'constructor': {
					'value': _0x39f768,
					'enumerable': false,
					'writable': true,
					'configurable': true
				}
			});
			if (_0x448528) {
				_0x39f768.super_ = _0x448528;
			}
		}), _0x32e1fb = function _0x314110(_0x2458e3) {
			var _0x4de9f6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x4cccd2 = function _0x672dfa() {
				_0x2458e3.apply(this, arguments);
			}, _0xef3f22 = {};
			if ((typeof _0x4de9f6 === 'undefined' ? 'undefined' : _0x413e18(_0x4de9f6)) === 'object') {
				if (_0x4de9f6.constructor !== Object.prototype.constructor) {
					_0x4cccd2 = _0x4de9f6.constructor;
				}
				_0xef3f22 = _0x4de9f6;
			} else {
				if (typeof _0x4de9f6 === 'function') {
					_0x4cccd2 = _0x4de9f6;
				}
			}
			_0x350080(_0x4cccd2, _0x2458e3);
			for (var _0x3c813b in _0xef3f22)
				if (_0xef3f22.hasOwnProperty(_0x3c813b)) {
					_0x4cccd2.prototype[_0x3c813b] = _0xef3f22[_0x3c813b];
				}
			return _0x4cccd2;
		}, _0x2867e4 = function _0x3e71d2(_0x562008) {
			return _0x562008.indexOf('#') === 0 ? _0x562008.slice(1) : _0x562008;
		};
		function _0x465e34(_0x1d4248, _0x30161e, _0x174213) {
			var _0x5a78de = _0x465e34.getPlayer(_0x1d4248);
			if (_0x5a78de) {
				if (_0x30161e) {
					_0x4155c5.warn('Player "' + _0x1d4248 + '" is already initialised. Options will not be applied.');
				}
				if (_0x174213) {
					_0x5a78de.ready(_0x174213);
				}
				return _0x5a78de;
			}
			var _0x5e8f7b = typeof _0x1d4248 === 'string' ? _0x4cda25('#' + _0x2867e4(_0x1d4248)) : _0x1d4248;
			if (!_0x4fc287(_0x5e8f7b)) {
				throw new TypeError('The element or ID supplied is not valid. (videojs)');
			}
			if (!_0x19e198.body.contains(_0x5e8f7b)) {
				_0x4155c5.warn('The element supplied is not included in the DOM');
			}
			_0x30161e = _0x30161e || {};
			_0x465e34.hooks('beforesetup').forEach(function (_0x4a7734) {
				return;
				var _0x5ecc98 = _0x4a7734(_0x5e8f7b, _0x2585aa(_0x30161e));
				if (!_0x31ba86(_0x5ecc98) || Array.isArray(_0x5ecc98)) {
					_0x4155c5.error('please return an object in beforesetup hooks');
					return;
				}
				_0x30161e = _0x2585aa(_0x30161e, _0x5ecc98);
			});
			var _0x584e36 = _0x2ab435.getComponent('Player');
			return _0x5a78de = new _0x584e36(_0x5e8f7b, _0x30161e, _0x174213), _0x465e34.hooks('setup').forEach(function (_0x5d51d4) {
				return;
				return _0x5d51d4(_0x5a78de);
			}), _0x5a78de;
		}
		if (_0x465e34.hooks_ = {}, _0x465e34.hooks = function (_0x47a9ca, _0x1107f8) {
			_0x465e34.hooks_[_0x47a9ca] = _0x465e34.hooks_[_0x47a9ca] || [];
			if (_0x1107f8) {
				_0x465e34.hooks_[_0x47a9ca] = _0x465e34.hooks_[_0x47a9ca].concat(_0x1107f8);
			}
			return _0x465e34.hooks_[_0x47a9ca];
		}, _0x465e34.hook = function (_0x1f131c, _0x40fe4f) {
			_0x465e34.hooks(_0x1f131c, _0x40fe4f);
		}, _0x465e34.hookOnce = function (_0x45c94e, _0x280ed0) {
			_0x465e34.hooks(_0x45c94e, [].concat(_0x280ed0).map(function (_0x422228) {
				var _0x3d9cff = function _0x3123a0() {
					return _0x465e34.removeHook(_0x45c94e, _0x3123a0), _0x422228.apply(undefined, arguments);
				};
				return _0x3d9cff;
			}));
		}, _0x465e34.removeHook = function (_0x437b90, _0x31c7c0) {
			var _0x3b5c3d = _0x465e34.hooks(_0x437b90).indexOf(_0x31c7c0);
			if (_0x3b5c3d <= -1) {
				return false;
			}
			return _0x465e34.hooks_[_0x437b90] = _0x465e34.hooks_[_0x437b90].slice(), _0x465e34.hooks_[_0x437b90].splice(_0x3b5c3d, 1), true;
		}, _0x504cd5.VIDEOJS_NO_DYNAMIC_STYLE !== true && _0x202338()) {
			var _0xa0541e = _0x4cda25('.vjs-styles-defaults');
			if (!_0xa0541e) {
				_0xa0541e = _0x2c39ec('vjs-styles-defaults');
				var _0x1d6de1 = _0x4cda25('head');
				if (_0x1d6de1) {
					_0x1d6de1.insertBefore(_0xa0541e, _0x1d6de1.firstChild);
				}
				_0x526a82(_0xa0541e, '\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    ');
			}
		}
		_0x1ff533(1, _0x465e34);
		_0x465e34.VERSION = _0x4b1ff3;
		_0x465e34.options = _0x3aa936.prototype.options_;
		_0x465e34.getPlayers = function () {
			return _0x3aa936.players;
		};
		_0x465e34.getPlayer = function (_0x52916b) {
			var _0x53fbae = _0x3aa936.players, _0x25d16a = void 0;
			if (typeof _0x52916b === 'string') {
				var _0xbcfdbe = _0x2867e4(_0x52916b), _0x5ba71f = _0x53fbae[_0xbcfdbe];
				if (_0x5ba71f) {
					return _0x5ba71f;
				}
				_0x25d16a = _0x4cda25('#' + _0xbcfdbe);
			} else {
				_0x25d16a = _0x52916b;
			}
			if (_0x4fc287(_0x25d16a)) {
				var _0xf0b2a5 = _0x25d16a, _0x51d649 = _0xf0b2a5.player, _0x1b4950 = _0xf0b2a5.playerId;
				if (_0x51d649 || _0x53fbae[_0x1b4950]) {
					return _0x51d649 || _0x53fbae[_0x1b4950];
				}
			}
		};
		_0x465e34.getAllPlayers = function () {
			return Object.keys(_0x3aa936.players).map(function (_0x453d8a) {
				return _0x3aa936.players[_0x453d8a];
			}).filter(Boolean);
		};
		_0x465e34.players = _0x3aa936.players;
		_0x465e34.getComponent = _0x2ab435.getComponent;
		_0x465e34.registerComponent = function (_0x27743d, _0x53c9b2) {
			if (_0x11cff8.isTech(_0x53c9b2)) {
				_0x4155c5.warn('The ' + _0x27743d + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');
			}
			_0x2ab435.registerComponent.call(_0x2ab435, _0x27743d, _0x53c9b2);
		};
		_0x465e34.getTech = _0x11cff8.getTech;
		_0x465e34.registerTech = _0x11cff8.registerTech;
		_0x465e34.use = _0x29f852;
		Object.defineProperty(_0x465e34, 'middleware', {
			'value': {},
			'writeable': false,
			'enumerable': true
		});
		Object.defineProperty(_0x465e34.middleware, 'TERMINATOR', {
			'value': _0x3da144,
			'writeable': false,
			'enumerable': true
		});
		_0x465e34.browser = _0x5ec892;
		_0x465e34.TOUCH_ENABLED = _0x363ca1;
		_0x465e34.extend = _0x32e1fb;
		_0x465e34.mergeOptions = _0x2585aa;
		_0x465e34.bind = _0x5957d4;
		_0x465e34.registerPlugin = _0x2fcfc.registerPlugin;
		_0x465e34.deregisterPlugin = _0x2fcfc.deregisterPlugin;
		_0x465e34.plugin = function (_0x43476c, _0x278606) {
			return _0x4155c5.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead'), _0x2fcfc.registerPlugin(_0x43476c, _0x278606);
		};
		_0x465e34.getPlugins = _0x2fcfc.getPlugins;
		_0x465e34.getPlugin = _0x2fcfc.getPlugin;
		_0x465e34.getPluginVersion = _0x2fcfc.getPluginVersion;
		_0x465e34.addLanguage = function (_0xe3825b, _0x29d959) {
			var _0x1652ba;
			return _0xe3825b = ('' + _0xe3825b).toLowerCase(), _0x465e34.options.languages = _0x2585aa(_0x465e34.options.languages, (_0x1652ba = {}, _0x1652ba[_0xe3825b] = _0x29d959, _0x1652ba)), _0x465e34.options.languages[_0xe3825b];
		};
		_0x465e34.log = _0x4155c5;
		_0x465e34.createTimeRange = _0x465e34.createTimeRanges = _0x5b18c6;
		_0x465e34.formatTime = _0x4a0b80;
		_0x465e34.setFormatTime = _0x5b5a38;
		_0x465e34.resetFormatTime = _0x1ce7ca;
		_0x465e34.parseUrl = _0xbd398f;
		_0x465e34.isCrossOrigin = _0x1e9694;
		_0x465e34.EventTarget = _0x47c35c;
		_0x465e34.on = _0x53fd98;
		_0x465e34.one = _0x12b6fc;
		_0x465e34.off = _0x85dba1;
		_0x465e34.trigger = _0x5ec8a4;
		_0x465e34.xhr = _0x47536f;
		_0x465e34.TextTrack = _0x3e2616;
		_0x465e34.AudioTrack = _0x4b3584;
		_0x465e34.VideoTrack = _0x136e17;
		[
			'isEl',
			'isTextNode',
			'createEl',
			'hasClass',
			'addClass',
			'removeClass',
			'toggleClass',
			'setAttributes',
			'getAttributes',
			'emptyEl',
			'appendContent',
			'insertContent'
		].forEach(function (_0x11e85a) {
			_0x465e34[_0x11e85a] = function () {
				return _0x4155c5.warn('videojs.' + _0x11e85a + '() is deprecated; use videojs.dom.' + _0x11e85a + '() instead'), _0x267f7d[_0x11e85a].apply(null, arguments);
			};
		});
		_0x465e34.computedStyle = _0x5615fb;
		_0x465e34.dom = _0x267f7d;
		_0x465e34.url = _0x5d2eb7;
		var _0x35f560 = _0x4ed392(function (_0x4b794f, _0x2d7ff9) {
			(function (_0x29a7f1) {
				var _0x27e34c = {
					'buildAbsoluteURL': function _0x2c3824(_0x34c47b, _0x5954c9, _0x451daf) {
						_0x451daf = _0x451daf || {};
						_0x34c47b = _0x34c47b.trim();
						_0x5954c9 = _0x5954c9.trim();
						if (!_0x5954c9) {
							if (!_0x451daf.alwaysNormalize) {
								return _0x34c47b;
							}
							var _0x595694 = _0x27e34c.parseURL(_0x34c47b);
							if (!_0x595694) {
								throw new Error('Error trying to parse base URL.');
							}
							return _0x595694.path = _0x27e34c.normalizePath(_0x595694.path), _0x27e34c.buildURLFromParts(_0x595694);
						}
						var _0x3e49b1 = _0x27e34c.parseURL(_0x5954c9);
						if (!_0x3e49b1) {
							throw new Error('Error trying to parse relative URL.');
						}
						if (_0x3e49b1.scheme) {
							if (!_0x451daf.alwaysNormalize) {
								return _0x5954c9;
							}
							return _0x3e49b1.path = _0x27e34c.normalizePath(_0x3e49b1.path), _0x27e34c.buildURLFromParts(_0x3e49b1);
						}
						var _0x3c0c13 = _0x27e34c.parseURL(_0x34c47b);
						if (!_0x3c0c13) {
							throw new Error('Error trying to parse base URL.');
						}
						if (!_0x3c0c13.netLoc && _0x3c0c13.path && _0x3c0c13.path[0] !== '/') {
							var _0x2f066f = /^([^\/;?#]*)(.*)$/.exec(_0x3c0c13.path);
							_0x3c0c13.netLoc = _0x2f066f[1];
							_0x3c0c13.path = _0x2f066f[2];
						}
						if (_0x3c0c13.netLoc && !_0x3c0c13.path) {
							_0x3c0c13.path = '/';
						}
						var _0x4ab824 = {
							'scheme': _0x3c0c13.scheme,
							'netLoc': _0x3e49b1.netLoc,
							'path': null,
							'params': _0x3e49b1.params,
							'query': _0x3e49b1.query,
							'fragment': _0x3e49b1.fragment
						};
						if (!_0x3e49b1.netLoc) {
							_0x4ab824.netLoc = _0x3c0c13.netLoc;
							if (_0x3e49b1.path[0] !== '/') {
								if (!_0x3e49b1.path) {
									_0x4ab824.path = _0x3c0c13.path;
									if (!_0x3e49b1.params) {
										_0x4ab824.params = _0x3c0c13.params;
										if (!_0x3e49b1.query) {
											_0x4ab824.query = _0x3c0c13.query;
										}
									}
								} else {
									var _0x1c9982 = _0x3c0c13.path, _0x2cc321 = _0x1c9982.substring(0, _0x1c9982.lastIndexOf('/') + 1) + _0x3e49b1.path;
									_0x4ab824.path = _0x27e34c.normalizePath(_0x2cc321);
								}
							}
						}
						if (_0x4ab824.path === null) {
							_0x4ab824.path = _0x451daf.alwaysNormalize ? _0x27e34c.normalizePath(_0x3e49b1.path) : _0x3e49b1.path;
						}
						return _0x27e34c.buildURLFromParts(_0x4ab824);
					},
					'parseURL': function _0x286c04(_0x34e60c) {
						var _0x43ca44 = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/\;?#]*)?(.*?)??(;.*?)?(\?.*?)?(#.*?)?$/.exec(_0x34e60c);
						if (!_0x43ca44) {
							return null;
						}
						return {
							'scheme': _0x43ca44[1] || '',
							'netLoc': _0x43ca44[2] || '',
							'path': _0x43ca44[3] || '',
							'params': _0x43ca44[4] || '',
							'query': _0x43ca44[5] || '',
							'fragment': _0x43ca44[6] || ''
						};
					},
					'normalizePath': function _0x159479(_0x1b682d) {
						_0x1b682d = _0x1b682d.split('').reverse().join('').replace(/(?:\/|^)\.(?=\/)/g, '');
						while (_0x1b682d.length !== (_0x1b682d = _0x1b682d.replace(/(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g, '')).length) {
						}
						return _0x1b682d.split('').reverse().join('');
					},
					'buildURLFromParts': function _0x199f10(_0x21a6c6) {
						return _0x21a6c6.scheme + _0x21a6c6.netLoc + _0x21a6c6.path + _0x21a6c6.params + _0x21a6c6.query + _0x21a6c6.fragment;
					}
				};
				_0x4b794f.exports = _0x27e34c;
			}(_0x279efd));
		}), _0x524597 = function _0x548ea4(_0x3f0034, _0x18d9f0) {
			if (!(_0x3f0034 instanceof _0x18d9f0)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}, _0x45e100 = Object.assign || function (_0x295180) {
			for (var _0x323960 = 1; _0x323960 < arguments.length; _0x323960++) {
				var _0x597310 = arguments[_0x323960];
				for (var _0x1bb2e9 in _0x597310)
					if (Object.prototype.hasOwnProperty.call(_0x597310, _0x1bb2e9)) {
						_0x295180[_0x1bb2e9] = _0x597310[_0x1bb2e9];
					}
			}
			return _0x295180;
		}, _0x4f1117 = function _0x3a58a3(_0x5e5e10, _0x47aa35) {
			if (typeof _0x47aa35 !== 'function' && _0x47aa35 !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof _0x47aa35 === 'undefined' ? 'undefined' : _0x413e18(_0x47aa35)));
			}
			_0x5e5e10.prototype = Object.create(_0x47aa35 && _0x47aa35.prototype, {
				'constructor': {
					'value': _0x5e5e10,
					'enumerable': false,
					'writable': true,
					'configurable': true
				}
			});
			if (_0x47aa35) {
				Object.setPrototypeOf ? Object.setPrototypeOf(_0x5e5e10, _0x47aa35) : _0x5e5e10['__proto__'] = _0x47aa35;
			}
		}, _0x1adeef = function _0x124067(_0x216b8d, _0x2792ea) {
			if (!_0x216b8d) {
				throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
			}
			return _0x2792ea && ((typeof _0x2792ea === 'undefined' ? 'undefined' : _0x413e18(_0x2792ea)) === 'object' || typeof _0x2792ea === 'function') ? _0x2792ea : _0x216b8d;
		}, _0x2a7139 = (function () {
			function _0x45e4c6() {
				_0x524597(this, _0x45e4c6);
				this.listeners = {};
			}
			return _0x45e4c6.prototype.on = function _0x2743ce(_0x2ab86a, _0x5b3a33) {
				if (!this.listeners[_0x2ab86a]) {
					this.listeners[_0x2ab86a] = [];
				}
				this.listeners[_0x2ab86a].push(_0x5b3a33);
			}, _0x45e4c6.prototype.off = function _0x5e573d(_0x3e7b45, _0x327e57) {
				if (!this.listeners[_0x3e7b45]) {
					return false;
				}
				var _0x3d6e16 = this.listeners[_0x3e7b45].indexOf(_0x327e57);
				return this.listeners[_0x3e7b45].splice(_0x3d6e16, 1), _0x3d6e16 > -1;
			}, _0x45e4c6.prototype.trigger = function _0x49dcd0(_0xb6cb49) {
				var _0x20437d = this.listeners[_0xb6cb49], _0x5772a5 = void 0, _0x4ca607 = void 0, _0x5e2024 = void 0;
				if (!_0x20437d) {
					return;
				}
				if (arguments.length === 2) {
					_0x4ca607 = _0x20437d.length;
					for (_0x5772a5 = 0; _0x5772a5 < _0x4ca607; ++_0x5772a5) {
						_0x20437d[_0x5772a5].call(this, arguments[1]);
					}
				} else {
					_0x5e2024 = Array.prototype.slice.call(arguments, 1);
					_0x4ca607 = _0x20437d.length;
					for (_0x5772a5 = 0; _0x5772a5 < _0x4ca607; ++_0x5772a5) {
						_0x20437d[_0x5772a5].apply(this, _0x5e2024);
					}
				}
			}, _0x45e4c6.prototype.dispose = function _0x50de62() {
				this.listeners = {};
			}, _0x45e4c6.prototype.pipe = function _0x585216(_0x36b002) {
				this.on('data', function (_0x3db783) {
					_0x36b002.push(_0x3db783);
				});
			}, _0x45e4c6;
		}()), _0x3f3ac7 = function (_0x165c68) {
			_0x4f1117(_0x1ccdcd, _0x165c68);
			function _0x1ccdcd() {
				_0x524597(this, _0x1ccdcd);
				var _0x2c2853 = _0x1adeef(this, _0x165c68.call(this));
				return _0x2c2853.buffer = '', _0x2c2853;
			}
			return _0x1ccdcd.prototype.push = function _0x52f6e6(_0x532ed0) {
				var _0x30f9cd = void 0;
				this.buffer += _0x532ed0;
				_0x30f9cd = this.buffer.indexOf('\n');
				for (; _0x30f9cd > -1; _0x30f9cd = this.buffer.indexOf('\n')) {
					this.trigger('data', this.buffer.substring(0, _0x30f9cd));
					this.buffer = this.buffer.substring(_0x30f9cd + 1);
				}
			}, _0x1ccdcd;
		}(_0x2a7139), _0x5d628e = function _0x41a843() {
			var _0x5179bf = '[^=]*', _0xc4ec42 = '"[^"]*"|[^,]*', _0x3ba097 = '(?:' + _0x5179bf + ')=(?:' + _0xc4ec42 + ')';
			return new RegExp('(?:^|,)(' + _0x3ba097 + ')');
		}, _0x4d31f3 = function _0x2c23df(_0xcf880d) {
			var _0xfe7067 = _0xcf880d.split(_0x5d628e()), _0x29c4cd = {}, _0x350b3f = _0xfe7067.length, _0xbf8c9b = void 0;
			while (_0x350b3f--) {
				if (_0xfe7067[_0x350b3f] === '') {
					continue;
				}
				_0xbf8c9b = /([^=]*)=(.*)/.exec(_0xfe7067[_0x350b3f]).slice(1);
				_0xbf8c9b[0] = _0xbf8c9b[0].replace(/^\s+|\s+$/g, '');
				_0xbf8c9b[1] = _0xbf8c9b[1].replace(/^\s+|\s+$/g, '');
				_0xbf8c9b[1] = _0xbf8c9b[1].replace(/^['"](.*)['"]$/g, '$1');
				_0x29c4cd[_0xbf8c9b[0]] = _0xbf8c9b[1];
			}
			return _0x29c4cd;
		}, _0xf6c7a9 = function (_0x356c1e) {
			_0x4f1117(_0x1dd6d8, _0x356c1e);
			function _0x1dd6d8() {
				_0x524597(this, _0x1dd6d8);
				var _0x580ac7 = _0x1adeef(this, _0x356c1e.call(this));
				return _0x580ac7.customParsers = [], _0x580ac7;
			}
			return _0x1dd6d8.prototype.push = function _0x35a3be(_0x3d6f39) {
				var _0x4b0d09 = void 0, _0x1c4e96 = void 0;
				_0x3d6f39 = _0x3d6f39.replace(/^[\u0000\s]+|[\u0000\s]+$/g, '');
				if (_0x3d6f39.length === 0) {
					return;
				}
				if (_0x3d6f39[0] !== '#') {
					this.trigger('data', {
						'type': 'uri',
						'uri': _0x3d6f39
					});
					return;
				}
				for (var _0x1e626f = 0; _0x1e626f < this.customParsers.length; _0x1e626f++) {
					if (this.customParsers[_0x1e626f].call(this, _0x3d6f39)) {
						return;
					}
				}
				if (_0x3d6f39.indexOf('#EXT') !== 0) {
					this.trigger('data', {
						'type': 'comment',
						'text': _0x3d6f39.slice(1)
					});
					return;
				}
				_0x3d6f39 = _0x3d6f39.replace('\r', '');
				_0x4b0d09 = /^#EXTM3U/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					this.trigger('data', {
						'type': 'tag',
						'tagType': 'm3u'
					});
					return;
				}
				_0x4b0d09 = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'inf'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.duration = parseFloat(_0x4b0d09[1]);
					}
					if (_0x4b0d09[2]) {
						_0x1c4e96.title = _0x4b0d09[2];
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'targetduration'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.duration = parseInt(_0x4b0d09[1], 10);
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'totalduration'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.duration = parseInt(_0x4b0d09[1], 10);
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'version'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.version = parseInt(_0x4b0d09[1], 10);
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'media-sequence'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.number = parseInt(_0x4b0d09[1], 10);
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'discontinuity-sequence'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.number = parseInt(_0x4b0d09[1], 10);
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'playlist-type'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.playlistType = _0x4b0d09[1];
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'byterange'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.length = parseInt(_0x4b0d09[1], 10);
					}
					if (_0x4b0d09[2]) {
						_0x1c4e96.offset = parseInt(_0x4b0d09[2], 10);
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'allow-cache'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.allowed = !/NO/.test(_0x4b0d09[1]);
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-MAP:?(.*)$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'map'
					};
					if (_0x4b0d09[1]) {
						var _0x131d0c = _0x4d31f3(_0x4b0d09[1]);
						if (_0x131d0c.URI) {
							_0x1c4e96.uri = _0x131d0c.URI;
						}
						if (_0x131d0c.BYTERANGE) {
							var _0x1546b3 = _0x131d0c.BYTERANGE.split('@'), _0x2ed1f9 = _0x1546b3[0], _0x412795 = _0x1546b3[1];
							_0x1c4e96.byterange = {};
							if (_0x2ed1f9) {
								_0x1c4e96.byterange.length = parseInt(_0x2ed1f9, 10);
							}
							if (_0x412795) {
								_0x1c4e96.byterange.offset = parseInt(_0x412795, 10);
							}
						}
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-STREAM-INF:?(.*)$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'stream-inf'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.attributes = _0x4d31f3(_0x4b0d09[1]);
						if (_0x1c4e96.attributes.RESOLUTION) {
							var _0x5eb7ec = _0x1c4e96.attributes.RESOLUTION.split('x'), _0x3afd97 = {
								width: parseInt(_0x5eb7ec[0], 10),
								height: parseInt(_0x5eb7ec[1], 10)
							};
							if (_0x5eb7ec[0]) {
							}
							if (_0x5eb7ec[1]) {
							}
							_0x1c4e96.attributes.RESOLUTION = _0x3afd97;
						}
						if (_0x1c4e96.attributes.BANDWIDTH) {
							_0x1c4e96.attributes.BANDWIDTH = parseInt(_0x1c4e96.attributes.BANDWIDTH, 10);
						}
						if (_0x1c4e96.attributes['PROGRAM-ID']) {
							_0x1c4e96.attributes['PROGRAM-ID'] = parseInt(_0x1c4e96.attributes['PROGRAM-ID'], 10);
						}
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-MEDIA:?(.*)$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'media'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.attributes = _0x4d31f3(_0x4b0d09[1]);
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-ENDLIST/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					this.trigger('data', {
						'type': 'tag',
						'tagType': 'endlist'
					});
					return;
				}
				_0x4b0d09 = /^#EXT-X-DISCONTINUITY/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					this.trigger('data', {
						'type': 'tag',
						'tagType': 'discontinuity'
					});
					return;
				}
				_0x4b0d09 = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'program-date-time'
					};
					_0x4b0d09[1] && (_0x1c4e96.dateTimeString = _0x4b0d09[1], _0x1c4e96.dateTimeObject = new Date(_0x4b0d09[1]));
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-KEY:?(.*)$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'key'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.attributes = _0x4d31f3(_0x4b0d09[1]);
						if (_0x1c4e96.attributes.IV) {
							if (_0x1c4e96.attributes.IV.substring(0, 2).toLowerCase() === '0x') {
								_0x1c4e96.attributes.IV = _0x1c4e96.attributes.IV.substring(2);
							}
							_0x1c4e96.attributes.IV = _0x1c4e96.attributes.IV.match(/.{8}/g);
							_0x1c4e96.attributes.IV[0] = parseInt(_0x1c4e96.attributes.IV[0], 16);
							_0x1c4e96.attributes.IV[1] = parseInt(_0x1c4e96.attributes.IV[1], 16);
							_0x1c4e96.attributes.IV[2] = parseInt(_0x1c4e96.attributes.IV[2], 16);
							_0x1c4e96.attributes.IV[3] = parseInt(_0x1c4e96.attributes.IV[3], 16);
							_0x1c4e96.attributes.IV = new Uint32Array(_0x1c4e96.attributes.IV);
						}
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-START:?(.*)$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'start'
					};
					_0x4b0d09[1] && (_0x1c4e96.attributes = _0x4d31f3(_0x4b0d09[1]), _0x1c4e96.attributes['TIME-OFFSET'] = parseFloat(_0x1c4e96.attributes['TIME-OFFSET']), _0x1c4e96.attributes.PRECISE = /YES/.test(_0x1c4e96.attributes.PRECISE));
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'cue-out-cont'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.data = _0x4b0d09[1];
					} else {
						_0x1c4e96.data = '';
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'cue-out'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.data = _0x4b0d09[1];
					} else {
						_0x1c4e96.data = '';
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				_0x4b0d09 = /^#EXT-X-CUE-IN:?(.*)?$/.exec(_0x3d6f39);
				if (_0x4b0d09) {
					_0x1c4e96 = {
						'type': 'tag',
						'tagType': 'cue-in'
					};
					if (_0x4b0d09[1]) {
						_0x1c4e96.data = _0x4b0d09[1];
					} else {
						_0x1c4e96.data = '';
					}
					this.trigger('data', _0x1c4e96);
					return;
				}
				this.trigger('data', {
					'type': 'tag',
					'data': _0x3d6f39.slice(4)
				});
			}, _0x1dd6d8.prototype.addParser = function _0x334885(_0x2d2a15) {
				var _0x2f2709 = this, _0x406aa0 = _0x2d2a15.expression, _0x1672e1 = _0x2d2a15.customType, _0x180ace = _0x2d2a15.dataParser, _0x59713e = _0x2d2a15.segment;
				if (typeof _0x180ace !== 'function') {
					_0x180ace = function _0x429848(_0x489c96) {
						return _0x489c96;
					};
				}
				this.customParsers.push(function (_0x4127f4) {
					var _0x56443d = _0x406aa0.exec(_0x4127f4);
					if (_0x56443d) {
						return _0x2f2709.trigger('data', {
							'type': 'custom',
							'data': _0x180ace(_0x4127f4),
							'customType': _0x1672e1,
							'segment': _0x59713e
						}), true;
					}
				});
			}, _0x1dd6d8;
		}(_0x2a7139), _0x4696ea = function (_0x848959) {
			_0x4f1117(_0x54b4ca, _0x848959);
			function _0x54b4ca() {
				_0x524597(this, _0x54b4ca);
				var _0x2af5be = _0x1adeef(this, _0x848959.call(this));
				_0x2af5be.lineStream = new _0x3f3ac7();
				_0x2af5be.parseStream = new _0xf6c7a9();
				_0x2af5be.lineStream.pipe(_0x2af5be.parseStream);
				var _0x4214ec = _0x2af5be, _0x260869 = [], _0x227eba = {
					duration: _0xfe283.duration,
					attributes: {},
					discontinuity: true,
					dateTimeString: _0xfe283.dateTimeString,
					dateTimeObject: _0xfe283.dateTimeObject,
					cueOut: _0xfe283.data,
					cueOutCont: _0xfe283.data,
					cueIn: _0xfe283.data,
					uri: _0xfe283.uri,
					key: _0x75cf76,
					timeline: _0x188b11,
					map: _0x11c748
				}, _0x11c748 = void 0, _0x75cf76 = void 0, _0x407956 = function _0x2a845e() {
				}, _0x27a80a = {
					'AUDIO': {},
					'VIDEO': {},
					'CLOSED-CAPTIONS': {},
					'SUBTITLES': {}
				}, _0x188b11 = 0;
				return _0x2af5be.manifest = {
					'allowCache': true,
					'discontinuityStarts': [],
					'segments': []
				}, _0x2af5be.parseStream.on('data', function (_0xfe283) {
					var _0x47cf30 = void 0, _0x116cc5 = void 0;
					({
						'tag': function _0x4285b9() {
							({
								'allow-cache': function _0x342f7b() {
									this.manifest.allowCache = _0xfe283.allowed;
									!('allowed' in _0xfe283) && (this.trigger('info', { 'message': 'defaulting allowCache to YES' }), this.manifest.allowCache = true);
								},
								'byterange': function _0x1535bc() {
									var _0x10b11e = {};
									if ('length' in _0xfe283) {
										_0x227eba.byterange = _0x10b11e;
										_0x10b11e.length = _0xfe283.length;
										!('offset' in _0xfe283) && (this.trigger('info', { 'message': 'defaulting offset to zero' }), _0xfe283.offset = 0);
									}
									if ('offset' in _0xfe283) {
										_0x227eba.byterange = _0x10b11e;
										_0x10b11e.offset = _0xfe283.offset;
									}
								},
								'endlist': function _0x5cb552() {
									this.manifest.endList = true;
								},
								'inf': function _0x2cbb29() {
									!('mediaSequence' in this.manifest) && (this.manifest.mediaSequence = 0, this.trigger('info', { 'message': 'defaulting media sequence to zero' }));
									!('discontinuitySequence' in this.manifest) && (this.manifest.discontinuitySequence = 0, this.trigger('info', { 'message': 'defaulting discontinuity sequence to zero' }));
									if (_0xfe283.duration > 0) {
									}
									if (_0xfe283.duration === 0) {
										_0x227eba.duration = 0.01;
										this.trigger('info', { 'message': 'updating zero segment duration to a small value' });
									}
									this.manifest.segments = _0x260869;
								},
								'key': function _0x451b4b() {
									if (!_0xfe283.attributes) {
										this.trigger('warn', { 'message': 'ignoring key declaration without attribute list' });
										return;
									}
									if (_0xfe283.attributes.METHOD === 'NONE') {
										_0x75cf76 = null;
										return;
									}
									if (!_0xfe283.attributes.URI) {
										this.trigger('warn', { 'message': 'ignoring key declaration without URI' });
										return;
									}
									if (!_0xfe283.attributes.METHOD) {
										this.trigger('warn', { 'message': 'defaulting key method to AES-128' });
									}
									_0x75cf76 = {
										'method': _0xfe283.attributes.METHOD || 'AES-128',
										'uri': _0xfe283.attributes.URI
									};
									if (typeof _0xfe283.attributes.IV !== 'undefined') {
										_0x75cf76.iv = _0xfe283.attributes.IV;
									}
								},
								'media-sequence': function _0x2a6850() {
									if (!isFinite(_0xfe283.number)) {
										this.trigger('warn', { 'message': 'ignoring invalid media sequence: ' + _0xfe283.number });
										return;
									}
									this.manifest.mediaSequence = _0xfe283.number;
								},
								'discontinuity-sequence': function _0x166163() {
									if (!isFinite(_0xfe283.number)) {
										this.trigger('warn', { 'message': 'ignoring invalid discontinuity sequence: ' + _0xfe283.number });
										return;
									}
									this.manifest.discontinuitySequence = _0xfe283.number;
									_0x188b11 = _0xfe283.number;
								},
								'playlist-type': function _0x3f0985() {
									if (!/VOD|EVENT/.test(_0xfe283.playlistType)) {
										this.trigger('warn', { 'message': 'ignoring unknown playlist type: ' + _0xfe283.playlist });
										return;
									}
									this.manifest.playlistType = _0xfe283.playlistType;
								},
								'map': function _0x58a90c() {
									_0x11c748 = {};
									if (_0xfe283.uri) {
										_0x11c748.uri = _0xfe283.uri;
									}
									if (_0xfe283.byterange) {
										_0x11c748.byterange = _0xfe283.byterange;
									}
								},
								'stream-inf': function _0x472ed0() {
									this.manifest.playlists = _0x260869;
									this.manifest.mediaGroups = this.manifest.mediaGroups || _0x27a80a;
									if (!_0xfe283.attributes) {
										this.trigger('warn', { 'message': 'ignoring empty stream-inf attributes' });
										return;
									}
									if (!_0x227eba.attributes) {
									}
									_0x45e100(_0x227eba.attributes, _0xfe283.attributes);
								},
								'media': function _0x29facf() {
									this.manifest.mediaGroups = this.manifest.mediaGroups || _0x27a80a;
									if (!(_0xfe283.attributes && _0xfe283.attributes.TYPE && _0xfe283.attributes['GROUP-ID'] && _0xfe283.attributes.NAME)) {
										this.trigger('warn', { 'message': 'ignoring incomplete or missing media group' });
										return;
									}
									var _0x5e561e = this.manifest.mediaGroups[_0xfe283.attributes.TYPE];
									_0x5e561e[_0xfe283.attributes['GROUP-ID']] = _0x5e561e[_0xfe283.attributes['GROUP-ID']] || {};
									_0x47cf30 = _0x5e561e[_0xfe283.attributes['GROUP-ID']];
									_0x116cc5 = { 'default': /yes/i.test(_0xfe283.attributes.DEFAULT) };
									if (_0x116cc5.default) {
										_0x116cc5.autoselect = true;
									} else {
										_0x116cc5.autoselect = /yes/i.test(_0xfe283.attributes.AUTOSELECT);
									}
									if (_0xfe283.attributes.LANGUAGE) {
										_0x116cc5.language = _0xfe283.attributes.LANGUAGE;
									}
									if (_0xfe283.attributes.URI) {
										_0x116cc5.uri = _0xfe283.attributes.URI;
									}
									if (_0xfe283.attributes['INSTREAM-ID']) {
										_0x116cc5.instreamId = _0xfe283.attributes['INSTREAM-ID'];
									}
									if (_0xfe283.attributes.CHARACTERISTICS) {
										_0x116cc5.characteristics = _0xfe283.attributes.CHARACTERISTICS;
									}
									if (_0xfe283.attributes.FORCED) {
										_0x116cc5.forced = /yes/i.test(_0xfe283.attributes.FORCED);
									}
									_0x47cf30[_0xfe283.attributes.NAME] = _0x116cc5;
								},
								'discontinuity': function _0x37e66f() {
									_0x188b11 += 1;
									this.manifest.discontinuityStarts.push(_0x260869.length);
								},
								'program-date-time': function _0x1fee40() {
									if (typeof this.manifest.dateTimeString === 'undefined') {
										this.manifest.dateTimeString = _0xfe283.dateTimeString;
										this.manifest.dateTimeObject = _0xfe283.dateTimeObject;
									}
								},
								'targetduration': function _0x32998f() {
									if (!isFinite(_0xfe283.duration) || _0xfe283.duration < 0) {
										this.trigger('warn', { 'message': 'ignoring invalid target duration: ' + _0xfe283.duration });
										return;
									}
									this.manifest.targetDuration = _0xfe283.duration;
								},
								'totalduration': function _0x50d1d6() {
									if (!isFinite(_0xfe283.duration) || _0xfe283.duration < 0) {
										this.trigger('warn', { 'message': 'ignoring invalid total duration: ' + _0xfe283.duration });
										return;
									}
									this.manifest.totalDuration = _0xfe283.duration;
								},
								'start': function _0x6d7d1f() {
									if (!_0xfe283.attributes || isNaN(_0xfe283.attributes['TIME-OFFSET'])) {
										this.trigger('warn', { 'message': 'ignoring start declaration without appropriate attribute list' });
										return;
									}
									this.manifest.start = {
										'timeOffset': _0xfe283.attributes['TIME-OFFSET'],
										'precise': _0xfe283.attributes.PRECISE
									};
								},
								'cue-out': function _0x2546cc() {
								},
								'cue-out-cont': function _0x161e44() {
								},
								'cue-in': function _0xe9abb7() {
								}
							}[_0xfe283.tagType] || _0x407956).call(_0x4214ec);
						},
						'uri': function _0x34f547() {
							_0x260869.push(_0x227eba);
							this.manifest.targetDuration && !('duration' in _0x227eba) && (this.trigger('warn', { 'message': 'defaulting segment duration to the target duration' }), _0x227eba.duration = this.manifest.targetDuration);
							if (_0x75cf76) {
							}
							if (_0x11c748) {
							}
							_0x227eba = {};
						},
						'comment': function _0x2aa8b8() {
						},
						'custom': function _0x166a50() {
							_0xfe283.segment ? (_0x227eba.custom = _0x227eba.custom || {}, _0x227eba.custom[_0xfe283.customType] = _0xfe283.data) : (this.manifest.custom = this.manifest.custom || {}, this.manifest.custom[_0xfe283.customType] = _0xfe283.data);
						}
					}[_0xfe283.type].call(_0x4214ec));
				}), _0x2af5be;
			}
			return _0x54b4ca.prototype.push = function _0x45bec9(_0xd94e85) {
				this.lineStream.push(_0xd94e85);
			}, _0x54b4ca.prototype.end = function _0x2afbba() {
				this.lineStream.push('\n');
			}, _0x54b4ca.prototype.addParser = function _0x57df45(_0xa3e826) {
				this.parseStream.addParser(_0xa3e826);
			}, _0x54b4ca;
		}(_0x2a7139), _0xef363d = function _0x4474dd(_0x33856e) {
			var _0x867db5, _0x5d2633 = _0x33856e.attributes, _0x221c9d = _0x33856e.segments, _0x3f90c1 = {
				'attributes': (_0x867db5 = {
					'NAME': _0x5d2633.id,
					'BANDWIDTH': _0x5d2633.bandwidth,
					'CODECS': _0x5d2633.codecs
				}, _0x867db5['PROGRAM-ID'] = 1, _0x867db5),
				'uri': '',
				'endList': (_0x5d2633.type || 'static') === 'static',
				'timeline': _0x5d2633.periodIndex,
				'resolvedUri': '',
				'targetDuration': _0x5d2633.duration,
				'segments': _0x221c9d,
				'mediaSequence': _0x221c9d.length ? _0x221c9d[0].number : 1
			};
			if (_0x5d2633.contentProtection) {
				_0x3f90c1.contentProtection = _0x5d2633.contentProtection;
			}
			return _0x3f90c1;
		}, _0x3c19dd = function _0x3051a9(_0x2168f5) {
			var _0x3922e1, _0x3a4f2b = _0x2168f5.attributes, _0x5cde37 = _0x2168f5.segments;
			return typeof _0x5cde37 === 'undefined' && (_0x5cde37 = [{
				'uri': _0x3a4f2b.baseUrl,
				'timeline': _0x3a4f2b.periodIndex,
				'resolvedUri': _0x3a4f2b.baseUrl || '',
				'duration': _0x3a4f2b.sourceDuration,
				'number': 0
			}], _0x3a4f2b.duration = _0x3a4f2b.sourceDuration), {
				'attributes': (_0x3922e1 = {
					'NAME': _0x3a4f2b.id,
					'BANDWIDTH': _0x3a4f2b.bandwidth
				}, _0x3922e1['PROGRAM-ID'] = 1, _0x3922e1),
				'uri': '',
				'endList': (_0x3a4f2b.type || 'static') === 'static',
				'timeline': _0x3a4f2b.periodIndex,
				'resolvedUri': _0x3a4f2b.baseUrl || '',
				'targetDuration': _0x3a4f2b.duration,
				'segments': _0x5cde37,
				'mediaSequence': _0x5cde37.length ? _0x5cde37[0].number : 1
			};
		}, _0x80503d = function _0x10ffac(_0x3f9d14) {
			return _0x3f9d14.reduce(function (_0x239eae, _0x29fc8c) {
				var _0x2ec172 = _0x29fc8c.attributes.role && _0x29fc8c.attributes.role.value || 'main', _0x1947eb = _0x29fc8c.attributes.lang || '', _0x1a796a = 'main';
				if (_0x1947eb) {
					_0x1a796a = _0x29fc8c.attributes.lang + ' (' + _0x2ec172 + ')';
				}
				if (_0x239eae[_0x1a796a] && _0x239eae[_0x1a796a].playlists[0].attributes.BANDWIDTH > _0x29fc8c.attributes.bandwidth) {
					return _0x239eae;
				}
				return _0x239eae[_0x1a796a] = {
					'language': _0x1947eb,
					'autoselect': true,
					'default': _0x2ec172 === 'main',
					'playlists': [_0xef363d(_0x29fc8c)],
					'uri': ''
				}, _0x239eae;
			}, {});
		}, _0x455f13 = function _0x139b35(_0x2234fa) {
			return _0x2234fa.reduce(function (_0xd50de3, _0x1699c4) {
				var _0x59842b = _0x1699c4.attributes.lang || 'text';
				if (_0xd50de3[_0x59842b]) {
					return _0xd50de3;
				}
				return _0xd50de3[_0x59842b] = {
					'language': _0x59842b,
					'default': false,
					'autoselect': false,
					'playlists': [_0x3c19dd(_0x1699c4)],
					'uri': ''
				}, _0xd50de3;
			}, {});
		}, _0x5d273b = function _0x1a4e42(_0x3003e4) {
			var _0x106020, _0x5928a9 = _0x3003e4.attributes, _0x103150 = _0x3003e4.segments, _0x2633b3 = {
				'attributes': (_0x106020 = {
					'NAME': _0x5928a9.id,
					'AUDIO': 'audio',
					'SUBTITLES': 'subs',
					'RESOLUTION': {
						'width': _0x5928a9.width,
						'height': _0x5928a9.height
					},
					'CODECS': _0x5928a9.codecs,
					'BANDWIDTH': _0x5928a9.bandwidth
				}, _0x106020['PROGRAM-ID'] = 1, _0x106020),
				'uri': '',
				'endList': (_0x5928a9.type || 'static') === 'static',
				'timeline': _0x5928a9.periodIndex,
				'resolvedUri': '',
				'targetDuration': _0x5928a9.duration,
				'segments': _0x103150,
				'mediaSequence': _0x103150.length ? _0x103150[0].number : 1
			};
			if (_0x5928a9.contentProtection) {
				_0x2633b3.contentProtection = _0x5928a9.contentProtection;
			}
			return _0x2633b3;
		}, _0x3da023 = function _0x2d6cbc(_0x35fd2f) {
			var _0x5983b0;
			if (!_0x35fd2f.length) {
				return {};
			}
			var _0x483539 = _0x35fd2f[0].attributes, _0x5b5c41 = _0x483539.sourceDuration, _0x1b39cf = _0x483539.minimumUpdatePeriod, _0x188926 = _0x1b39cf === undefined ? 0 : _0x1b39cf, _0x117f65 = function _0x353f54(_0x19844c) {
				var _0x16e1b2 = _0x19844c.attributes;
				return _0x16e1b2.mimeType === 'video/mp4' || _0x16e1b2.contentType === 'video';
			}, _0x355397 = function _0x417e77(_0x2441f5) {
				var _0x4e99b8 = _0x2441f5.attributes;
				return _0x4e99b8.mimeType === 'audio/mp4' || _0x4e99b8.contentType === 'audio';
			}, _0x9deb = function _0x18def4(_0x3f17de) {
				var _0x1ffc74 = _0x3f17de.attributes;
				return _0x1ffc74.mimeType === 'text/vtt' || _0x1ffc74.contentType === 'text';
			}, _0x1d2ea7 = _0x35fd2f.filter(_0x117f65).map(_0x5d273b), _0x1da688 = _0x35fd2f.filter(_0x355397), _0x4bebe2 = _0x35fd2f.filter(_0x9deb), _0x25e046 = {
				'allowCache': true,
				'discontinuityStarts': [],
				'segments': [],
				'endList': true,
				'mediaGroups': (_0x5983b0 = {
					'AUDIO': {},
					'VIDEO': {}
				}, _0x5983b0['CLOSED-CAPTIONS'] = {}, _0x5983b0.SUBTITLES = {}, _0x5983b0),
				'uri': '',
				'duration': _0x5b5c41,
				'playlists': _0x1d2ea7,
				'minimumUpdatePeriod': _0x188926 * 1000
			};
			if (_0x1da688.length) {
				_0x25e046.mediaGroups.AUDIO.audio = _0x80503d(_0x1da688);
			}
			if (_0x4bebe2.length) {
				_0x25e046.mediaGroups.SUBTITLES.subs = _0x455f13(_0x4bebe2);
			}
			return _0x25e046;
		}, _0x236db2 = typeof Symbol === 'function' && _0x413e18(Symbol.iterator) === 'symbol' ? function (_0x3de182) {
			return typeof _0x3de182 === 'undefined' ? 'undefined' : _0x413e18(_0x3de182);
		} : function (_0x1a8e71) {
			return _0x1a8e71 && typeof Symbol === 'function' && _0x1a8e71.constructor === Symbol && _0x1a8e71 !== Symbol.prototype ? 'symbol' : typeof _0x1a8e71 === 'undefined' ? 'undefined' : _0x413e18(_0x1a8e71);
		}, _0x45cac0 = function _0xf7d6ae(_0x39fc4d) {
			return !!_0x39fc4d && (typeof _0x39fc4d === 'undefined' ? 'undefined' : _0x236db2(_0x39fc4d)) === 'object';
		}, _0xad909e = function _0x59ff0a() {
			for (var _0x45b7f7 = arguments.length, _0x5e8a6c = Array(_0x45b7f7), _0x5d56ce = 0; _0x5d56ce < _0x45b7f7; _0x5d56ce++) {
				_0x5e8a6c[_0x5d56ce] = arguments[_0x5d56ce];
			}
			return _0x5e8a6c.reduce(function (_0x4cec58, _0x5ee25f) {
				return Object.keys(_0x5ee25f).forEach(function (_0x3c2039) {
					if (Array.isArray(_0x4cec58[_0x3c2039]) && Array.isArray(_0x5ee25f[_0x3c2039])) {
						_0x4cec58[_0x3c2039] = _0x4cec58[_0x3c2039].concat(_0x5ee25f[_0x3c2039]);
					} else {
						if (_0x45cac0(_0x4cec58[_0x3c2039]) && _0x45cac0(_0x5ee25f[_0x3c2039])) {
							_0x4cec58[_0x3c2039] = _0x59ff0a(_0x4cec58[_0x3c2039], _0x5ee25f[_0x3c2039]);
						} else {
							_0x4cec58[_0x3c2039] = _0x5ee25f[_0x3c2039];
						}
					}
				}), _0x4cec58;
			}, {});
		}, _0x33585c = function _0x3a5405(_0x156fb7, _0x189db0) {
			if (/^[a-z]+:/i.test(_0x189db0)) {
				return _0x189db0;
			}
			if (!/\/\//i.test(_0x156fb7)) {
				_0x156fb7 = _0x35f560.buildAbsoluteURL(_0x504cd5.location.href, _0x156fb7);
			}
			return _0x35f560.buildAbsoluteURL(_0x156fb7, _0x189db0);
		}, _0xe4ed73 = function _0x3551f7(_0x132975) {
			var _0x1d9882 = _0x132975.baseUrl, _0x28c74a = _0x1d9882 === undefined ? '' : _0x1d9882, _0x423469 = _0x132975.source, _0x4f41d0 = _0x423469 === undefined ? '' : _0x423469, _0x22565c = _0x132975.range, _0x15ea7b = _0x22565c === undefined ? '' : _0x22565c, _0x4a5d9e = {
				'uri': _0x4f41d0,
				'resolvedUri': _0x33585c(_0x28c74a || '', _0x4f41d0)
			};
			if (_0x15ea7b) {
				var _0x302ccc = _0x15ea7b.split('-'), _0x77c1f6 = parseInt(_0x302ccc[0], 10), _0x2c1085 = parseInt(_0x302ccc[1], 10);
				_0x4a5d9e.byterange = {
					'length': _0x2c1085 - _0x77c1f6,
					'offset': _0x77c1f6
				};
			}
			return _0x4a5d9e;
		}, _0x55aa14 = function _0x1b7283(_0x5e19f6, _0x52b7b3, _0x55e80b) {
			var _0x54c620 = _0x5e19f6.NOW, _0x564292 = _0x5e19f6.clientOffset, _0x43439f = _0x5e19f6.availabilityStartTime, _0x1b270c = _0x5e19f6.timescale, _0x29796a = _0x1b270c === undefined ? 1 : _0x1b270c, _0x1f0dc6 = _0x5e19f6.start, _0x26ce98 = _0x1f0dc6 === undefined ? 0 : _0x1f0dc6, _0x41940f = _0x5e19f6.minimumUpdatePeriod, _0x552b13 = _0x41940f === undefined ? 0 : _0x41940f, _0x334df4 = (_0x54c620 + _0x564292) / 1000, _0x3def85 = _0x43439f + _0x26ce98, _0x141ea9 = _0x334df4 + _0x552b13, _0x281f21 = _0x141ea9 - _0x3def85;
			return Math.ceil((_0x281f21 * _0x29796a - _0x52b7b3) / _0x55e80b);
		}, _0x4c1238 = function _0x50b9cd(_0x164845, _0x5a8726) {
			var _0x8956e4 = _0x164845.type, _0xcfbb08 = _0x8956e4 === undefined ? 'static' : _0x8956e4, _0x4daa7d = _0x164845.minimumUpdatePeriod, _0x29f8dd = _0x4daa7d === undefined ? 0 : _0x4daa7d, _0x41aaec = _0x164845.media, _0x11cfc8 = _0x41aaec === undefined ? '' : _0x41aaec, _0x91cb2b = _0x164845.sourceDuration, _0x464b71 = _0x164845.timescale, _0x1a16c0 = _0x464b71 === undefined ? 1 : _0x464b71, _0x14c3a7 = _0x164845.startNumber, _0x43653f = _0x14c3a7 === undefined ? 1 : _0x14c3a7, _0x31305e = _0x164845.periodIndex, _0x524263 = [], _0x50cd1a = -1;
			for (var _0x2158f5 = 0; _0x2158f5 < _0x5a8726.length; _0x2158f5++) {
				var _0x44df95 = _0x5a8726[_0x2158f5], _0x1c6129 = _0x44df95.d, _0x41f834 = _0x44df95.r || 0, _0x1ff299 = _0x44df95.t || 0;
				if (_0x50cd1a < 0) {
					_0x50cd1a = _0x1ff299;
				}
				if (_0x1ff299 && _0x1ff299 > _0x50cd1a) {
					_0x50cd1a = _0x1ff299;
				}
				var _0x1d589b = void 0;
				if (_0x41f834 < 0) {
					var _0x4e8497 = _0x2158f5 + 1;
					if (_0x4e8497 === _0x5a8726.length) {
						if (_0xcfbb08 === 'dynamic' && _0x29f8dd > 0 && _0x11cfc8.indexOf('$Number$') > 0) {
							_0x1d589b = _0x55aa14(_0x164845, _0x50cd1a, _0x1c6129);
						} else {
							_0x1d589b = (_0x91cb2b * _0x1a16c0 - _0x50cd1a) / _0x1c6129;
						}
					} else {
						_0x1d589b = (_0x5a8726[_0x4e8497].t - _0x50cd1a) / _0x1c6129;
					}
				} else {
					_0x1d589b = _0x41f834 + 1;
				}
				var _0x5ccf4a = _0x43653f + _0x524263.length + _0x1d589b, _0x145090 = _0x43653f + _0x524263.length;
				while (_0x145090 < _0x5ccf4a) {
					_0x524263.push({
						'number': _0x145090,
						'duration': _0x1c6129 / _0x1a16c0,
						'time': _0x50cd1a,
						'timeline': _0x31305e
					});
					_0x50cd1a += _0x1c6129;
					_0x145090++;
				}
			}
			return _0x524263;
		}, _0x51dd6 = function _0x3a968a(_0x1e15d1, _0x30b523) {
			var _0x3f4139 = [];
			for (var _0x37550a = _0x1e15d1; _0x37550a < _0x30b523; _0x37550a++) {
				_0x3f4139.push(_0x37550a);
			}
			return _0x3f4139;
		}, _0x3f567e = function _0x509069(_0x4a7e30) {
			return _0x4a7e30.reduce(function (_0x3b6b96, _0x54dd82) {
				return _0x3b6b96.concat(_0x54dd82);
			}, []);
		}, _0x1cc54d = function _0x13a9fd(_0x344631) {
			if (!_0x344631.length) {
				return [];
			}
			var _0x2613ca = [];
			for (var _0x4e892d = 0; _0x4e892d < _0x344631.length; _0x4e892d++) {
				_0x2613ca.push(_0x344631[_0x4e892d]);
			}
			return _0x2613ca;
		}, _0x2f5599 = {
			'static': function _0x315ffb(_0x1757ac) {
				var _0x2f31cf = _0x1757ac.duration, _0x1e00ac = _0x1757ac.timescale, _0x1073ca = _0x1e00ac === undefined ? 1 : _0x1e00ac, _0xe64dcb = _0x1757ac.sourceDuration;
				return {
					'start': 0,
					'end': Math.ceil(_0xe64dcb / (_0x2f31cf / _0x1073ca))
				};
			},
			'dynamic': function _0x23e5d5(_0x3096b5) {
				var _0x86ec8 = _0x3096b5.NOW, _0x4be658 = _0x3096b5.clientOffset, _0x12a20d = _0x3096b5.availabilityStartTime, _0x324b9f = _0x3096b5.timescale, _0x550334 = _0x324b9f === undefined ? 1 : _0x324b9f, _0x5e292b = _0x3096b5.duration, _0x42b103 = _0x3096b5.start, _0x3fd165 = _0x42b103 === undefined ? 0 : _0x42b103, _0x18737 = _0x3096b5.minimumUpdatePeriod, _0x329af2 = _0x18737 === undefined ? 0 : _0x18737, _0x7d09b1 = _0x3096b5.timeShiftBufferDepth, _0x30d2bf = _0x7d09b1 === undefined ? Infinity : _0x7d09b1, _0x1dc242 = (_0x86ec8 + _0x4be658) / 1000, _0x43a938 = _0x12a20d + _0x3fd165, _0x1821aa = _0x1dc242 + _0x329af2, _0xd509d3 = _0x1821aa - _0x43a938, _0x32513e = Math.ceil(_0xd509d3 * _0x550334 / _0x5e292b), _0x36fca1 = Math.floor((_0x1dc242 - _0x43a938 - _0x30d2bf) * _0x550334 / _0x5e292b), _0x197396 = Math.floor((_0x1dc242 - _0x43a938) * _0x550334 / _0x5e292b);
				return {
					'start': Math.max(0, _0x36fca1),
					'end': Math.min(_0x32513e, _0x197396)
				};
			}
		}, _0x330ec4 = function _0x113e9d(_0x3bf9f7) {
			return function (_0xa605e6, _0x2a9b45) {
				var _0x5250f5 = _0x3bf9f7.duration, _0x40f832 = _0x3bf9f7.timescale, _0x49f9f6 = _0x40f832 === undefined ? 1 : _0x40f832, _0x482fc2 = _0x3bf9f7.periodIndex, _0x204c29 = _0x3bf9f7.startNumber, _0x228602 = _0x204c29 === undefined ? 1 : _0x204c29;
				return {
					'number': _0x228602 + _0xa605e6,
					'duration': _0x5250f5 / _0x49f9f6,
					'timeline': _0x482fc2,
					'time': _0x2a9b45 * _0x5250f5
				};
			};
		}, _0x11aa09 = function _0x9c6b6c(_0x50e155) {
			var _0x4acfa1 = _0x50e155.type, _0x459b4e = _0x4acfa1 === undefined ? 'static' : _0x4acfa1, _0x528d70 = _0x50e155.duration, _0x4dedff = _0x50e155.timescale, _0x208025 = _0x4dedff === undefined ? 1 : _0x4dedff, _0x4e377c = _0x50e155.sourceDuration, _0x9efc8 = _0x2f5599[_0x459b4e](_0x50e155), _0x304df5 = _0x9efc8.start, _0x31d3b9 = _0x9efc8.end, _0x39e646 = _0x51dd6(_0x304df5, _0x31d3b9).map(_0x330ec4(_0x50e155));
			if (_0x459b4e === 'static') {
				var _0x55bd01 = _0x39e646.length - 1;
				_0x39e646[_0x55bd01].duration = _0x4e377c - _0x528d70 / _0x208025 * _0x55bd01;
			}
			return _0x39e646;
		}, _0x1b8646 = function _0x35063f(_0x2437cd) {
			return function (_0x514e78, _0x377138, _0x34da0f, _0x214325) {
				if (_0x514e78 === '$$') {
					return '$';
				}
				if (typeof _0x2437cd[_0x377138] === 'undefined') {
					return _0x514e78;
				}
				var _0x3b4252 = '' + _0x2437cd[_0x377138];
				if (_0x377138 === 'RepresentationID') {
					return _0x3b4252;
				}
				if (!_0x34da0f) {
					_0x214325 = 1;
				} else {
					_0x214325 = parseInt(_0x214325, 10);
				}
				if (_0x3b4252.length >= _0x214325) {
					return _0x3b4252;
				}
				return '' + new Array(_0x214325 - _0x3b4252.length + 1).join('0') + _0x3b4252;
			};
		}, _0x3cf021 = function _0x5aa840(_0xea5eaa, _0x56a80b) {
			return _0xea5eaa.replace(/\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g, _0x1b8646(_0x56a80b));
		}, _0x4be522 = function _0x1818f3(_0x10bdff, _0x5b2609) {
			if (!_0x10bdff.duration && !_0x5b2609) {
				return [{
					'number': _0x10bdff.startNumber || 1,
					'duration': _0x10bdff.sourceDuration,
					'time': 0,
					'timeline': _0x10bdff.periodIndex
				}];
			}
			if (_0x10bdff.duration) {
				return _0x11aa09(_0x10bdff);
			}
			return _0x4c1238(_0x10bdff, _0x5b2609);
		}, _0x14ae5e = function _0x1cac21(_0x12efb3, _0x5552db) {
			var _0x109d2f = {
				'RepresentationID': _0x12efb3.id,
				'Bandwidth': _0x12efb3.bandwidth || 0
			}, _0x29a834 = _0x12efb3.initialization, _0x1571e4 = _0x29a834 === undefined ? {
				'sourceURL': '',
				'range': ''
			} : _0x29a834, _0x3246bc = _0xe4ed73({
				'baseUrl': _0x12efb3.baseUrl,
				'source': _0x3cf021(_0x1571e4.sourceURL, _0x109d2f),
				'range': _0x1571e4.range
			}), _0x4bdbc9 = _0x4be522(_0x12efb3, _0x5552db);
			return _0x4bdbc9.map(function (_0x55e9b1) {
				_0x109d2f.Number = _0x55e9b1.number;
				_0x109d2f.Time = _0x55e9b1.time;
				var _0x27f29e = _0x3cf021(_0x12efb3.media || '', _0x109d2f);
				return {
					'uri': _0x27f29e,
					'timeline': _0x55e9b1.timeline,
					'duration': _0x55e9b1.duration,
					'resolvedUri': _0x33585c(_0x12efb3.baseUrl || '', _0x27f29e),
					'map': _0x3246bc,
					'number': _0x55e9b1.number
				};
			});
		}, _0x9f86f5 = {
			'INVALID_NUMBER_OF_PERIOD': 'INVALID_NUMBER_OF_PERIOD',
			'DASH_EMPTY_MANIFEST': 'DASH_EMPTY_MANIFEST',
			'DASH_INVALID_XML': 'DASH_INVALID_XML',
			'NO_BASE_URL': 'NO_BASE_URL',
			'MISSING_SEGMENT_INFORMATION': 'MISSING_SEGMENT_INFORMATION',
			'SEGMENT_TIME_UNSPECIFIED': 'SEGMENT_TIME_UNSPECIFIED',
			'UNSUPPORTED_UTC_TIMING_SCHEME': 'UNSUPPORTED_UTC_TIMING_SCHEME'
		}, _0x195d5f = function _0x1ae5ed(_0x4fe423, _0x3a564e) {
			var _0x3dcde6 = _0x4fe423.baseUrl, _0x5e9b3d = _0x4fe423.initialization, _0x577063 = _0x5e9b3d === undefined ? {} : _0x5e9b3d, _0x1472ef = _0xe4ed73({
				'baseUrl': _0x3dcde6,
				'source': _0x577063.sourceURL,
				'range': _0x577063.range
			}), _0x442bf3 = _0xe4ed73({
				'baseUrl': _0x3dcde6,
				'source': _0x3a564e.media,
				'range': _0x3a564e.mediaRange
			});
			return _0x442bf3.map = _0x1472ef, _0x442bf3;
		}, _0x55999b = function _0x38a145(_0x33a4ad, _0x22e0cc) {
			var _0x5a9afb = _0x33a4ad.duration, _0x35297a = _0x33a4ad.segmentUrls, _0xb42c77 = _0x35297a === undefined ? [] : _0x35297a;
			if (!_0x5a9afb && !_0x22e0cc || _0x5a9afb && _0x22e0cc) {
				throw new Error(_0x9f86f5.SEGMENT_TIME_UNSPECIFIED);
			}
			var _0x13c685 = _0xb42c77.map(function (_0x357cd1) {
				return _0x195d5f(_0x33a4ad, _0x357cd1);
			}), _0x5e03be = void 0;
			if (_0x5a9afb) {
				_0x5e03be = _0x11aa09(_0x33a4ad);
			}
			if (_0x22e0cc) {
				_0x5e03be = _0x4c1238(_0x33a4ad, _0x22e0cc);
			}
			var _0x1876d8 = _0x5e03be.map(function (_0xcc4531, _0x165459) {
				if (_0x13c685[_0x165459]) {
					var _0x2583a2 = _0x13c685[_0x165459];
					return _0x2583a2.timeline = _0xcc4531.timeline, _0x2583a2.duration = _0xcc4531.duration, _0x2583a2.number = _0xcc4531.number, _0x2583a2;
				}
			}).filter(function (_0x563c63) {
				return _0x563c63;
			});
			return _0x1876d8;
		}, _0x297a36 = function _0x19d559(_0x1f15e7) {
			var _0x4f3037 = _0x1f15e7.baseUrl, _0x357dd7 = _0x1f15e7.initialization, _0x29c2c4 = _0x357dd7 === undefined ? {} : _0x357dd7, _0x408d98 = _0x1f15e7.sourceDuration, _0x51cc46 = _0x1f15e7.timescale, _0x18a731 = _0x51cc46 === undefined ? 1 : _0x51cc46, _0x5f0756 = _0x1f15e7.indexRange, _0x26b4c6 = _0x5f0756 === undefined ? '' : _0x5f0756, _0x4e3c34 = _0x1f15e7.duration;
			if (!_0x4f3037) {
				throw new Error(_0x9f86f5.NO_BASE_URL);
			}
			var _0x49f18b = _0xe4ed73({
				'baseUrl': _0x4f3037,
				'source': _0x29c2c4.sourceURL,
				'range': _0x29c2c4.range
			}), _0x47d323 = _0xe4ed73({
				'baseUrl': _0x4f3037,
				'source': _0x4f3037,
				'range': _0x26b4c6
			});
			_0x47d323.map = _0x49f18b;
			if (_0x4e3c34) {
				var _0x4a6372 = _0x11aa09(_0x1f15e7);
				_0x4a6372.length && (_0x47d323.duration = _0x4a6372[0].duration, _0x47d323.timeline = _0x4a6372[0].timeline);
			} else {
				_0x408d98 && (_0x47d323.duration = _0x408d98 / _0x18a731, _0x47d323.timeline = 0);
			}
			return _0x47d323.number = 0, [_0x47d323];
		}, _0x179253 = function _0x38ace9(_0x52ed77) {
			var _0x4cbe9c = _0x52ed77.attributes, _0x478439 = _0x52ed77.segmentInfo, _0x548db0 = void 0, _0x9c722e = void 0;
			if (_0x478439.template) {
				_0x9c722e = _0x14ae5e;
				_0x548db0 = _0xad909e(_0x4cbe9c, _0x478439.template);
			} else {
				if (_0x478439.base) {
					_0x9c722e = _0x297a36;
					_0x548db0 = _0xad909e(_0x4cbe9c, _0x478439.base);
				} else {
					_0x478439.list && (_0x9c722e = _0x55999b, _0x548db0 = _0xad909e(_0x4cbe9c, _0x478439.list));
				}
			}
			if (!_0x9c722e) {
				return { 'attributes': _0x4cbe9c };
			}
			var _0x292e52 = _0x9c722e(_0x548db0, _0x478439.timeline);
			if (_0x548db0.duration) {
				var _0x16239f = _0x548db0, _0x4e262c = _0x16239f.duration, _0x203127 = _0x16239f.timescale, _0x49529e = _0x203127 === undefined ? 1 : _0x203127;
				_0x548db0.duration = _0x4e262c / _0x49529e;
			} else {
				if (_0x292e52.length) {
					_0x548db0.duration = _0x292e52.reduce(function (_0x312502, _0x553568) {
						return Math.max(_0x312502, Math.ceil(_0x553568.duration));
					}, 0);
				} else {
					_0x548db0.duration = 0;
				}
			}
			return {
				'attributes': _0x548db0,
				'segments': _0x292e52
			};
		}, _0x272a8b = function _0x2897f4(_0x5ae698) {
			return _0x5ae698.map(_0x179253);
		}, _0xb7ad15 = function _0x73ec65(_0x4aed4, _0x54c166) {
			return _0x1cc54d(_0x4aed4.childNodes).filter(function (_0x1a495f) {
				var _0x4f93f5 = _0x1a495f.tagName;
				return _0x4f93f5 === _0x54c166;
			});
		}, _0x1daed1 = function _0x40398c(_0x16af25) {
			return _0x16af25.textContent.trim();
		}, _0x4af878 = function _0x14699a(_0x35eb97) {
			var _0x5b68d9 = 31536000, _0x285207 = 2592000, _0x201ac8 = 86400, _0x1103e9 = 3600, _0x23d687 = 60, _0x2668f5 = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/, _0x41e740 = _0x2668f5.exec(_0x35eb97);
			if (!_0x41e740) {
				return 0;
			}
			var _0x2f2074 = _0x41e740.slice(1), _0xd3cdc8 = _0x2f2074[0], _0xd8f198 = _0x2f2074[1], _0x5d69a6 = _0x2f2074[2], _0x5e24d4 = _0x2f2074[3], _0x194926 = _0x2f2074[4], _0x3bf91d = _0x2f2074[5];
			return parseFloat(_0xd3cdc8 || 0) * _0x5b68d9 + parseFloat(_0xd8f198 || 0) * _0x285207 + parseFloat(_0x5d69a6 || 0) * _0x201ac8 + parseFloat(_0x5e24d4 || 0) * _0x1103e9 + parseFloat(_0x194926 || 0) * _0x23d687 + parseFloat(_0x3bf91d || 0);
		}, _0x26a087 = function _0x1386de(_0x190428) {
			var _0x24b1e0 = /^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/;
			if (_0x24b1e0.test(_0x190428)) {
				_0x190428 += 'Z';
			}
			return Date.parse(_0x190428);
		}, _0x44fb9a = {
			'mediaPresentationDuration': function _0x31d450(_0x1ac664) {
				return _0x4af878(_0x1ac664);
			},
			'availabilityStartTime': function _0x47ed03(_0x1ef0a3) {
				return _0x26a087(_0x1ef0a3) / 1000;
			},
			'minimumUpdatePeriod': function _0xa3b1a1(_0x5ef5ec) {
				return _0x4af878(_0x5ef5ec);
			},
			'timeShiftBufferDepth': function _0x656742(_0x6164e5) {
				return _0x4af878(_0x6164e5);
			},
			'start': function _0x4f487f(_0x4c8cb9) {
				return _0x4af878(_0x4c8cb9);
			},
			'width': function _0x9869e7(_0xed24c3) {
				return parseInt(_0xed24c3, 10);
			},
			'height': function _0x38b7f2(_0x1b5b4f) {
				return parseInt(_0x1b5b4f, 10);
			},
			'bandwidth': function _0x2a7f15(_0x36bde9) {
				return parseInt(_0x36bde9, 10);
			},
			'startNumber': function _0x2dae31(_0x25e17c) {
				return parseInt(_0x25e17c, 10);
			},
			'timescale': function _0x194137(_0x159a88) {
				return parseInt(_0x159a88, 10);
			},
			'duration': function _0x3de9bb(_0x112d74) {
				var _0x390468 = parseInt(_0x112d74, 10);
				if (isNaN(_0x390468)) {
					return _0x4af878(_0x112d74);
				}
				return _0x390468;
			},
			'd': function _0xb9589d(_0x1b3f5c) {
				return parseInt(_0x1b3f5c, 10);
			},
			't': function _0x1983b8(_0xc5f711) {
				return parseInt(_0xc5f711, 10);
			},
			'r': function _0x5a3b3f(_0x1a2db6) {
				return parseInt(_0x1a2db6, 10);
			},
			'DEFAULT': function _0x19d2fd(_0x1c3d17) {
				return _0x1c3d17;
			}
		}, _0x52d041 = function _0x56b1ed(_0x95a32b) {
			if (!(_0x95a32b && _0x95a32b.attributes)) {
				return {};
			}
			return _0x1cc54d(_0x95a32b.attributes).reduce(function (_0x264419, _0x4fdea2) {
				var _0x10945b = _0x44fb9a[_0x4fdea2.name] || _0x44fb9a.DEFAULT;
				return _0x264419[_0x4fdea2.name] = _0x10945b(_0x4fdea2.value), _0x264419;
			}, {});
		};
		function _0x136bb9(_0x26e869) {
			var _0x34df18 = _0x504cd5.atob(_0x26e869), _0x34b183 = new Uint8Array(_0x34df18.length);
			for (var _0xceee3f = 0; _0xceee3f < _0x34df18.length; _0xceee3f++) {
				_0x34b183[_0xceee3f] = _0x34df18.charCodeAt(_0xceee3f);
			}
			return _0x34b183;
		}
		var _0xb70747 = {
			'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',
			'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',
			'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',
			'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'
		}, _0x4f53af = function _0x3f91fa(_0x3dcde4, _0x31e0d6) {
			if (!_0x31e0d6.length) {
				return _0x3dcde4;
			}
			return _0x3f567e(_0x3dcde4.map(function (_0x5cfcf4) {
				return _0x31e0d6.map(function (_0x279a77) {
					return _0x33585c(_0x5cfcf4, _0x1daed1(_0x279a77));
				});
			}));
		}, _0x2a9182 = function _0x1074e0(_0x29b71e) {
			var _0x4d1466 = _0xb7ad15(_0x29b71e, 'SegmentTemplate')[0], _0x1b7605 = _0xb7ad15(_0x29b71e, 'SegmentList')[0], _0x5d6930 = _0x1b7605 && _0xb7ad15(_0x1b7605, 'SegmentURL').map(function (_0x482e96) {
				return _0xad909e({ 'tag': 'SegmentURL' }, _0x52d041(_0x482e96));
			}), _0x5a9c19 = _0xb7ad15(_0x29b71e, 'SegmentBase')[0], _0x224be8 = _0x1b7605 || _0x4d1466, _0x3ecb51 = _0x224be8 && _0xb7ad15(_0x224be8, 'SegmentTimeline')[0], _0x20ed31 = _0x1b7605 || _0x5a9c19 || _0x4d1466, _0x349a2d = _0x20ed31 && _0xb7ad15(_0x20ed31, 'Initialization')[0], _0xeeeb99 = _0x4d1466 && _0x52d041(_0x4d1466);
			if (_0xeeeb99 && _0x349a2d) {
				_0xeeeb99.initialization = _0x349a2d && _0x52d041(_0x349a2d);
			} else {
				if (_0xeeeb99 && _0xeeeb99.initialization) {
					_0xeeeb99.initialization = { 'sourceURL': _0xeeeb99.initialization };
				}
			}
			var _0x245394 = {
				'template': _0xeeeb99,
				'timeline': _0x3ecb51 && _0xb7ad15(_0x3ecb51, 'S').map(function (_0x4d99cd) {
					return _0x52d041(_0x4d99cd);
				}),
				'list': _0x1b7605 && _0xad909e(_0x52d041(_0x1b7605), {
					'segmentUrls': _0x5d6930,
					'initialization': _0x52d041(_0x349a2d)
				}),
				'base': _0x5a9c19 && _0xad909e(_0x52d041(_0x5a9c19), { 'initialization': _0x52d041(_0x349a2d) })
			};
			return Object.keys(_0x245394).forEach(function (_0x55dd32) {
				if (!_0x245394[_0x55dd32]) {
					delete _0x245394[_0x55dd32];
				}
			}), _0x245394;
		}, _0x116497 = function _0x248317(_0x1e0b34, _0x2bc2d1, _0x50dabb) {
			return function (_0x1c50e6) {
				var _0x2b25bb = _0xb7ad15(_0x1c50e6, 'BaseURL'), _0x52941a = _0x4f53af(_0x2bc2d1, _0x2b25bb), _0x42d918 = _0xad909e(_0x1e0b34, _0x52d041(_0x1c50e6)), _0x1daf81 = _0x2a9182(_0x1c50e6);
				return _0x52941a.map(function (_0x1d248c) {
					return {
						'segmentInfo': _0xad909e(_0x50dabb, _0x1daf81),
						'attributes': _0xad909e(_0x42d918, { 'baseUrl': _0x1d248c })
					};
				});
			};
		}, _0x388ea6 = function _0x2480c2(_0x1bbad4) {
			return _0x1bbad4.reduce(function (_0x494783, _0x568e73) {
				var _0x36aa48 = _0x52d041(_0x568e73), _0x4e5752 = _0xb70747[_0x36aa48.schemeIdUri];
				if (_0x4e5752) {
					_0x494783[_0x4e5752] = { 'attributes': _0x36aa48 };
					var _0x366708 = _0xb7ad15(_0x568e73, 'cenc:pssh')[0];
					if (_0x366708) {
						var _0x5a2dcd = _0x1daed1(_0x366708), _0x2d1514 = _0x5a2dcd && _0x136bb9(_0x5a2dcd);
						_0x494783[_0x4e5752].pssh = _0x2d1514;
					}
				}
				return _0x494783;
			}, {});
		}, _0x41ce2e = function _0x3c3bf2(_0x499898, _0x4d89c9, _0x3b03e9) {
			return function (_0x3fb4dd) {
				var _0x2b35da = _0x52d041(_0x3fb4dd), _0x5e5ad6 = _0x4f53af(_0x4d89c9, _0xb7ad15(_0x3fb4dd, 'BaseURL')), _0x35a0de = _0xb7ad15(_0x3fb4dd, 'Role')[0], _0x50681d = { 'role': _0x52d041(_0x35a0de) }, _0x285e82 = _0xad909e(_0x499898, _0x2b35da, _0x50681d), _0xabe95b = _0x388ea6(_0xb7ad15(_0x3fb4dd, 'ContentProtection'));
				if (Object.keys(_0xabe95b).length) {
					_0x285e82 = _0xad909e(_0x285e82, { 'contentProtection': _0xabe95b });
				}
				var _0x7182f6 = _0x2a9182(_0x3fb4dd), _0x42210d = _0xb7ad15(_0x3fb4dd, 'Representation'), _0x6e3b6b = _0xad909e(_0x3b03e9, _0x7182f6);
				return _0x3f567e(_0x42210d.map(_0x116497(_0x285e82, _0x5e5ad6, _0x6e3b6b)));
			};
		}, _0x3c294f = function _0x3a4bbb(_0x56d747, _0x2cb54e) {
			return function (_0x5c2485, _0x55a508) {
				var _0x1e66ee = _0x4f53af(_0x2cb54e, _0xb7ad15(_0x5c2485, 'BaseURL')), _0x41e8d0 = _0x52d041(_0x5c2485), _0x3bda6c = _0xad909e(_0x56d747, _0x41e8d0, { 'periodIndex': _0x55a508 }), _0x2c4f1c = _0xb7ad15(_0x5c2485, 'AdaptationSet'), _0x2d1aa4 = _0x2a9182(_0x5c2485);
				return _0x3f567e(_0x2c4f1c.map(_0x41ce2e(_0x3bda6c, _0x1e66ee, _0x2d1aa4)));
			};
		}, _0x2ee189 = function _0x3e60a4(_0x5b7e2d) {
			var _0x35adc7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x4f6436 = _0x35adc7.manifestUri, _0x31d9c0 = _0x4f6436 === undefined ? '' : _0x4f6436, _0xe97cc1 = _0x35adc7.NOW, _0x55a5d7 = _0xe97cc1 === undefined ? Date.now() : _0xe97cc1, _0x36f56c = _0x35adc7.clientOffset, _0x1bd722 = _0x36f56c === undefined ? 0 : _0x36f56c, _0x3e5a99 = _0xb7ad15(_0x5b7e2d, 'Period');
			if (_0x3e5a99.length !== 1) {
				throw new Error(_0x9f86f5.INVALID_NUMBER_OF_PERIOD);
			}
			var _0x2928a4 = _0x52d041(_0x5b7e2d), _0x545897 = _0x4f53af([_0x31d9c0], _0xb7ad15(_0x5b7e2d, 'BaseURL'));
			return _0x2928a4.sourceDuration = _0x2928a4.mediaPresentationDuration || 0, _0x2928a4.NOW = _0x55a5d7, _0x2928a4.clientOffset = _0x1bd722, _0x3f567e(_0x3e5a99.map(_0x3c294f(_0x2928a4, _0x545897)));
		}, _0x23de79 = function _0x3e5a2f(_0x1db11b) {
			if (_0x1db11b === '') {
				throw new Error(_0x9f86f5.DASH_EMPTY_MANIFEST);
			}
			var _0x43a331 = new _0x504cd5.DOMParser(), _0x177a01 = _0x43a331.parseFromString(_0x1db11b, 'application/xml'), _0x3aa408 = _0x177a01 && _0x177a01.documentElement.tagName === 'MPD' ? _0x177a01.documentElement : null;
			if (!_0x3aa408 || _0x3aa408 && _0x3aa408.getElementsByTagName('parsererror').length > 0) {
				throw new Error(_0x9f86f5.DASH_INVALID_XML);
			}
			return _0x3aa408;
		}, _0x1a7e8a = function _0x1c1e60(_0x45a6a4) {
			var _0x486c3c = _0xb7ad15(_0x45a6a4, 'UTCTiming')[0];
			if (!_0x486c3c) {
				return null;
			}
			var _0x14197f = _0x52d041(_0x486c3c);
			switch (_0x14197f.schemeIdUri) {
				case 'urn:mpeg:dash:utc:http-head:2014':
				case 'urn:mpeg:dash:utc:http-head:2012':
					_0x14197f.method = 'HEAD';
					break;
				case 'urn:mpeg:dash:utc:http-xsdate:2014':
				case 'urn:mpeg:dash:utc:http-iso:2014':
				case 'urn:mpeg:dash:utc:http-xsdate:2012':
				case 'urn:mpeg:dash:utc:http-iso:2012':
					_0x14197f.method = 'GET';
					break;
				case 'urn:mpeg:dash:utc:direct:2014':
				case 'urn:mpeg:dash:utc:direct:2012':
					_0x14197f.method = 'DIRECT', _0x14197f.value = Date.parse(_0x14197f.value);
					break;
				case 'urn:mpeg:dash:utc:http-ntp:2014':
				case 'urn:mpeg:dash:utc:ntp:2014':
				case 'urn:mpeg:dash:utc:sntp:2014':
				default:
					throw new Error(_0x9f86f5.UNSUPPORTED_UTC_TIMING_SCHEME);
			}
			return _0x14197f;
		}, _0x463a78 = function _0x184b74(_0x5e2068, _0x431b54) {
			return _0x3da023(_0x272a8b(_0x2ee189(_0x23de79(_0x5e2068), _0x431b54)));
		}, _0x51d4f3 = function _0x56a19a(_0x41ff6b) {
			return _0x1a7e8a(_0x23de79(_0x41ff6b));
		}, _0x14c681, _0x51a167 = {
			'toUnsigned': function _0x53a81b(_0x2041ba) {
				return _0x2041ba >>> 0;
			}
		}, _0x54b22e, _0x249c75 = Object.freeze({
			'default': _0x51a167,
			'__moduleExports': _0x51a167,
			'toUnsigned': _0x51a167.toUnsigned
		}), _0x5dfff9, _0xb8feb4 = (_0x249c75 && _0x51a167 || _0x249c75).toUnsigned, _0x1b251f, _0x579cac, _0x563021, _0x585490, _0x252110, _0x1b251f = function _0x37cd50(_0x345f4e, _0x3738a6) {
			var _0x2c4f83 = [], _0x170a75, _0xd917a4, _0x3e501f, _0x25e3d1, _0x48dd74;
			if (!_0x3738a6.length) {
				return null;
			}
			for (_0x170a75 = 0; _0x170a75 < _0x345f4e.byteLength;) {
				_0xd917a4 = _0xb8feb4(_0x345f4e[_0x170a75] << 24 | _0x345f4e[_0x170a75 + 1] << 16 | _0x345f4e[_0x170a75 + 2] << 8 | _0x345f4e[_0x170a75 + 3]);
				_0x3e501f = _0x579cac(_0x345f4e.subarray(_0x170a75 + 4, _0x170a75 + 8));
				_0x25e3d1 = _0xd917a4 > 1 ? _0x170a75 + _0xd917a4 : _0x345f4e.byteLength;
				if (_0x3e501f === _0x3738a6[0]) {
					if (_0x3738a6.length === 1) {
						_0x2c4f83.push(_0x345f4e.subarray(_0x170a75 + 8, _0x25e3d1));
					} else {
						_0x48dd74 = _0x1b251f(_0x345f4e.subarray(_0x170a75 + 8, _0x25e3d1), _0x3738a6.slice(1));
						if (_0x48dd74.length) {
							_0x2c4f83 = _0x2c4f83.concat(_0x48dd74);
						}
					}
				}
				_0x170a75 = _0x25e3d1;
			}
			return _0x2c4f83;
		}, _0x579cac = function _0x2dc0c0(_0x11c684) {
			var _0x2a3555 = '';
			return _0x2a3555 += String.fromCharCode(_0x11c684[0]), _0x2a3555 += String.fromCharCode(_0x11c684[1]), _0x2a3555 += String.fromCharCode(_0x11c684[2]), _0x2a3555 += String.fromCharCode(_0x11c684[3]), _0x2a3555;
		}, _0x563021, _0x585490, _0x252110, _0x1d4ee0 = {
			'findBox': _0x1b251f,
			'parseType': _0x579cac,
			'timescale': function _0x5cbd07(_0x3dcb31) {
				var _0x92bf05 = {}, _0x54134f = _0x1b251f(_0x3dcb31, [
					'moov',
					'trak'
				]);
				return _0x54134f.reduce(function (_0x43cc74, _0x24fa1b) {
					var _0x32d6ca, _0x2f165e, _0x5f0a6e, _0x28993b, _0x5eea8b;
					_0x32d6ca = _0x1b251f(_0x24fa1b, ['tkhd'])[0];
					if (!_0x32d6ca) {
						return null;
					}
					_0x2f165e = _0x32d6ca[0];
					_0x5f0a6e = _0x2f165e === 0 ? 12 : 20;
					_0x28993b = _0xb8feb4(_0x32d6ca[_0x5f0a6e] << 24 | _0x32d6ca[_0x5f0a6e + 1] << 16 | _0x32d6ca[_0x5f0a6e + 2] << 8 | _0x32d6ca[_0x5f0a6e + 3]);
					_0x5eea8b = _0x1b251f(_0x24fa1b, [
						'mdia',
						'mdhd'
					])[0];
					if (!_0x5eea8b) {
						return null;
					}
					return _0x2f165e = _0x5eea8b[0], _0x5f0a6e = _0x2f165e === 0 ? 12 : 20, _0x43cc74[_0x28993b] = _0xb8feb4(_0x5eea8b[_0x5f0a6e] << 24 | _0x5eea8b[_0x5f0a6e + 1] << 16 | _0x5eea8b[_0x5f0a6e + 2] << 8 | _0x5eea8b[_0x5f0a6e + 3]), _0x43cc74;
				}, _0x92bf05);
			},
			'startTime': function _0x275d2d(_0x4dac88, _0xf1157e) {
				var _0x4107da, _0x1ad043, _0x2d6e62;
				return _0x4107da = _0x1b251f(_0xf1157e, [
					'moof',
					'traf'
				]), _0x1ad043 = [].concat.apply([], _0x4107da.map(function (_0xe94079) {
					return _0x1b251f(_0xe94079, ['tfhd']).map(function (_0x1e9506) {
						var _0xc010c2, _0x19b0fe, _0x2c0eae;
						return _0xc010c2 = _0xb8feb4(_0x1e9506[4] << 24 | _0x1e9506[5] << 16 | _0x1e9506[6] << 8 | _0x1e9506[7]), _0x19b0fe = _0x4dac88[_0xc010c2] || 90000, _0x2c0eae = _0x1b251f(_0xe94079, ['tfdt']).map(function (_0x5f0f5e) {
							var _0x451b06, _0x23ddef;
							return _0x451b06 = _0x5f0f5e[0], _0x23ddef = _0xb8feb4(_0x5f0f5e[4] << 24 | _0x5f0f5e[5] << 16 | _0x5f0f5e[6] << 8 | _0x5f0f5e[7]), _0x451b06 === 1 && (_0x23ddef *= Math.pow(2, 32), _0x23ddef += _0xb8feb4(_0x5f0f5e[8] << 24 | _0x5f0f5e[9] << 16 | _0x5f0f5e[10] << 8 | _0x5f0f5e[11])), _0x23ddef;
						})[0], _0x2c0eae = _0x2c0eae || Infinity, _0x2c0eae / _0x19b0fe;
					});
				})), _0x2d6e62 = Math.min.apply(null, _0x1ad043), isFinite(_0x2d6e62) ? _0x2d6e62 : 0;
			},
			'videoTrackIds': function _0xdb6f1e(_0x448ac7) {
				var _0x403c1c = _0x1b251f(_0x448ac7, [
					'moov',
					'trak'
				]), _0x8c43ae = [];
				return _0x403c1c.forEach(function (_0x4eda9f) {
					var _0x5d6038 = _0x1b251f(_0x4eda9f, [
						'mdia',
						'hdlr'
					]), _0x28dc04 = _0x1b251f(_0x4eda9f, ['tkhd']);
					_0x5d6038.forEach(function (_0x5bc1ac, _0xab922d) {
						var _0x10e360 = _0x579cac(_0x5bc1ac.subarray(8, 12)), _0x4630b0 = _0x28dc04[_0xab922d], _0x3d52a2, _0x46164a, _0xf51a3;
						if (_0x10e360 === 'vide') {
							_0x3d52a2 = new DataView(_0x4630b0.buffer, _0x4630b0.byteOffset, _0x4630b0.byteLength);
							_0x46164a = _0x3d52a2.getUint8(0);
							_0xf51a3 = _0x46164a === 0 ? _0x3d52a2.getUint32(12) : _0x3d52a2.getUint32(20);
							_0x8c43ae.push(_0xf51a3);
						}
					});
				}), _0x8c43ae;
			}
		}, _0x4a6ae5 = Math.pow(2, 32) - 1, _0x407296, _0x62e8e5, _0xb76f7d, _0xad7e55, _0x834a17, _0x51690c, _0x1cf234, _0x2bac1b, _0x4dda96, _0x3d0fdc, _0x1a96af, _0x1b420f, _0x48a7f3, _0x298cd6, _0x50f4e8, _0x4e5784, _0x2fc74a, _0x4b4230, _0x20e5b4, _0x114144, _0x148235, _0x5343ae, _0x178e57, _0x1def55, _0x23fec0, _0x4a4461, _0x3116ee, _0x24a9e5, _0x4086f1, _0x43fbfa, _0x38d077, _0x1a6be6, _0x34d632, _0xf26370, _0x242bdd, _0x42608d, _0xbc744f, _0x28209b, _0xf843ce, _0x1051e9, _0x52ab8b, _0x3d9cb3 = ((function () {
			var _0x354c95;
			_0x178e57 = {
				'avc1': [],
				'avcC': [],
				'btrt': [],
				'dinf': [],
				'dref': [],
				'esds': [],
				'ftyp': [],
				'hdlr': [],
				'mdat': [],
				'mdhd': [],
				'mdia': [],
				'mfhd': [],
				'minf': [],
				'moof': [],
				'moov': [],
				'mp4a': [],
				'mvex': [],
				'mvhd': [],
				'sdtp': [],
				'smhd': [],
				'stbl': [],
				'stco': [],
				'stsc': [],
				'stsd': [],
				'stsz': [],
				'stts': [],
				'styp': [],
				'tfdt': [],
				'tfhd': [],
				'traf': [],
				'trak': [],
				'trun': [],
				'trex': [],
				'tkhd': [],
				'vmhd': []
			};
			if (typeof Uint8Array === 'undefined') {
				return;
			}
			for (_0x354c95 in _0x178e57)
				if (_0x178e57.hasOwnProperty(_0x354c95)) {
					_0x178e57[_0x354c95] = [
						_0x354c95.charCodeAt(0),
						_0x354c95.charCodeAt(1),
						_0x354c95.charCodeAt(2),
						_0x354c95.charCodeAt(3)
					];
				}
			_0x1def55 = new Uint8Array([
				'i'.charCodeAt(0),
				's'.charCodeAt(0),
				'o'.charCodeAt(0),
				'm'.charCodeAt(0)
			]);
			_0x4a4461 = new Uint8Array([
				'a'.charCodeAt(0),
				'v'.charCodeAt(0),
				'c'.charCodeAt(0),
				'1'.charCodeAt(0)
			]);
			_0x23fec0 = new Uint8Array([
				0,
				0,
				0,
				1
			]);
			_0x3116ee = new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				118,
				105,
				100,
				101,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				86,
				105,
				100,
				101,
				111,
				72,
				97,
				110,
				100,
				108,
				101,
				114,
				0
			]);
			_0x24a9e5 = new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				115,
				111,
				117,
				110,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				83,
				111,
				117,
				110,
				100,
				72,
				97,
				110,
				100,
				108,
				101,
				114,
				0
			]);
			_0x4086f1 = {
				'video': _0x3116ee,
				'audio': _0x24a9e5
			};
			_0x1a6be6 = new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				12,
				117,
				114,
				108,
				32,
				0,
				0,
				0,
				1
			]);
			_0x38d077 = new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			]);
			_0x34d632 = new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			]);
			_0xf26370 = _0x34d632;
			_0x242bdd = new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			]);
			_0x42608d = _0x34d632;
			_0x43fbfa = new Uint8Array([
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			]);
		}()), _0x407296 = function _0xbca7da(_0x5ef77c) {
			var _0x332e3e = [], _0x3ab968 = 0, _0x48c398, _0xae0302, _0x539fab;
			for (_0x48c398 = 1; _0x48c398 < arguments.length; _0x48c398++) {
				_0x332e3e.push(arguments[_0x48c398]);
			}
			_0x48c398 = _0x332e3e.length;
			while (_0x48c398--) {
				_0x3ab968 += _0x332e3e[_0x48c398].byteLength;
			}
			_0xae0302 = new Uint8Array(_0x3ab968 + 8);
			_0x539fab = new DataView(_0xae0302.buffer, _0xae0302.byteOffset, _0xae0302.byteLength);
			_0x539fab.setUint32(0, _0xae0302.byteLength);
			_0xae0302.set(_0x5ef77c, 4);
			for (_0x48c398 = 0, _0x3ab968 = 8; _0x48c398 < _0x332e3e.length; _0x48c398++) {
				_0xae0302.set(_0x332e3e[_0x48c398], _0x3ab968);
				_0x3ab968 += _0x332e3e[_0x48c398].byteLength;
			}
			return _0xae0302;
		}, _0x62e8e5 = function _0x1bead4() {
			return _0x407296(_0x178e57.dinf, _0x407296(_0x178e57.dref, _0x1a6be6));
		}, _0xb76f7d = function _0x3e0837(_0x5187eb) {
			return _0x407296(_0x178e57.esds, new Uint8Array([
				0,
				0,
				0,
				0,
				3,
				25,
				0,
				0,
				0,
				4,
				17,
				64,
				21,
				0,
				6,
				0,
				0,
				0,
				218,
				192,
				0,
				0,
				218,
				192,
				5,
				2,
				_0x5187eb.audioobjecttype << 3 | _0x5187eb.samplingfrequencyindex >>> 1,
				_0x5187eb.samplingfrequencyindex << 7 | _0x5187eb.channelcount << 3,
				6,
				1,
				2
			]));
		}, _0x4e5784 = function _0x17c3ff(_0x1a9642) {
			return _0x407296(_0x178e57.hdlr, _0x4086f1[_0x1a9642]);
		}, _0x50f4e8 = function _0x9006fb(_0x35d0d6) {
			var _0x27d288 = new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				2,
				0,
				0,
				0,
				3,
				0,
				1,
				95,
				144,
				_0x35d0d6.duration >>> 24 & 255,
				_0x35d0d6.duration >>> 16 & 255,
				_0x35d0d6.duration >>> 8 & 255,
				_0x35d0d6.duration & 255,
				85,
				196,
				0,
				0
			]);
			return _0x35d0d6.samplerate && (_0x27d288[12] = _0x35d0d6.samplerate >>> 24 & 255, _0x27d288[13] = _0x35d0d6.samplerate >>> 16 & 255, _0x27d288[14] = _0x35d0d6.samplerate >>> 8 & 255, _0x27d288[15] = _0x35d0d6.samplerate & 255), _0x407296(_0x178e57.mdhd, _0x27d288);
		}, _0x298cd6 = function _0x5307f3(_0x4e9576) {
			return _0x407296(_0x178e57.mdia, _0x50f4e8(_0x4e9576), _0x4e5784(_0x4e9576.type), _0x1cf234(_0x4e9576));
		}, _0x51690c = function _0xf5594e(_0x22ce80) {
			return _0x407296(_0x178e57.mfhd, new Uint8Array([
				0,
				0,
				0,
				0,
				(_0x22ce80 & 4278190080) >> 24,
				(_0x22ce80 & 16711680) >> 16,
				(_0x22ce80 & 65280) >> 8,
				_0x22ce80 & 255
			]));
		}, _0x1cf234 = function _0x386d7a(_0x1cc448) {
			return _0x407296(_0x178e57.minf, _0x1cc448.type === 'video' ? _0x407296(_0x178e57.vmhd, _0x43fbfa) : _0x407296(_0x178e57.smhd, _0x38d077), _0x62e8e5(), _0x4b4230(_0x1cc448));
		}, _0x3d0fdc = function _0x9b49f7(_0x5a1ed4) {
			var _0x5ac03e = _0x5a1ed4.length, _0x136b9e = [];
			while (_0x5ac03e--) {
				_0x136b9e[_0x5ac03e] = _0x148235(_0x5a1ed4[_0x5ac03e]);
			}
			return _0x407296.apply(null, [_0x178e57.mvex].concat(_0x136b9e));
		}, _0x1a96af = function _0x7dc0f(_0x449da2) {
			var _0x52e905 = new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				2,
				0,
				1,
				95,
				144,
				(_0x449da2 & 4278190080) >> 24,
				(_0x449da2 & 16711680) >> 16,
				(_0x449da2 & 65280) >> 8,
				_0x449da2 & 255,
				0,
				1,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				64,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				255,
				255,
				255,
				255
			]);
			return _0x407296(_0x178e57.mvhd, _0x52e905);
		}, _0x2fc74a = function _0x4a3b73(_0x296054) {
			var _0x35453e = _0x296054.samples || [], _0x3c47dd = new Uint8Array(4 + _0x35453e.length), _0xd85b4, _0x200a01;
			for (_0x200a01 = 0; _0x200a01 < _0x35453e.length; _0x200a01++) {
				_0xd85b4 = _0x35453e[_0x200a01].flags;
				_0x3c47dd[_0x200a01 + 4] = _0xd85b4.dependsOn << 4 | _0xd85b4.isDependedOn << 2 | _0xd85b4.hasRedundancy;
			}
			return _0x407296(_0x178e57.sdtp, _0x3c47dd);
		}, _0x4b4230 = function _0x5ed5f2(_0x4ff05f) {
			return _0x407296(_0x178e57.stbl, _0x20e5b4(_0x4ff05f), _0x407296(_0x178e57.stts, _0x42608d), _0x407296(_0x178e57.stsc, _0xf26370), _0x407296(_0x178e57.stsz, _0x242bdd), _0x407296(_0x178e57.stco, _0x34d632));
		}, _0x20e5b4 = function _0x31573d(_0x5173b1) {
			return _0x407296(_0x178e57.stsd, new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1
			]), _0x5173b1.type === 'video' ? _0xbc744f(_0x5173b1) : _0x28209b(_0x5173b1));
		}, _0xbc744f = function _0x5060ff(_0x4202e8) {
			var _0x3e19c8 = _0x4202e8.sps || [], _0x5e9556 = _0x4202e8.pps || [], _0x136856 = [], _0x2fa458 = [], _0x5c6842;
			for (_0x5c6842 = 0; _0x5c6842 < _0x3e19c8.length; _0x5c6842++) {
				_0x136856.push((_0x3e19c8[_0x5c6842].byteLength & 65280) >>> 8);
				_0x136856.push(_0x3e19c8[_0x5c6842].byteLength & 255);
				_0x136856 = _0x136856.concat(Array.prototype.slice.call(_0x3e19c8[_0x5c6842]));
			}
			for (_0x5c6842 = 0; _0x5c6842 < _0x5e9556.length; _0x5c6842++) {
				_0x2fa458.push((_0x5e9556[_0x5c6842].byteLength & 65280) >>> 8);
				_0x2fa458.push(_0x5e9556[_0x5c6842].byteLength & 255);
				_0x2fa458 = _0x2fa458.concat(Array.prototype.slice.call(_0x5e9556[_0x5c6842]));
			}
			return _0x407296(_0x178e57.avc1, new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				(_0x4202e8.width & 65280) >> 8,
				_0x4202e8.width & 255,
				(_0x4202e8.height & 65280) >> 8,
				_0x4202e8.height & 255,
				0,
				72,
				0,
				0,
				0,
				72,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				19,
				118,
				105,
				100,
				101,
				111,
				106,
				115,
				45,
				99,
				111,
				110,
				116,
				114,
				105,
				98,
				45,
				104,
				108,
				115,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				24,
				17,
				17
			]), _0x407296(_0x178e57.avcC, new Uint8Array([
				1,
				_0x4202e8.profileIdc,
				_0x4202e8.profileCompatibility,
				_0x4202e8.levelIdc,
				255
			].concat([_0x3e19c8.length]).concat(_0x136856).concat([_0x5e9556.length]).concat(_0x2fa458))), _0x407296(_0x178e57.btrt, new Uint8Array([
				0,
				28,
				156,
				128,
				0,
				45,
				198,
				192,
				0,
				45,
				198,
				192
			])));
		}, _0x28209b = function _0x203137(_0x2940cd) {
			return _0x407296(_0x178e57.mp4a, new Uint8Array([
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				(_0x2940cd.channelcount & 65280) >> 8,
				_0x2940cd.channelcount & 255,
				(_0x2940cd.samplesize & 65280) >> 8,
				_0x2940cd.samplesize & 255,
				0,
				0,
				0,
				0,
				(_0x2940cd.samplerate & 65280) >> 8,
				_0x2940cd.samplerate & 255,
				0,
				0
			]), _0xb76f7d(_0x2940cd));
		}, _0x48a7f3 = function _0x2a1364(_0x1da152) {
			var _0x16926e = new Uint8Array([
				0,
				0,
				0,
				7,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				(_0x1da152.id & 4278190080) >> 24,
				(_0x1da152.id & 16711680) >> 16,
				(_0x1da152.id & 65280) >> 8,
				_0x1da152.id & 255,
				0,
				0,
				0,
				0,
				(_0x1da152.duration & 4278190080) >> 24,
				(_0x1da152.duration & 16711680) >> 16,
				(_0x1da152.duration & 65280) >> 8,
				_0x1da152.duration & 255,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				64,
				0,
				0,
				0,
				(_0x1da152.width & 65280) >> 8,
				_0x1da152.width & 255,
				0,
				0,
				(_0x1da152.height & 65280) >> 8,
				_0x1da152.height & 255,
				0,
				0
			]);
			return _0x407296(_0x178e57.tkhd, _0x16926e);
		}, _0x114144 = function _0x16ffef(_0x2a4396) {
			var _0x3cd980, _0x4f8a71, _0x340548, _0x4d2403, _0xb3034a, _0x14d7b5, _0x12322d;
			_0x3cd980 = _0x407296(_0x178e57.tfhd, new Uint8Array([
				0,
				0,
				0,
				58,
				(_0x2a4396.id & 4278190080) >> 24,
				(_0x2a4396.id & 16711680) >> 16,
				(_0x2a4396.id & 65280) >> 8,
				_0x2a4396.id & 255,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			]));
			_0x14d7b5 = Math.floor(_0x2a4396.baseMediaDecodeTime / (_0x4a6ae5 + 1));
			_0x12322d = Math.floor(_0x2a4396.baseMediaDecodeTime % (_0x4a6ae5 + 1));
			_0x4f8a71 = _0x407296(_0x178e57.tfdt, new Uint8Array([
				1,
				0,
				0,
				0,
				_0x14d7b5 >>> 24 & 255,
				_0x14d7b5 >>> 16 & 255,
				_0x14d7b5 >>> 8 & 255,
				_0x14d7b5 & 255,
				_0x12322d >>> 24 & 255,
				_0x12322d >>> 16 & 255,
				_0x12322d >>> 8 & 255,
				_0x12322d & 255
			]));
			_0xb3034a = 92;
			if (_0x2a4396.type === 'audio') {
				return _0x340548 = _0x5343ae(_0x2a4396, _0xb3034a), _0x407296(_0x178e57.traf, _0x3cd980, _0x4f8a71, _0x340548);
			}
			return _0x4d2403 = _0x2fc74a(_0x2a4396), _0x340548 = _0x5343ae(_0x2a4396, _0x4d2403.length + _0xb3034a), _0x407296(_0x178e57.traf, _0x3cd980, _0x4f8a71, _0x340548, _0x4d2403);
		}, _0x1b420f = function _0x2b747e(_0x2dbc6e) {
			return _0x2dbc6e.duration = _0x2dbc6e.duration || 4294967295, _0x407296(_0x178e57.trak, _0x48a7f3(_0x2dbc6e), _0x298cd6(_0x2dbc6e));
		}, _0x148235 = function _0x1530b3(_0x112204) {
			var _0x3e23fb = new Uint8Array([
				0,
				0,
				0,
				0,
				(_0x112204.id & 4278190080) >> 24,
				(_0x112204.id & 16711680) >> 16,
				(_0x112204.id & 65280) >> 8,
				_0x112204.id & 255,
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				1
			]);
			if (_0x112204.type !== 'video') {
				_0x3e23fb[_0x3e23fb.length - 1] = 0;
			}
			return _0x407296(_0x178e57.trex, _0x3e23fb);
		}, _0x52ab8b = function _0x4b54e2(_0x3d1f55, _0x4818cd) {
			var _0x2fbc32 = 0, _0x42cb6f = 0, _0x4f9e6e = 0, _0x526ba4 = 0;
			if (_0x3d1f55.length) {
				if (_0x3d1f55[0].duration !== undefined) {
					_0x2fbc32 = 1;
				}
				if (_0x3d1f55[0].size !== undefined) {
					_0x42cb6f = 2;
				}
				if (_0x3d1f55[0].flags !== undefined) {
					_0x4f9e6e = 4;
				}
				if (_0x3d1f55[0].compositionTimeOffset !== undefined) {
					_0x526ba4 = 8;
				}
			}
			return [
				0,
				0,
				_0x2fbc32 | _0x42cb6f | _0x4f9e6e | _0x526ba4,
				1,
				(_0x3d1f55.length & 4278190080) >>> 24,
				(_0x3d1f55.length & 16711680) >>> 16,
				(_0x3d1f55.length & 65280) >>> 8,
				_0x3d1f55.length & 255,
				(_0x4818cd & 4278190080) >>> 24,
				(_0x4818cd & 16711680) >>> 16,
				(_0x4818cd & 65280) >>> 8,
				_0x4818cd & 255
			];
		}, _0x1051e9 = function _0x585305(_0x20624f, _0x36f01c) {
			var _0x25e6f5, _0xa343a6, _0x16c01b, _0x3fbb6c;
			_0xa343a6 = _0x20624f.samples || [];
			_0x36f01c += 20 + 16 * _0xa343a6.length;
			_0x25e6f5 = _0x52ab8b(_0xa343a6, _0x36f01c);
			for (_0x3fbb6c = 0; _0x3fbb6c < _0xa343a6.length; _0x3fbb6c++) {
				_0x16c01b = _0xa343a6[_0x3fbb6c];
				_0x25e6f5 = _0x25e6f5.concat([
					(_0x16c01b.duration & 4278190080) >>> 24,
					(_0x16c01b.duration & 16711680) >>> 16,
					(_0x16c01b.duration & 65280) >>> 8,
					_0x16c01b.duration & 255,
					(_0x16c01b.size & 4278190080) >>> 24,
					(_0x16c01b.size & 16711680) >>> 16,
					(_0x16c01b.size & 65280) >>> 8,
					_0x16c01b.size & 255,
					_0x16c01b.flags.isLeading << 2 | _0x16c01b.flags.dependsOn,
					_0x16c01b.flags.isDependedOn << 6 | _0x16c01b.flags.hasRedundancy << 4 | _0x16c01b.flags.paddingValue << 1 | _0x16c01b.flags.isNonSyncSample,
					_0x16c01b.flags.degradationPriority & 240 << 8,
					_0x16c01b.flags.degradationPriority & 15,
					(_0x16c01b.compositionTimeOffset & 4278190080) >>> 24,
					(_0x16c01b.compositionTimeOffset & 16711680) >>> 16,
					(_0x16c01b.compositionTimeOffset & 65280) >>> 8,
					_0x16c01b.compositionTimeOffset & 255
				]);
			}
			return _0x407296(_0x178e57.trun, new Uint8Array(_0x25e6f5));
		}, _0xf843ce = function _0xe6e1d4(_0x15a89a, _0x146342) {
			var _0x4e50f3, _0x2705ef, _0x2d5978, _0x3aba31;
			_0x2705ef = _0x15a89a.samples || [];
			_0x146342 += 20 + 8 * _0x2705ef.length;
			_0x4e50f3 = _0x52ab8b(_0x2705ef, _0x146342);
			for (_0x3aba31 = 0; _0x3aba31 < _0x2705ef.length; _0x3aba31++) {
				_0x2d5978 = _0x2705ef[_0x3aba31];
				_0x4e50f3 = _0x4e50f3.concat([
					(_0x2d5978.duration & 4278190080) >>> 24,
					(_0x2d5978.duration & 16711680) >>> 16,
					(_0x2d5978.duration & 65280) >>> 8,
					_0x2d5978.duration & 255,
					(_0x2d5978.size & 4278190080) >>> 24,
					(_0x2d5978.size & 16711680) >>> 16,
					(_0x2d5978.size & 65280) >>> 8,
					_0x2d5978.size & 255
				]);
			}
			return _0x407296(_0x178e57.trun, new Uint8Array(_0x4e50f3));
		}, _0x5343ae = function _0x1fda3d(_0x1d6be2, _0x124de5) {
			if (_0x1d6be2.type === 'audio') {
				return _0xf843ce(_0x1d6be2, _0x124de5);
			}
			return _0x1051e9(_0x1d6be2, _0x124de5);
		}, {
			'ftyp': _0xad7e55 = function _0x384fc2() {
				return _0x407296(_0x178e57.ftyp, _0x1def55, _0x23fec0, _0x1def55, _0x4a4461);
			},
			'mdat': _0x834a17 = function _0x4e0a6f(_0x2b385d) {
				return _0x407296(_0x178e57.mdat, _0x2b385d);
			},
			'moof': _0x2bac1b = function _0x4779a5(_0x2376ff, _0x35970d) {
				var _0x14aba4 = [], _0x2c5fc = _0x35970d.length;
				while (_0x2c5fc--) {
					_0x14aba4[_0x2c5fc] = _0x114144(_0x35970d[_0x2c5fc]);
				}
				return _0x407296.apply(null, [
					_0x178e57.moof,
					_0x51690c(_0x2376ff)
				].concat(_0x14aba4));
			},
			'moov': _0x4dda96 = function _0xc619bf(_0x1f3e63) {
				var _0x16df88 = _0x1f3e63.length, _0x3b5a6c = [];
				while (_0x16df88--) {
					_0x3b5a6c[_0x16df88] = _0x1b420f(_0x1f3e63[_0x16df88]);
				}
				return _0x407296.apply(null, [
					_0x178e57.moov,
					_0x1a96af(4294967295)
				].concat(_0x3b5a6c).concat(_0x3d0fdc(_0x1f3e63)));
			},
			'initSegment': function _0xf25913(_0x5a8c26) {
				var _0x5bf981 = _0xad7e55(), _0xe82ee3 = _0x4dda96(_0x5a8c26), _0x2be43c;
				return _0x2be43c = new Uint8Array(_0x5bf981.byteLength + _0xe82ee3.byteLength), _0x2be43c.set(_0x5bf981), _0x2be43c.set(_0xe82ee3, _0x5bf981.byteLength), _0x2be43c;
			}
		}), _0x131bcb, _0x16365f, _0x2e4cb2, _0x19000a, _0x282cd3, _0x16229f = Object.freeze({
			'default': _0x3d9cb3,
			'__moduleExports': _0x3d9cb3,
			'ftyp': _0x3d9cb3.ftyp,
			'mdat': _0x3d9cb3.mdat,
			'moof': _0x3d9cb3.moof,
			'moov': _0x3d9cb3.moov,
			'initSegment': _0x3d9cb3.initSegment
		}), _0x3aef7b = function _0x253a96() {
			this.init = function () {
				var _0x2a3abd = {
					_0x11c7dc: [],
					_0x11c7dc: _0x2a3abd[_0x11c7dc].concat(_0x2ef6ae)
				};
				this.on = function (_0x11c7dc, _0x2ef6ae) {
					if (!_0x2a3abd[_0x11c7dc]) {
					}
				};
				this.off = function (_0x204486, _0x244382) {
					var _0x1cef1d;
					if (!_0x2a3abd[_0x204486]) {
						return false;
					}
					return _0x1cef1d = _0x2a3abd[_0x204486].indexOf(_0x244382), _0x2a3abd[_0x204486] = _0x2a3abd[_0x204486].slice(), _0x2a3abd[_0x204486].splice(_0x1cef1d, 1), _0x1cef1d > -1;
				};
				this.trigger = function (_0x4a822a) {
					var _0x985c02, _0x347ef5, _0xd344e9, _0x660d74;
					_0x985c02 = _0x2a3abd[_0x4a822a];
					if (!_0x985c02) {
						return;
					}
					if (arguments.length === 2) {
						_0xd344e9 = _0x985c02.length;
						for (_0x347ef5 = 0; _0x347ef5 < _0xd344e9; ++_0x347ef5) {
							_0x985c02[_0x347ef5].call(this, arguments[1]);
						}
					} else {
						_0x660d74 = [];
						_0x347ef5 = arguments.length;
						for (_0x347ef5 = 1; _0x347ef5 < arguments.length; ++_0x347ef5) {
							_0x660d74.push(arguments[_0x347ef5]);
						}
						_0xd344e9 = _0x985c02.length;
						for (_0x347ef5 = 0; _0x347ef5 < _0xd344e9; ++_0x347ef5) {
							_0x985c02[_0x347ef5].apply(this, _0x660d74);
						}
					}
				};
				this.dispose = function () {
					_0x2a3abd = {};
				};
			};
		};
		_0x3aef7b.prototype.pipe = function (_0x47ff83) {
			return this.on('data', function (_0x235a63) {
				_0x47ff83.push(_0x235a63);
			}), this.on('done', function (_0x58604b) {
				_0x47ff83.flush(_0x58604b);
			}), _0x47ff83;
		};
		_0x3aef7b.prototype.push = function (_0x39b15a) {
			this.trigger('data', _0x39b15a);
		};
		_0x3aef7b.prototype.flush = function (_0x390dfd) {
			this.trigger('done', _0x390dfd);
		};
		var _0x5c17e7, _0x546d24 = Object.freeze({
			'default': _0x3aef7b,
			'__moduleExports': _0x3aef7b
		}), _0x1f4291, _0x1cb02f, _0x408451, _0x12c412 = function _0x1a9e0f() {
			return {
				'size': 0,
				'flags': {
					'isLeading': 0,
					'dependsOn': 1,
					'isDependedOn': 0,
					'hasRedundancy': 0,
					'degradationPriority': 0,
					'isNonSyncSample': 1
				}
			};
		}, _0x8f7091 = function _0xa428b3(_0x3320bc, _0x3d3534) {
			var _0x54314e = _0x12c412();
			return _0x54314e.dataOffset = _0x3d3534, _0x54314e.compositionTimeOffset = _0x3320bc.pts - _0x3320bc.dts, _0x54314e.duration = _0x3320bc.duration, _0x54314e.size = 4 * _0x3320bc.length, _0x54314e.size += _0x3320bc.byteLength, _0x3320bc.keyFrame && (_0x54314e.flags.dependsOn = 2, _0x54314e.flags.isNonSyncSample = 0), _0x54314e;
		}, _0x103745, _0x502714, _0x2847b7 = {
			'groupNalsIntoFrames': function _0x8300f3(_0x30d4a8) {
				var _0x59778f, _0x407f8b, _0x322479 = [], _0x4690aa = [];
				_0x322479.byteLength = 0;
				for (_0x59778f = 0; _0x59778f < _0x30d4a8.length; _0x59778f++) {
					_0x407f8b = _0x30d4a8[_0x59778f];
					if (_0x407f8b.nalUnitType === 'access_unit_delimiter_rbsp') {
						_0x322479.length && (_0x322479.duration = _0x407f8b.dts - _0x322479.dts, _0x4690aa.push(_0x322479));
						_0x322479 = [_0x407f8b];
						_0x322479.byteLength = _0x407f8b.data.byteLength;
						_0x322479.pts = _0x407f8b.pts;
						_0x322479.dts = _0x407f8b.dts;
					} else {
						if (_0x407f8b.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {
							_0x322479.keyFrame = true;
						}
						_0x322479.duration = _0x407f8b.dts - _0x322479.dts;
						_0x322479.byteLength += _0x407f8b.data.byteLength;
						_0x322479.push(_0x407f8b);
					}
				}
				if (_0x4690aa.length && (!_0x322479.duration || _0x322479.duration <= 0)) {
					_0x322479.duration = _0x4690aa[_0x4690aa.length - 1].duration;
				}
				return _0x4690aa.push(_0x322479), _0x4690aa;
			},
			'groupFramesIntoGops': function _0x4faaad(_0x357dce) {
				var _0x207e63, _0x460820, _0x235629 = [], _0xebfd4b = [];
				_0x235629.byteLength = 0;
				_0x235629.nalCount = 0;
				_0x235629.duration = 0;
				_0x235629.pts = _0x357dce[0].pts;
				_0x235629.dts = _0x357dce[0].dts;
				_0xebfd4b.byteLength = 0;
				_0xebfd4b.nalCount = 0;
				_0xebfd4b.duration = 0;
				_0xebfd4b.pts = _0x357dce[0].pts;
				_0xebfd4b.dts = _0x357dce[0].dts;
				for (_0x207e63 = 0; _0x207e63 < _0x357dce.length; _0x207e63++) {
					_0x460820 = _0x357dce[_0x207e63];
					_0x460820.keyFrame ? (_0x235629.length && (_0xebfd4b.push(_0x235629), _0xebfd4b.byteLength += _0x235629.byteLength, _0xebfd4b.nalCount += _0x235629.nalCount, _0xebfd4b.duration += _0x235629.duration), _0x235629 = [_0x460820], _0x235629.nalCount = _0x460820.length, _0x235629.byteLength = _0x460820.byteLength, _0x235629.pts = _0x460820.pts, _0x235629.dts = _0x460820.dts, _0x235629.duration = _0x460820.duration) : (_0x235629.duration += _0x460820.duration, _0x235629.nalCount += _0x460820.length, _0x235629.byteLength += _0x460820.byteLength, _0x235629.push(_0x460820));
				}
				if (_0xebfd4b.length && _0x235629.duration <= 0) {
					_0x235629.duration = _0xebfd4b[_0xebfd4b.length - 1].duration;
				}
				return _0xebfd4b.byteLength += _0x235629.byteLength, _0xebfd4b.nalCount += _0x235629.nalCount, _0xebfd4b.duration += _0x235629.duration, _0xebfd4b.push(_0x235629), _0xebfd4b;
			},
			'extendFirstKeyFrame': function _0x32233a(_0xca5082) {
				var _0xb2601d;
				return !_0xca5082[0][0].keyFrame && _0xca5082.length > 1 && (_0xb2601d = _0xca5082.shift(), _0xca5082.byteLength -= _0xb2601d.byteLength, _0xca5082.nalCount -= _0xb2601d.nalCount, _0xca5082[0][0].dts = _0xb2601d.dts, _0xca5082[0][0].pts = _0xb2601d.pts, _0xca5082[0][0].duration += _0xb2601d.duration), _0xca5082;
			},
			'generateSampleTable': function _0x397cee(_0x13bfd7, _0x4ca972) {
				var _0x4a2118, _0x30248d, _0x58cefd, _0x2b6439, _0x5ded40, _0x42dbed = _0x4ca972 || 0, _0x307f6c = [];
				for (_0x4a2118 = 0; _0x4a2118 < _0x13bfd7.length; _0x4a2118++) {
					_0x2b6439 = _0x13bfd7[_0x4a2118];
					for (_0x30248d = 0; _0x30248d < _0x2b6439.length; _0x30248d++) {
						_0x5ded40 = _0x2b6439[_0x30248d];
						_0x58cefd = _0x8f7091(_0x5ded40, _0x42dbed);
						_0x42dbed += _0x58cefd.size;
						_0x307f6c.push(_0x58cefd);
					}
				}
				return _0x307f6c;
			},
			'concatenateNalData': function _0x168a10(_0x23c7ba) {
				var _0x4b2962, _0x721552, _0x1c5cb3, _0x51d535, _0x10755e, _0x4f6378, _0x586ec2 = 0, _0x21dc71 = _0x23c7ba.byteLength, _0x386cb7 = _0x23c7ba.nalCount, _0x23a0a7 = _0x21dc71 + 4 * _0x386cb7, _0x133fd6 = new Uint8Array(_0x23a0a7), _0x489606 = new DataView(_0x133fd6.buffer);
				for (_0x4b2962 = 0; _0x4b2962 < _0x23c7ba.length; _0x4b2962++) {
					_0x51d535 = _0x23c7ba[_0x4b2962];
					for (_0x721552 = 0; _0x721552 < _0x51d535.length; _0x721552++) {
						_0x10755e = _0x51d535[_0x721552];
						for (_0x1c5cb3 = 0; _0x1c5cb3 < _0x10755e.length; _0x1c5cb3++) {
							_0x4f6378 = _0x10755e[_0x1c5cb3];
							_0x489606.setUint32(_0x586ec2, _0x4f6378.data.byteLength);
							_0x586ec2 += 4;
							_0x133fd6.set(_0x4f6378.data, _0x586ec2);
							_0x586ec2 += _0x4f6378.data.byteLength;
						}
					}
				}
				return _0x133fd6;
			}
		}, _0x4bb744, _0x53404e, _0x3860dc, _0x3be486, _0x34d13e, _0x16bd34 = Object.freeze({
			'default': _0x2847b7,
			'__moduleExports': _0x2847b7,
			'groupNalsIntoFrames': _0x2847b7.groupNalsIntoFrames,
			'groupFramesIntoGops': _0x2847b7.groupFramesIntoGops,
			'extendFirstKeyFrame': _0x2847b7.extendFirstKeyFrame,
			'generateSampleTable': _0x2847b7.generateSampleTable,
			'concatenateNalData': _0x2847b7.concatenateNalData
		}), _0x3634fc, _0xe6f295, _0x371a64, _0x356bad = {
			'clearDtsInfo': function _0x18e106(_0x6758f0) {
				delete _0x6758f0.minSegmentDts;
				delete _0x6758f0.maxSegmentDts;
				delete _0x6758f0.minSegmentPts;
				delete _0x6758f0.maxSegmentPts;
			},
			'calculateTrackBaseMediaDecodeTime': function _0x497684(_0x2ae342, _0x2f8c8c) {
				var _0x419447, _0x5d2a2d, _0x379df2 = _0x2ae342.minSegmentDts;
				if (!_0x2f8c8c) {
					_0x379df2 -= _0x2ae342.timelineStartInfo.dts;
				}
				return _0x419447 = _0x2ae342.timelineStartInfo.baseMediaDecodeTime, _0x419447 += _0x379df2, _0x419447 = Math.max(0, _0x419447), _0x2ae342.type === 'audio' && (_0x5d2a2d = _0x2ae342.samplerate / 90000, _0x419447 *= _0x5d2a2d, _0x419447 = Math.floor(_0x419447)), _0x419447;
			},
			'collectDtsInfo': function _0x5825e2(_0x431789, _0x3c5b27) {
				if (typeof _0x3c5b27.pts === 'number') {
					if (_0x431789.timelineStartInfo.pts === undefined) {
						_0x431789.timelineStartInfo.pts = _0x3c5b27.pts;
					}
					if (_0x431789.minSegmentPts === undefined) {
						_0x431789.minSegmentPts = _0x3c5b27.pts;
					} else {
						_0x431789.minSegmentPts = Math.min(_0x431789.minSegmentPts, _0x3c5b27.pts);
					}
					if (_0x431789.maxSegmentPts === undefined) {
						_0x431789.maxSegmentPts = _0x3c5b27.pts;
					} else {
						_0x431789.maxSegmentPts = Math.max(_0x431789.maxSegmentPts, _0x3c5b27.pts);
					}
				}
				if (typeof _0x3c5b27.dts === 'number') {
					if (_0x431789.timelineStartInfo.dts === undefined) {
						_0x431789.timelineStartInfo.dts = _0x3c5b27.dts;
					}
					if (_0x431789.minSegmentDts === undefined) {
						_0x431789.minSegmentDts = _0x3c5b27.dts;
					} else {
						_0x431789.minSegmentDts = Math.min(_0x431789.minSegmentDts, _0x3c5b27.dts);
					}
					if (_0x431789.maxSegmentDts === undefined) {
						_0x431789.maxSegmentDts = _0x3c5b27.dts;
					} else {
						_0x431789.maxSegmentDts = Math.max(_0x431789.maxSegmentDts, _0x3c5b27.dts);
					}
				}
			}
		}, _0x2ddd79, _0x56e78a, _0x4c0057, _0x1d66d5 = Object.freeze({
			'default': _0x356bad,
			'__moduleExports': _0x356bad,
			'clearDtsInfo': _0x356bad.clearDtsInfo,
			'calculateTrackBaseMediaDecodeTime': _0x356bad.calculateTrackBaseMediaDecodeTime,
			'collectDtsInfo': _0x356bad.collectDtsInfo
		}), _0x30c98c, _0x136451, _0xdfc2ce, _0x1dd756, _0x382cdb = {
			'parseSei': function _0x312c69(_0x17e907) {
				var _0x43a6b7 = 0, _0x3bf083 = {
					'payloadType': -1,
					'payloadSize': 0
				}, _0x5e44af = 0, _0x5c1742 = 0;
				while (_0x43a6b7 < _0x17e907.byteLength) {
					if (_0x17e907[_0x43a6b7] === 128) {
						break;
					}
					while (_0x17e907[_0x43a6b7] === 255) {
						_0x5e44af += 255;
						_0x43a6b7++;
					}
					_0x5e44af += _0x17e907[_0x43a6b7++];
					while (_0x17e907[_0x43a6b7] === 255) {
						_0x5c1742 += 255;
						_0x43a6b7++;
					}
					_0x5c1742 += _0x17e907[_0x43a6b7++];
					if (!_0x3bf083.payload && _0x5e44af === 4) {
						_0x3bf083.payloadType = _0x5e44af;
						_0x3bf083.payloadSize = _0x5c1742;
						_0x3bf083.payload = _0x17e907.subarray(_0x43a6b7, _0x43a6b7 + _0x5c1742);
						break;
					}
					_0x43a6b7 += _0x5c1742;
					_0x5e44af = 0;
					_0x5c1742 = 0;
				}
				return _0x3bf083;
			},
			'parseUserData': function _0x4d7567(_0x5002e6) {
				if (_0x5002e6.payload[0] !== 181) {
					return null;
				}
				if ((_0x5002e6.payload[1] << 8 | _0x5002e6.payload[2]) !== 49) {
					return null;
				}
				if (String.fromCharCode(_0x5002e6.payload[3], _0x5002e6.payload[4], _0x5002e6.payload[5], _0x5002e6.payload[6]) !== 'GA94') {
					return null;
				}
				if (_0x5002e6.payload[7] !== 3) {
					return null;
				}
				return _0x5002e6.payload.subarray(8, _0x5002e6.payload.length - 1);
			},
			'parseCaptionPackets': function _0x25040c(_0x1a447c, _0x448fb9) {
				var _0x424f52 = [], _0x1c1cd3, _0x4c9a1b, _0x4cadf6, _0x329a35;
				if (!(_0x448fb9[0] & 64)) {
					return _0x424f52;
				}
				_0x4c9a1b = _0x448fb9[0] & 31;
				for (_0x1c1cd3 = 0; _0x1c1cd3 < _0x4c9a1b; _0x1c1cd3++) {
					_0x4cadf6 = _0x1c1cd3 * 3;
					_0x329a35 = {
						'type': _0x448fb9[_0x4cadf6 + 2] & 3,
						'pts': _0x1a447c
					};
					if (_0x448fb9[_0x4cadf6 + 2] & 4) {
						_0x329a35.ccData = _0x448fb9[_0x4cadf6 + 3] << 8 | _0x448fb9[_0x4cadf6 + 4];
						_0x424f52.push(_0x329a35);
					}
				}
				return _0x424f52;
			},
			'discardEmulationPreventionBytes': function _0x5ea262(_0x13f7a0) {
				var _0x52895f = _0x13f7a0.byteLength, _0x3be3a7 = [], _0x3f7a5b = 1, _0x586af6, _0x382cf3;
				while (_0x3f7a5b < _0x52895f - 2) {
					if (_0x13f7a0[_0x3f7a5b] === 0 && _0x13f7a0[_0x3f7a5b + 1] === 0 && _0x13f7a0[_0x3f7a5b + 2] === 3) {
						_0x3be3a7.push(_0x3f7a5b + 2);
						_0x3f7a5b += 2;
					} else {
						_0x3f7a5b++;
					}
				}
				if (_0x3be3a7.length === 0) {
					return _0x13f7a0;
				}
				_0x586af6 = _0x52895f - _0x3be3a7.length;
				_0x382cf3 = new Uint8Array(_0x586af6);
				var _0x314ebf = 0;
				for (_0x3f7a5b = 0; _0x3f7a5b < _0x586af6; _0x314ebf++, _0x3f7a5b++) {
					if (_0x314ebf === _0x3be3a7[0]) {
						_0x314ebf++;
						_0x3be3a7.shift();
					}
					_0x382cf3[_0x3f7a5b] = _0x13f7a0[_0x314ebf];
				}
				return _0x382cf3;
			},
			'USER_DATA_REGISTERED_ITU_T_T35': 4
		}, _0x1cb715, _0x5a9abd, _0xf1306, _0x16b9e5, _0x2681f6, _0x21d151 = Object.freeze({
			'default': _0x382cdb,
			'__moduleExports': _0x382cdb,
			'parseSei': _0x382cdb.parseSei,
			'parseUserData': _0x382cdb.parseUserData,
			'parseCaptionPackets': _0x382cdb.parseCaptionPackets,
			'discardEmulationPreventionBytes': _0x382cdb.discardEmulationPreventionBytes,
			'USER_DATA_REGISTERED_ITU_T_T35': _0x382cdb.USER_DATA_REGISTERED_ITU_T_T35
		}), _0x257e4f = _0x546d24 && _0x3aef7b || _0x546d24, _0x46ff06 = _0x21d151 && _0x382cdb || _0x21d151, _0x3ec97d = function _0x407130() {
			_0x407130.prototype.init.call(this);
			this.captionPackets_ = [];
			this.ccStreams_ = [
				new _0xbfb52f(0, 0),
				new _0xbfb52f(0, 1),
				new _0xbfb52f(1, 0),
				new _0xbfb52f(1, 1)
			];
			this.reset();
			this.ccStreams_.forEach(function (_0x315a33) {
				_0x315a33.on('data', this.trigger.bind(this, 'data'));
				_0x315a33.on('done', this.trigger.bind(this, 'done'));
			}, this);
		}, _0x58b110 = ((_0x3ec97d.prototype = new _0x257e4f()).push = function (_0xe8970) {
			var _0x5af19a, _0xfdcf88, _0x370e1f;
			if (_0xe8970.nalUnitType !== 'sei_rbsp') {
				return;
			}
			_0x5af19a = _0x46ff06.parseSei(_0xe8970.escapedRBSP);
			if (_0x5af19a.payloadType !== _0x46ff06.USER_DATA_REGISTERED_ITU_T_T35) {
				return;
			}
			_0xfdcf88 = _0x46ff06.parseUserData(_0x5af19a);
			if (!_0xfdcf88) {
				return;
			}
			if (_0xe8970.dts < this.latestDts_) {
				this.ignoreNextEqualDts_ = true;
				return;
			} else {
				if (_0xe8970.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
					this.numSameDts_--;
					if (!this.numSameDts_) {
						this.ignoreNextEqualDts_ = false;
					}
					return;
				}
			}
			_0x370e1f = _0x46ff06.parseCaptionPackets(_0xe8970.pts, _0xfdcf88);
			this.captionPackets_ = this.captionPackets_.concat(_0x370e1f);
			if (this.latestDts_ !== _0xe8970.dts) {
				this.numSameDts_ = 0;
			}
			this.numSameDts_++;
			this.latestDts_ = _0xe8970.dts;
		}, _0x3ec97d.prototype.flush = function () {
			if (!this.captionPackets_.length) {
				this.ccStreams_.forEach(function (_0x3b155e) {
					_0x3b155e.flush();
				}, this);
				return;
			}
			this.captionPackets_.forEach(function (_0x187b5a, _0x2e9b56) {
				_0x187b5a.presortIndex = _0x2e9b56;
			});
			this.captionPackets_.sort(function (_0x5824ae, _0x46df8a) {
				if (_0x5824ae.pts === _0x46df8a.pts) {
					return _0x5824ae.presortIndex - _0x46df8a.presortIndex;
				}
				return _0x5824ae.pts - _0x46df8a.pts;
			});
			this.captionPackets_.forEach(function (_0x571351) {
				if (_0x571351.type < 2) {
					this.dispatchCea608Packet(_0x571351);
				}
			}, this);
			this.captionPackets_.length = 0;
			this.ccStreams_.forEach(function (_0x5c991c) {
				_0x5c991c.flush();
			}, this);
			return;
		}, _0x3ec97d.prototype.reset = function () {
			this.latestDts_ = null;
			this.ignoreNextEqualDts_ = false;
			this.numSameDts_ = 0;
			this.activeCea608Channel_ = [
				null,
				null
			];
			this.ccStreams_.forEach(function (_0x5e00b6) {
				_0x5e00b6.reset();
			});
		}, _0x3ec97d.prototype.dispatchCea608Packet = function (_0x22b2d2) {
			if (this.setsChannel1Active(_0x22b2d2)) {
				this.activeCea608Channel_[_0x22b2d2.type] = 0;
			} else {
				if (this.setsChannel2Active(_0x22b2d2)) {
					this.activeCea608Channel_[_0x22b2d2.type] = 1;
				}
			}
			if (this.activeCea608Channel_[_0x22b2d2.type] === null) {
				return;
			}
			this.ccStreams_[(_0x22b2d2.type << 1) + this.activeCea608Channel_[_0x22b2d2.type]].push(_0x22b2d2);
		}, _0x3ec97d.prototype.setsChannel1Active = function (_0xebc9a4) {
			return (_0xebc9a4.ccData & 30720) === 4096;
		}, _0x3ec97d.prototype.setsChannel2Active = function (_0x4acb74) {
			return (_0x4acb74.ccData & 30720) === 6144;
		}, {
			42: 225,
			92: 233,
			94: 237,
			95: 243,
			96: 250,
			123: 231,
			124: 247,
			125: 209,
			126: 241,
			127: 9608,
			304: 174,
			305: 176,
			306: 189,
			307: 191,
			308: 8482,
			309: 162,
			310: 163,
			311: 9834,
			312: 224,
			313: 160,
			314: 232,
			315: 226,
			316: 234,
			317: 238,
			318: 244,
			319: 251,
			544: 193,
			545: 201,
			546: 211,
			547: 218,
			548: 220,
			549: 252,
			550: 8216,
			551: 161,
			552: 42,
			553: 39,
			554: 8212,
			555: 169,
			556: 8480,
			557: 8226,
			558: 8220,
			559: 8221,
			560: 192,
			561: 194,
			562: 199,
			563: 200,
			564: 202,
			565: 203,
			566: 235,
			567: 206,
			568: 207,
			569: 239,
			570: 212,
			571: 217,
			572: 249,
			573: 219,
			574: 171,
			575: 187,
			800: 195,
			801: 227,
			802: 205,
			803: 204,
			804: 236,
			805: 210,
			806: 242,
			807: 213,
			808: 245,
			809: 123,
			810: 125,
			811: 92,
			812: 94,
			813: 95,
			814: 124,
			815: 126,
			816: 196,
			817: 228,
			818: 214,
			819: 246,
			820: 223,
			821: 165,
			822: 164,
			823: 9474,
			824: 197,
			825: 229,
			826: 216,
			827: 248,
			828: 9484,
			829: 9488,
			830: 9492,
			831: 9496
		}), _0x449388 = function _0x2e3a78(_0x33de48) {
			if (_0x33de48 === null) {
				return '';
			}
			return _0x33de48 = _0x58b110[_0x33de48] || _0x33de48, String.fromCharCode(_0x33de48);
		}, _0x155433 = [
			4352,
			4384,
			4608,
			4640,
			5376,
			5408,
			5632,
			5664,
			5888,
			5920,
			4096,
			4864,
			4896,
			5120,
			5152
		], _0x32f2d5 = function _0x4c2f56() {
			var _0x1739c6 = [], _0x22be88 = 15;
			while (_0x22be88--) {
				_0x1739c6.push('');
			}
			return _0x1739c6;
		}, _0xbfb52f = function _0x4cff76(_0x2e3810, _0x58f6ec) {
			_0x4cff76.prototype.init.call(this);
			this.field_ = _0x2e3810 || 0;
			this.dataChannel_ = _0x58f6ec || 0;
			this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);
			this.setConstants();
			this.reset();
			this.push = function (_0x39e68e) {
				var _0x382bb8, _0x23309e, _0x4e895e, _0xb7fcdc, _0x2d101c;
				_0x382bb8 = _0x39e68e.ccData & 32639;
				if (_0x382bb8 === this.lastControlCode_) {
					this.lastControlCode_ = null;
					return;
				}
				if ((_0x382bb8 & 61440) === 4096) {
					this.lastControlCode_ = _0x382bb8;
				} else {
					if (_0x382bb8 !== this.PADDING_) {
						this.lastControlCode_ = null;
					}
				}
				_0x4e895e = _0x382bb8 >>> 8;
				_0xb7fcdc = _0x382bb8 & 255;
				if (_0x382bb8 === this.PADDING_) {
					return;
				} else {
					if (_0x382bb8 === this.RESUME_CAPTION_LOADING_) {
						this.mode_ = 'popOn';
					} else {
						if (_0x382bb8 === this.END_OF_CAPTION_) {
							this.mode_ = 'popOn';
							this.clearFormatting(_0x39e68e.pts);
							this.flushDisplayed(_0x39e68e.pts);
							_0x23309e = this.displayed_;
							this.displayed_ = this.nonDisplayed_;
							this.nonDisplayed_ = _0x23309e;
							this.startPts_ = _0x39e68e.pts;
						} else {
							if (_0x382bb8 === this.ROLL_UP_2_ROWS_) {
								this.rollUpRows_ = 2;
								this.setRollUp(_0x39e68e.pts);
							} else {
								if (_0x382bb8 === this.ROLL_UP_3_ROWS_) {
									this.rollUpRows_ = 3;
									this.setRollUp(_0x39e68e.pts);
								} else {
									if (_0x382bb8 === this.ROLL_UP_4_ROWS_) {
										this.rollUpRows_ = 4;
										this.setRollUp(_0x39e68e.pts);
									} else {
										if (_0x382bb8 === this.CARRIAGE_RETURN_) {
											this.clearFormatting(_0x39e68e.pts);
											this.flushDisplayed(_0x39e68e.pts);
											this.shiftRowsUp_();
											this.startPts_ = _0x39e68e.pts;
										} else {
											if (_0x382bb8 === this.BACKSPACE_) {
												if (this.mode_ === 'popOn') {
													this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);
												} else {
													this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);
												}
											} else {
												if (_0x382bb8 === this.ERASE_DISPLAYED_MEMORY_) {
													this.flushDisplayed(_0x39e68e.pts);
													this.displayed_ = _0x32f2d5();
												} else {
													if (_0x382bb8 === this.ERASE_NON_DISPLAYED_MEMORY_) {
														this.nonDisplayed_ = _0x32f2d5();
													} else {
														if (_0x382bb8 === this.RESUME_DIRECT_CAPTIONING_) {
															if (this.mode_ !== 'paintOn') {
																this.flushDisplayed(_0x39e68e.pts);
																this.displayed_ = _0x32f2d5();
															}
															this.mode_ = 'paintOn';
															this.startPts_ = _0x39e68e.pts;
														} else {
															if (this.isSpecialCharacter(_0x4e895e, _0xb7fcdc)) {
																_0x4e895e = (_0x4e895e & 3) << 8;
																_0x2d101c = _0x449388(_0x4e895e | _0xb7fcdc);
																this[this.mode_](_0x39e68e.pts, _0x2d101c);
																this.column_++;
															} else {
																if (this.isExtCharacter(_0x4e895e, _0xb7fcdc)) {
																	if (this.mode_ === 'popOn') {
																		this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);
																	} else {
																		this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);
																	}
																	_0x4e895e = (_0x4e895e & 3) << 8;
																	_0x2d101c = _0x449388(_0x4e895e | _0xb7fcdc);
																	this[this.mode_](_0x39e68e.pts, _0x2d101c);
																	this.column_++;
																} else {
																	if (this.isMidRowCode(_0x4e895e, _0xb7fcdc)) {
																		this.clearFormatting(_0x39e68e.pts);
																		this[this.mode_](_0x39e68e.pts, ' ');
																		this.column_++;
																		if ((_0xb7fcdc & 14) === 14) {
																			this.addFormatting(_0x39e68e.pts, ['i']);
																		}
																		if ((_0xb7fcdc & 1) === 1) {
																			this.addFormatting(_0x39e68e.pts, ['u']);
																		}
																	} else {
																		if (this.isOffsetControlCode(_0x4e895e, _0xb7fcdc)) {
																			this.column_ += _0xb7fcdc & 3;
																		} else {
																			if (this.isPAC(_0x4e895e, _0xb7fcdc)) {
																				var _0x1f843d = _0x155433.indexOf(_0x382bb8 & 7968);
																				if (this.mode_ === 'rollUp') {
																					this.setRollUp(_0x39e68e.pts, _0x1f843d);
																				}
																				if (_0x1f843d !== this.row_) {
																					this.clearFormatting(_0x39e68e.pts);
																					this.row_ = _0x1f843d;
																				}
																				if (_0xb7fcdc & 1 && this.formatting_.indexOf('u') === -1) {
																					this.addFormatting(_0x39e68e.pts, ['u']);
																				}
																				if ((_0x382bb8 & 16) === 16) {
																					this.column_ = ((_0x382bb8 & 14) >> 1) * 4;
																				}
																				if (this.isColorPAC(_0xb7fcdc)) {
																					if ((_0xb7fcdc & 14) === 14) {
																						this.addFormatting(_0x39e68e.pts, ['i']);
																					}
																				}
																			} else {
																				if (this.isNormalChar(_0x4e895e)) {
																					if (_0xb7fcdc === 0) {
																						_0xb7fcdc = null;
																					}
																					_0x2d101c = _0x449388(_0x4e895e);
																					_0x2d101c += _0x449388(_0xb7fcdc);
																					this[this.mode_](_0x39e68e.pts, _0x2d101c);
																					this.column_ += _0x2d101c.length;
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			};
		}, _0x39efc3 = (_0xbfb52f.prototype = new _0x257e4f(), _0xbfb52f.prototype.flushDisplayed = function (_0x5e9c04) {
			var _0x2f5893 = this.displayed_.map(function (_0x35ca0a) {
				return _0x35ca0a.trim();
			}).join('\n').replace(/^\n+|\n+$/g, '');
			if (_0x2f5893.length) {
				this.trigger('data', {
					'startPts': this.startPts_,
					'endPts': _0x5e9c04,
					'text': _0x2f5893,
					'stream': this.name_
				});
			}
		}, _0xbfb52f.prototype.reset = function () {
			this.mode_ = 'popOn';
			this.topRow_ = 0;
			this.startPts_ = 0;
			this.displayed_ = _0x32f2d5();
			this.nonDisplayed_ = _0x32f2d5();
			this.lastControlCode_ = null;
			this.column_ = 0;
			this.row_ = 14;
			this.rollUpRows_ = 2;
			this.formatting_ = [];
		}, _0xbfb52f.prototype.setConstants = function () {
			if (this.dataChannel_ === 0) {
				this.BASE_ = 16;
				this.EXT_ = 17;
				this.CONTROL_ = (20 | this.field_) << 8;
				this.OFFSET_ = 23;
			} else {
				if (this.dataChannel_ === 1) {
					this.BASE_ = 24;
					this.EXT_ = 25;
					this.CONTROL_ = (28 | this.field_) << 8;
					this.OFFSET_ = 31;
				}
			}
			this.PADDING_ = 0;
			this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
			this.END_OF_CAPTION_ = this.CONTROL_ | 47;
			this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
			this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
			this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
			this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
			this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
			this.BACKSPACE_ = this.CONTROL_ | 33;
			this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
			this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46;
		}, _0xbfb52f.prototype.isSpecialCharacter = function (_0x30a261, _0x2d04d9) {
			return _0x30a261 === this.EXT_ && _0x2d04d9 >= 48 && _0x2d04d9 <= 63;
		}, _0xbfb52f.prototype.isExtCharacter = function (_0x3df693, _0x15194b) {
			return (_0x3df693 === this.EXT_ + 1 || _0x3df693 === this.EXT_ + 2) && _0x15194b >= 32 && _0x15194b <= 63;
		}, _0xbfb52f.prototype.isMidRowCode = function (_0x2adaeb, _0x4d8d06) {
			return _0x2adaeb === this.EXT_ && _0x4d8d06 >= 32 && _0x4d8d06 <= 47;
		}, _0xbfb52f.prototype.isOffsetControlCode = function (_0x463e64, _0x1672d9) {
			return _0x463e64 === this.OFFSET_ && _0x1672d9 >= 33 && _0x1672d9 <= 35;
		}, _0xbfb52f.prototype.isPAC = function (_0x1fc3d3, _0x33f3bb) {
			return _0x1fc3d3 >= this.BASE_ && _0x1fc3d3 < this.BASE_ + 8 && _0x33f3bb >= 64 && _0x33f3bb <= 127;
		}, _0xbfb52f.prototype.isColorPAC = function (_0x5926c3) {
			return _0x5926c3 >= 64 && _0x5926c3 <= 79 || _0x5926c3 >= 96 && _0x5926c3 <= 127;
		}, _0xbfb52f.prototype.isNormalChar = function (_0x5661ba) {
			return _0x5661ba >= 32 && _0x5661ba <= 127;
		}, _0xbfb52f.prototype.setRollUp = function (_0xb6f419, _0x4a5af5) {
			if (this.mode_ !== 'rollUp') {
				this.row_ = _0xab60f2;
				this.mode_ = 'rollUp';
				this.flushDisplayed(_0xb6f419);
				this.nonDisplayed_ = _0x32f2d5();
				this.displayed_ = _0x32f2d5();
			}
			if (_0x4a5af5 !== undefined && _0x4a5af5 !== this.row_) {
				for (var _0xce3309 = 0; _0xce3309 < this.rollUpRows_; _0xce3309++) {
					this.displayed_[_0x4a5af5 - _0xce3309] = this.displayed_[this.row_ - _0xce3309];
					this.displayed_[this.row_ - _0xce3309] = '';
				}
			}
			if (_0x4a5af5 === undefined) {
				_0x4a5af5 = this.row_;
			}
			this.topRow_ = _0x4a5af5 - this.rollUpRows_ + 1;
		}, _0xbfb52f.prototype.addFormatting = function (_0x1e2587, _0x311552) {
			this.formatting_ = this.formatting_.concat(_0x311552);
			var _0x19b5fe = _0x311552.reduce(function (_0x4c3b49, _0x3042c1) {
				return _0x4c3b49 + '<' + _0x3042c1 + '>';
			}, '');
			this[this.mode_](_0x1e2587, _0x19b5fe);
		}, _0xbfb52f.prototype.clearFormatting = function (_0x28e7c2) {
			if (!this.formatting_.length) {
				return;
			}
			var _0x54144b = this.formatting_.reverse().reduce(function (_0x3479c8, _0x2f675e) {
				return _0x3479c8 + '</' + _0x2f675e + '>';
			}, '');
			this.formatting_ = [];
			this[this.mode_](_0x28e7c2, _0x54144b);
		}, _0xbfb52f.prototype.popOn = function (_0x4d4b5f, _0x510762) {
			var _0x583daf = this.nonDisplayed_[this.row_];
			_0x583daf += _0x510762;
			this.nonDisplayed_[this.row_] = _0x583daf;
		}, _0xbfb52f.prototype.rollUp = function (_0x8b45e3, _0xb17851) {
			var _0x242920 = this.displayed_[this.row_];
			_0x242920 += _0xb17851;
			this.displayed_[this.row_] = _0x242920;
		}, _0xbfb52f.prototype.shiftRowsUp_ = function () {
			var _0x1c346d;
			for (_0x1c346d = 0; _0x1c346d < this.topRow_; _0x1c346d++) {
				this.displayed_[_0x1c346d] = '';
			}
			for (_0x1c346d = this.row_ + 1; _0x1c346d < 15; _0x1c346d++) {
				this.displayed_[_0x1c346d] = '';
			}
			for (_0x1c346d = this.topRow_; _0x1c346d < this.row_; _0x1c346d++) {
				this.displayed_[_0x1c346d] = this.displayed_[_0x1c346d + 1];
			}
			this.displayed_[this.row_] = '';
		}, _0xbfb52f.prototype.paintOn = function (_0x52049d, _0xd2cbd0) {
			var _0x46dc66 = this.displayed_[this.row_];
			_0x46dc66 += _0xd2cbd0;
			this.displayed_[this.row_] = _0x46dc66;
		}, {
			'CaptionStream': _0x3ec97d,
			'Cea608Stream': _0xbfb52f
		}), _0x484895, _0x1dd51a, _0x49c470 = Object.freeze({
			'default': _0x39efc3,
			'__moduleExports': _0x39efc3,
			'CaptionStream': _0x39efc3.CaptionStream,
			'Cea608Stream': _0x39efc3.Cea608Stream
		}), _0x5aab87, _0x554922, _0x56cbf1, _0x11af8a = Object.freeze({
			'default': _0x2453ea,
			'__moduleExports': _0x2453ea,
			'H264_STREAM_TYPE': _0x2453ea.H264_STREAM_TYPE,
			'ADTS_STREAM_TYPE': _0x2453ea.ADTS_STREAM_TYPE,
			'METADATA_STREAM_TYPE': _0x2453ea.METADATA_STREAM_TYPE
		}), _0x40a61b = function _0x1234cc(_0x279676, _0x438839) {
			var _0x299190 = 1;
			if (_0x279676 > _0x438839) {
				_0x299190 = -1;
			}
			while (Math.abs(_0x438839 - _0x279676) > 4294967296) {
				_0x279676 += _0x299190 * 8589934592;
			}
			return _0x279676;
		}, _0x4806e9 = function _0x5da774(_0x17efce) {
			var _0xf9e952, _0x275082;
			_0x5da774.prototype.init.call(this);
			this.type_ = _0x17efce;
			this.push = function (_0x3c6709) {
				if (_0x3c6709.type !== this.type_) {
					return;
				}
				if (_0x275082 === undefined) {
					_0x275082 = _0x3c6709.dts;
				}
				_0x3c6709.dts = _0x40a61b(_0x3c6709.dts, _0x275082);
				_0x3c6709.pts = _0x40a61b(_0x3c6709.pts, _0x275082);
				_0xf9e952 = _0x3c6709.dts;
				this.trigger('data', _0x3c6709);
			};
			this.flush = function () {
				_0x275082 = _0xf9e952;
				this.trigger('done');
			};
			this.discontinuity = function () {
				_0x275082 = void 0;
				_0xf9e952 = void 0;
			};
		}, _0x359e27 = (_0x4806e9.prototype = new _0x257e4f(), {
			'TimestampRolloverStream': _0x4806e9,
			'handleRollover': _0x40a61b
		}), _0x13cb41, _0x7f2406, _0x5f1f33 = Object.freeze({
			'default': _0x359e27,
			'__moduleExports': _0x359e27,
			'TimestampRolloverStream': _0x359e27.TimestampRolloverStream,
			'handleRollover': _0x359e27.handleRollover
		}), _0x5142f2 = _0x11af8a && _0x2453ea || _0x11af8a, _0x38c569 = function _0x12e602(_0x4e0c5d, _0xe7a1b9, _0x48e9b8) {
			var _0x4e867a, _0x41d394 = '';
			for (_0x4e867a = _0xe7a1b9; _0x4e867a < _0x48e9b8; _0x4e867a++) {
				_0x41d394 += '%' + ('00' + _0x4e0c5d[_0x4e867a].toString(16)).slice(-2);
			}
			return _0x41d394;
		}, _0x51ebee = function _0x42989f(_0x4b9236, _0x35fad3, _0x43ec4e) {
			return decodeURIComponent(_0x38c569(_0x4b9236, _0x35fad3, _0x43ec4e));
		}, _0xbeed4e = function _0x5ce5c6(_0x4c36b7, _0x379afe, _0x302958) {
			return unescape(_0x38c569(_0x4c36b7, _0x379afe, _0x302958));
		}, _0x3380f9 = function _0x1f2e6d(_0x576fa2) {
			return _0x576fa2[0] << 21 | _0x576fa2[1] << 14 | _0x576fa2[2] << 7 | _0x576fa2[3];
		}, _0x137fcd = {
			'TXXX': function _0x3ceecb(_0x95ba19) {
				var _0x19c5c4;
				if (_0x95ba19.data[0] !== 3) {
					return;
				}
				for (_0x19c5c4 = 1; _0x19c5c4 < _0x95ba19.data.length; _0x19c5c4++) {
					if (_0x95ba19.data[_0x19c5c4] === 0) {
						_0x95ba19.description = _0x51ebee(_0x95ba19.data, 1, _0x19c5c4);
						_0x95ba19.value = _0x51ebee(_0x95ba19.data, _0x19c5c4 + 1, _0x95ba19.data.length).replace(/\0*$/, '');
						break;
					}
				}
				_0x95ba19.data = _0x95ba19.value;
			},
			'WXXX': function _0x156805(_0x4ba4e4) {
				var _0x289847;
				if (_0x4ba4e4.data[0] !== 3) {
					return;
				}
				for (_0x289847 = 1; _0x289847 < _0x4ba4e4.data.length; _0x289847++) {
					if (_0x4ba4e4.data[_0x289847] === 0) {
						_0x4ba4e4.description = _0x51ebee(_0x4ba4e4.data, 1, _0x289847);
						_0x4ba4e4.url = _0x51ebee(_0x4ba4e4.data, _0x289847 + 1, _0x4ba4e4.data.length);
						break;
					}
				}
			},
			'PRIV': function _0x480f54(_0x45db32) {
				var _0x3fd88e;
				for (_0x3fd88e = 0; _0x3fd88e < _0x45db32.data.length; _0x3fd88e++) {
					if (_0x45db32.data[_0x3fd88e] === 0) {
						_0x45db32.owner = _0xbeed4e(_0x45db32.data, 0, _0x3fd88e);
						break;
					}
				}
				_0x45db32.privateData = _0x45db32.data.subarray(_0x3fd88e + 1);
				_0x45db32.data = _0x45db32.privateData;
			}
		}, _0x12f310, _0x12f310 = function _0x8cbd62(_0xfd0f15) {
			var _0x8946b1 = {
				'debug': !!(_0xfd0f15 && _0xfd0f15.debug),
				'descriptor': _0xfd0f15 && _0xfd0f15.descriptor
			}, _0x4402e0 = 0, _0x2ca1d4 = [], _0x5636d7 = 0, _0x3d46ff;
			_0x12f310.prototype.init.call(this);
			this.dispatchType = _0x5142f2.METADATA_STREAM_TYPE.toString(16);
			if (_0x8946b1.descriptor) {
				for (_0x3d46ff = 0; _0x3d46ff < _0x8946b1.descriptor.length; _0x3d46ff++) {
					this.dispatchType += ('00' + _0x8946b1.descriptor[_0x3d46ff].toString(16)).slice(-2);
				}
			}
			this.push = function (_0x31d20d) {
				var _0x5aa51b, _0x11b71f, _0x2a8439, _0x5f5b37, _0x2db6e7, _0x4deb16;
				if (_0x31d20d.type !== 'timed-metadata') {
					return;
				}
				_0x31d20d.dataAlignmentIndicator && (_0x5636d7 = 0, _0x2ca1d4.length = 0);
				if (_0x2ca1d4.length === 0 && (_0x31d20d.data.length < 10 || _0x31d20d.data[0] !== 'I'.charCodeAt(0) || _0x31d20d.data[1] !== 'D'.charCodeAt(0) || _0x31d20d.data[2] !== '3'.charCodeAt(0))) {
					if (_0x8946b1.debug) {
						console.log('Skipping unrecognized metadata packet');
					}
					return;
				}
				_0x2ca1d4.push(_0x31d20d);
				_0x5636d7 += _0x31d20d.data.byteLength;
				if (_0x2ca1d4.length === 1) {
					_0x4402e0 = _0x3380f9(_0x31d20d.data.subarray(6, 10));
					_0x4402e0 += 10;
				}
				if (_0x5636d7 < _0x4402e0) {
					return;
				}
				_0x5aa51b = {
					'data': new Uint8Array(_0x4402e0),
					'frames': [],
					'pts': _0x2ca1d4[0].pts,
					'dts': _0x2ca1d4[0].dts
				};
				for (_0x2db6e7 = 0; _0x2db6e7 < _0x4402e0;) {
					_0x5aa51b.data.set(_0x2ca1d4[0].data.subarray(0, _0x4402e0 - _0x2db6e7), _0x2db6e7);
					_0x2db6e7 += _0x2ca1d4[0].data.byteLength;
					_0x5636d7 -= _0x2ca1d4[0].data.byteLength;
					_0x2ca1d4.shift();
				}
				_0x11b71f = 10;
				if (_0x5aa51b.data[5] & 64) {
					_0x11b71f += 4;
					_0x11b71f += _0x3380f9(_0x5aa51b.data.subarray(10, 14));
					_0x4402e0 -= _0x3380f9(_0x5aa51b.data.subarray(16, 20));
				}
				do {
					_0x2a8439 = _0x3380f9(_0x5aa51b.data.subarray(_0x11b71f + 4, _0x11b71f + 8));
					if (_0x2a8439 < 1) {
						return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');
					}
					_0x4deb16 = String.fromCharCode(_0x5aa51b.data[_0x11b71f], _0x5aa51b.data[_0x11b71f + 1], _0x5aa51b.data[_0x11b71f + 2], _0x5aa51b.data[_0x11b71f + 3]);
					_0x5f5b37 = {
						'id': _0x4deb16,
						'data': _0x5aa51b.data.subarray(_0x11b71f + 10, _0x11b71f + _0x2a8439 + 10)
					};
					_0x5f5b37.key = _0x5f5b37.id;
					if (_0x137fcd[_0x5f5b37.id]) {
						_0x137fcd[_0x5f5b37.id](_0x5f5b37);
						if (_0x5f5b37.owner === 'com.apple.streaming.transportStreamTimestamp') {
							var _0x470905 = _0x5f5b37.data, _0x4230b5 = (_0x470905[3] & 1) << 30 | _0x470905[4] << 22 | _0x470905[5] << 14 | _0x470905[6] << 6 | _0x470905[7] >>> 2;
							_0x4230b5 *= 4;
							_0x4230b5 += _0x470905[7] & 3;
							_0x5f5b37.timeStamp = _0x4230b5;
							_0x5aa51b.pts === undefined && _0x5aa51b.dts === undefined && (_0x5aa51b.pts = _0x5f5b37.timeStamp, _0x5aa51b.dts = _0x5f5b37.timeStamp);
							this.trigger('timestamp', _0x5f5b37);
						}
					}
					_0x5aa51b.frames.push(_0x5f5b37);
					_0x11b71f += 10;
					_0x11b71f += _0x2a8439;
				} while (_0x11b71f < _0x4402e0);
				this.trigger('data', _0x5aa51b);
			};
		};
		_0x12f310.prototype = new _0x257e4f();
		var _0x48fc2e, _0x5d2cbc = Object.freeze({
			'default': _0x12f310,
			'__moduleExports': _0x12f310
		}), _0x4ee5f6 = _0x49c470 && _0x39efc3 || _0x49c470, _0x35040b = _0x5f1f33 && _0x359e27 || _0x5f1f33, _0x7048c4 = _0x5d2cbc && _0x12f310 || _0x5d2cbc, _0xb627 = _0x35040b.TimestampRolloverStream, _0x29ed6d, _0x5755c1, _0x3fa9b1, _0x29ed6d = function _0xf3210() {
			var _0xe32365 = new Uint8Array(188), _0x3a22cc = 0;
			_0x29ed6d.prototype.init.call(this);
			this.push = function (_0xb496b2) {
				var _0x11a3fa = 0, _0x35f0a4 = 188, _0x2e16be;
				if (_0x3a22cc) {
					_0x2e16be = new Uint8Array(_0xb496b2.byteLength + _0x3a22cc);
					_0x2e16be.set(_0xe32365.subarray(0, _0x3a22cc));
					_0x2e16be.set(_0xb496b2, _0x3a22cc);
					_0x3a22cc = 0;
				} else {
					_0x2e16be = _0xb496b2;
				}
				while (_0x35f0a4 < _0x2e16be.byteLength) {
					if (_0x2e16be[_0x11a3fa] === 71 && _0x2e16be[_0x35f0a4] === 71) {
						this.trigger('data', _0x2e16be.subarray(_0x11a3fa, _0x35f0a4));
						_0x11a3fa += 188;
						_0x35f0a4 += 188;
						continue;
					}
					_0x11a3fa++;
					_0x35f0a4++;
				}
				if (_0x11a3fa < _0x2e16be.byteLength) {
					_0xe32365.set(_0x2e16be.subarray(_0x11a3fa), 0);
					_0x3a22cc = _0x2e16be.byteLength - _0x11a3fa;
				}
			};
			this.flush = function () {
				_0x3a22cc === 188 && _0xe32365[0] === 71 && (this.trigger('data', _0xe32365), _0x3a22cc = 0);
				this.trigger('done');
			};
		}, _0x1703d9 = (_0x29ed6d.prototype = new _0x257e4f(), (_0x5755c1 = function _0x16427b() {
			var _0x52ec7f, _0x1ff61d, _0x4c3716, _0x2948fb;
			_0x5755c1.prototype.init.call(this);
			_0x2948fb = this;
			this.packetsWaitingForPmt = [];
			this.programMapTable = undefined;
			_0x52ec7f = function _0x151d38(_0x19b66d, _0x492335) {
				var _0x2aff25 = 0;
				if (_0x492335.payloadUnitStartIndicator) {
					_0x2aff25 += _0x19b66d[_0x2aff25] + 1;
				}
				if (_0x492335.type === 'pat') {
					_0x1ff61d(_0x19b66d.subarray(_0x2aff25), _0x492335);
				} else {
					_0x4c3716(_0x19b66d.subarray(_0x2aff25), _0x492335);
				}
			};
			_0x1ff61d = function _0x1ac40c(_0x42bbf3, _0x5a8212) {
				_0x5a8212.section_number = _0x42bbf3[7];
				_0x5a8212.last_section_number = _0x42bbf3[8];
				_0x2948fb.pmtPid = (_0x42bbf3[10] & 31) << 8 | _0x42bbf3[11];
				_0x5a8212.pmtPid = _0x2948fb.pmtPid;
			};
			_0x4c3716 = function _0x29bf73(_0x1a6316, _0x494d75) {
				var _0x2d1647, _0x3af82a, _0x16228f, _0xa7168d;
				if (!(_0x1a6316[5] & 1)) {
					return;
				}
				_0x2948fb.programMapTable = {
					'video': null,
					'audio': null,
					'timed-metadata': {}
				};
				_0x2d1647 = (_0x1a6316[1] & 15) << 8 | _0x1a6316[2];
				_0x3af82a = 3 + _0x2d1647 - 4;
				_0x16228f = (_0x1a6316[10] & 15) << 8 | _0x1a6316[11];
				_0xa7168d = 12 + _0x16228f;
				while (_0xa7168d < _0x3af82a) {
					var _0x290703 = _0x1a6316[_0xa7168d], _0x49f43d = (_0x1a6316[_0xa7168d + 1] & 31) << 8 | _0x1a6316[_0xa7168d + 2];
					if (_0x290703 === _0x5142f2.H264_STREAM_TYPE && _0x2948fb.programMapTable.video === null) {
						_0x2948fb.programMapTable.video = _0x49f43d;
					} else {
						if (_0x290703 === _0x5142f2.ADTS_STREAM_TYPE && _0x2948fb.programMapTable.audio === null) {
							_0x2948fb.programMapTable.audio = _0x49f43d;
						} else {
							if (_0x290703 === _0x5142f2.METADATA_STREAM_TYPE) {
								_0x2948fb.programMapTable['timed-metadata'][_0x49f43d] = _0x290703;
							}
						}
					}
					_0xa7168d += ((_0x1a6316[_0xa7168d + 3] & 15) << 8 | _0x1a6316[_0xa7168d + 4]) + 5;
				}
				_0x494d75.programMapTable = _0x2948fb.programMapTable;
			};
			this.push = function (_0x2b8d45) {
				var _0x355ed9 = {
					payloadUnitStartIndicator: !!(_0x2b8d45[1] & 64),
					pid: _0x2b8d45[1] & 31,
					pid: 8,
					pid: _0x2b8d45[2],
					type: 'pat',
					type: 'pmt'
				}, _0x20c0fb = 4;
				if ((_0x2b8d45[3] & 48) >>> 4 > 1) {
					_0x20c0fb += _0x2b8d45[_0x20c0fb] + 1;
				}
				if (_0x355ed9.pid === 0) {
					_0x52ec7f(_0x2b8d45.subarray(_0x20c0fb), _0x355ed9);
					this.trigger('data', _0x355ed9);
				} else {
					if (_0x355ed9.pid === this.pmtPid) {
						_0x52ec7f(_0x2b8d45.subarray(_0x20c0fb), _0x355ed9);
						this.trigger('data', _0x355ed9);
						while (this.packetsWaitingForPmt.length) {
							this.processPes_.apply(this, this.packetsWaitingForPmt.shift());
						}
					} else {
						if (this.programMapTable === undefined) {
							this.packetsWaitingForPmt.push([
								_0x2b8d45,
								_0x20c0fb,
								_0x355ed9
							]);
						} else {
							this.processPes_(_0x2b8d45, _0x20c0fb, _0x355ed9);
						}
					}
				}
			};
			this.processPes_ = function (_0x331b2a, _0xd170f, _0x4b52fa) {
				if (_0x4b52fa.pid === this.programMapTable.video) {
					_0x4b52fa.streamType = _0x5142f2.H264_STREAM_TYPE;
				} else {
					if (_0x4b52fa.pid === this.programMapTable.audio) {
						_0x4b52fa.streamType = _0x5142f2.ADTS_STREAM_TYPE;
					} else {
						_0x4b52fa.streamType = this.programMapTable['timed-metadata'][_0x4b52fa.pid];
					}
				}
				_0x4b52fa.type = 'pes';
				_0x4b52fa.data = _0x331b2a.subarray(_0xd170f);
				this.trigger('data', _0x4b52fa);
			};
		}).prototype = new _0x257e4f(), _0x5755c1.STREAM_TYPES = {
			'h264': 27,
			'adts': 15
		}, (_0x3fa9b1 = function _0x5d50ef() {
			var _0x234400 = this, _0x16b7b9 = {
				'data': [],
				'size': 0
			}, _0x125b50 = {
				'data': [],
				'size': 0
			}, _0x28eed2 = {
				'data': [],
				'size': 0
			}, _0x2e6345 = function _0x5e4b93(_0x17453f, _0x45c420) {
				var _0x5d6fd1;
				_0x45c420.packetLength = 6 + (_0x17453f[4] << 8 | _0x17453f[5]);
				_0x45c420.dataAlignmentIndicator = (_0x17453f[6] & 4) !== 0;
				_0x5d6fd1 = _0x17453f[7];
				if (_0x5d6fd1 & 192) {
					_0x45c420.pts = (_0x17453f[9] & 14) << 27 | (_0x17453f[10] & 255) << 20 | (_0x17453f[11] & 254) << 12 | (_0x17453f[12] & 255) << 5 | (_0x17453f[13] & 254) >>> 3;
					_0x45c420.pts *= 4;
					_0x45c420.pts += (_0x17453f[13] & 6) >>> 1;
					_0x45c420.dts = _0x45c420.pts;
					if (_0x5d6fd1 & 64) {
						_0x45c420.dts = (_0x17453f[14] & 14) << 27 | (_0x17453f[15] & 255) << 20 | (_0x17453f[16] & 254) << 12 | (_0x17453f[17] & 255) << 5 | (_0x17453f[18] & 254) >>> 3;
						_0x45c420.dts *= 4;
						_0x45c420.dts += (_0x17453f[18] & 6) >>> 1;
					}
				}
				_0x45c420.data = _0x17453f.subarray(9 + _0x17453f[8]);
			}, _0x4e1397 = function _0x53dd6a(_0x2c5120, _0x5ce736, _0x455fc3) {
				var _0x491b0d = new Uint8Array(_0x2c5120.size), _0x188ba9 = { 'type': _0x5ce736 }, _0x14d5e8 = 0, _0x40d64b = 0, _0x25f9f4 = false, _0x5174cb;
				if (!_0x2c5120.data.length || _0x2c5120.size < 9) {
					return;
				}
				_0x188ba9.trackId = _0x2c5120.data[0].pid;
				for (_0x14d5e8 = 0; _0x14d5e8 < _0x2c5120.data.length; _0x14d5e8++) {
					_0x5174cb = _0x2c5120.data[_0x14d5e8];
					_0x491b0d.set(_0x5174cb.data, _0x40d64b);
					_0x40d64b += _0x5174cb.data.byteLength;
				}
				_0x2e6345(_0x491b0d, _0x188ba9);
				_0x25f9f4 = _0x5ce736 === 'video' || _0x188ba9.packetLength <= _0x2c5120.size;
				(_0x455fc3 || _0x25f9f4) && (_0x2c5120.size = 0, _0x2c5120.data.length = 0);
				if (_0x25f9f4) {
					_0x234400.trigger('data', _0x188ba9);
				}
			};
			_0x3fa9b1.prototype.init.call(this);
			this.push = function (_0xf81209) {
				({
					'pat': function _0x24712e() {
					},
					'pes': function _0xeb58f0() {
						var _0x33c350, _0x41a765;
						switch (_0xf81209.streamType) {
							case _0x5142f2.H264_STREAM_TYPE:
							case _0x5142f2.H264_STREAM_TYPE:
								_0x33c350 = _0x16b7b9, _0x41a765 = 'video';
								break;
							case _0x5142f2.ADTS_STREAM_TYPE:
								_0x33c350 = _0x125b50, _0x41a765 = 'audio';
								break;
							case _0x5142f2.METADATA_STREAM_TYPE:
								_0x33c350 = _0x28eed2, _0x41a765 = 'timed-metadata';
								break;
							default:
								return;
						}
						if (_0xf81209.payloadUnitStartIndicator) {
							_0x4e1397(_0x33c350, _0x41a765, true);
						}
						_0x33c350.data.push(_0xf81209);
						_0x33c350.size += _0xf81209.data.byteLength;
					},
					'pmt': function _0x35c530() {
						var _0x3fe1d7 = {
							'type': 'metadata',
							'tracks': []
						}, _0x34e349 = _0xf81209.programMapTable;
						if (_0x34e349.video !== null) {
							_0x3fe1d7.tracks.push({
								'timelineStartInfo': { 'baseMediaDecodeTime': 0 },
								'id': +_0x34e349.video,
								'codec': 'avc',
								'type': 'video'
							});
						}
						if (_0x34e349.audio !== null) {
							_0x3fe1d7.tracks.push({
								'timelineStartInfo': { 'baseMediaDecodeTime': 0 },
								'id': +_0x34e349.audio,
								'codec': 'adts',
								'type': 'audio'
							});
						}
						_0x234400.trigger('data', _0x3fe1d7);
					}
				}[_0xf81209.type]());
			};
			this.flush = function () {
				_0x4e1397(_0x16b7b9, 'video');
				_0x4e1397(_0x125b50, 'audio');
				_0x4e1397(_0x28eed2, 'timed-metadata');
				this.trigger('done');
			};
		}).prototype = new _0x257e4f(), {
			'PAT_PID': 0,
			'MP2T_PACKET_LENGTH': 188,
			'TransportPacketStream': _0x29ed6d,
			'TransportParseStream': _0x5755c1,
			'ElementaryStream': _0x3fa9b1,
			'TimestampRolloverStream': _0xb627,
			'CaptionStream': _0x4ee5f6.CaptionStream,
			'Cea608Stream': _0x4ee5f6.Cea608Stream,
			'MetadataStream': _0x7048c4
		}), _0x224647;
		for (_0x224647 in _0x5142f2)
			if (_0x5142f2.hasOwnProperty(_0x224647)) {
				_0x1703d9[_0x224647] = _0x5142f2[_0x224647];
			}
		var _0x2dbb0a = _0x1703d9, _0x916411 = Object.freeze({
			'default': _0x2dbb0a,
			'__moduleExports': _0x2dbb0a
		}), _0x200aca, _0x519f6a = [
			96000,
			88200,
			64000,
			48000,
			44100,
			32000,
			24000,
			22050,
			16000,
			12000,
			11025,
			8000,
			7350
		], _0x200aca = function _0x51720a() {
			var _0x45cc71;
			_0x200aca.prototype.init.call(this);
			this.push = function (_0x20ab32) {
				var _0x4d7a9d = 0, _0x218710 = 0, _0x2a5fb6, _0x3ba05a, _0x4df012, _0x2042f5, _0x4901f9, _0x9f97d;
				if (_0x20ab32.type !== 'audio') {
					return;
				}
				if (_0x45cc71) {
					_0x2042f5 = _0x45cc71;
					_0x45cc71 = new Uint8Array(_0x2042f5.byteLength + _0x20ab32.data.byteLength);
					_0x45cc71.set(_0x2042f5);
					_0x45cc71.set(_0x20ab32.data, _0x2042f5.byteLength);
				} else {
					_0x45cc71 = _0x20ab32.data;
				}
				while (_0x4d7a9d + 5 < _0x45cc71.length) {
					if (_0x45cc71[_0x4d7a9d] !== 255 || (_0x45cc71[_0x4d7a9d + 1] & 246) !== 240) {
						_0x4d7a9d++;
						continue;
					}
					_0x3ba05a = (~_0x45cc71[_0x4d7a9d + 1] & 1) * 2;
					_0x2a5fb6 = (_0x45cc71[_0x4d7a9d + 3] & 3) << 11 | _0x45cc71[_0x4d7a9d + 4] << 3 | (_0x45cc71[_0x4d7a9d + 5] & 224) >> 5;
					_0x4901f9 = ((_0x45cc71[_0x4d7a9d + 6] & 3) + 1) * 1024;
					_0x9f97d = _0x4901f9 * 90000 / _0x519f6a[(_0x45cc71[_0x4d7a9d + 2] & 60) >>> 2];
					_0x4df012 = _0x4d7a9d + _0x2a5fb6;
					if (_0x45cc71.byteLength < _0x4df012) {
						return;
					}
					this.trigger('data', {
						'pts': _0x20ab32.pts + _0x218710 * _0x9f97d,
						'dts': _0x20ab32.dts + _0x218710 * _0x9f97d,
						'sampleCount': _0x4901f9,
						'audioobjecttype': (_0x45cc71[_0x4d7a9d + 2] >>> 6 & 3) + 1,
						'channelcount': (_0x45cc71[_0x4d7a9d + 2] & 1) << 2 | (_0x45cc71[_0x4d7a9d + 3] & 192) >>> 6,
						'samplerate': _0x519f6a[(_0x45cc71[_0x4d7a9d + 2] & 60) >>> 2],
						'samplingfrequencyindex': (_0x45cc71[_0x4d7a9d + 2] & 60) >>> 2,
						'samplesize': 16,
						'data': _0x45cc71.subarray(_0x4d7a9d + 7 + _0x3ba05a, _0x4df012)
					});
					if (_0x45cc71.byteLength === _0x4df012) {
						_0x45cc71 = undefined;
						return;
					}
					_0x218710++;
					_0x45cc71 = _0x45cc71.subarray(_0x4df012);
				}
			};
			this.flush = function () {
				this.trigger('done');
			};
		}, _0xb0c7a3 = (_0x200aca.prototype = new _0x257e4f(), _0x200aca), _0x33f913 = Object.freeze({
			'default': _0xb0c7a3,
			'__moduleExports': _0xb0c7a3
		}), _0x1b910c, _0x1b910c = function _0x2f266c(_0x143ef8) {
			var _0x689f98 = _0x143ef8.byteLength, _0x4e8fb1 = 0, _0x98ac9e = 0;
			this.length = function () {
				return 8 * _0x689f98;
			};
			this.bitsAvailable = function () {
				return 8 * _0x689f98 + _0x98ac9e;
			};
			this.loadWord = function () {
				var _0x15fa3f = _0x143ef8.byteLength - _0x689f98, _0x20004c = new Uint8Array(4), _0x7cf3df = Math.min(4, _0x689f98);
				if (_0x7cf3df === 0) {
					throw new Error('no bytes available');
				}
				_0x20004c.set(_0x143ef8.subarray(_0x15fa3f, _0x15fa3f + _0x7cf3df));
				_0x4e8fb1 = new DataView(_0x20004c.buffer).getUint32(0);
				_0x98ac9e = _0x7cf3df * 8;
				_0x689f98 -= _0x7cf3df;
			};
			this.skipBits = function (_0x115d66) {
				var _0x4f408d;
				_0x98ac9e > _0x115d66 ? (_0x4e8fb1 <<= _0x115d66, _0x98ac9e -= _0x115d66) : (_0x115d66 -= _0x98ac9e, _0x4f408d = Math.floor(_0x115d66 / 8), _0x115d66 -= _0x4f408d * 8, _0x689f98 -= _0x4f408d, this.loadWord(), _0x4e8fb1 <<= _0x115d66, _0x98ac9e -= _0x115d66);
			};
			this.readBits = function (_0x22da8a) {
				var _0x7f0d7f = Math.min(_0x98ac9e, _0x22da8a), _0x28d094 = _0x4e8fb1 >>> 32 - _0x7f0d7f;
				_0x98ac9e -= _0x7f0d7f;
				if (_0x98ac9e > 0) {
					_0x4e8fb1 <<= _0x7f0d7f;
				} else {
					if (_0x689f98 > 0) {
						this.loadWord();
					}
				}
				_0x7f0d7f = _0x22da8a - _0x7f0d7f;
				if (_0x7f0d7f > 0) {
					return _0x28d094 << _0x7f0d7f | this.readBits(_0x7f0d7f);
				}
				return _0x28d094;
			};
			this.skipLeadingZeros = function () {
				var _0x12728f;
				for (_0x12728f = 0; _0x12728f < _0x98ac9e; ++_0x12728f) {
					if ((_0x4e8fb1 & 2147483648 >>> _0x12728f) !== 0) {
						return _0x4e8fb1 <<= _0x12728f, _0x98ac9e -= _0x12728f, _0x12728f;
					}
				}
				return this.loadWord(), _0x12728f + this.skipLeadingZeros();
			};
			this.skipUnsignedExpGolomb = function () {
				this.skipBits(1 + this.skipLeadingZeros());
			};
			this.skipExpGolomb = function () {
				this.skipBits(1 + this.skipLeadingZeros());
			};
			this.readUnsignedExpGolomb = function () {
				var _0x25c35c = this.skipLeadingZeros();
				return this.readBits(_0x25c35c + 1) - 1;
			};
			this.readExpGolomb = function () {
				var _0x5abf23 = this.readUnsignedExpGolomb();
				if (1 & _0x5abf23) {
					return 1 + _0x5abf23 >>> 1;
				}
				return -1 * (_0x5abf23 >>> 1);
			};
			this.readBoolean = function () {
				return this.readBits(1) === 1;
			};
			this.readUnsignedByte = function () {
				return this.readBits(8);
			};
			this.loadWord();
		}, _0x3e1031, _0x550e30 = Object.freeze({
			'default': _0x1b910c,
			'__moduleExports': _0x1b910c
		}), _0x1dbd25 = _0x550e30 && _0x1b910c || _0x550e30, _0x2658cd, _0x4adcab, _0x4752b6, _0x4adcab = function _0x490202() {
			var _0xc0cb6b = 0, _0x19fc33, _0x2a039c;
			_0x4adcab.prototype.init.call(this);
			this.push = function (_0x2d6d83) {
				var _0x1c47ca;
				if (!_0x2a039c) {
					_0x2a039c = _0x2d6d83.data;
				} else {
					_0x1c47ca = new Uint8Array(_0x2a039c.byteLength + _0x2d6d83.data.byteLength);
					_0x1c47ca.set(_0x2a039c);
					_0x1c47ca.set(_0x2d6d83.data, _0x2a039c.byteLength);
					_0x2a039c = _0x1c47ca;
				}
				for (; _0xc0cb6b < _0x2a039c.byteLength - 3; _0xc0cb6b++) {
					if (_0x2a039c[_0xc0cb6b + 2] === 1) {
						_0x19fc33 = _0xc0cb6b + 5;
						break;
					}
				}
				while (_0x19fc33 < _0x2a039c.byteLength) {
					switch (_0x2a039c[_0x19fc33]) {
						case 0:
							if (_0x2a039c[_0x19fc33 - 1] !== 0) {
								_0x19fc33 += 2;
								break;
							} else {
								if (_0x2a039c[_0x19fc33 - 2] !== 0) {
									_0x19fc33++;
									break;
								}
							}
							if (_0xc0cb6b + 3 !== _0x19fc33 - 2) {
								this.trigger('data', _0x2a039c.subarray(_0xc0cb6b + 3, _0x19fc33 - 2));
							}
							do {
								_0x19fc33++;
							} while (_0x2a039c[_0x19fc33] !== 1 && _0x19fc33 < _0x2a039c.length);
							_0xc0cb6b = _0x19fc33 - 2, _0x19fc33 += 3;
							break;
						case 1:
							if (_0x2a039c[_0x19fc33 - 1] !== 0 || _0x2a039c[_0x19fc33 - 2] !== 0) {
								_0x19fc33 += 3;
								break;
							}
							this.trigger('data', _0x2a039c.subarray(_0xc0cb6b + 3, _0x19fc33 - 2)), _0xc0cb6b = _0x19fc33 - 2, _0x19fc33 += 3;
							break;
						default:
							_0x19fc33 += 3;
							break;
					}
				}
				_0x2a039c = _0x2a039c.subarray(_0xc0cb6b);
				_0x19fc33 -= _0xc0cb6b;
				_0xc0cb6b = 0;
			};
			this.flush = function () {
				if (_0x2a039c && _0x2a039c.byteLength > 3) {
					this.trigger('data', _0x2a039c.subarray(_0xc0cb6b + 3));
				}
				_0x2a039c = null;
				_0xc0cb6b = 0;
				this.trigger('done');
			};
		}, _0x170d8c = (_0x4adcab.prototype = new _0x257e4f(), _0x4752b6 = {
			100: true,
			110: true,
			122: true,
			244: true,
			44: true,
			83: true,
			86: true,
			118: true,
			128: true,
			138: true,
			139: true,
			134: true
		}, (_0x2658cd = function _0x2dc881() {
			var _0x6d5e82 = new _0x4adcab(), _0x134e8c, _0x293c35, _0x3f1e8a, _0x3402c3, _0x292cac, _0x10cab6, _0x41029e;
			_0x2658cd.prototype.init.call(this);
			_0x134e8c = this;
			this.push = function (_0x1ee196) {
				if (_0x1ee196.type !== 'video') {
					return;
				}
				_0x293c35 = _0x1ee196.trackId;
				_0x3f1e8a = _0x1ee196.pts;
				_0x3402c3 = _0x1ee196.dts;
				_0x6d5e82.push(_0x1ee196);
			};
			_0x6d5e82.on('data', function (_0x14c14f) {
				var _0x455237 = {
					'trackId': _0x293c35,
					'pts': _0x3f1e8a,
					'dts': _0x3402c3,
					'data': _0x14c14f
				};
				switch (_0x14c14f[0] & 31) {
					case 5:
						_0x455237.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';
						break;
					case 6:
						_0x455237.nalUnitType = 'sei_rbsp', _0x455237.escapedRBSP = _0x292cac(_0x14c14f.subarray(1));
						break;
					case 7:
						_0x455237.nalUnitType = 'seq_parameter_set_rbsp', _0x455237.escapedRBSP = _0x292cac(_0x14c14f.subarray(1)), _0x455237.config = _0x10cab6(_0x455237.escapedRBSP);
						break;
					case 8:
						_0x455237.nalUnitType = 'pic_parameter_set_rbsp';
						break;
					case 9:
						_0x455237.nalUnitType = 'access_unit_delimiter_rbsp';
						break;
					default:
						break;
				}
				_0x134e8c.trigger('data', _0x455237);
			});
			_0x6d5e82.on('done', function () {
				_0x134e8c.trigger('done');
			});
			this.flush = function () {
				_0x6d5e82.flush();
			};
			_0x41029e = function _0x1be588(_0x25aa41, _0x18a7d0) {
				var _0x3d004c = 8, _0x4d8295 = 8, _0xa1fa9b, _0x16a198;
				for (_0xa1fa9b = 0; _0xa1fa9b < _0x25aa41; _0xa1fa9b++) {
					if (_0x4d8295 !== 0) {
						_0x16a198 = _0x18a7d0.readExpGolomb();
						_0x4d8295 = (_0x3d004c + _0x16a198 + 256) % 256;
					}
					_0x3d004c = _0x4d8295 === 0 ? _0x3d004c : _0x4d8295;
				}
			};
			_0x292cac = function _0x57123d(_0x408448) {
				var _0x4cab96 = _0x408448.byteLength, _0x5c1b15 = [], _0x1666b7 = 1, _0x10a445, _0x58dbd4;
				while (_0x1666b7 < _0x4cab96 - 2) {
					if (_0x408448[_0x1666b7] === 0 && _0x408448[_0x1666b7 + 1] === 0 && _0x408448[_0x1666b7 + 2] === 3) {
						_0x5c1b15.push(_0x1666b7 + 2);
						_0x1666b7 += 2;
					} else {
						_0x1666b7++;
					}
				}
				if (_0x5c1b15.length === 0) {
					return _0x408448;
				}
				_0x10a445 = _0x4cab96 - _0x5c1b15.length;
				_0x58dbd4 = new Uint8Array(_0x10a445);
				var _0x2ae800 = 0;
				for (_0x1666b7 = 0; _0x1666b7 < _0x10a445; _0x2ae800++, _0x1666b7++) {
					if (_0x2ae800 === _0x5c1b15[0]) {
						_0x2ae800++;
						_0x5c1b15.shift();
					}
					_0x58dbd4[_0x1666b7] = _0x408448[_0x2ae800];
				}
				return _0x58dbd4;
			};
			_0x10cab6 = function _0x4d339b(_0x487516) {
				var _0x384fdf = 0, _0x5928ec = 0, _0xf56ece = 0, _0x2b616d = 0, _0x4f785b = 1, _0x496539, _0x3972e0, _0xf25524, _0x4c8845, _0x59ec49, _0x37974f, _0x27150d, _0x56e040, _0x2c7068, _0x21a4e8, _0x43b202, _0x66d50a, _0x494399, _0x439c86;
				_0x496539 = new _0x1dbd25(_0x487516);
				_0x3972e0 = _0x496539.readUnsignedByte();
				_0x4c8845 = _0x496539.readUnsignedByte();
				_0xf25524 = _0x496539.readUnsignedByte();
				_0x496539.skipUnsignedExpGolomb();
				if (_0x4752b6[_0x3972e0]) {
					_0x59ec49 = _0x496539.readUnsignedExpGolomb();
					if (_0x59ec49 === 3) {
						_0x496539.skipBits(1);
					}
					_0x496539.skipUnsignedExpGolomb();
					_0x496539.skipUnsignedExpGolomb();
					_0x496539.skipBits(1);
					if (_0x496539.readBoolean()) {
						_0x43b202 = _0x59ec49 !== 3 ? 8 : 12;
						for (_0x439c86 = 0; _0x439c86 < _0x43b202; _0x439c86++) {
							if (_0x496539.readBoolean()) {
								if (_0x439c86 < 6) {
									_0x41029e(16, _0x496539);
								} else {
									_0x41029e(64, _0x496539);
								}
							}
						}
					}
				}
				_0x496539.skipUnsignedExpGolomb();
				_0x37974f = _0x496539.readUnsignedExpGolomb();
				if (_0x37974f === 0) {
					_0x496539.readUnsignedExpGolomb();
				} else {
					if (_0x37974f === 1) {
						_0x496539.skipBits(1);
						_0x496539.skipExpGolomb();
						_0x496539.skipExpGolomb();
						_0x27150d = _0x496539.readUnsignedExpGolomb();
						for (_0x439c86 = 0; _0x439c86 < _0x27150d; _0x439c86++) {
							_0x496539.skipExpGolomb();
						}
					}
				}
				_0x496539.skipUnsignedExpGolomb();
				_0x496539.skipBits(1);
				_0x56e040 = _0x496539.readUnsignedExpGolomb();
				_0x2c7068 = _0x496539.readUnsignedExpGolomb();
				_0x21a4e8 = _0x496539.readBits(1);
				if (_0x21a4e8 === 0) {
					_0x496539.skipBits(1);
				}
				_0x496539.skipBits(1);
				_0x496539.readBoolean() && (_0x384fdf = _0x496539.readUnsignedExpGolomb(), _0x5928ec = _0x496539.readUnsignedExpGolomb(), _0xf56ece = _0x496539.readUnsignedExpGolomb(), _0x2b616d = _0x496539.readUnsignedExpGolomb());
				if (_0x496539.readBoolean()) {
					if (_0x496539.readBoolean()) {
						_0x494399 = _0x496539.readUnsignedByte();
						switch (_0x494399) {
							case 1:
								_0x66d50a = [
									1,
									1
								];
								break;
							case 2:
								_0x66d50a = [
									12,
									11
								];
								break;
							case 3:
								_0x66d50a = [
									10,
									11
								];
								break;
							case 4:
								_0x66d50a = [
									16,
									11
								];
								break;
							case 5:
								_0x66d50a = [
									40,
									33
								];
								break;
							case 6:
								_0x66d50a = [
									24,
									11
								];
								break;
							case 7:
								_0x66d50a = [
									20,
									11
								];
								break;
							case 8:
								_0x66d50a = [
									32,
									11
								];
								break;
							case 9:
								_0x66d50a = [
									80,
									33
								];
								break;
							case 10:
								_0x66d50a = [
									18,
									11
								];
								break;
							case 11:
								_0x66d50a = [
									15,
									11
								];
								break;
							case 12:
								_0x66d50a = [
									64,
									33
								];
								break;
							case 13:
								_0x66d50a = [
									160,
									99
								];
								break;
							case 14:
								_0x66d50a = [
									4,
									3
								];
								break;
							case 15:
								_0x66d50a = [
									3,
									2
								];
								break;
							case 16:
								_0x66d50a = [
									2,
									1
								];
								break;
							case 255: {
								_0x66d50a = [
									_0x496539.readUnsignedByte() << 8 | _0x496539.readUnsignedByte(),
									_0x496539.readUnsignedByte() << 8 | _0x496539.readUnsignedByte()
								];
								break;
							}
						}
						if (_0x66d50a) {
							_0x4f785b = _0x66d50a[0] / _0x66d50a[1];
						}
					}
				}
				return {
					'profileIdc': _0x3972e0,
					'levelIdc': _0xf25524,
					'profileCompatibility': _0x4c8845,
					'width': Math.ceil(((_0x56e040 + 1) * 16 - _0x384fdf * 2 - _0x5928ec * 2) * _0x4f785b),
					'height': (2 - _0x21a4e8) * (_0x2c7068 + 1) * 16 - _0xf56ece * 2 - _0x2b616d * 2
				};
			};
		}).prototype = new _0x257e4f(), {
			'H264Stream': _0x2658cd,
			'NalByteStream': _0x4adcab
		}), _0x2ef9bf, _0x2e8c43, _0x11da26 = Object.freeze({
			'default': _0x170d8c,
			'__moduleExports': _0x170d8c,
			'H264Stream': _0x170d8c.H264Stream,
			'NalByteStream': _0x170d8c.NalByteStream
		}), _0x4f315b, _0x4f315b = function _0x37e976() {
			var _0x575251 = new Uint8Array(), _0x25bf9e = 0;
			_0x4f315b.prototype.init.call(this);
			this.setTimestamp = function (_0x3cefe5) {
				_0x25bf9e = _0x3cefe5;
			};
			this.parseId3TagSize = function (_0x55a325, _0x35e5e3) {
				var _0x5aae7a = _0x55a325[_0x35e5e3 + 6] << 21 | _0x55a325[_0x35e5e3 + 7] << 14 | _0x55a325[_0x35e5e3 + 8] << 7 | _0x55a325[_0x35e5e3 + 9], _0x1ea2da = _0x55a325[_0x35e5e3 + 5], _0x5369f8 = (_0x1ea2da & 16) >> 4;
				if (_0x5369f8) {
					return _0x5aae7a + 20;
				}
				return _0x5aae7a + 10;
			};
			this.parseAdtsSize = function (_0x1f1717, _0x28b5a8) {
				var _0x4cb6e2 = (_0x1f1717[_0x28b5a8 + 5] & 224) >> 5, _0x4a7a28 = _0x1f1717[_0x28b5a8 + 4] << 3, _0x4f90d3 = _0x1f1717[_0x28b5a8 + 3] & 3 << 11;
				return _0x4f90d3 | _0x4a7a28 | _0x4cb6e2;
			};
			this.push = function (_0x5c7812) {
				var _0x2597ed = 0, _0x2b43af = 0, _0x1d2406, _0x3ebdb0, _0x217130, _0x5c5e64;
				if (_0x575251.length) {
					_0x5c5e64 = _0x575251.length;
					_0x575251 = new Uint8Array(_0x5c7812.byteLength + _0x5c5e64);
					_0x575251.set(_0x575251.subarray(0, _0x5c5e64));
					_0x575251.set(_0x5c7812, _0x5c5e64);
				} else {
					_0x575251 = _0x5c7812;
				}
				while (_0x575251.length - _0x2b43af >= 3) {
					if (_0x575251[_0x2b43af] === 'I'.charCodeAt(0) && _0x575251[_0x2b43af + 1] === 'D'.charCodeAt(0) && _0x575251[_0x2b43af + 2] === '3'.charCodeAt(0)) {
						if (_0x575251.length - _0x2b43af < 10) {
							break;
						}
						_0x2597ed = this.parseId3TagSize(_0x575251, _0x2b43af);
						if (_0x2597ed > _0x575251.length) {
							break;
						}
						_0x3ebdb0 = {
							'type': 'timed-metadata',
							'data': _0x575251.subarray(_0x2b43af, _0x2b43af + _0x2597ed)
						};
						this.trigger('data', _0x3ebdb0);
						_0x2b43af += _0x2597ed;
						continue;
					} else {
						if (_0x575251[_0x2b43af] & true && (_0x575251[_0x2b43af + 1] & 240) === 240) {
							if (_0x575251.length - _0x2b43af < 7) {
								break;
							}
							_0x2597ed = this.parseAdtsSize(_0x575251, _0x2b43af);
							if (_0x2597ed > _0x575251.length) {
								break;
							}
							_0x217130 = {
								'type': 'audio',
								'data': _0x575251.subarray(_0x2b43af, _0x2b43af + _0x2597ed),
								'pts': _0x25bf9e,
								'dts': _0x25bf9e
							};
							this.trigger('data', _0x217130);
							_0x2b43af += _0x2597ed;
							continue;
						}
					}
					_0x2b43af++;
				}
				_0x1d2406 = _0x575251.length - _0x2b43af;
				if (_0x1d2406 > 0) {
					_0x575251 = _0x575251.subarray(_0x2b43af);
				} else {
					_0x575251 = new Uint8Array();
				}
			};
		}, _0x490f55 = (_0x4f315b.prototype = new _0x257e4f(), _0x4f315b), _0x44eb43 = Object.freeze({
			'default': _0x490f55,
			'__moduleExports': _0x490f55
		}), _0x4e7ab7 = [
			33,
			16,
			5,
			32,
			164,
			27
		], _0x49e40e = [
			33,
			65,
			108,
			84,
			1,
			2,
			4,
			8,
			168,
			2,
			4,
			8,
			17,
			191,
			252
		], _0x56fcc7 = function _0x31f23b(_0x152d6c) {
			var _0x376de2 = [];
			while (_0x152d6c--) {
				_0x376de2.push(0);
			}
			return _0x376de2;
		}, _0x1b37a0, _0x1e0d04, _0x563cc7 = function _0x476875(_0x3df176) {
			return Object.keys(_0x3df176).reduce(function (_0x6c00a6, _0xa1d6ce) {
				return _0x6c00a6[_0xa1d6ce] = new Uint8Array(_0x3df176[_0xa1d6ce].reduce(function (_0x5326e4, _0x2b7cca) {
					return _0x5326e4.concat(_0x2b7cca);
				}, [])), _0x6c00a6;
			}, {});
		}({
			96000: [
				_0x4e7ab7,
				[
					227,
					64
				],
				_0x56fcc7(154),
				[56]
			],
			88200: [
				_0x4e7ab7,
				[231],
				_0x56fcc7(170),
				[56]
			],
			64000: [
				_0x4e7ab7,
				[
					248,
					192
				],
				_0x56fcc7(240),
				[56]
			],
			48000: [
				_0x4e7ab7,
				[
					255,
					192
				],
				_0x56fcc7(268),
				[
					55,
					148,
					128
				],
				_0x56fcc7(54),
				[112]
			],
			44100: [
				_0x4e7ab7,
				[
					255,
					192
				],
				_0x56fcc7(268),
				[
					55,
					163,
					128
				],
				_0x56fcc7(84),
				[112]
			],
			32000: [
				_0x4e7ab7,
				[
					255,
					192
				],
				_0x56fcc7(268),
				[
					55,
					234
				],
				_0x56fcc7(226),
				[112]
			],
			24000: [
				_0x4e7ab7,
				[
					255,
					192
				],
				_0x56fcc7(268),
				[
					55,
					255,
					128
				],
				_0x56fcc7(268),
				[
					111,
					112
				],
				_0x56fcc7(126),
				[224]
			],
			16000: [
				_0x4e7ab7,
				[
					255,
					192
				],
				_0x56fcc7(268),
				[
					55,
					255,
					128
				],
				_0x56fcc7(268),
				[
					111,
					255
				],
				_0x56fcc7(269),
				[
					223,
					108
				],
				_0x56fcc7(195),
				[
					1,
					192
				]
			],
			12000: [
				_0x49e40e,
				_0x56fcc7(268),
				[
					3,
					127,
					248
				],
				_0x56fcc7(268),
				[
					6,
					255,
					240
				],
				_0x56fcc7(268),
				[
					13,
					255,
					224
				],
				_0x56fcc7(268),
				[
					27,
					253,
					128
				],
				_0x56fcc7(259),
				[56]
			],
			11025: [
				_0x49e40e,
				_0x56fcc7(268),
				[
					3,
					127,
					248
				],
				_0x56fcc7(268),
				[
					6,
					255,
					240
				],
				_0x56fcc7(268),
				[
					13,
					255,
					224
				],
				_0x56fcc7(268),
				[
					27,
					255,
					192
				],
				_0x56fcc7(268),
				[
					55,
					175,
					128
				],
				_0x56fcc7(108),
				[112]
			],
			8000: [
				_0x49e40e,
				_0x56fcc7(268),
				[
					3,
					121,
					16
				],
				_0x56fcc7(47),
				[7]
			]
		}), _0x36ff34 = Object.freeze({
			'default': _0x563cc7,
			'__moduleExports': _0x563cc7
		}), _0x3ec8b0, _0x33c692, _0x219226, _0x54e5ff, _0x3ca689, _0x197a6e, _0x3ec8b0 = function _0x230548(_0x57792d) {
			return _0x57792d * 90000;
		}, _0x33c692 = function _0x1bae5a(_0x3df707, _0x4a7996) {
			return _0x3df707 * _0x4a7996;
		}, _0x219226 = function _0x11c71c(_0x3ac740) {
			return _0x3ac740 / 90000;
		}, _0x54e5ff = function _0x127a38(_0x4a4b6f, _0x4402a4) {
			return _0x4a4b6f / _0x4402a4;
		}, _0x3ca689, _0x197a6e, _0x432ae9 = {
			'secondsToVideoTs': _0x3ec8b0,
			'secondsToAudioTs': _0x33c692,
			'videoTsToSeconds': _0x219226,
			'audioTsToSeconds': _0x54e5ff,
			'audioTsToVideoTs': function _0x20fb33(_0x550be3, _0x9d02ca) {
				return _0x3ec8b0(_0x54e5ff(_0x550be3, _0x9d02ca));
			},
			'videoTsToAudioTs': function _0x952bd(_0xc2ebbb, _0x236def) {
				return _0x33c692(_0x219226(_0xc2ebbb), _0x236def);
			}
		}, _0x18cb9a, _0x248e92, _0x3453d4, _0x151779, _0x3c9497, _0x38dfb9, _0x592d8d = Object.freeze({
			'default': _0x432ae9,
			'__moduleExports': _0x432ae9,
			'secondsToVideoTs': _0x432ae9.secondsToVideoTs,
			'secondsToAudioTs': _0x432ae9.secondsToAudioTs,
			'videoTsToSeconds': _0x432ae9.videoTsToSeconds,
			'audioTsToSeconds': _0x432ae9.audioTsToSeconds,
			'audioTsToVideoTs': _0x432ae9.audioTsToVideoTs,
			'videoTsToAudioTs': _0x432ae9.videoTsToAudioTs
		}), _0x122e62 = _0x16229f && _0x3d9cb3 || _0x16229f, _0x3b0295 = _0x16bd34 && _0x2847b7 || _0x16bd34, _0x3469f8 = _0x1d66d5 && _0x356bad || _0x1d66d5, _0x68159d = _0x916411 && _0x2dbb0a || _0x916411, _0x3a1bf0 = _0x33f913 && _0xb0c7a3 || _0x33f913, _0x2592b2, _0x18ddc3 = _0x44eb43 && _0x490f55 || _0x44eb43, _0x58e1be = _0x36ff34 && _0x563cc7 || _0x36ff34, _0x45b455 = _0x592d8d && _0x432ae9 || _0x592d8d, _0x28f2ea = (_0x11da26 && _0x170d8c || _0x11da26).H264Stream, _0x1a9876 = [
			'audioobjecttype',
			'channelcount',
			'samplerate',
			'samplingfrequencyindex',
			'samplesize'
		], _0x5a6247 = [
			'width',
			'height',
			'profileIdc',
			'levelIdc',
			'profileCompatibility'
		], _0x464f96, _0x14c8e2, _0xd6cf5c, _0x571a95, _0x24e5ff, _0x5c8697, _0x2b94d2, _0x24e5ff = function _0x592e7c(_0x5e3c1c) {
			if (_0x5e3c1c[0] === 'I'.charCodeAt(0) && _0x5e3c1c[1] === 'D'.charCodeAt(0) && _0x5e3c1c[2] === '3'.charCodeAt(0)) {
				return true;
			}
			return false;
		}, _0x5c8697 = function _0x220e21(_0x5392dc, _0x3ee545) {
			var _0x5b448f;
			if (_0x5392dc.length !== _0x3ee545.length) {
				return false;
			}
			for (_0x5b448f = 0; _0x5b448f < _0x5392dc.length; _0x5b448f++) {
				if (_0x5392dc[_0x5b448f] !== _0x3ee545[_0x5b448f]) {
					return false;
				}
			}
			return true;
		}, _0x2b94d2 = function _0x14d9a2(_0x3d50df) {
			var _0x423b36, _0x1c5b20, _0x5ea3b6 = 0;
			for (_0x423b36 = 0; _0x423b36 < _0x3d50df.length; _0x423b36++) {
				_0x1c5b20 = _0x3d50df[_0x423b36];
				_0x5ea3b6 += _0x1c5b20.data.byteLength;
			}
			return _0x5ea3b6;
		}, _0x14c8e2 = function _0x2068d8(_0x33619b, _0x472cfb) {
			var _0x244cde = [], _0x1f92e2 = 0, _0x2aabab = 0, _0x1d186c = 0, _0x20fec6 = Infinity;
			_0x472cfb = _0x472cfb || {};
			_0x14c8e2.prototype.init.call(this);
			this.push = function (_0xd9f230) {
				_0x3469f8.collectDtsInfo(_0x33619b, _0xd9f230);
				if (_0x33619b) {
					_0x1a9876.forEach(function (_0x46dac6) {
						_0x33619b[_0x46dac6] = _0xd9f230[_0x46dac6];
					});
				}
				_0x244cde.push(_0xd9f230);
			};
			this.setEarliestDts = function (_0x1321c5) {
				_0x2aabab = _0x1321c5 - _0x33619b.timelineStartInfo.baseMediaDecodeTime;
			};
			this.setVideoBaseMediaDecodeTime = function (_0x12eff0) {
				_0x20fec6 = _0x12eff0;
			};
			this.setAudioAppendStart = function (_0x263580) {
				_0x1d186c = _0x263580;
			};
			this.flush = function () {
				var _0x5716d2, _0x129240, _0x40be39, _0x31ca9e;
				if (_0x244cde.length === 0) {
					this.trigger('done', 'AudioSegmentStream');
					return;
				}
				_0x5716d2 = this.trimAdtsFramesByEarliestDts_(_0x244cde);
				_0x33619b.baseMediaDecodeTime = _0x3469f8.calculateTrackBaseMediaDecodeTime(_0x33619b, _0x472cfb.keepOriginalTimestamps);
				this.prefixWithSilence_(_0x33619b, _0x5716d2);
				_0x33619b.samples = this.generateSampleTable_(_0x5716d2);
				_0x40be39 = _0x122e62.mdat(this.concatenateFrameData_(_0x5716d2));
				_0x244cde = [];
				_0x129240 = _0x122e62.moof(_0x1f92e2, [_0x33619b]);
				_0x31ca9e = new Uint8Array(_0x129240.byteLength + _0x40be39.byteLength);
				_0x1f92e2++;
				_0x31ca9e.set(_0x129240);
				_0x31ca9e.set(_0x40be39, _0x129240.byteLength);
				_0x3469f8.clearDtsInfo(_0x33619b);
				this.trigger('data', {
					'track': _0x33619b,
					'boxes': _0x31ca9e
				});
				this.trigger('done', 'AudioSegmentStream');
			};
			this.prefixWithSilence_ = function (_0x9f200d, _0xdb74ca) {
				var _0x10ff6c, _0x2cef42 = 0, _0x1bb249 = 0, _0x1c660a = 0, _0x268043 = 0, _0x54fde7, _0x3f020;
				if (!_0xdb74ca.length) {
					return;
				}
				_0x10ff6c = _0x45b455.audioTsToVideoTs(_0x9f200d.baseMediaDecodeTime, _0x9f200d.samplerate);
				_0x2cef42 = Math.ceil(90000 / (_0x9f200d.samplerate / 1024));
				_0x1d186c && _0x20fec6 && (_0x1bb249 = _0x10ff6c - Math.max(_0x1d186c, _0x20fec6), _0x1c660a = Math.floor(_0x1bb249 / _0x2cef42), _0x268043 = _0x1c660a * _0x2cef42);
				if (_0x1c660a < 1 || _0x268043 > 45000) {
					return;
				}
				_0x54fde7 = _0x58e1be[_0x9f200d.samplerate];
				if (!_0x54fde7) {
					_0x54fde7 = _0xdb74ca[0].data;
				}
				for (_0x3f020 = 0; _0x3f020 < _0x1c660a; _0x3f020++) {
					_0xdb74ca.splice(_0x3f020, 0, { 'data': _0x54fde7 });
				}
				_0x9f200d.baseMediaDecodeTime -= Math.floor(_0x45b455.videoTsToAudioTs(_0x268043, _0x9f200d.samplerate));
			};
			this.trimAdtsFramesByEarliestDts_ = function (_0x4669ab) {
				if (_0x33619b.minSegmentDts >= _0x2aabab) {
					return _0x4669ab;
				}
				return _0x33619b.minSegmentDts = Infinity, _0x4669ab.filter(function (_0x27373b) {
					if (_0x27373b.dts >= _0x2aabab) {
						return _0x33619b.minSegmentDts = Math.min(_0x33619b.minSegmentDts, _0x27373b.dts), _0x33619b.minSegmentPts = _0x33619b.minSegmentDts, true;
					}
					return false;
				});
			};
			this.generateSampleTable_ = function (_0x1d4aa0) {
				var _0x251f87, _0x2554ff, _0x53264a = [];
				for (_0x251f87 = 0; _0x251f87 < _0x1d4aa0.length; _0x251f87++) {
					_0x2554ff = _0x1d4aa0[_0x251f87];
					_0x53264a.push({
						'size': _0x2554ff.data.byteLength,
						'duration': 1024
					});
				}
				return _0x53264a;
			};
			this.concatenateFrameData_ = function (_0x27a688) {
				var _0x51d19e, _0x56bc19, _0x5ec03e = 0, _0x46c3dd = new Uint8Array(_0x2b94d2(_0x27a688));
				for (_0x51d19e = 0; _0x51d19e < _0x27a688.length; _0x51d19e++) {
					_0x56bc19 = _0x27a688[_0x51d19e];
					_0x46c3dd.set(_0x56bc19.data, _0x5ec03e);
					_0x5ec03e += _0x56bc19.data.byteLength;
				}
				return _0x46c3dd;
			};
		}, _0x2c1e10 = (_0x14c8e2.prototype = new _0x257e4f(), (_0x464f96 = function _0x4de5b4(_0x29418c, _0xf97d39) {
			var _0x565f70 = 0, _0x440be7 = [], _0x1e215f = [], _0x9af4, _0xb70eee;
			_0xf97d39 = _0xf97d39 || {};
			_0x464f96.prototype.init.call(this);
			delete _0x29418c.minPTS;
			this.gopCache_ = [];
			this.push = function (_0x31763d) {
				_0x3469f8.collectDtsInfo(_0x29418c, _0x31763d);
				_0x31763d.nalUnitType === 'seq_parameter_set_rbsp' && !_0x9af4 && (_0x9af4 = _0x31763d.config, _0x29418c.sps = [_0x31763d.data], _0x5a6247.forEach(function (_0x18c80f) {
					_0x29418c[_0x18c80f] = _0x9af4[_0x18c80f];
				}, this));
				_0x31763d.nalUnitType === 'pic_parameter_set_rbsp' && !_0xb70eee && (_0xb70eee = _0x31763d.data, _0x29418c.pps = [_0x31763d.data]);
				_0x440be7.push(_0x31763d);
			};
			this.flush = function () {
				var _0x408e55, _0x2b91e7, _0x2527a7, _0x3a9b0f, _0x479eb6, _0x28a9d5;
				while (_0x440be7.length) {
					if (_0x440be7[0].nalUnitType === 'access_unit_delimiter_rbsp') {
						break;
					}
					_0x440be7.shift();
				}
				if (_0x440be7.length === 0) {
					this.resetStream_();
					this.trigger('done', 'VideoSegmentStream');
					return;
				}
				_0x408e55 = _0x3b0295.groupNalsIntoFrames(_0x440be7);
				_0x2527a7 = _0x3b0295.groupFramesIntoGops(_0x408e55);
				if (!_0x2527a7[0][0].keyFrame) {
					_0x2b91e7 = this.getGopForFusion_(_0x440be7[0], _0x29418c);
					if (_0x2b91e7) {
						_0x2527a7.unshift(_0x2b91e7);
						_0x2527a7.byteLength += _0x2b91e7.byteLength;
						_0x2527a7.nalCount += _0x2b91e7.nalCount;
						_0x2527a7.pts = _0x2b91e7.pts;
						_0x2527a7.dts = _0x2b91e7.dts;
						_0x2527a7.duration += _0x2b91e7.duration;
					} else {
						_0x2527a7 = _0x3b0295.extendFirstKeyFrame(_0x2527a7);
					}
				}
				if (_0x1e215f.length) {
					var _0x14eb4b;
					if (_0xf97d39.alignGopsAtEnd) {
						_0x14eb4b = this.alignGopsAtEnd_(_0x2527a7);
					} else {
						_0x14eb4b = this.alignGopsAtStart_(_0x2527a7);
					}
					if (!_0x14eb4b) {
						this.gopCache_.unshift({
							'gop': _0x2527a7.pop(),
							'pps': _0x29418c.pps,
							'sps': _0x29418c.sps
						});
						this.gopCache_.length = Math.min(6, this.gopCache_.length);
						_0x440be7 = [];
						this.resetStream_();
						this.trigger('done', 'VideoSegmentStream');
						return;
					}
					_0x3469f8.clearDtsInfo(_0x29418c);
					_0x2527a7 = _0x14eb4b;
				}
				_0x3469f8.collectDtsInfo(_0x29418c, _0x2527a7);
				_0x29418c.samples = _0x3b0295.generateSampleTable(_0x2527a7);
				_0x479eb6 = _0x122e62.mdat(_0x3b0295.concatenateNalData(_0x2527a7));
				_0x29418c.baseMediaDecodeTime = _0x3469f8.calculateTrackBaseMediaDecodeTime(_0x29418c, _0xf97d39.keepOriginalTimestamps);
				this.trigger('processedGopsInfo', _0x2527a7.map(function (_0x3e1b81) {
					return {
						'pts': _0x3e1b81.pts,
						'dts': _0x3e1b81.dts,
						'byteLength': _0x3e1b81.byteLength
					};
				}));
				this.gopCache_.unshift({
					'gop': _0x2527a7.pop(),
					'pps': _0x29418c.pps,
					'sps': _0x29418c.sps
				});
				this.gopCache_.length = Math.min(6, this.gopCache_.length);
				_0x440be7 = [];
				this.trigger('baseMediaDecodeTime', _0x29418c.baseMediaDecodeTime);
				this.trigger('timelineStartInfo', _0x29418c.timelineStartInfo);
				_0x3a9b0f = _0x122e62.moof(_0x565f70, [_0x29418c]);
				_0x28a9d5 = new Uint8Array(_0x3a9b0f.byteLength + _0x479eb6.byteLength);
				_0x565f70++;
				_0x28a9d5.set(_0x3a9b0f);
				_0x28a9d5.set(_0x479eb6, _0x3a9b0f.byteLength);
				this.trigger('data', {
					'track': _0x29418c,
					'boxes': _0x28a9d5
				});
				this.resetStream_();
				this.trigger('done', 'VideoSegmentStream');
			};
			this.resetStream_ = function () {
				_0x3469f8.clearDtsInfo(_0x29418c);
				_0x9af4 = undefined;
				_0xb70eee = undefined;
			};
			this.getGopForFusion_ = function (_0x4976ba) {
				var _0x3c3ec7 = Infinity, _0x2cfc87, _0x28083f, _0x1230ed, _0xc86409, _0x114840;
				for (_0x114840 = 0; _0x114840 < this.gopCache_.length; _0x114840++) {
					_0xc86409 = this.gopCache_[_0x114840];
					_0x1230ed = _0xc86409.gop;
					if (!(_0x29418c.pps && _0x5c8697(_0x29418c.pps[0], _0xc86409.pps[0])) || !(_0x29418c.sps && _0x5c8697(_0x29418c.sps[0], _0xc86409.sps[0]))) {
						continue;
					}
					if (_0x1230ed.dts < _0x29418c.timelineStartInfo.dts) {
						continue;
					}
					_0x2cfc87 = _0x4976ba.dts - _0x1230ed.dts - _0x1230ed.duration;
					if (_0x2cfc87 >= -10000 && _0x2cfc87 <= 45000) {
						(!_0x28083f || _0x3c3ec7 > _0x2cfc87) && (_0x28083f = _0xc86409, _0x3c3ec7 = _0x2cfc87);
					}
				}
				if (_0x28083f) {
					return _0x28083f.gop;
				}
				return null;
			};
			this.alignGopsAtStart_ = function (_0x11ed17) {
				var _0x2fbb1e, _0x15defd, _0xee09b2, _0x570eea, _0x29121d, _0x2bd314, _0x4e9f87, _0x37b310;
				_0x29121d = _0x11ed17.byteLength;
				_0x2bd314 = _0x11ed17.nalCount;
				_0x4e9f87 = _0x11ed17.duration;
				_0x2fbb1e = _0x15defd = 0;
				while (_0x2fbb1e < _0x1e215f.length && _0x15defd < _0x11ed17.length) {
					_0xee09b2 = _0x1e215f[_0x2fbb1e];
					_0x570eea = _0x11ed17[_0x15defd];
					if (_0xee09b2.pts === _0x570eea.pts) {
						break;
					}
					if (_0x570eea.pts > _0xee09b2.pts) {
						_0x2fbb1e++;
						continue;
					}
					_0x15defd++;
					_0x29121d -= _0x570eea.byteLength;
					_0x2bd314 -= _0x570eea.nalCount;
					_0x4e9f87 -= _0x570eea.duration;
				}
				if (_0x15defd === 0) {
					return _0x11ed17;
				}
				if (_0x15defd === _0x11ed17.length) {
					return null;
				}
				return _0x37b310 = _0x11ed17.slice(_0x15defd), _0x37b310.byteLength = _0x29121d, _0x37b310.duration = _0x4e9f87, _0x37b310.nalCount = _0x2bd314, _0x37b310.pts = _0x37b310[0].pts, _0x37b310.dts = _0x37b310[0].dts, _0x37b310;
			};
			this.alignGopsAtEnd_ = function (_0x1a8685) {
				var _0x4bcac2, _0x13286a, _0x13bb11, _0x26058c, _0x1595be, _0x1e3fce;
				_0x4bcac2 = _0x1e215f.length - 1;
				_0x13286a = _0x1a8685.length - 1;
				_0x1595be = null;
				_0x1e3fce = false;
				while (_0x4bcac2 >= 0 && _0x13286a >= 0) {
					_0x13bb11 = _0x1e215f[_0x4bcac2];
					_0x26058c = _0x1a8685[_0x13286a];
					if (_0x13bb11.pts === _0x26058c.pts) {
						_0x1e3fce = true;
						break;
					}
					if (_0x13bb11.pts > _0x26058c.pts) {
						_0x4bcac2--;
						continue;
					}
					if (_0x4bcac2 === _0x1e215f.length - 1) {
						_0x1595be = _0x13286a;
					}
					_0x13286a--;
				}
				if (!_0x1e3fce && _0x1595be === null) {
					return null;
				}
				var _0x2dcb51;
				if (_0x1e3fce) {
					_0x2dcb51 = _0x13286a;
				} else {
					_0x2dcb51 = _0x1595be;
				}
				if (_0x2dcb51 === 0) {
					return _0x1a8685;
				}
				var _0x348f5c = _0x1a8685.slice(_0x2dcb51), _0x6b1a3a = _0x348f5c.reduce(function (_0x3014f1, _0x2b92cf) {
					return _0x3014f1.byteLength += _0x2b92cf.byteLength, _0x3014f1.duration += _0x2b92cf.duration, _0x3014f1.nalCount += _0x2b92cf.nalCount, _0x3014f1;
				}, {
					'byteLength': 0,
					'duration': 0,
					'nalCount': 0
				});
				return _0x348f5c.byteLength = _0x6b1a3a.byteLength, _0x348f5c.duration = _0x6b1a3a.duration, _0x348f5c.nalCount = _0x6b1a3a.nalCount, _0x348f5c.pts = _0x348f5c[0].pts, _0x348f5c.dts = _0x348f5c[0].dts, _0x348f5c;
			};
			this.alignGopsWith = function (_0x340315) {
				_0x1e215f = _0x340315;
			};
		}).prototype = new _0x257e4f(), ((_0x571a95 = function _0x1ac1f3(_0x4008e0, _0x813897) {
			this.numberOfTracks = 0;
			this.metadataStream = _0x813897;
			if (typeof _0x4008e0.remux !== 'undefined') {
				this.remuxTracks = !!_0x4008e0.remux;
			} else {
				this.remuxTracks = true;
			}
			this.pendingTracks = [];
			this.videoTrack = null;
			this.pendingBoxes = [];
			this.pendingCaptions = [];
			this.pendingMetadata = [];
			this.pendingBytes = 0;
			this.emittedTracks = 0;
			_0x571a95.prototype.init.call(this);
			this.push = function (_0x2c74a8) {
				if (_0x2c74a8.text) {
					return this.pendingCaptions.push(_0x2c74a8);
				}
				if (_0x2c74a8.frames) {
					return this.pendingMetadata.push(_0x2c74a8);
				}
				this.pendingTracks.push(_0x2c74a8.track);
				this.pendingBoxes.push(_0x2c74a8.boxes);
				this.pendingBytes += _0x2c74a8.boxes.byteLength;
				if (_0x2c74a8.track.type === 'video') {
					this.videoTrack = _0x2c74a8.track;
				}
				if (_0x2c74a8.track.type === 'audio') {
					this.audioTrack = _0x2c74a8.track;
				}
			};
		}).prototype = new _0x257e4f()).flush = function (_0x9ce12e) {
			var _0x463896 = 0, _0x580a43 = {
				'captions': [],
				'captionStreams': {},
				'metadata': [],
				'info': {}
			}, _0x48b862, _0x33c8de, _0x4c3f38, _0x3b2b8b = 0, _0x2080be;
			if (this.pendingTracks.length < this.numberOfTracks) {
				if (_0x9ce12e !== 'VideoSegmentStream' && _0x9ce12e !== 'AudioSegmentStream') {
					return;
				} else {
					if (this.remuxTracks) {
						return;
					} else {
						if (this.pendingTracks.length === 0) {
							this.emittedTracks++;
							if (this.emittedTracks >= this.numberOfTracks) {
								this.trigger('done');
								this.emittedTracks = 0;
							}
							return;
						}
					}
				}
			}
			if (this.videoTrack) {
				_0x3b2b8b = this.videoTrack.timelineStartInfo.pts;
				_0x5a6247.forEach(function (_0x17dab6) {
					_0x580a43.info[_0x17dab6] = this.videoTrack[_0x17dab6];
				}, this);
			} else {
				this.audioTrack && (_0x3b2b8b = this.audioTrack.timelineStartInfo.pts, _0x1a9876.forEach(function (_0x445892) {
					_0x580a43.info[_0x445892] = this.audioTrack[_0x445892];
				}, this));
			}
			if (this.pendingTracks.length === 1) {
				_0x580a43.type = this.pendingTracks[0].type;
			} else {
				_0x580a43.type = 'combined';
			}
			this.emittedTracks += this.pendingTracks.length;
			_0x4c3f38 = _0x122e62.initSegment(this.pendingTracks);
			_0x580a43.initSegment = new Uint8Array(_0x4c3f38.byteLength);
			_0x580a43.initSegment.set(_0x4c3f38);
			_0x580a43.data = new Uint8Array(this.pendingBytes);
			for (_0x2080be = 0; _0x2080be < this.pendingBoxes.length; _0x2080be++) {
				_0x580a43.data.set(this.pendingBoxes[_0x2080be], _0x463896);
				_0x463896 += this.pendingBoxes[_0x2080be].byteLength;
			}
			for (_0x2080be = 0; _0x2080be < this.pendingCaptions.length; _0x2080be++) {
				_0x48b862 = this.pendingCaptions[_0x2080be];
				_0x48b862.startTime = _0x48b862.startPts - _0x3b2b8b;
				_0x48b862.startTime /= 90000;
				_0x48b862.endTime = _0x48b862.endPts - _0x3b2b8b;
				_0x48b862.endTime /= 90000;
				_0x580a43.captionStreams[_0x48b862.stream] = true;
				_0x580a43.captions.push(_0x48b862);
			}
			for (_0x2080be = 0; _0x2080be < this.pendingMetadata.length; _0x2080be++) {
				_0x33c8de = this.pendingMetadata[_0x2080be];
				_0x33c8de.cueTime = _0x33c8de.pts - _0x3b2b8b;
				_0x33c8de.cueTime /= 90000;
				_0x580a43.metadata.push(_0x33c8de);
			}
			_0x580a43.metadata.dispatchType = this.metadataStream.dispatchType;
			this.pendingTracks.length = 0;
			this.videoTrack = null;
			this.pendingBoxes.length = 0;
			this.pendingCaptions.length = 0;
			this.pendingBytes = 0;
			this.pendingMetadata.length = 0;
			this.trigger('data', _0x580a43);
			if (this.emittedTracks >= this.numberOfTracks) {
				this.trigger('done');
				this.emittedTracks = 0;
			}
		}, (_0xd6cf5c = function _0x5e5a02(_0x4ca349) {
			var _0x2ec0f8 = this, _0x5198de = true, _0x5a1c20, _0x5c7f79;
			_0xd6cf5c.prototype.init.call(this);
			_0x4ca349 = _0x4ca349 || {};
			this.baseMediaDecodeTime = _0x4ca349.baseMediaDecodeTime || 0;
			this.transmuxPipeline_ = {};
			this.setupAacPipeline = function () {
				var _0x3e6ea6 = {
					type: 'aac',
					metadataStream: new _0x68159d.MetadataStream(),
					aacStream: new _0x18ddc3(),
					audioTimestampRolloverStream: new _0x68159d.TimestampRolloverStream('audio'),
					timedMetadataTimestampRolloverStream: new _0x68159d.TimestampRolloverStream('timed-metadata'),
					adtsStream: new _0x3a1bf0(),
					coalesceStream: new _0x571a95(_0x4ca349, _0x3e6ea6.metadataStream),
					headOfPipeline: _0x3e6ea6.aacStream
				};
				this.transmuxPipeline_ = _0x3e6ea6;
				_0x3e6ea6.aacStream.pipe(_0x3e6ea6.audioTimestampRolloverStream).pipe(_0x3e6ea6.adtsStream);
				_0x3e6ea6.aacStream.pipe(_0x3e6ea6.timedMetadataTimestampRolloverStream).pipe(_0x3e6ea6.metadataStream).pipe(_0x3e6ea6.coalesceStream);
				_0x3e6ea6.metadataStream.on('timestamp', function (_0x4ce8f2) {
					_0x3e6ea6.aacStream.setTimestamp(_0x4ce8f2.timeStamp);
				});
				_0x3e6ea6.aacStream.on('data', function (_0x4f9146) {
					_0x4f9146.type === 'timed-metadata' && !_0x3e6ea6.audioSegmentStream && (_0x5c7f79 = _0x5c7f79 || {
						'timelineStartInfo': { 'baseMediaDecodeTime': _0x2ec0f8.baseMediaDecodeTime },
						'codec': 'adts',
						'type': 'audio'
					}, _0x3e6ea6.coalesceStream.numberOfTracks++, _0x3e6ea6.audioSegmentStream = new _0x14c8e2(_0x5c7f79, _0x4ca349), _0x3e6ea6.adtsStream.pipe(_0x3e6ea6.audioSegmentStream).pipe(_0x3e6ea6.coalesceStream));
				});
				_0x3e6ea6.coalesceStream.on('data', this.trigger.bind(this, 'data'));
				_0x3e6ea6.coalesceStream.on('done', this.trigger.bind(this, 'done'));
			};
			this.setupTsPipeline = function () {
				var _0x104d4d = {
					type: 'ts',
					metadataStream: new _0x68159d.MetadataStream(),
					packetStream: new _0x68159d.TransportPacketStream(),
					parseStream: new _0x68159d.TransportParseStream(),
					elementaryStream: new _0x68159d.ElementaryStream(),
					videoTimestampRolloverStream: new _0x68159d.TimestampRolloverStream('video'),
					audioTimestampRolloverStream: new _0x68159d.TimestampRolloverStream('audio'),
					timedMetadataTimestampRolloverStream: new _0x68159d.TimestampRolloverStream('timed-metadata'),
					adtsStream: new _0x3a1bf0(),
					h264Stream: new _0x28f2ea(),
					captionStream: new _0x68159d.CaptionStream(),
					coalesceStream: new _0x571a95(_0x4ca349, _0x104d4d.metadataStream),
					headOfPipeline: _0x104d4d.packetStream
				};
				this.transmuxPipeline_ = _0x104d4d;
				_0x104d4d.packetStream.pipe(_0x104d4d.parseStream).pipe(_0x104d4d.elementaryStream);
				_0x104d4d.elementaryStream.pipe(_0x104d4d.videoTimestampRolloverStream).pipe(_0x104d4d.h264Stream);
				_0x104d4d.elementaryStream.pipe(_0x104d4d.audioTimestampRolloverStream).pipe(_0x104d4d.adtsStream);
				_0x104d4d.elementaryStream.pipe(_0x104d4d.timedMetadataTimestampRolloverStream).pipe(_0x104d4d.metadataStream).pipe(_0x104d4d.coalesceStream);
				_0x104d4d.h264Stream.pipe(_0x104d4d.captionStream).pipe(_0x104d4d.coalesceStream);
				_0x104d4d.elementaryStream.on('data', function (_0x59a729) {
					var _0x1d2206;
					if (_0x59a729.type === 'metadata') {
						_0x1d2206 = _0x59a729.tracks.length;
						while (_0x1d2206--) {
							if (!_0x5a1c20 && _0x59a729.tracks[_0x1d2206].type === 'video') {
								_0x5a1c20 = _0x59a729.tracks[_0x1d2206];
								_0x5a1c20.timelineStartInfo.baseMediaDecodeTime = _0x2ec0f8.baseMediaDecodeTime;
							} else {
								!_0x5c7f79 && _0x59a729.tracks[_0x1d2206].type === 'audio' && (_0x5c7f79 = _0x59a729.tracks[_0x1d2206], _0x5c7f79.timelineStartInfo.baseMediaDecodeTime = _0x2ec0f8.baseMediaDecodeTime);
							}
						}
						_0x5a1c20 && !_0x104d4d.videoSegmentStream && (_0x104d4d.coalesceStream.numberOfTracks++, _0x104d4d.videoSegmentStream = new _0x464f96(_0x5a1c20, _0x4ca349), _0x104d4d.videoSegmentStream.on('timelineStartInfo', function (_0x165aa5) {
							_0x5c7f79 && (_0x5c7f79.timelineStartInfo = _0x165aa5, _0x104d4d.audioSegmentStream.setEarliestDts(_0x165aa5.dts));
						}), _0x104d4d.videoSegmentStream.on('processedGopsInfo', _0x2ec0f8.trigger.bind(_0x2ec0f8, 'gopInfo')), _0x104d4d.videoSegmentStream.on('baseMediaDecodeTime', function (_0x1a6f6c) {
							if (_0x5c7f79) {
								_0x104d4d.audioSegmentStream.setVideoBaseMediaDecodeTime(_0x1a6f6c);
							}
						}), _0x104d4d.h264Stream.pipe(_0x104d4d.videoSegmentStream).pipe(_0x104d4d.coalesceStream));
						_0x5c7f79 && !_0x104d4d.audioSegmentStream && (_0x104d4d.coalesceStream.numberOfTracks++, _0x104d4d.audioSegmentStream = new _0x14c8e2(_0x5c7f79, _0x4ca349), _0x104d4d.adtsStream.pipe(_0x104d4d.audioSegmentStream).pipe(_0x104d4d.coalesceStream));
					}
				});
				_0x104d4d.coalesceStream.on('data', this.trigger.bind(this, 'data'));
				_0x104d4d.coalesceStream.on('done', this.trigger.bind(this, 'done'));
			};
			this.setBaseMediaDecodeTime = function (_0x415bc7) {
				var _0x30952b = this.transmuxPipeline_;
				this.baseMediaDecodeTime = _0x415bc7;
				if (_0x5c7f79) {
					_0x5c7f79.timelineStartInfo.dts = undefined;
					_0x5c7f79.timelineStartInfo.pts = undefined;
					_0x3469f8.clearDtsInfo(_0x5c7f79);
					_0x5c7f79.timelineStartInfo.baseMediaDecodeTime = _0x415bc7;
					if (_0x30952b.audioTimestampRolloverStream) {
						_0x30952b.audioTimestampRolloverStream.discontinuity();
					}
				}
				_0x5a1c20 && (_0x30952b.videoSegmentStream && (_0x30952b.videoSegmentStream.gopCache_ = [], _0x30952b.videoTimestampRolloverStream.discontinuity()), _0x5a1c20.timelineStartInfo.dts = undefined, _0x5a1c20.timelineStartInfo.pts = undefined, _0x3469f8.clearDtsInfo(_0x5a1c20), _0x30952b.captionStream.reset(), _0x5a1c20.timelineStartInfo.baseMediaDecodeTime = _0x415bc7);
				if (_0x30952b.timedMetadataTimestampRolloverStream) {
					_0x30952b.timedMetadataTimestampRolloverStream.discontinuity();
				}
			};
			this.setAudioAppendStart = function (_0x292d50) {
				if (_0x5c7f79) {
					this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(_0x292d50);
				}
			};
			this.alignGopsWith = function (_0x3620a4) {
				if (_0x5a1c20 && this.transmuxPipeline_.videoSegmentStream) {
					this.transmuxPipeline_.videoSegmentStream.alignGopsWith(_0x3620a4);
				}
			};
			this.push = function (_0x7c00a4) {
				if (_0x5198de) {
					var _0x4a2453 = _0x24e5ff(_0x7c00a4);
					if (_0x4a2453 && this.transmuxPipeline_.type !== 'aac') {
						this.setupAacPipeline();
					} else {
						if (!_0x4a2453 && this.transmuxPipeline_.type !== 'ts') {
							this.setupTsPipeline();
						}
					}
					_0x5198de = false;
				}
				this.transmuxPipeline_.headOfPipeline.push(_0x7c00a4);
			};
			this.flush = function () {
				_0x5198de = true;
				this.transmuxPipeline_.headOfPipeline.flush();
			};
			this.resetCaptions = function () {
				if (this.transmuxPipeline_.captionStream) {
					this.transmuxPipeline_.captionStream.reset();
				}
			};
		}).prototype = new _0x257e4f(), {
			'Transmuxer': _0xd6cf5c,
			'VideoSegmentStream': _0x464f96,
			'AudioSegmentStream': _0x14c8e2,
			'AUDIO_PROPERTIES': _0x1a9876,
			'VIDEO_PROPERTIES': _0x5a6247
		}), _0x4af691, _0x4aa0f2, _0x26ae07, _0x20dd3c, _0x3a6ec8, _0x523cce = Object.freeze({
			'default': _0x2c1e10,
			'__moduleExports': _0x2c1e10,
			'Transmuxer': _0x2c1e10.Transmuxer,
			'VideoSegmentStream': _0x2c1e10.VideoSegmentStream,
			'AudioSegmentStream': _0x2c1e10.AudioSegmentStream,
			'AUDIO_PROPERTIES': _0x2c1e10.AUDIO_PROPERTIES,
			'VIDEO_PROPERTIES': _0x2c1e10.VIDEO_PROPERTIES
		}), _0x33f1c7, _0x4be1ac, _0x174bc6 = _0x1d4ee0.parseType, _0x4ff4de = function _0x5c26c7(_0x358d42) {
			return new Date(_0x358d42 * 1000 - 2082844800000);
		}, _0x5bdcac = function _0x2eac1a(_0x8714f0) {
			return {
				'isLeading': (_0x8714f0[0] & 12) >>> 2,
				'dependsOn': _0x8714f0[0] & 3,
				'isDependedOn': (_0x8714f0[1] & 192) >>> 6,
				'hasRedundancy': (_0x8714f0[1] & 48) >>> 4,
				'paddingValue': (_0x8714f0[1] & 14) >>> 1,
				'isNonSyncSample': _0x8714f0[1] & 1,
				'degradationPriority': _0x8714f0[2] << 8 | _0x8714f0[3]
			};
		}, _0x5ccb35 = function _0x5ee39(_0xe6974f) {
			var _0x425bc1 = new DataView(_0xe6974f.buffer, _0xe6974f.byteOffset, _0xe6974f.byteLength), _0x2795c3 = [], _0x576eda, _0x477064;
			for (_0x576eda = 0; _0x576eda + 4 < _0xe6974f.length; _0x576eda += _0x477064) {
				_0x477064 = _0x425bc1.getUint32(_0x576eda);
				_0x576eda += 4;
				if (_0x477064 <= 0) {
					_0x2795c3.push('<span style=\'color:red;\'>MALFORMED DATA</span>');
					continue;
				}
				switch (_0xe6974f[_0x576eda] & 31) {
					case 1:
						_0x2795c3.push('slice_layer_without_partitioning_rbsp');
						break;
					case 5:
						_0x2795c3.push('slice_layer_without_partitioning_rbsp_idr');
						break;
					case 6:
						_0x2795c3.push('sei_rbsp');
						break;
					case 7:
						_0x2795c3.push('seq_parameter_set_rbsp');
						break;
					case 8:
						_0x2795c3.push('pic_parameter_set_rbsp');
						break;
					case 9:
						_0x2795c3.push('access_unit_delimiter_rbsp');
						break;
					default:
						_0x2795c3.push('UNKNOWN NAL - ' + _0xe6974f[_0x576eda] & 31);
						break;
				}
			}
			return _0x2795c3;
		}, _0x34d66f = {
			'avc1': function _0xa45cc8(_0x5660a8) {
				var _0xbf8034 = new DataView(_0x5660a8.buffer, _0x5660a8.byteOffset, _0x5660a8.byteLength);
				return {
					'dataReferenceIndex': _0xbf8034.getUint16(6),
					'width': _0xbf8034.getUint16(24),
					'height': _0xbf8034.getUint16(26),
					'horizresolution': _0xbf8034.getUint16(28) + _0xbf8034.getUint16(30) / 16,
					'vertresolution': _0xbf8034.getUint16(32) + _0xbf8034.getUint16(34) / 16,
					'frameCount': _0xbf8034.getUint16(40),
					'depth': _0xbf8034.getUint16(74),
					'config': _0x33f1c7(_0x5660a8.subarray(78, _0x5660a8.byteLength))
				};
			},
			'avcC': function _0xd70488(_0x29f9f1) {
				var _0x302c1c = new DataView(_0x29f9f1.buffer, _0x29f9f1.byteOffset, _0x29f9f1.byteLength), _0x12955d = {
					'configurationVersion': _0x29f9f1[0],
					'avcProfileIndication': _0x29f9f1[1],
					'profileCompatibility': _0x29f9f1[2],
					'avcLevelIndication': _0x29f9f1[3],
					'lengthSizeMinusOne': _0x29f9f1[4] & 3,
					'sps': [],
					'pps': []
				}, _0x1827a5 = _0x29f9f1[5] & 31, _0xac88fc, _0x3041e2, _0x8b47f0, _0x2f142e;
				_0x8b47f0 = 6;
				for (_0x2f142e = 0; _0x2f142e < _0x1827a5; _0x2f142e++) {
					_0x3041e2 = _0x302c1c.getUint16(_0x8b47f0);
					_0x8b47f0 += 2;
					_0x12955d.sps.push(new Uint8Array(_0x29f9f1.subarray(_0x8b47f0, _0x8b47f0 + _0x3041e2)));
					_0x8b47f0 += _0x3041e2;
				}
				_0xac88fc = _0x29f9f1[_0x8b47f0];
				_0x8b47f0++;
				for (_0x2f142e = 0; _0x2f142e < _0xac88fc; _0x2f142e++) {
					_0x3041e2 = _0x302c1c.getUint16(_0x8b47f0);
					_0x8b47f0 += 2;
					_0x12955d.pps.push(new Uint8Array(_0x29f9f1.subarray(_0x8b47f0, _0x8b47f0 + _0x3041e2)));
					_0x8b47f0 += _0x3041e2;
				}
				return _0x12955d;
			},
			'btrt': function _0x3072e1(_0x18c5dd) {
				var _0x4d708c = new DataView(_0x18c5dd.buffer, _0x18c5dd.byteOffset, _0x18c5dd.byteLength);
				return {
					'bufferSizeDB': _0x4d708c.getUint32(0),
					'maxBitrate': _0x4d708c.getUint32(4),
					'avgBitrate': _0x4d708c.getUint32(8)
				};
			},
			'esds': function _0x365ec0(_0x2f7c58) {
				return {
					'version': _0x2f7c58[0],
					'flags': new Uint8Array(_0x2f7c58.subarray(1, 4)),
					'esId': _0x2f7c58[6] << 8 | _0x2f7c58[7],
					'streamPriority': _0x2f7c58[8] & 31,
					'decoderConfig': {
						'objectProfileIndication': _0x2f7c58[11],
						'streamType': _0x2f7c58[12] >>> 2 & 63,
						'bufferSize': _0x2f7c58[13] << 16 | _0x2f7c58[14] << 8 | _0x2f7c58[15],
						'maxBitrate': _0x2f7c58[16] << 24 | _0x2f7c58[17] << 16 | _0x2f7c58[18] << 8 | _0x2f7c58[19],
						'avgBitrate': _0x2f7c58[20] << 24 | _0x2f7c58[21] << 16 | _0x2f7c58[22] << 8 | _0x2f7c58[23],
						'decoderConfigDescriptor': {
							'tag': _0x2f7c58[24],
							'length': _0x2f7c58[25],
							'audioObjectType': _0x2f7c58[26] >>> 3 & 31,
							'samplingFrequencyIndex': (_0x2f7c58[26] & 7) << 1 | _0x2f7c58[27] >>> 7 & 1,
							'channelConfiguration': _0x2f7c58[27] >>> 3 & 15
						}
					}
				};
			},
			'ftyp': function _0x5df5c5(_0x5637ca) {
				var _0x2bbd1f = new DataView(_0x5637ca.buffer, _0x5637ca.byteOffset, _0x5637ca.byteLength), _0xb7accd = {
					'majorBrand': _0x174bc6(_0x5637ca.subarray(0, 4)),
					'minorVersion': _0x2bbd1f.getUint32(4),
					'compatibleBrands': []
				}, _0x2d4ad3 = 8;
				while (_0x2d4ad3 < _0x5637ca.byteLength) {
					_0xb7accd.compatibleBrands.push(_0x174bc6(_0x5637ca.subarray(_0x2d4ad3, _0x2d4ad3 + 4)));
					_0x2d4ad3 += 4;
				}
				return _0xb7accd;
			},
			'dinf': function _0xe5dcd0(_0x5b2da6) {
				return { 'boxes': _0x33f1c7(_0x5b2da6) };
			},
			'dref': function _0x37bbf2(_0x38479d) {
				return {
					'version': _0x38479d[0],
					'flags': new Uint8Array(_0x38479d.subarray(1, 4)),
					'dataReferences': _0x33f1c7(_0x38479d.subarray(8))
				};
			},
			'hdlr': function _0x2a26c5(_0x22bce7) {
				var _0x163e35 = new DataView(_0x22bce7.buffer, _0x22bce7.byteOffset, _0x22bce7.byteLength), _0x34f80b = {
					'version': _0x163e35.getUint8(0),
					'flags': new Uint8Array(_0x22bce7.subarray(1, 4)),
					'handlerType': _0x174bc6(_0x22bce7.subarray(8, 12)),
					'name': ''
				}, _0x1455f1 = 8;
				for (_0x1455f1 = 24; _0x1455f1 < _0x22bce7.byteLength; _0x1455f1++) {
					if (_0x22bce7[_0x1455f1] === 0) {
						_0x1455f1++;
						break;
					}
					_0x34f80b.name += String.fromCharCode(_0x22bce7[_0x1455f1]);
				}
				return _0x34f80b.name = decodeURIComponent(escape(_0x34f80b.name)), _0x34f80b;
			},
			'mdat': function _0x2754d6(_0x2c9023) {
				return {
					'byteLength': _0x2c9023.byteLength,
					'nals': _0x5ccb35(_0x2c9023)
				};
			},
			'mdhd': function _0x420cda(_0xba9bcc) {
				var _0x5e9775 = new DataView(_0xba9bcc.buffer, _0xba9bcc.byteOffset, _0xba9bcc.byteLength), _0x58637b = 4, _0x2ae978, _0x226b4a = {
					'version': _0x5e9775.getUint8(0),
					'flags': new Uint8Array(_0xba9bcc.subarray(1, 4)),
					'language': ''
				};
				return _0x226b4a.version === 1 ? (_0x58637b += 4, _0x226b4a.creationTime = _0x4ff4de(_0x5e9775.getUint32(_0x58637b)), _0x58637b += 8, _0x226b4a.modificationTime = _0x4ff4de(_0x5e9775.getUint32(_0x58637b)), _0x58637b += 4, _0x226b4a.timescale = _0x5e9775.getUint32(_0x58637b), _0x58637b += 8, _0x226b4a.duration = _0x5e9775.getUint32(_0x58637b)) : (_0x226b4a.creationTime = _0x4ff4de(_0x5e9775.getUint32(_0x58637b)), _0x58637b += 4, _0x226b4a.modificationTime = _0x4ff4de(_0x5e9775.getUint32(_0x58637b)), _0x58637b += 4, _0x226b4a.timescale = _0x5e9775.getUint32(_0x58637b), _0x58637b += 4, _0x226b4a.duration = _0x5e9775.getUint32(_0x58637b)), _0x58637b += 4, _0x2ae978 = _0x5e9775.getUint16(_0x58637b), _0x226b4a.language += String.fromCharCode((_0x2ae978 >> 10) + 96), _0x226b4a.language += String.fromCharCode(((_0x2ae978 & 992) >> 5) + 96), _0x226b4a.language += String.fromCharCode((_0x2ae978 & 31) + 96), _0x226b4a;
			},
			'mdia': function _0x35ccbb(_0x4e4e95) {
				return { 'boxes': _0x33f1c7(_0x4e4e95) };
			},
			'mfhd': function _0x4c819a(_0x2f1bfe) {
				return {
					'version': _0x2f1bfe[0],
					'flags': new Uint8Array(_0x2f1bfe.subarray(1, 4)),
					'sequenceNumber': _0x2f1bfe[4] << 24 | _0x2f1bfe[5] << 16 | _0x2f1bfe[6] << 8 | _0x2f1bfe[7]
				};
			},
			'minf': function _0x1601f4(_0x5b16b7) {
				return { 'boxes': _0x33f1c7(_0x5b16b7) };
			},
			'mp4a': function _0x2be9fe(_0x331f2c) {
				var _0xa05f88 = new DataView(_0x331f2c.buffer, _0x331f2c.byteOffset, _0x331f2c.byteLength), _0x478623 = {
					'dataReferenceIndex': _0xa05f88.getUint16(6),
					'channelcount': _0xa05f88.getUint16(16),
					'samplesize': _0xa05f88.getUint16(18),
					'samplerate': _0xa05f88.getUint16(24) + _0xa05f88.getUint16(26) / 65536
				};
				if (_0x331f2c.byteLength > 28) {
					_0x478623.streamDescriptor = _0x33f1c7(_0x331f2c.subarray(28))[0];
				}
				return _0x478623;
			},
			'moof': function _0x2b73b0(_0xc57ca0) {
				return { 'boxes': _0x33f1c7(_0xc57ca0) };
			},
			'moov': function _0x1fafa0(_0x566658) {
				return { 'boxes': _0x33f1c7(_0x566658) };
			},
			'mvex': function _0x3f67ed(_0x5b04a2) {
				return { 'boxes': _0x33f1c7(_0x5b04a2) };
			},
			'mvhd': function _0x5ca443(_0x552edf) {
				var _0x2c55e9 = new DataView(_0x552edf.buffer, _0x552edf.byteOffset, _0x552edf.byteLength), _0x1a90b7 = 4, _0x1b02e0 = {
					'version': _0x2c55e9.getUint8(0),
					'flags': new Uint8Array(_0x552edf.subarray(1, 4))
				};
				return _0x1b02e0.version === 1 ? (_0x1a90b7 += 4, _0x1b02e0.creationTime = _0x4ff4de(_0x2c55e9.getUint32(_0x1a90b7)), _0x1a90b7 += 8, _0x1b02e0.modificationTime = _0x4ff4de(_0x2c55e9.getUint32(_0x1a90b7)), _0x1a90b7 += 4, _0x1b02e0.timescale = _0x2c55e9.getUint32(_0x1a90b7), _0x1a90b7 += 8, _0x1b02e0.duration = _0x2c55e9.getUint32(_0x1a90b7)) : (_0x1b02e0.creationTime = _0x4ff4de(_0x2c55e9.getUint32(_0x1a90b7)), _0x1a90b7 += 4, _0x1b02e0.modificationTime = _0x4ff4de(_0x2c55e9.getUint32(_0x1a90b7)), _0x1a90b7 += 4, _0x1b02e0.timescale = _0x2c55e9.getUint32(_0x1a90b7), _0x1a90b7 += 4, _0x1b02e0.duration = _0x2c55e9.getUint32(_0x1a90b7)), _0x1a90b7 += 4, _0x1b02e0.rate = _0x2c55e9.getUint16(_0x1a90b7) + _0x2c55e9.getUint16(_0x1a90b7 + 2) / 16, _0x1a90b7 += 4, _0x1b02e0.volume = _0x2c55e9.getUint8(_0x1a90b7) + _0x2c55e9.getUint8(_0x1a90b7 + 1) / 8, _0x1a90b7 += 2, _0x1a90b7 += 2, _0x1a90b7 += 8, _0x1b02e0.matrix = new Uint32Array(_0x552edf.subarray(_0x1a90b7, _0x1a90b7 + 36)), _0x1a90b7 += 36, _0x1a90b7 += 24, _0x1b02e0.nextTrackId = _0x2c55e9.getUint32(_0x1a90b7), _0x1b02e0;
			},
			'pdin': function _0x2c8eaa(_0x4602d6) {
				var _0x44aab9 = new DataView(_0x4602d6.buffer, _0x4602d6.byteOffset, _0x4602d6.byteLength);
				return {
					'version': _0x44aab9.getUint8(0),
					'flags': new Uint8Array(_0x4602d6.subarray(1, 4)),
					'rate': _0x44aab9.getUint32(4),
					'initialDelay': _0x44aab9.getUint32(8)
				};
			},
			'sdtp': function _0xbb9f5e(_0x4f18ba) {
				var _0x3df5b3 = {
					'version': _0x4f18ba[0],
					'flags': new Uint8Array(_0x4f18ba.subarray(1, 4)),
					'samples': []
				}, _0x3dc156;
				for (_0x3dc156 = 4; _0x3dc156 < _0x4f18ba.byteLength; _0x3dc156++) {
					_0x3df5b3.samples.push({
						'dependsOn': (_0x4f18ba[_0x3dc156] & 48) >> 4,
						'isDependedOn': (_0x4f18ba[_0x3dc156] & 12) >> 2,
						'hasRedundancy': _0x4f18ba[_0x3dc156] & 3
					});
				}
				return _0x3df5b3;
			},
			'sidx': function _0x373fd1(_0x4f1153) {
				var _0x47b5d9 = new DataView(_0x4f1153.buffer, _0x4f1153.byteOffset, _0x4f1153.byteLength), _0x217360 = {
					'version': _0x4f1153[0],
					'flags': new Uint8Array(_0x4f1153.subarray(1, 4)),
					'references': [],
					'referenceId': _0x47b5d9.getUint32(4),
					'timescale': _0x47b5d9.getUint32(8),
					'earliestPresentationTime': _0x47b5d9.getUint32(12),
					'firstOffset': _0x47b5d9.getUint32(16)
				}, _0x20ba1d = _0x47b5d9.getUint16(22), _0x305f53;
				for (_0x305f53 = 24; _0x20ba1d; _0x305f53 += 12, _0x20ba1d--) {
					_0x217360.references.push({
						'referenceType': (_0x4f1153[_0x305f53] & 128) >>> 7,
						'referencedSize': _0x47b5d9.getUint32(_0x305f53) & 2147483647,
						'subsegmentDuration': _0x47b5d9.getUint32(_0x305f53 + 4),
						'startsWithSap': !!(_0x4f1153[_0x305f53 + 8] & 128),
						'sapType': (_0x4f1153[_0x305f53 + 8] & 112) >>> 4,
						'sapDeltaTime': _0x47b5d9.getUint32(_0x305f53 + 8) & 268435455
					});
				}
				return _0x217360;
			},
			'smhd': function _0x1dffb5(_0xd0328c) {
				return {
					'version': _0xd0328c[0],
					'flags': new Uint8Array(_0xd0328c.subarray(1, 4)),
					'balance': _0xd0328c[4] + _0xd0328c[5] / 256
				};
			},
			'stbl': function _0x4191e0(_0x4a7ad3) {
				return { 'boxes': _0x33f1c7(_0x4a7ad3) };
			},
			'stco': function _0x8447bb(_0x432bd9) {
				var _0xfd97ef = new DataView(_0x432bd9.buffer, _0x432bd9.byteOffset, _0x432bd9.byteLength), _0x2f38f5 = {
					'version': _0x432bd9[0],
					'flags': new Uint8Array(_0x432bd9.subarray(1, 4)),
					'chunkOffsets': []
				}, _0x23996d = _0xfd97ef.getUint32(4), _0x10e9be;
				for (_0x10e9be = 8; _0x23996d; _0x10e9be += 4, _0x23996d--) {
					_0x2f38f5.chunkOffsets.push(_0xfd97ef.getUint32(_0x10e9be));
				}
				return _0x2f38f5;
			},
			'stsc': function _0x3375e1(_0x464f1d) {
				var _0x3cfab8 = new DataView(_0x464f1d.buffer, _0x464f1d.byteOffset, _0x464f1d.byteLength), _0x347ddd = _0x3cfab8.getUint32(4), _0x152960 = {
					'version': _0x464f1d[0],
					'flags': new Uint8Array(_0x464f1d.subarray(1, 4)),
					'sampleToChunks': []
				}, _0x22fb91;
				for (_0x22fb91 = 8; _0x347ddd; _0x22fb91 += 12, _0x347ddd--) {
					_0x152960.sampleToChunks.push({
						'firstChunk': _0x3cfab8.getUint32(_0x22fb91),
						'samplesPerChunk': _0x3cfab8.getUint32(_0x22fb91 + 4),
						'sampleDescriptionIndex': _0x3cfab8.getUint32(_0x22fb91 + 8)
					});
				}
				return _0x152960;
			},
			'stsd': function _0x10e500(_0x1c0099) {
				return {
					'version': _0x1c0099[0],
					'flags': new Uint8Array(_0x1c0099.subarray(1, 4)),
					'sampleDescriptions': _0x33f1c7(_0x1c0099.subarray(8))
				};
			},
			'stsz': function _0x58317d(_0xc37877) {
				var _0x2cd9ee = new DataView(_0xc37877.buffer, _0xc37877.byteOffset, _0xc37877.byteLength), _0x1f442a = {
					'version': _0xc37877[0],
					'flags': new Uint8Array(_0xc37877.subarray(1, 4)),
					'sampleSize': _0x2cd9ee.getUint32(4),
					'entries': []
				}, _0x1e3bbb;
				for (_0x1e3bbb = 12; _0x1e3bbb < _0xc37877.byteLength; _0x1e3bbb += 4) {
					_0x1f442a.entries.push(_0x2cd9ee.getUint32(_0x1e3bbb));
				}
				return _0x1f442a;
			},
			'stts': function _0x51b1c9(_0x1a988f) {
				var _0x72f229 = new DataView(_0x1a988f.buffer, _0x1a988f.byteOffset, _0x1a988f.byteLength), _0x52562a = {
					'version': _0x1a988f[0],
					'flags': new Uint8Array(_0x1a988f.subarray(1, 4)),
					'timeToSamples': []
				}, _0x59b056 = _0x72f229.getUint32(4), _0x314cbc;
				for (_0x314cbc = 8; _0x59b056; _0x314cbc += 8, _0x59b056--) {
					_0x52562a.timeToSamples.push({
						'sampleCount': _0x72f229.getUint32(_0x314cbc),
						'sampleDelta': _0x72f229.getUint32(_0x314cbc + 4)
					});
				}
				return _0x52562a;
			},
			'styp': function _0x549d08(_0x38c8d4) {
				return _0x34d66f.ftyp(_0x38c8d4);
			},
			'tfdt': function _0x4bb9f4(_0x4c3abb) {
				var _0x2ffad9 = {
					'version': _0x4c3abb[0],
					'flags': new Uint8Array(_0x4c3abb.subarray(1, 4)),
					'baseMediaDecodeTime': _0x4c3abb[4] << 24 | _0x4c3abb[5] << 16 | _0x4c3abb[6] << 8 | _0x4c3abb[7]
				};
				return _0x2ffad9.version === 1 && (_0x2ffad9.baseMediaDecodeTime *= Math.pow(2, 32), _0x2ffad9.baseMediaDecodeTime += _0x4c3abb[8] << 24 | _0x4c3abb[9] << 16 | _0x4c3abb[10] << 8 | _0x4c3abb[11]), _0x2ffad9;
			},
			'tfhd': function _0xfadefc(_0xde76b7) {
				var _0x5bb65d = new DataView(_0xde76b7.buffer, _0xde76b7.byteOffset, _0xde76b7.byteLength), _0x387c41 = {
					'version': _0xde76b7[0],
					'flags': new Uint8Array(_0xde76b7.subarray(1, 4)),
					'trackId': _0x5bb65d.getUint32(4)
				}, _0x2328c3 = _0x387c41.flags[2] & 1, _0x101a79 = _0x387c41.flags[2] & 2, _0x130b0c = _0x387c41.flags[2] & 8, _0x53b7fa = _0x387c41.flags[2] & 16, _0x43c16e = _0x387c41.flags[2] & 32, _0x4f756 = _0x387c41.flags[0] & 65536, _0x2ad4f8 = _0x387c41.flags[0] & 131072, _0x1d11bf;
				_0x1d11bf = 8;
				_0x2328c3 && (_0x1d11bf += 4, _0x387c41.baseDataOffset = _0x5bb65d.getUint32(12), _0x1d11bf += 4);
				_0x101a79 && (_0x387c41.sampleDescriptionIndex = _0x5bb65d.getUint32(_0x1d11bf), _0x1d11bf += 4);
				_0x130b0c && (_0x387c41.defaultSampleDuration = _0x5bb65d.getUint32(_0x1d11bf), _0x1d11bf += 4);
				_0x53b7fa && (_0x387c41.defaultSampleSize = _0x5bb65d.getUint32(_0x1d11bf), _0x1d11bf += 4);
				if (_0x43c16e) {
					_0x387c41.defaultSampleFlags = _0x5bb65d.getUint32(_0x1d11bf);
				}
				if (_0x4f756) {
					_0x387c41.durationIsEmpty = true;
				}
				if (!_0x2328c3 && _0x2ad4f8) {
					_0x387c41.baseDataOffsetIsMoof = true;
				}
				return _0x387c41;
			},
			'tkhd': function _0x44ae24(_0x1ad445) {
				var _0x5ef153 = new DataView(_0x1ad445.buffer, _0x1ad445.byteOffset, _0x1ad445.byteLength), _0x586748 = 4, _0x187e2c = {
					'version': _0x5ef153.getUint8(0),
					'flags': new Uint8Array(_0x1ad445.subarray(1, 4))
				};
				return _0x187e2c.version === 1 ? (_0x586748 += 4, _0x187e2c.creationTime = _0x4ff4de(_0x5ef153.getUint32(_0x586748)), _0x586748 += 8, _0x187e2c.modificationTime = _0x4ff4de(_0x5ef153.getUint32(_0x586748)), _0x586748 += 4, _0x187e2c.trackId = _0x5ef153.getUint32(_0x586748), _0x586748 += 4, _0x586748 += 8, _0x187e2c.duration = _0x5ef153.getUint32(_0x586748)) : (_0x187e2c.creationTime = _0x4ff4de(_0x5ef153.getUint32(_0x586748)), _0x586748 += 4, _0x187e2c.modificationTime = _0x4ff4de(_0x5ef153.getUint32(_0x586748)), _0x586748 += 4, _0x187e2c.trackId = _0x5ef153.getUint32(_0x586748), _0x586748 += 4, _0x586748 += 4, _0x187e2c.duration = _0x5ef153.getUint32(_0x586748)), _0x586748 += 4, _0x586748 += 8, _0x187e2c.layer = _0x5ef153.getUint16(_0x586748), _0x586748 += 2, _0x187e2c.alternateGroup = _0x5ef153.getUint16(_0x586748), _0x586748 += 2, _0x187e2c.volume = _0x5ef153.getUint8(_0x586748) + _0x5ef153.getUint8(_0x586748 + 1) / 8, _0x586748 += 2, _0x586748 += 2, _0x187e2c.matrix = new Uint32Array(_0x1ad445.subarray(_0x586748, _0x586748 + 36)), _0x586748 += 36, _0x187e2c.width = _0x5ef153.getUint16(_0x586748) + _0x5ef153.getUint16(_0x586748 + 2) / 16, _0x586748 += 4, _0x187e2c.height = _0x5ef153.getUint16(_0x586748) + _0x5ef153.getUint16(_0x586748 + 2) / 16, _0x187e2c;
			},
			'traf': function _0x2522e6(_0x1e0e34) {
				return { 'boxes': _0x33f1c7(_0x1e0e34) };
			},
			'trak': function _0x47cccb(_0x4b460e) {
				return { 'boxes': _0x33f1c7(_0x4b460e) };
			},
			'trex': function _0xd39099(_0x3d9fd2) {
				var _0x4e0a9a = new DataView(_0x3d9fd2.buffer, _0x3d9fd2.byteOffset, _0x3d9fd2.byteLength);
				return {
					'version': _0x3d9fd2[0],
					'flags': new Uint8Array(_0x3d9fd2.subarray(1, 4)),
					'trackId': _0x4e0a9a.getUint32(4),
					'defaultSampleDescriptionIndex': _0x4e0a9a.getUint32(8),
					'defaultSampleDuration': _0x4e0a9a.getUint32(12),
					'defaultSampleSize': _0x4e0a9a.getUint32(16),
					'sampleDependsOn': _0x3d9fd2[20] & 3,
					'sampleIsDependedOn': (_0x3d9fd2[21] & 192) >> 6,
					'sampleHasRedundancy': (_0x3d9fd2[21] & 48) >> 4,
					'samplePaddingValue': (_0x3d9fd2[21] & 14) >> 1,
					'sampleIsDifferenceSample': !!(_0x3d9fd2[21] & 1),
					'sampleDegradationPriority': _0x4e0a9a.getUint16(22)
				};
			},
			'trun': function _0x46dec4(_0x3a8027) {
				var _0x18bef1 = {
					'version': _0x3a8027[0],
					'flags': new Uint8Array(_0x3a8027.subarray(1, 4)),
					'samples': []
				}, _0x31ad0b = new DataView(_0x3a8027.buffer, _0x3a8027.byteOffset, _0x3a8027.byteLength), _0xe44241 = _0x18bef1.flags[2] & 1, _0x40cfd3 = _0x18bef1.flags[2] & 4, _0x323394 = _0x18bef1.flags[1] & 1, _0x9175f2 = _0x18bef1.flags[1] & 2, _0x1fffa3 = _0x18bef1.flags[1] & 4, _0x5f38ea = _0x18bef1.flags[1] & 8, _0x4ef175 = _0x31ad0b.getUint32(4), _0x2c912f = 8, _0x239ff7;
				_0xe44241 && (_0x18bef1.dataOffset = _0x31ad0b.getInt32(_0x2c912f), _0x2c912f += 4);
				_0x40cfd3 && _0x4ef175 && (_0x239ff7 = { 'flags': _0x5bdcac(_0x3a8027.subarray(_0x2c912f, _0x2c912f + 4)) }, _0x2c912f += 4, _0x323394 && (_0x239ff7.duration = _0x31ad0b.getUint32(_0x2c912f), _0x2c912f += 4), _0x9175f2 && (_0x239ff7.size = _0x31ad0b.getUint32(_0x2c912f), _0x2c912f += 4), _0x5f38ea && (_0x239ff7.compositionTimeOffset = _0x31ad0b.getUint32(_0x2c912f), _0x2c912f += 4), _0x18bef1.samples.push(_0x239ff7), _0x4ef175--);
				while (_0x4ef175--) {
					_0x239ff7 = {};
					_0x323394 && (_0x239ff7.duration = _0x31ad0b.getUint32(_0x2c912f), _0x2c912f += 4);
					_0x9175f2 && (_0x239ff7.size = _0x31ad0b.getUint32(_0x2c912f), _0x2c912f += 4);
					_0x1fffa3 && (_0x239ff7.flags = _0x5bdcac(_0x3a8027.subarray(_0x2c912f, _0x2c912f + 4)), _0x2c912f += 4);
					_0x5f38ea && (_0x239ff7.compositionTimeOffset = _0x31ad0b.getUint32(_0x2c912f), _0x2c912f += 4);
					_0x18bef1.samples.push(_0x239ff7);
				}
				return _0x18bef1;
			},
			'url ': function _0x276664(_0x5384c7) {
				return {
					'version': _0x5384c7[0],
					'flags': new Uint8Array(_0x5384c7.subarray(1, 4))
				};
			},
			'vmhd': function _0x4b4c96(_0x5b77df) {
				var _0x472a13 = new DataView(_0x5b77df.buffer, _0x5b77df.byteOffset, _0x5b77df.byteLength);
				return {
					'version': _0x5b77df[0],
					'flags': new Uint8Array(_0x5b77df.subarray(1, 4)),
					'graphicsmode': _0x472a13.getUint16(4),
					'opcolor': new Uint16Array([
						_0x472a13.getUint16(6),
						_0x472a13.getUint16(8),
						_0x472a13.getUint16(10)
					])
				};
			}
		}, _0x33f1c7 = function _0x48b709(_0x9e834f) {
			var _0x4b607b = 0, _0x585172 = [], _0x732437, _0x4a2ab2, _0x52ef9b, _0x246fb9, _0x20282a, _0xa1de1 = new ArrayBuffer(_0x9e834f.length), _0x46268f = new Uint8Array(_0xa1de1);
			for (var _0x5d42bf = 0; _0x5d42bf < _0x9e834f.length; ++_0x5d42bf) {
				_0x46268f[_0x5d42bf] = _0x9e834f[_0x5d42bf];
			}
			_0x732437 = new DataView(_0xa1de1);
			while (_0x4b607b < _0x9e834f.byteLength) {
				_0x4a2ab2 = _0x732437.getUint32(_0x4b607b);
				_0x52ef9b = _0x174bc6(_0x9e834f.subarray(_0x4b607b + 4, _0x4b607b + 8));
				_0x246fb9 = _0x4a2ab2 > 1 ? _0x4b607b + _0x4a2ab2 : _0x9e834f.byteLength;
				_0x20282a = (_0x34d66f[_0x52ef9b] || function (_0x4f31f0) {
					return { 'data': _0x4f31f0 };
				})(_0x9e834f.subarray(_0x4b607b + 8, _0x246fb9));
				_0x20282a.size = _0x4a2ab2;
				_0x20282a.type = _0x52ef9b;
				_0x585172.push(_0x20282a);
				_0x4b607b = _0x246fb9;
			}
			return _0x585172;
		}, _0x4be1ac = function _0x1c5ca1(_0x49940b, _0xe9982) {
			var _0x372bad;
			return _0xe9982 = _0xe9982 || 0, _0x372bad = new Array(_0xe9982 * 2 + 1).join(' '), _0x49940b.map(function (_0x74b8ab, _0x2aa801) {
				return _0x372bad + _0x74b8ab.type + '\n' + Object.keys(_0x74b8ab).filter(function (_0x2fdcbb) {
					return _0x2fdcbb !== 'type' && _0x2fdcbb !== 'boxes';
				}).map(function (_0x2d900f) {
					var _0x476ae6 = _0x372bad + '  ' + _0x2d900f + ': ', _0x61e880 = _0x74b8ab[_0x2d900f];
					if (_0x61e880 instanceof Uint8Array || _0x61e880 instanceof Uint32Array) {
						var _0x519113 = Array.prototype.slice.call(new Uint8Array(_0x61e880.buffer, _0x61e880.byteOffset, _0x61e880.byteLength)).map(function (_0x203786) {
							return ' ' + ('00' + _0x203786.toString(16)).slice(-2);
						}).join('').match(/.{1,24}/g);
						if (!_0x519113) {
							return _0x476ae6 + '<>';
						}
						if (_0x519113.length === 1) {
							return _0x476ae6 + '<' + _0x519113.join('').slice(1) + '>';
						}
						return _0x476ae6 + '<\n' + _0x519113.map(function (_0x2d0939) {
							return _0x372bad + '  ' + _0x2d0939;
						}).join('\n') + '\n' + _0x372bad + '  >';
					}
					return _0x476ae6 + JSON.stringify(_0x61e880, null, 2).split('\n').map(function (_0x50610f, _0xaaf0c5) {
						if (_0xaaf0c5 === 0) {
							return _0x50610f;
						}
						return _0x372bad + '  ' + _0x50610f;
					}).join('\n');
				}).join('\n') + (_0x74b8ab.boxes ? '\n' + _0x4be1ac(_0x74b8ab.boxes, _0xe9982 + 1) : '');
			}).join('\n');
		}, _0x31fbf6 = {
			'inspect': _0x33f1c7,
			'textify': _0x4be1ac,
			'parseTfdt': _0x34d66f.tfdt,
			'parseHdlr': _0x34d66f.hdlr,
			'parseTfhd': _0x34d66f.tfhd,
			'parseTrun': _0x34d66f.trun
		}, _0x177bf5, _0x357d85, _0x5135fc, _0x12ed7c, _0x5d326c, _0x4d774f, _0x58e8e2 = Object.freeze({
			'default': _0x31fbf6,
			'__moduleExports': _0x31fbf6,
			'inspect': _0x31fbf6.inspect,
			'textify': _0x31fbf6.textify,
			'parseTfdt': _0x31fbf6.parseTfdt,
			'parseHdlr': _0x31fbf6.parseHdlr,
			'parseTfhd': _0x31fbf6.parseTfhd,
			'parseTrun': _0x31fbf6.parseTrun
		}), _0xaa909 = _0x58e8e2 && _0x31fbf6 || _0x58e8e2, _0x33b039 = _0x46ff06.discardEmulationPreventionBytes, _0x298087 = _0x4ee5f6.CaptionStream, _0x433284 = function _0xe46bba(_0x2bfe2f, _0x1257eb) {
			var _0x509bc1 = _0x2bfe2f;
			for (var _0x19a451 = 0; _0x19a451 < _0x1257eb.length; _0x19a451++) {
				var _0x22064c = _0x1257eb[_0x19a451];
				if (_0x509bc1 < _0x22064c.size) {
					return _0x22064c;
				}
				_0x509bc1 -= _0x22064c.size;
			}
			return null;
		}, _0x7b0166 = function _0x5bb832(_0x1c9c8b, _0x1a4c4f, _0x973e65) {
			var _0x4374ea = new DataView(_0x1c9c8b.buffer, _0x1c9c8b.byteOffset, _0x1c9c8b.byteLength), _0x38ca66 = [], _0x50d6a5, _0x4b6e43, _0x101a20, _0x157b3b;
			for (_0x4b6e43 = 0; _0x4b6e43 + 4 < _0x1c9c8b.length; _0x4b6e43 += _0x101a20) {
				_0x101a20 = _0x4374ea.getUint32(_0x4b6e43);
				_0x4b6e43 += 4;
				if (_0x101a20 <= 0) {
					continue;
				}
				switch (_0x1c9c8b[_0x4b6e43] & 31) {
					case 6:
						var _0x3d0ecb = _0x1c9c8b.subarray(_0x4b6e43 + 1, _0x4b6e43 + 1 + _0x101a20), _0x2ab2a9 = _0x433284(_0x4b6e43, _0x1a4c4f);
						_0x50d6a5 = {
							'nalUnitType': 'sei_rbsp',
							'size': _0x101a20,
							'data': _0x3d0ecb,
							'escapedRBSP': _0x33b039(_0x3d0ecb),
							'trackId': _0x973e65
						};
						_0x2ab2a9 ? (_0x50d6a5.pts = _0x2ab2a9.pts, _0x50d6a5.dts = _0x2ab2a9.dts, _0x157b3b = _0x2ab2a9) : (_0x50d6a5.pts = _0x157b3b.pts, _0x50d6a5.dts = _0x157b3b.dts);
						_0x38ca66.push(_0x50d6a5);
						break;
					default:
						break;
				}
			}
			return _0x38ca66;
		}, _0x35ed89 = function _0x5ace64(_0x443d50, _0x1a449c, _0x674a55) {
			var _0xf84226 = _0x1a449c, _0x1b8341 = _0x674a55.defaultSampleDuration || 0, _0x1efb7f = _0x674a55.defaultSampleSize || 0, _0xa9c115 = _0x674a55.trackId, _0x1748e4 = [];
			return _0x443d50.forEach(function (_0xe60c3) {
				var _0x1a9c2a = _0xaa909.parseTrun(_0xe60c3), _0x1557aa = _0x1a9c2a.samples;
				_0x1557aa.forEach(function (_0x4cb78e) {
					if (_0x4cb78e.duration === undefined) {
						_0x4cb78e.duration = _0x1b8341;
					}
					if (_0x4cb78e.size === undefined) {
						_0x4cb78e.size = _0x1efb7f;
					}
					_0x4cb78e.trackId = _0xa9c115;
					_0x4cb78e.dts = _0xf84226;
					if (_0x4cb78e.compositionTimeOffset === undefined) {
						_0x4cb78e.compositionTimeOffset = 0;
					}
					_0x4cb78e.pts = _0xf84226 + _0x4cb78e.compositionTimeOffset;
					_0xf84226 += _0x4cb78e.duration;
				});
				_0x1748e4 = _0x1748e4.concat(_0x1557aa);
			}), _0x1748e4;
		}, _0x204d4a = function _0x7b620d(_0x46d3e4, _0x4e6041) {
			var _0xf9cac8 = _0x1d4ee0.findBox(_0x46d3e4, [
				'moof',
				'traf'
			]), _0x552107 = _0x1d4ee0.findBox(_0x46d3e4, ['mdat']), _0x51139e = {
				_0x6ecfe8: [],
				_0x6ecfe8: _0x51139e[_0x6ecfe8].concat(_0x3f8d78)
			}, _0x6651ff = [];
			return _0x552107.forEach(function (_0x57a8e9, _0x1b5f01) {
				var _0xad53a3 = _0xf9cac8[_0x1b5f01];
				_0x6651ff.push({
					'mdat': _0x57a8e9,
					'traf': _0xad53a3
				});
			}), _0x6651ff.forEach(function (_0x461fd0) {
				var _0x9d4cd5 = _0x461fd0.mdat, _0x5c3a70 = _0x461fd0.traf, _0x18294c = _0x1d4ee0.findBox(_0x5c3a70, ['tfhd']), _0x481b9d = _0xaa909.parseTfhd(_0x18294c[0]), _0x6ecfe8 = _0x481b9d.trackId, _0x50e5b7 = _0x1d4ee0.findBox(_0x5c3a70, ['tfdt']), _0x470e10 = _0x50e5b7.length > 0 ? _0xaa909.parseTfdt(_0x50e5b7[0]).baseMediaDecodeTime : 0, _0x1743e1 = _0x1d4ee0.findBox(_0x5c3a70, ['trun']), _0x11882a, _0x3f8d78;
				if (_0x4e6041 === _0x6ecfe8 && _0x1743e1.length > 0) {
					_0x11882a = _0x35ed89(_0x1743e1, _0x470e10, _0x481b9d);
					_0x3f8d78 = _0x7b0166(_0x9d4cd5, _0x11882a, _0x6ecfe8);
					if (!_0x51139e[_0x6ecfe8]) {
					}
				}
			}), _0x51139e;
		}, _0x620682 = function _0x2af772(_0x33e93e, _0x73bf56, _0x19122a) {
			var _0x4f16ca;
			if (!_0x73bf56) {
				return null;
			}
			return _0x4f16ca = _0x204d4a(_0x33e93e, _0x73bf56), {
				'seiNals': _0x4f16ca[_0x73bf56],
				'timescale': _0x19122a
			};
		}, _0x44a6b9 = function _0x28cd43() {
			var _0x1ab036 = false, _0x313135, _0x244a3d, _0x411dc8, _0x2f406c, _0x37e8b8;
			this.isInitialized = function () {
				return _0x1ab036;
			};
			this.init = function () {
				_0x313135 = new _0x298087();
				_0x1ab036 = true;
				_0x313135.on('data', function (_0x461901) {
					_0x461901.startTime = _0x461901.startPts / _0x2f406c;
					_0x461901.endTime = _0x461901.endPts / _0x2f406c;
					_0x37e8b8.captions.push(_0x461901);
					_0x37e8b8.captionStreams[_0x461901.stream] = true;
				});
			};
			this.isNewInit = function (_0x330f4b, _0x5241b7) {
				if (_0x330f4b && _0x330f4b.length === 0 || _0x5241b7 && (typeof _0x5241b7 === 'undefined' ? 'undefined' : _0x413e18(_0x5241b7)) === 'object' && Object.keys(_0x5241b7).length === 0) {
					return false;
				}
				return _0x411dc8 !== _0x330f4b[0] || _0x2f406c !== _0x5241b7[_0x411dc8];
			};
			this.parse = function (_0x2d6678, _0x37d39b, _0x299313) {
				var _0x15ad4c;
				if (!this.isInitialized()) {
					return null;
				} else {
					if (!_0x37d39b || !_0x299313) {
						return null;
					} else {
						if (this.isNewInit(_0x37d39b, _0x299313)) {
							_0x411dc8 = _0x37d39b[0];
							_0x2f406c = _0x299313[_0x411dc8];
						} else {
							if (!_0x411dc8 || !_0x2f406c) {
								return _0x244a3d.push(_0x2d6678), null;
							}
						}
					}
				}
				while (_0x244a3d.length > 0) {
					var _0x1cde49 = _0x244a3d.shift();
					this.parse(_0x1cde49, _0x37d39b, _0x299313);
				}
				_0x15ad4c = _0x620682(_0x2d6678, _0x411dc8, _0x2f406c);
				if (_0x15ad4c === null || !_0x15ad4c.seiNals) {
					return null;
				}
				return this.pushNals(_0x15ad4c.seiNals), this.flushStream(), _0x37e8b8;
			};
			this.pushNals = function (_0x25dc79) {
				if (!this.isInitialized() || !_0x25dc79 || _0x25dc79.length === 0) {
					return null;
				}
				_0x25dc79.forEach(function (_0x3ef928) {
					_0x313135.push(_0x3ef928);
				});
			};
			this.flushStream = function () {
				if (!this.isInitialized()) {
					return null;
				}
				_0x313135.flush();
			};
			this.clearParsedCaptions = function () {
				_0x37e8b8.captions = [];
				_0x37e8b8.captionStreams = {};
			};
			this.resetCaptionStream = function () {
				if (!this.isInitialized()) {
					return null;
				}
				_0x313135.reset();
			};
			this.clearAllCaptions = function () {
				this.clearParsedCaptions();
				this.resetCaptionStream();
			};
			this.reset = function () {
				_0x244a3d = [];
				_0x411dc8 = null;
				_0x2f406c = null;
				if (!_0x37e8b8) {
					_0x37e8b8 = {
						'captions': [],
						'captionStreams': {}
					};
				} else {
					this.clearParsedCaptions();
				}
				this.resetCaptionStream();
			};
			this.reset();
		}, _0x570803, _0x18c9d0 = Object.freeze({
			'default': _0x44a6b9,
			'__moduleExports': _0x44a6b9
		}), _0x3ee9ec = _0x523cce && _0x2c1e10 || _0x523cce, _0x5f3742, _0xba942c, _0x414457 = {
			'generator': _0x122e62,
			'probe': _0x1d4ee0,
			'Transmuxer': _0x3ee9ec.Transmuxer,
			'AudioSegmentStream': _0x3ee9ec.AudioSegmentStream,
			'VideoSegmentStream': _0x3ee9ec.VideoSegmentStream,
			'CaptionParser': _0x18c9d0 && _0x44a6b9 || _0x18c9d0
		}.CaptionParser, _0x442a24 = function _0x5b1f1e(_0x32544a) {
			var _0xdb9fc = _0x32544a[1] & 31;
			return _0xdb9fc <<= 8, _0xdb9fc |= _0x32544a[2], _0xdb9fc;
		}, _0x35222c = function _0x1759d8(_0x5a082e) {
			return !!(_0x5a082e[1] & 64);
		}, _0x2caead = function _0x198349(_0x1a8c01) {
			var _0x2c93ae = 0;
			if ((_0x1a8c01[3] & 48) >>> 4 > 1) {
				_0x2c93ae += _0x1a8c01[4] + 1;
			}
			return _0x2c93ae;
		}, _0x4649c5, _0x175988, _0x5e92cb, _0x57e499, _0x43087f, _0xc8acd0 = function _0x1dde91(_0x3598d7) {
			switch (_0x3598d7) {
				case 5:
					return 'slice_layer_without_partitioning_rbsp_idr';
				case 6:
					return 'sei_rbsp';
				case 7:
					return 'seq_parameter_set_rbsp';
				case 8:
					return 'pic_parameter_set_rbsp';
				case 9:
					return 'access_unit_delimiter_rbsp';
				default:
					return null;
			}
		}, _0x248e27, _0x331f08 = {
			'parseType': function _0xe66a54(_0x47abf6, _0x59c620) {
				var _0x5f3c46 = _0x442a24(_0x47abf6);
				if (_0x5f3c46 === 0) {
					return 'pat';
				} else {
					if (_0x5f3c46 === _0x59c620) {
						return 'pmt';
					} else {
						if (_0x59c620) {
							return 'pes';
						}
					}
				}
				return null;
			},
			'parsePat': function _0x2a7c73(_0xfec789) {
				var _0x22258b = _0x35222c(_0xfec789), _0x55dcdb = 4 + _0x2caead(_0xfec789);
				if (_0x22258b) {
					_0x55dcdb += _0xfec789[_0x55dcdb] + 1;
				}
				return (_0xfec789[_0x55dcdb + 10] & 31) << 8 | _0xfec789[_0x55dcdb + 11];
			},
			'parsePmt': function _0x4b2ce2(_0x54ba7f) {
				var _0x5fca4b = {}, _0x2c5e95 = _0x35222c(_0x54ba7f), _0x21d9c0 = 4 + _0x2caead(_0x54ba7f);
				if (_0x2c5e95) {
					_0x21d9c0 += _0x54ba7f[_0x21d9c0] + 1;
				}
				if (!(_0x54ba7f[_0x21d9c0 + 5] & 1)) {
					return;
				}
				var _0x11f30f, _0x4ef9fa, _0x2a00ed;
				_0x11f30f = (_0x54ba7f[_0x21d9c0 + 1] & 15) << 8 | _0x54ba7f[_0x21d9c0 + 2];
				_0x4ef9fa = 3 + _0x11f30f - 4;
				_0x2a00ed = (_0x54ba7f[_0x21d9c0 + 10] & 15) << 8 | _0x54ba7f[_0x21d9c0 + 11];
				var _0xb0ea3d = 12 + _0x2a00ed;
				while (_0xb0ea3d < _0x4ef9fa) {
					var _0x3f1738 = _0x21d9c0 + _0xb0ea3d;
					_0x5fca4b[(_0x54ba7f[_0x3f1738 + 1] & 31) << 8 | _0x54ba7f[_0x3f1738 + 2]] = _0x54ba7f[_0x3f1738];
					_0xb0ea3d += ((_0x54ba7f[_0x3f1738 + 3] & 15) << 8 | _0x54ba7f[_0x3f1738 + 4]) + 5;
				}
				return _0x5fca4b;
			},
			'parsePayloadUnitStartIndicator': _0x35222c,
			'parsePesType': function _0x553f8e(_0x3482de, _0xfef359) {
				var _0xfbfbf7 = _0x442a24(_0x3482de), _0x1a411a = _0xfef359[_0xfbfbf7];
				switch (_0x1a411a) {
					case _0x5142f2.H264_STREAM_TYPE:
						return 'video';
					case _0x5142f2.ADTS_STREAM_TYPE:
						return 'audio';
					case _0x5142f2.METADATA_STREAM_TYPE:
						return 'timed-metadata';
					default:
						return null;
				}
			},
			'parsePesTime': function _0x110e76(_0x56a04f) {
				var _0xf31c3d = _0x35222c(_0x56a04f);
				if (!_0xf31c3d) {
					return null;
				}
				var _0x205948 = 4 + _0x2caead(_0x56a04f);
				if (_0x205948 >= _0x56a04f.byteLength) {
					return null;
				}
				var _0x518c73 = null, _0x9e6ab;
				return _0x9e6ab = _0x56a04f[_0x205948 + 7], _0x9e6ab & 192 && (_0x518c73 = {}, _0x518c73.pts = (_0x56a04f[_0x205948 + 9] & 14) << 27 | (_0x56a04f[_0x205948 + 10] & 255) << 20 | (_0x56a04f[_0x205948 + 11] & 254) << 12 | (_0x56a04f[_0x205948 + 12] & 255) << 5 | (_0x56a04f[_0x205948 + 13] & 254) >>> 3, _0x518c73.pts *= 4, _0x518c73.pts += (_0x56a04f[_0x205948 + 13] & 6) >>> 1, _0x518c73.dts = _0x518c73.pts, _0x9e6ab & 64 && (_0x518c73.dts = (_0x56a04f[_0x205948 + 14] & 14) << 27 | (_0x56a04f[_0x205948 + 15] & 255) << 20 | (_0x56a04f[_0x205948 + 16] & 254) << 12 | (_0x56a04f[_0x205948 + 17] & 255) << 5 | (_0x56a04f[_0x205948 + 18] & 254) >>> 3, _0x518c73.dts *= 4, _0x518c73.dts += (_0x56a04f[_0x205948 + 18] & 6) >>> 1)), _0x518c73;
			},
			'videoPacketContainsKeyFrame': function _0x558186(_0x16c4dd) {
				var _0x1b3d82 = 4 + _0x2caead(_0x16c4dd), _0x36b5a0 = _0x16c4dd.subarray(_0x1b3d82), _0xa64283 = 0, _0x5b6898 = 0, _0x1b0ba0 = false, _0x5588f0;
				for (; _0x5b6898 < _0x36b5a0.byteLength - 3; _0x5b6898++) {
					if (_0x36b5a0[_0x5b6898 + 2] === 1) {
						_0xa64283 = _0x5b6898 + 5;
						break;
					}
				}
				while (_0xa64283 < _0x36b5a0.byteLength) {
					switch (_0x36b5a0[_0xa64283]) {
						case 0:
							if (_0x36b5a0[_0xa64283 - 1] !== 0) {
								_0xa64283 += 2;
								break;
							} else {
								if (_0x36b5a0[_0xa64283 - 2] !== 0) {
									_0xa64283++;
									break;
								}
							}
							if (_0x5b6898 + 3 !== _0xa64283 - 2) {
								_0x5588f0 = _0xc8acd0(_0x36b5a0[_0x5b6898 + 3] & 31);
								if (_0x5588f0 === 'slice_layer_without_partitioning_rbsp_idr') {
									_0x1b0ba0 = true;
								}
							}
							do {
								_0xa64283++;
							} while (_0x36b5a0[_0xa64283] !== 1 && _0xa64283 < _0x36b5a0.length);
							_0x5b6898 = _0xa64283 - 2, _0xa64283 += 3;
							break;
						case 1:
							if (_0x36b5a0[_0xa64283 - 1] !== 0 || _0x36b5a0[_0xa64283 - 2] !== 0) {
								_0xa64283 += 3;
								break;
							}
							_0x5588f0 = _0xc8acd0(_0x36b5a0[_0x5b6898 + 3] & 31);
							if (_0x5588f0 === 'slice_layer_without_partitioning_rbsp_idr') {
								_0x1b0ba0 = true;
							}
							_0x5b6898 = _0xa64283 - 2, _0xa64283 += 3;
							break;
						default:
							_0xa64283 += 3;
							break;
					}
				}
				_0x36b5a0 = _0x36b5a0.subarray(_0x5b6898);
				_0xa64283 -= _0x5b6898;
				_0x5b6898 = 0;
				if (_0x36b5a0 && _0x36b5a0.byteLength > 3) {
					_0x5588f0 = _0xc8acd0(_0x36b5a0[_0x5b6898 + 3] & 31);
					if (_0x5588f0 === 'slice_layer_without_partitioning_rbsp_idr') {
						_0x1b0ba0 = true;
					}
				}
				return _0x1b0ba0;
			}
		}, _0x506ccc, _0x57e075, _0x19a89d, _0x4ef4c9, _0x16a595, _0x325ef9, _0x2168d6, _0x51adfb = Object.freeze({
			'default': _0x331f08,
			'__moduleExports': _0x331f08,
			'parseType': _0x331f08.parseType,
			'parsePat': _0x331f08.parsePat,
			'parsePmt': _0x331f08.parsePmt,
			'parsePayloadUnitStartIndicator': _0x331f08.parsePayloadUnitStartIndicator,
			'parsePesType': _0x331f08.parsePesType,
			'parsePesTime': _0x331f08.parsePesTime,
			'videoPacketContainsKeyFrame': _0x331f08.videoPacketContainsKeyFrame
		}), _0x8f0644 = [
			96000,
			88200,
			64000,
			48000,
			44100,
			32000,
			24000,
			22050,
			16000,
			12000,
			11025,
			8000,
			7350
		], _0x12c69b = function _0x593c9b(_0x12fea6) {
			return _0x12fea6[0] << 21 | _0x12fea6[1] << 14 | _0x12fea6[2] << 7 | _0x12fea6[3];
		}, _0x61c231 = function _0x1c22ff(_0x2115a2, _0x3d3930, _0x51c928) {
			var _0x5abbf6, _0xa4be29 = '';
			for (_0x5abbf6 = _0x3d3930; _0x5abbf6 < _0x51c928; _0x5abbf6++) {
				_0xa4be29 += '%' + ('00' + _0x2115a2[_0x5abbf6].toString(16)).slice(-2);
			}
			return _0xa4be29;
		}, _0x1baa67 = function _0x173802(_0x19280e, _0x3cb295, _0x83e75b) {
			return unescape(_0x61c231(_0x19280e, _0x3cb295, _0x83e75b));
		}, _0x2fa1df, _0x3ad583, _0x49bfa7, _0x3b1c09, _0x33d007, _0x44246d = {
			'parseId3TagSize': function _0x5162ef(_0xd1f3a7, _0x314f1b) {
				var _0x3d92b7 = _0xd1f3a7[_0x314f1b + 6] << 21 | _0xd1f3a7[_0x314f1b + 7] << 14 | _0xd1f3a7[_0x314f1b + 8] << 7 | _0xd1f3a7[_0x314f1b + 9], _0x5cdc64 = _0xd1f3a7[_0x314f1b + 5], _0x298271 = (_0x5cdc64 & 16) >> 4;
				if (_0x298271) {
					return _0x3d92b7 + 20;
				}
				return _0x3d92b7 + 10;
			},
			'parseAdtsSize': function _0x5f406e(_0x435797, _0x4468dc) {
				var _0x327f37 = (_0x435797[_0x4468dc + 5] & 224) >> 5, _0xdcb875 = _0x435797[_0x4468dc + 4] << 3, _0x205c9e = _0x435797[_0x4468dc + 3] & 3 << 11;
				return _0x205c9e | _0xdcb875 | _0x327f37;
			},
			'parseType': function _0x1fb2a4(_0x4f2948, _0x1b121b) {
				if (_0x4f2948[_0x1b121b] === 'I'.charCodeAt(0) && _0x4f2948[_0x1b121b + 1] === 'D'.charCodeAt(0) && _0x4f2948[_0x1b121b + 2] === '3'.charCodeAt(0)) {
					return 'timed-metadata';
				} else {
					if (_0x4f2948[_0x1b121b] & true && (_0x4f2948[_0x1b121b + 1] & 240) === 240) {
						return 'audio';
					}
				}
				return null;
			},
			'parseSampleRate': function _0x5633b1(_0x4c87cc) {
				var _0x5635dd = 0;
				while (_0x5635dd + 5 < _0x4c87cc.length) {
					if (_0x4c87cc[_0x5635dd] !== 255 || (_0x4c87cc[_0x5635dd + 1] & 246) !== 240) {
						_0x5635dd++;
						continue;
					}
					return _0x8f0644[(_0x4c87cc[_0x5635dd + 2] & 60) >>> 2];
				}
				return null;
			},
			'parseAacTimestamp': function _0xd166af(_0xc682ef) {
				var _0xe4029, _0x29a7d5, _0x2ea018, _0x4af2bd;
				_0xe4029 = 10;
				if (_0xc682ef[5] & 64) {
					_0xe4029 += 4;
					_0xe4029 += _0x12c69b(_0xc682ef.subarray(10, 14));
				}
				do {
					_0x29a7d5 = _0x12c69b(_0xc682ef.subarray(_0xe4029 + 4, _0xe4029 + 8));
					if (_0x29a7d5 < 1) {
						return null;
					}
					_0x4af2bd = String.fromCharCode(_0xc682ef[_0xe4029], _0xc682ef[_0xe4029 + 1], _0xc682ef[_0xe4029 + 2], _0xc682ef[_0xe4029 + 3]);
					if (_0x4af2bd === 'PRIV') {
						_0x2ea018 = _0xc682ef.subarray(_0xe4029 + 10, _0xe4029 + _0x29a7d5 + 10);
						for (var _0xb77099 = 0; _0xb77099 < _0x2ea018.byteLength; _0xb77099++) {
							if (_0x2ea018[_0xb77099] === 0) {
								var _0x288e08 = _0x1baa67(_0x2ea018, 0, _0xb77099);
								if (_0x288e08 === 'com.apple.streaming.transportStreamTimestamp') {
									var _0x4d2401 = _0x2ea018.subarray(_0xb77099 + 1), _0x189b19 = (_0x4d2401[3] & 1) << 30 | _0x4d2401[4] << 22 | _0x4d2401[5] << 14 | _0x4d2401[6] << 6 | _0x4d2401[7] >>> 2;
									return _0x189b19 *= 4, _0x189b19 += _0x4d2401[7] & 3, _0x189b19;
								}
								break;
							}
						}
					}
					_0xe4029 += 10;
					_0xe4029 += _0x29a7d5;
				} while (_0xe4029 < _0xc682ef.byteLength);
				return null;
			}
		}, _0x162a03, _0xedb836, _0xd638e, _0x144e62, _0x21eba6, _0x304ba5 = Object.freeze({
			'default': _0x44246d,
			'__moduleExports': _0x44246d,
			'parseId3TagSize': _0x44246d.parseId3TagSize,
			'parseAdtsSize': _0x44246d.parseAdtsSize,
			'parseType': _0x44246d.parseType,
			'parseSampleRate': _0x44246d.parseSampleRate,
			'parseAacTimestamp': _0x44246d.parseAacTimestamp
		}), _0xc0605c, _0x3c2156 = _0x304ba5 && _0x44246d || _0x304ba5, _0x34b2bb = _0x35040b.handleRollover, _0x181487 = {}, _0x5b5c22 = (_0x181487.ts = _0x51adfb && _0x331f08 || _0x51adfb, _0x181487.aac = _0x3c2156, 90000), _0x2878aa = function _0x11972c(_0x41d545) {
			if (_0x41d545[0] === 'I'.charCodeAt(0) && _0x41d545[1] === 'D'.charCodeAt(0) && _0x41d545[2] === '3'.charCodeAt(0)) {
				return true;
			}
			return false;
		}, _0x3f4014 = function _0x204916(_0x258ec1, _0x16a09d) {
			var _0x2cd641 = 0, _0x481087 = 188, _0x39df9a, _0x982b65;
			while (_0x481087 < _0x258ec1.byteLength) {
				if (_0x258ec1[_0x2cd641] === 71 && _0x258ec1[_0x481087] === 71) {
					_0x39df9a = _0x258ec1.subarray(_0x2cd641, _0x481087);
					_0x982b65 = _0x181487.ts.parseType(_0x39df9a, _0x16a09d.pid);
					switch (_0x982b65) {
						case 'pat':
							if (!_0x16a09d.pid) {
								_0x16a09d.pid = _0x181487.ts.parsePat(_0x39df9a);
							}
							break;
						case 'pmt':
							if (!_0x16a09d.table) {
								_0x16a09d.table = _0x181487.ts.parsePmt(_0x39df9a);
							}
							break;
						default:
							break;
					}
					if (_0x16a09d.pid && _0x16a09d.table) {
						return;
					}
					_0x2cd641 += 188;
					_0x481087 += 188;
					continue;
				}
				_0x2cd641++;
				_0x481087++;
			}
		}, _0x172661 = function _0x3a5edc(_0x12b3b8, _0x498022, _0x4c1bb9) {
			var _0x4851ab = 0, _0x377902 = 188, _0x57f620, _0x33e61a, _0x96d64e, _0x4d1fc9, _0x472ede, _0x58b112 = false;
			while (_0x377902 < _0x12b3b8.byteLength) {
				if (_0x12b3b8[_0x4851ab] === 71 && _0x12b3b8[_0x377902] === 71) {
					_0x57f620 = _0x12b3b8.subarray(_0x4851ab, _0x377902);
					_0x33e61a = _0x181487.ts.parseType(_0x57f620, _0x498022.pid);
					switch (_0x33e61a) {
						case 'pes':
							_0x96d64e = _0x181487.ts.parsePesType(_0x57f620, _0x498022.table), _0x4d1fc9 = _0x181487.ts.parsePayloadUnitStartIndicator(_0x57f620);
							_0x96d64e === 'audio' && _0x4d1fc9 && (_0x472ede = _0x181487.ts.parsePesTime(_0x57f620), _0x472ede && (_0x472ede.type = 'audio', _0x4c1bb9.audio.push(_0x472ede), _0x58b112 = true));
							break;
						default:
							break;
					}
					if (_0x58b112) {
						break;
					}
					_0x4851ab += 188;
					_0x377902 += 188;
					continue;
				}
				_0x4851ab++;
				_0x377902++;
			}
			_0x377902 = _0x12b3b8.byteLength;
			_0x4851ab = _0x377902 - 188;
			_0x58b112 = false;
			while (_0x4851ab >= 0) {
				if (_0x12b3b8[_0x4851ab] === 71 && _0x12b3b8[_0x377902] === 71) {
					_0x57f620 = _0x12b3b8.subarray(_0x4851ab, _0x377902);
					_0x33e61a = _0x181487.ts.parseType(_0x57f620, _0x498022.pid);
					switch (_0x33e61a) {
						case 'pes':
							_0x96d64e = _0x181487.ts.parsePesType(_0x57f620, _0x498022.table), _0x4d1fc9 = _0x181487.ts.parsePayloadUnitStartIndicator(_0x57f620);
							_0x96d64e === 'audio' && _0x4d1fc9 && (_0x472ede = _0x181487.ts.parsePesTime(_0x57f620), _0x472ede && (_0x472ede.type = 'audio', _0x4c1bb9.audio.push(_0x472ede), _0x58b112 = true));
							break;
						default:
							break;
					}
					if (_0x58b112) {
						break;
					}
					_0x4851ab -= 188;
					_0x377902 -= 188;
					continue;
				}
				_0x4851ab--;
				_0x377902--;
			}
		}, _0x3f7123 = function _0x5c476d(_0x29222a, _0x307e74, _0x134111) {
			var _0x5e6362 = 0, _0x47b434 = 188, _0x505eaf, _0x3bd1a2, _0x9ade2b, _0xab5902, _0x234a41, _0x56f338, _0x102ec3, _0x85c24e, _0x3ee780 = false, _0x2066f7 = {
				'data': [],
				'size': 0
			};
			while (_0x47b434 < _0x29222a.byteLength) {
				if (_0x29222a[_0x5e6362] === 71 && _0x29222a[_0x47b434] === 71) {
					_0x505eaf = _0x29222a.subarray(_0x5e6362, _0x47b434);
					_0x3bd1a2 = _0x181487.ts.parseType(_0x505eaf, _0x307e74.pid);
					switch (_0x3bd1a2) {
						case 'pes':
							_0x9ade2b = _0x181487.ts.parsePesType(_0x505eaf, _0x307e74.table), _0xab5902 = _0x181487.ts.parsePayloadUnitStartIndicator(_0x505eaf);
							if (_0x9ade2b === 'video') {
								_0xab5902 && !_0x3ee780 && (_0x234a41 = _0x181487.ts.parsePesTime(_0x505eaf), _0x234a41 && (_0x234a41.type = 'video', _0x134111.video.push(_0x234a41), _0x3ee780 = true));
								if (!_0x134111.firstKeyFrame) {
									if (_0xab5902) {
										if (_0x2066f7.size !== 0) {
											_0x56f338 = new Uint8Array(_0x2066f7.size);
											_0x102ec3 = 0;
											while (_0x2066f7.data.length) {
												_0x85c24e = _0x2066f7.data.shift();
												_0x56f338.set(_0x85c24e, _0x102ec3);
												_0x102ec3 += _0x85c24e.byteLength;
											}
											_0x181487.ts.videoPacketContainsKeyFrame(_0x56f338) && (_0x134111.firstKeyFrame = _0x181487.ts.parsePesTime(_0x56f338), _0x134111.firstKeyFrame.type = 'video');
											_0x2066f7.size = 0;
										}
									}
									_0x2066f7.data.push(_0x505eaf);
									_0x2066f7.size += _0x505eaf.byteLength;
								}
							}
							break;
						default:
							break;
					}
					if (_0x3ee780 && _0x134111.firstKeyFrame) {
						break;
					}
					_0x5e6362 += 188;
					_0x47b434 += 188;
					continue;
				}
				_0x5e6362++;
				_0x47b434++;
			}
			_0x47b434 = _0x29222a.byteLength;
			_0x5e6362 = _0x47b434 - 188;
			_0x3ee780 = false;
			while (_0x5e6362 >= 0) {
				if (_0x29222a[_0x5e6362] === 71 && _0x29222a[_0x47b434] === 71) {
					_0x505eaf = _0x29222a.subarray(_0x5e6362, _0x47b434);
					_0x3bd1a2 = _0x181487.ts.parseType(_0x505eaf, _0x307e74.pid);
					switch (_0x3bd1a2) {
						case 'pes':
							_0x9ade2b = _0x181487.ts.parsePesType(_0x505eaf, _0x307e74.table), _0xab5902 = _0x181487.ts.parsePayloadUnitStartIndicator(_0x505eaf);
							_0x9ade2b === 'video' && _0xab5902 && (_0x234a41 = _0x181487.ts.parsePesTime(_0x505eaf), _0x234a41 && (_0x234a41.type = 'video', _0x134111.video.push(_0x234a41), _0x3ee780 = true));
							break;
						default:
							break;
					}
					if (_0x3ee780) {
						break;
					}
					_0x5e6362 -= 188;
					_0x47b434 -= 188;
					continue;
				}
				_0x5e6362--;
				_0x47b434--;
			}
		}, _0x120f76 = function _0x18875c(_0x388197, _0x5c6266) {
			if (_0x388197.audio && _0x388197.audio.length) {
				var _0x8a99cb = _0x5c6266;
				if (typeof _0x8a99cb === 'undefined') {
					_0x8a99cb = _0x388197.audio[0].dts;
				}
				_0x388197.audio.forEach(function (_0x33df1c) {
					_0x33df1c.dts = _0x34b2bb(_0x33df1c.dts, _0x8a99cb);
					_0x33df1c.pts = _0x34b2bb(_0x33df1c.pts, _0x8a99cb);
					_0x33df1c.dtsTime = _0x33df1c.dts / _0x5b5c22;
					_0x33df1c.ptsTime = _0x33df1c.pts / _0x5b5c22;
				});
			}
			if (_0x388197.video && _0x388197.video.length) {
				var _0x2c2b2d = _0x5c6266;
				if (typeof _0x2c2b2d === 'undefined') {
					_0x2c2b2d = _0x388197.video[0].dts;
				}
				_0x388197.video.forEach(function (_0x5bb9e2) {
					_0x5bb9e2.dts = _0x34b2bb(_0x5bb9e2.dts, _0x2c2b2d);
					_0x5bb9e2.pts = _0x34b2bb(_0x5bb9e2.pts, _0x2c2b2d);
					_0x5bb9e2.dtsTime = _0x5bb9e2.dts / _0x5b5c22;
					_0x5bb9e2.ptsTime = _0x5bb9e2.pts / _0x5b5c22;
				});
				if (_0x388197.firstKeyFrame) {
					var _0x59f1a3 = _0x388197.firstKeyFrame;
					_0x59f1a3.dts = _0x34b2bb(_0x59f1a3.dts, _0x2c2b2d);
					_0x59f1a3.pts = _0x34b2bb(_0x59f1a3.pts, _0x2c2b2d);
					_0x59f1a3.dtsTime = _0x59f1a3.dts / _0x5b5c22;
					_0x59f1a3.ptsTime = _0x59f1a3.dts / _0x5b5c22;
				}
			}
		}, _0x38c134 = function _0x178868(_0x437a5e) {
			var _0x47e3c2 = false, _0x4a9983 = 0, _0x29008c = null, _0x56e906 = null, _0x21bdf6 = 0, _0x441e37 = 0, _0x28c37a;
			while (_0x437a5e.length - _0x441e37 >= 3) {
				var _0x3af020 = _0x181487.aac.parseType(_0x437a5e, _0x441e37);
				switch (_0x3af020) {
					case 'timed-metadata':
						if (_0x437a5e.length - _0x441e37 < 10) {
							_0x47e3c2 = true;
							break;
						}
						_0x21bdf6 = _0x181487.aac.parseId3TagSize(_0x437a5e, _0x441e37);
						if (_0x21bdf6 > _0x437a5e.length) {
							_0x47e3c2 = true;
							break;
						}
						if (_0x56e906 === null) {
							_0x28c37a = _0x437a5e.subarray(_0x441e37, _0x441e37 + _0x21bdf6);
							_0x56e906 = _0x181487.aac.parseAacTimestamp(_0x28c37a);
						}
						_0x441e37 += _0x21bdf6;
						break;
					case 'audio':
						if (_0x437a5e.length - _0x441e37 < 7) {
							_0x47e3c2 = true;
							break;
						}
						_0x21bdf6 = _0x181487.aac.parseAdtsSize(_0x437a5e, _0x441e37);
						if (_0x21bdf6 > _0x437a5e.length) {
							_0x47e3c2 = true;
							break;
						}
						if (_0x29008c === null) {
							_0x28c37a = _0x437a5e.subarray(_0x441e37, _0x441e37 + _0x21bdf6);
							_0x29008c = _0x181487.aac.parseSampleRate(_0x28c37a);
						}
						_0x4a9983++, _0x441e37 += _0x21bdf6;
						break;
					default:
						_0x441e37++;
						break;
				}
				if (_0x47e3c2) {
					return null;
				}
			}
			if (_0x29008c === null || _0x56e906 === null) {
				return null;
			}
			var _0x56894d = _0x5b5c22 / _0x29008c, _0x293854 = {
				'audio': [
					{
						'type': 'audio',
						'dts': _0x56e906,
						'pts': _0x56e906
					},
					{
						'type': 'audio',
						'dts': _0x56e906 + _0x4a9983 * 1024 * _0x56894d,
						'pts': _0x56e906 + _0x4a9983 * 1024 * _0x56894d
					}
				]
			};
			return _0x293854;
		}, _0x33f1f3 = function _0x57dacc(_0x4f9ee2) {
			var _0x5bc75b = {};
			_0x3f4014(_0x4f9ee2, _0x57ee99);
			for (var _0x3b8312 in null)
				if (_0x57ee99.table.hasOwnProperty(_0x3b8312)) {
					var _0x1bf0fe = null[_0x3b8312];
					switch (_0x1bf0fe) {
						case _0x5142f2.H264_STREAM_TYPE:
							_0x5bc75b.video = [], _0x3f7123(_0x4f9ee2, _0x57ee99, _0x5bc75b);
							if (_0x5bc75b.video.length === 0) {
								delete _0x5bc75b.video;
							}
							break;
						case _0x5142f2.ADTS_STREAM_TYPE:
							_0x5bc75b.audio = [], _0x172661(_0x4f9ee2, _0x57ee99, _0x5bc75b);
							if (_0x5bc75b.audio.length === 0) {
								delete _0x5bc75b.audio;
							}
							break;
						default:
							break;
					}
				}
			return _0x5bc75b;
		}, _0x3f477e, _0x41fa43 = {
			'inspect': function _0x3b9acd(_0x479b7e, _0x47286f) {
				var _0x560a06 = _0x2878aa(_0x479b7e), _0x2765a1;
				if (_0x560a06) {
					_0x2765a1 = _0x38c134(_0x479b7e);
				} else {
					_0x2765a1 = _0x33f1f3(_0x479b7e);
				}
				if (!_0x2765a1 || !_0x2765a1.audio && !_0x2765a1.video) {
					return null;
				}
				return _0x120f76(_0x2765a1, _0x47286f), _0x2765a1;
			}
		};
		function _0x281aa6(_0x50a92c) {
			return _0x50a92c.subarray(0, _0x50a92c.byteLength - _0x50a92c[_0x50a92c.byteLength - 1]);
		}
		var _0x4290c3 = function _0x287338(_0x2efa53, _0x5b607e) {
			if (!(_0x2efa53 instanceof _0x5b607e)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}, _0x2f325d = (function () {
			function _0x5dc2c9(_0x3ef028, _0x1037f8) {
				for (var _0xcaa244 = 0; _0xcaa244 < _0x1037f8.length; _0xcaa244++) {
					var _0xe2fa71 = _0x1037f8[_0xcaa244];
					_0xe2fa71.enumerable = _0xe2fa71.enumerable || false;
					_0xe2fa71.configurable = true;
					if ('value' in _0xe2fa71) {
						_0xe2fa71.writable = true;
					}
					Object.defineProperty(_0x3ef028, _0xe2fa71.key, _0xe2fa71);
				}
			}
			return function (_0x1f569a, _0x32ddc9, _0x1a60fa) {
				if (_0x32ddc9) {
					_0x5dc2c9(_0x1f569a.prototype, _0x32ddc9);
				}
				if (_0x1a60fa) {
					_0x5dc2c9(_0x1f569a, _0x1a60fa);
				}
				return _0x1f569a;
			};
		}()), _0x41aa9d = function _0x1d6607(_0x209cc9, _0x5929d8) {
			if (typeof _0x5929d8 !== 'function' && _0x5929d8 !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof _0x5929d8 === 'undefined' ? 'undefined' : _0x413e18(_0x5929d8)));
			}
			_0x209cc9.prototype = Object.create(_0x5929d8 && _0x5929d8.prototype, {
				'constructor': {
					'value': _0x209cc9,
					'enumerable': false,
					'writable': true,
					'configurable': true
				}
			});
			if (_0x5929d8) {
				Object.setPrototypeOf ? Object.setPrototypeOf(_0x209cc9, _0x5929d8) : _0x209cc9['__proto__'] = _0x5929d8;
			}
		}, _0x10978b = function _0x5c675d(_0x25d91f, _0x298013) {
			if (!_0x25d91f) {
				throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
			}
			return _0x298013 && ((typeof _0x298013 === 'undefined' ? 'undefined' : _0x413e18(_0x298013)) === 'object' || typeof _0x298013 === 'function') ? _0x298013 : _0x25d91f;
		}, _0xa7909e = function _0x5ab2b9() {
			var _0x14b20b = [
				[
					[],
					[],
					[],
					[],
					[]
				],
				[
					[],
					[],
					[],
					[],
					[]
				]
			], _0x106495 = _0x14b20b[0], _0x369077 = _0x14b20b[1], _0x917449 = _0x106495[4], _0x57a1b0 = _0x369077[4], _0x5f402f = void 0, _0x29bd25 = void 0, _0x30ccd6 = void 0, _0x1700a0 = [], _0x53c290 = [], _0x23edac = void 0, _0x32b318 = void 0, _0xb356b7 = void 0, _0x4028b1 = void 0, _0x23476e = void 0, _0x1cc6cc = void 0;
			for (_0x5f402f = 0; _0x5f402f < 256; _0x5f402f++) {
				_0x53c290[(_0x1700a0[_0x5f402f] = _0x5f402f << 1 ^ (_0x5f402f >> 7) * 283) ^ _0x5f402f] = _0x5f402f;
			}
			for (_0x29bd25 = _0x30ccd6 = 0; !_0x917449[_0x29bd25]; _0x29bd25 ^= _0x23edac || 1, _0x30ccd6 = _0x53c290[_0x30ccd6] || 1) {
				_0x4028b1 = _0x30ccd6 ^ _0x30ccd6 << 1 ^ _0x30ccd6 << 2 ^ _0x30ccd6 << 3 ^ _0x30ccd6 << 4;
				_0x4028b1 = _0x4028b1 >> 8 ^ _0x4028b1 & 255 ^ 99;
				_0x917449[_0x29bd25] = _0x4028b1;
				_0x57a1b0[_0x4028b1] = _0x29bd25;
				_0xb356b7 = _0x1700a0[_0x32b318 = _0x1700a0[_0x23edac = _0x1700a0[_0x29bd25]]];
				_0x1cc6cc = _0xb356b7 * 16843009 ^ _0x32b318 * 65537 ^ _0x23edac * 257 ^ _0x29bd25 * 16843008;
				_0x23476e = _0x1700a0[_0x4028b1] * 257 ^ _0x4028b1 * 16843008;
				for (_0x5f402f = 0; _0x5f402f < 4; _0x5f402f++) {
					_0x106495[_0x5f402f][_0x29bd25] = _0x23476e = _0x23476e << 24 ^ _0x23476e >>> 8;
					_0x369077[_0x5f402f][_0x4028b1] = _0x1cc6cc = _0x1cc6cc << 24 ^ _0x1cc6cc >>> 8;
				}
			}
			for (_0x5f402f = 0; _0x5f402f < 5; _0x5f402f++) {
				_0x106495[_0x5f402f] = _0x106495[_0x5f402f].slice(0);
				_0x369077[_0x5f402f] = _0x369077[_0x5f402f].slice(0);
			}
			return _0x14b20b;
		}, _0x3650f4 = null, _0x28062e = (function () {
			function _0x49bdea(_0x16bced) {
				_0x4290c3(this, _0x49bdea);
				if (!_0x3650f4) {
					_0x3650f4 = _0xa7909e();
				}
				this['_tables'] = [
					[
						_0x3650f4[0][0].slice(),
						_0x3650f4[0][1].slice(),
						_0x3650f4[0][2].slice(),
						_0x3650f4[0][3].slice(),
						_0x3650f4[0][4].slice()
					],
					[
						_0x3650f4[1][0].slice(),
						_0x3650f4[1][1].slice(),
						_0x3650f4[1][2].slice(),
						_0x3650f4[1][3].slice(),
						_0x3650f4[1][4].slice()
					]
				];
				var _0x15306b = void 0, _0x357416 = void 0, _0x304e99 = void 0, _0x19e5ef = void 0, _0x595244 = void 0, _0x1b9128 = this['_tables'][0][4], _0x136e28 = this['_tables'][1], _0x2a9084 = _0x16bced.length, _0x5b641d = 1;
				if (_0x2a9084 !== 4 && _0x2a9084 !== 6 && _0x2a9084 !== 8) {
					throw new Error('Invalid aes key size');
				}
				_0x19e5ef = _0x16bced.slice(0);
				_0x595244 = [];
				this['_key'] = [
					_0x19e5ef,
					_0x595244
				];
				for (_0x15306b = _0x2a9084; _0x15306b < 4 * _0x2a9084 + 28; _0x15306b++) {
					_0x304e99 = _0x19e5ef[_0x15306b - 1];
					(_0x15306b % _0x2a9084 === 0 || _0x2a9084 === 8 && _0x15306b % _0x2a9084 === 4) && (_0x304e99 = _0x1b9128[_0x304e99 >>> 24] << 24 ^ _0x1b9128[_0x304e99 >> 16 & 255] << 16 ^ _0x1b9128[_0x304e99 >> 8 & 255] << 8 ^ _0x1b9128[_0x304e99 & 255], _0x15306b % _0x2a9084 === 0 && (_0x304e99 = _0x304e99 << 8 ^ _0x304e99 >>> 24 ^ _0x5b641d << 24, _0x5b641d = _0x5b641d << 1 ^ (_0x5b641d >> 7) * 283));
					_0x19e5ef[_0x15306b] = _0x19e5ef[_0x15306b - _0x2a9084] ^ _0x304e99;
				}
				for (_0x357416 = 0; _0x15306b; _0x357416++, _0x15306b--) {
					_0x304e99 = _0x19e5ef[_0x357416 & 3 ? _0x15306b : _0x15306b - 4];
					if (_0x15306b <= 4 || _0x357416 < 4) {
						_0x595244[_0x357416] = _0x304e99;
					} else {
						_0x595244[_0x357416] = _0x136e28[0][_0x1b9128[_0x304e99 >>> 24]] ^ _0x136e28[1][_0x1b9128[_0x304e99 >> 16 & 255]] ^ _0x136e28[2][_0x1b9128[_0x304e99 >> 8 & 255]] ^ _0x136e28[3][_0x1b9128[_0x304e99 & 255]];
					}
				}
			}
			return _0x49bdea.prototype.decrypt = function _0x1b446b(_0x2e9200, _0x3142c1, _0x49bc54, _0x58de84, _0x3449e0, _0x4e3bfb) {
				var _0x49af96 = this['_key'][1], _0x160e9a = _0x2e9200 ^ _0x49af96[0], _0x39efc6 = _0x58de84 ^ _0x49af96[1], _0x234fa4 = _0x49bc54 ^ _0x49af96[2], _0x2e628e = _0x3142c1 ^ _0x49af96[3], _0x3c1830 = void 0, _0x5f30cf = void 0, _0xa329f3 = void 0, _0x12d4ee = _0x49af96.length / 4 - 2, _0x50ef04 = void 0, _0x5d9201 = 4, _0x28b7af = this['_tables'][1], _0x1fb871 = _0x28b7af[0], _0x575f87 = _0x28b7af[1], _0x11cfa7 = _0x28b7af[2], _0x31d74a = _0x28b7af[3], _0x1022a9 = _0x28b7af[4];
				for (_0x50ef04 = 0; _0x50ef04 < _0x12d4ee; _0x50ef04++) {
					_0x3c1830 = _0x1fb871[_0x160e9a >>> 24] ^ _0x575f87[_0x39efc6 >> 16 & 255] ^ _0x11cfa7[_0x234fa4 >> 8 & 255] ^ _0x31d74a[_0x2e628e & 255] ^ _0x49af96[_0x5d9201];
					_0x5f30cf = _0x1fb871[_0x39efc6 >>> 24] ^ _0x575f87[_0x234fa4 >> 16 & 255] ^ _0x11cfa7[_0x2e628e >> 8 & 255] ^ _0x31d74a[_0x160e9a & 255] ^ _0x49af96[_0x5d9201 + 1];
					_0xa329f3 = _0x1fb871[_0x234fa4 >>> 24] ^ _0x575f87[_0x2e628e >> 16 & 255] ^ _0x11cfa7[_0x160e9a >> 8 & 255] ^ _0x31d74a[_0x39efc6 & 255] ^ _0x49af96[_0x5d9201 + 2];
					_0x2e628e = _0x1fb871[_0x2e628e >>> 24] ^ _0x575f87[_0x160e9a >> 16 & 255] ^ _0x11cfa7[_0x39efc6 >> 8 & 255] ^ _0x31d74a[_0x234fa4 & 255] ^ _0x49af96[_0x5d9201 + 3];
					_0x5d9201 += 4;
					_0x160e9a = _0x3c1830;
					_0x39efc6 = _0x5f30cf;
					_0x234fa4 = _0xa329f3;
				}
				for (_0x50ef04 = 0; _0x50ef04 < 4; _0x50ef04++) {
					_0x3449e0[(3 & -_0x50ef04) + _0x4e3bfb] = _0x1022a9[_0x160e9a >>> 24] << 24 ^ _0x1022a9[_0x39efc6 >> 16 & 255] << 16 ^ _0x1022a9[_0x234fa4 >> 8 & 255] << 8 ^ _0x1022a9[_0x2e628e & 255] ^ _0x49af96[_0x5d9201++];
					_0x3c1830 = _0x160e9a;
					_0x160e9a = _0x39efc6;
					_0x39efc6 = _0x234fa4;
					_0x234fa4 = _0x2e628e;
					_0x2e628e = _0x3c1830;
				}
			}, _0x49bdea;
		}()), _0x433bbc = (function () {
			function _0x12bd38() {
				_0x4290c3(this, _0x12bd38);
				this.listeners = {};
			}
			return _0x12bd38.prototype.on = function _0x208335(_0x53fe62, _0x39719a) {
				if (!this.listeners[_0x53fe62]) {
					this.listeners[_0x53fe62] = [];
				}
				this.listeners[_0x53fe62].push(_0x39719a);
			}, _0x12bd38.prototype.off = function _0x10a696(_0x45fc06, _0x1367cc) {
				if (!this.listeners[_0x45fc06]) {
					return false;
				}
				var _0x1218d2 = this.listeners[_0x45fc06].indexOf(_0x1367cc);
				return this.listeners[_0x45fc06].splice(_0x1218d2, 1), _0x1218d2 > -1;
			}, _0x12bd38.prototype.trigger = function _0x56d4a2(_0x2da9a0) {
				var _0x5dfff2 = this.listeners[_0x2da9a0];
				if (!_0x5dfff2) {
					return;
				}
				if (arguments.length === 2) {
					var _0x18ef27 = _0x5dfff2.length;
					for (var _0x419132 = 0; _0x419132 < _0x18ef27; ++_0x419132) {
						_0x5dfff2[_0x419132].call(this, arguments[1]);
					}
				} else {
					var _0x363606 = Array.prototype.slice.call(arguments, 1), _0x12eb03 = _0x5dfff2.length;
					for (var _0x533919 = 0; _0x533919 < _0x12eb03; ++_0x533919) {
						_0x5dfff2[_0x533919].apply(this, _0x363606);
					}
				}
			}, _0x12bd38.prototype.dispose = function _0x48f0db() {
				this.listeners = {};
			}, _0x12bd38.prototype.pipe = function _0x40aa9f(_0x563d4f) {
				this.on('data', function (_0x3ff21d) {
					_0x563d4f.push(_0x3ff21d);
				});
			}, _0x12bd38;
		}()), _0x4186e6 = function (_0x3fe7fe) {
			_0x41aa9d(_0xae5ea3, _0x3fe7fe);
			function _0xae5ea3() {
				_0x4290c3(this, _0xae5ea3);
				var _0x36d156 = _0x10978b(this, _0x3fe7fe.call(this, _0x433bbc));
				return _0x36d156.jobs = [], _0x36d156.delay = 1, _0x36d156.timeout_ = null, _0x36d156;
			}
			return _0xae5ea3.prototype.processJob_ = function _0x228dfc() {
				this.jobs.shift()();
				if (this.jobs.length) {
					this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);
				} else {
					this.timeout_ = null;
				}
			}, _0xae5ea3.prototype.push = function _0x35df9e(_0x5ba0ed) {
				this.jobs.push(_0x5ba0ed);
				if (!this.timeout_) {
					this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);
				}
			}, _0xae5ea3;
		}(_0x433bbc), _0x185d53 = function _0x8c4f4e(_0x347408) {
			return _0x347408 << 24 | (_0x347408 & 65280) << 8 | (_0x347408 & 16711680) >> 8 | _0x347408 >>> 24;
		}, _0x16ce75 = function _0x20a34b(_0xc6cac9, _0x228464, _0x16897d) {
			var _0x4ef863 = new Int32Array(_0xc6cac9.buffer, _0xc6cac9.byteOffset, _0xc6cac9.byteLength >> 2), _0x4d9fee = new _0x28062e(Array.prototype.slice.call(_0x228464)), _0x212faa = new Uint8Array(_0xc6cac9.byteLength), _0x1f44e4 = new Int32Array(_0x212faa.buffer), _0x11f919 = void 0, _0x1ca3e2 = void 0, _0x58d460 = void 0, _0x47ac85 = void 0, _0x192853 = void 0, _0x16b220 = void 0, _0x3807fa = void 0, _0x12d80a = void 0, _0x3229c3 = void 0;
			_0x11f919 = _0x16897d[0];
			_0x1ca3e2 = _0x16897d[1];
			_0x58d460 = _0x16897d[2];
			_0x47ac85 = _0x16897d[3];
			for (_0x3229c3 = 0; _0x3229c3 < _0x4ef863.length; _0x3229c3 += 4) {
				_0x192853 = _0x185d53(_0x4ef863[_0x3229c3]);
				_0x16b220 = _0x185d53(_0x4ef863[_0x3229c3 + 1]);
				_0x3807fa = _0x185d53(_0x4ef863[_0x3229c3 + 2]);
				_0x12d80a = _0x185d53(_0x4ef863[_0x3229c3 + 3]);
				_0x4d9fee.decrypt(_0x192853, _0x16b220, _0x3807fa, _0x12d80a, _0x1f44e4, _0x3229c3);
				_0x1f44e4[_0x3229c3] = _0x185d53(_0x1f44e4[_0x3229c3] ^ _0x11f919);
				_0x1f44e4[_0x3229c3 + 1] = _0x185d53(_0x1f44e4[_0x3229c3 + 1] ^ _0x1ca3e2);
				_0x1f44e4[_0x3229c3 + 2] = _0x185d53(_0x1f44e4[_0x3229c3 + 2] ^ _0x58d460);
				_0x1f44e4[_0x3229c3 + 3] = _0x185d53(_0x1f44e4[_0x3229c3 + 3] ^ _0x47ac85);
				_0x11f919 = _0x192853;
				_0x1ca3e2 = _0x16b220;
				_0x58d460 = _0x3807fa;
				_0x47ac85 = _0x12d80a;
			}
			return _0x212faa;
		}, _0x3ab7b0 = (function () {
			function _0x5290cb(_0x522546, _0x2e75ac, _0x2a1fc8, _0x385e24) {
				_0x4290c3(this, _0x5290cb);
				var _0x35957f = _0x5290cb.STEP, _0x46fb2e = new Int32Array(_0x522546.buffer), _0x380cba = new Uint8Array(_0x522546.byteLength), _0x5f14dd = 0;
				this.asyncStream_ = new _0x4186e6();
				this.asyncStream_.push(this.decryptChunk_(_0x46fb2e.subarray(_0x5f14dd, _0x5f14dd + _0x35957f), _0x2e75ac, _0x2a1fc8, _0x380cba));
				for (_0x5f14dd = _0x35957f; _0x5f14dd < _0x46fb2e.length; _0x5f14dd += _0x35957f) {
					_0x2a1fc8 = new Uint32Array([
						_0x185d53(_0x46fb2e[_0x5f14dd - 4]),
						_0x185d53(_0x46fb2e[_0x5f14dd - 3]),
						_0x185d53(_0x46fb2e[_0x5f14dd - 2]),
						_0x185d53(_0x46fb2e[_0x5f14dd - 1])
					]);
					this.asyncStream_.push(this.decryptChunk_(_0x46fb2e.subarray(_0x5f14dd, _0x5f14dd + _0x35957f), _0x2e75ac, _0x2a1fc8, _0x380cba));
				}
				this.asyncStream_.push(function () {
					_0x385e24(null, _0x281aa6(_0x380cba));
				});
			}
			return _0x5290cb.prototype.decryptChunk_ = function _0x8673f2(_0x35834b, _0x44bd62, _0x4fe351, _0x17b93c) {
				return function () {
					var _0x2f7b0a = _0x16ce75(_0x35834b, _0x44bd62, _0x4fe351);
					_0x17b93c.set(_0x2f7b0a, _0x35834b.byteOffset);
				};
			}, _0x2f325d(_0x5290cb, null, [{
				'key': 'STEP',
				'get': function _0x2a8777() {
					return 32000;
				}
			}]), _0x5290cb;
		}()), _0x18eefc = function _0x1d3809(_0x4f7822, _0x5118ec) {
			if (/^[a-z]+:/i.test(_0x5118ec)) {
				return _0x5118ec;
			}
			if (!/\/\//i.test(_0x4f7822)) {
				_0x4f7822 = _0x35f560.buildAbsoluteURL(_0x504cd5.location.href, _0x4f7822);
			}
			return _0x35f560.buildAbsoluteURL(_0x4f7822, _0x5118ec);
		}, _0x43a5ef = function _0x55b910(_0x416ef3, _0x2f4dcf) {
			if (!(_0x416ef3 instanceof _0x2f4dcf)) {
				throw new TypeError('Cannot call a class as a function');
			}
		}, _0x470055 = (function () {
			function _0x23948(_0x34ad30, _0x4a45ea) {
				for (var _0x3a1d24 = 0; _0x3a1d24 < _0x4a45ea.length; _0x3a1d24++) {
					var _0x654842 = _0x4a45ea[_0x3a1d24];
					_0x654842.enumerable = _0x654842.enumerable || false;
					_0x654842.configurable = true;
					if ('value' in _0x654842) {
						_0x654842.writable = true;
					}
					Object.defineProperty(_0x34ad30, _0x654842.key, _0x654842);
				}
			}
			return function (_0x3d4648, _0x1697fb, _0x3d9206) {
				if (_0x1697fb) {
					_0x23948(_0x3d4648.prototype, _0x1697fb);
				}
				if (_0x3d9206) {
					_0x23948(_0x3d4648, _0x3d9206);
				}
				return _0x3d4648;
			};
		}()), _0x3f47cc = function _0x2341ee(_0x158fd9, _0x4150fe, _0x184d22) {
			if (_0x158fd9 === null) {
				_0x158fd9 = Function.prototype;
			}
			var _0x4f9878 = Object.getOwnPropertyDescriptor(_0x158fd9, _0x4150fe);
			if (_0x4f9878 === undefined) {
				var _0x3c6b11 = Object.getPrototypeOf(_0x158fd9);
				if (_0x3c6b11 === null) {
					return undefined;
				} else {
					return _0x2341ee(_0x3c6b11, _0x4150fe, _0x184d22);
				}
			} else {
				if ('value' in _0x4f9878) {
					return _0x4f9878.value;
				} else {
					var _0xe420e2 = _0x4f9878.get;
					if (_0xe420e2 === undefined) {
						return undefined;
					}
					return _0xe420e2.call(_0x184d22);
				}
			}
		}, _0x4b5e39 = function _0x4bf532(_0x30dbc4, _0x16e121) {
			if (typeof _0x16e121 !== 'function' && _0x16e121 !== null) {
				throw new TypeError('Super expression must either be null or a function, not ' + (typeof _0x16e121 === 'undefined' ? 'undefined' : _0x413e18(_0x16e121)));
			}
			_0x30dbc4.prototype = Object.create(_0x16e121 && _0x16e121.prototype, {
				'constructor': {
					'value': _0x30dbc4,
					'enumerable': false,
					'writable': true,
					'configurable': true
				}
			});
			if (_0x16e121) {
				Object.setPrototypeOf ? Object.setPrototypeOf(_0x30dbc4, _0x16e121) : _0x30dbc4['__proto__'] = _0x16e121;
			}
		}, _0xb2fb9f = function _0xcae8(_0x14c9e4, _0x554fba) {
			if (!_0x14c9e4) {
				throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
			}
			return _0x554fba && ((typeof _0x554fba === 'undefined' ? 'undefined' : _0x413e18(_0x554fba)) === 'object' || typeof _0x554fba === 'function') ? _0x554fba : _0x14c9e4;
		}, _0x1b6cd5 = (function () {
			function _0x398feb(_0x4be73b, _0x593860) {
				var _0x30c84f = [], _0x11d070 = true, _0x2e72c6 = false, _0x37ee9f = undefined;
				try {
					for (var _0x32e9e0 = _0x4be73b[Symbol.iterator](), _0x393df0; !(_0x11d070 = (_0x393df0 = _0x32e9e0.next()).done); _0x11d070 = true) {
						_0x30c84f.push(_0x393df0.value);
						if (_0x593860 && _0x30c84f.length === _0x593860) {
							break;
						}
					}
				} catch (_0x4b66ec) {
					_0x2e72c6 = true;
					_0x37ee9f = _0x4b66ec;
				} finally {
					try {
						if (!_0x11d070 && _0x32e9e0.return) {
							_0x32e9e0.return();
						}
					} finally {
						if (_0x2e72c6) {
							throw _0x37ee9f;
						}
					}
				}
				return _0x30c84f;
			}
			return function (_0x11295d, _0x10fd7f) {
				if (Array.isArray(_0x11295d)) {
					return _0x11295d;
				} else {
					if (Symbol.iterator in Object(_0x11295d)) {
						return _0x398feb(_0x11295d, _0x10fd7f);
					} else {
						throw new TypeError('Invalid attempt to destructure non-iterable instance');
					}
				}
			};
		}()), _0x43b46a = _0x465e34.mergeOptions, _0x10a2c6 = _0x465e34.EventTarget, _0x1d0a21 = _0x465e34.log, _0x260277 = function _0xb06966(_0x4b2d48, _0x12a060) {
			[
				'AUDIO',
				'SUBTITLES'
			].forEach(function (_0x347004) {
				for (var _0x76d877 in _0x4b2d48.mediaGroups[_0x347004])
					for (var _0x371eb4 in _0x4b2d48.mediaGroups[_0x347004][_0x76d877]) {
						var _0x54dda7 = _0x4b2d48.mediaGroups[_0x347004][_0x76d877][_0x371eb4];
						_0x12a060(_0x54dda7, _0x347004, _0x76d877, _0x371eb4);
					}
			});
		}, _0x2e75b8 = function _0x5ddcf4(_0x5992e9, _0x11d0bf, _0x1d3102) {
			var _0x2989a2 = _0x11d0bf.slice();
			_0x1d3102 = _0x1d3102 || 0;
			var _0xd6def9 = Math.min(_0x5992e9.length, _0x11d0bf.length + _0x1d3102);
			for (var _0xfce871 = _0x1d3102; _0xfce871 < _0xd6def9; _0xfce871++) {
				_0x2989a2[_0xfce871 - _0x1d3102] = _0x43b46a(_0x5992e9[_0xfce871], _0x2989a2[_0xfce871 - _0x1d3102]);
			}
			return _0x2989a2;
		}, _0x39c434 = function _0x3a2103(_0x44ecff, _0x190a0d) {
			if (!_0x44ecff.resolvedUri) {
				_0x44ecff.resolvedUri = _0x18eefc(_0x190a0d, _0x44ecff.uri);
			}
			if (_0x44ecff.key && !_0x44ecff.key.resolvedUri) {
				_0x44ecff.key.resolvedUri = _0x18eefc(_0x190a0d, _0x44ecff.key.uri);
			}
			if (_0x44ecff.map && !_0x44ecff.map.resolvedUri) {
				_0x44ecff.map.resolvedUri = _0x18eefc(_0x190a0d, _0x44ecff.map.uri);
			}
		}, _0x559116 = function _0x4532f9(_0x59da7e, _0x2c7f47) {
			var _0x26149e = _0x43b46a(_0x59da7e, {}), _0x1a71f4 = _0x26149e.playlists[_0x2c7f47.uri];
			if (!_0x1a71f4) {
				return null;
			}
			if (_0x1a71f4.segments && _0x2c7f47.segments && _0x1a71f4.segments.length === _0x2c7f47.segments.length && _0x1a71f4.mediaSequence === _0x2c7f47.mediaSequence) {
				return null;
			}
			var _0x2ffcfd = _0x43b46a(_0x1a71f4, _0x2c7f47);
			if (_0x1a71f4.segments) {
				_0x2ffcfd.segments = _0x2e75b8(_0x1a71f4.segments, _0x2c7f47.segments, _0x2c7f47.mediaSequence - _0x1a71f4.mediaSequence);
			}
			_0x2ffcfd.segments.forEach(function (_0x1aa4b6) {
				_0x39c434(_0x1aa4b6, _0x2ffcfd.resolvedUri);
			});
			for (var _0x58326a = 0; _0x58326a < _0x26149e.playlists.length; _0x58326a++) {
				if (_0x26149e.playlists[_0x58326a].uri === _0x2c7f47.uri) {
					_0x26149e.playlists[_0x58326a] = _0x2ffcfd;
				}
			}
			return _0x26149e.playlists[_0x2c7f47.uri] = _0x2ffcfd, _0x26149e;
		}, _0x340f59 = function _0x416666(_0xe528df) {
			var _0x14d58f = _0xe528df.playlists.length;
			while (_0x14d58f--) {
				var _0x432697 = _0xe528df.playlists[_0x14d58f];
				_0xe528df.playlists[_0x432697.uri] = _0x432697;
				_0x432697.resolvedUri = _0x18eefc(_0xe528df.uri, _0x432697.uri);
				_0x432697.id = _0x14d58f;
				!_0x432697.attributes && (_0x432697.attributes = {}, _0x1d0a21.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.'));
			}
		}, _0x145d96 = function _0x1640b8(_0x41012e) {
			_0x260277(_0x41012e, function (_0x7037cd) {
				if (_0x7037cd.uri) {
					_0x7037cd.resolvedUri = _0x18eefc(_0x41012e.uri, _0x7037cd.uri);
				}
			});
		}, _0x14cc37 = function _0x943fdd(_0x5f25fc, _0x3b8030) {
			var _0x1433ad = _0x5f25fc.segments[_0x5f25fc.segments.length - 1], _0x157425 = void 0;
			if (_0x3b8030 && _0x1433ad && _0x1433ad.duration) {
				_0x157425 = _0x1433ad.duration * 1000;
			} else {
				_0x157425 = (_0x5f25fc.targetDuration || 10) * 500;
			}
			return _0x157425;
		}, _0x1734c6 = function (_0x5d8513) {
			_0x4b5e39(_0x397da9, _0x5d8513);
			function _0x397da9(_0x2e449d, _0x47a648, _0x45d13f) {
				_0x43a5ef(this, _0x397da9);
				var _0x21e158 = _0xb2fb9f(this, (_0x397da9['__proto__'] || Object.getPrototypeOf(_0x397da9)).call(this));
				_0x21e158.srcUrl = _0x2e449d;
				_0x21e158.hls_ = _0x47a648;
				_0x21e158.withCredentials = _0x45d13f;
				if (!_0x21e158.srcUrl) {
					throw new Error('A non-empty playlist URL is required');
				}
				return _0x21e158.state = 'HAVE_NOTHING', _0x21e158.on('mediaupdatetimeout', function () {
					if (_0x21e158.state !== 'HAVE_METADATA') {
						return;
					}
					_0x21e158.state = 'HAVE_CURRENT_METADATA';
					_0x21e158.request = _0x21e158.hls_.xhr({
						'uri': _0x18eefc(_0x21e158.master.uri, _0x21e158.media().uri),
						'withCredentials': _0x21e158.withCredentials
					}, function (_0xab8d4f, _0x16a8e7) {
						if (!_0x21e158.request) {
							return;
						}
						if (_0xab8d4f) {
							return _0x21e158.playlistRequestError(_0x21e158.request, _0x21e158.media().uri, 'HAVE_METADATA');
						}
						_0x21e158.haveMetadata(_0x21e158.request, _0x21e158.media().uri);
					});
				}), _0x21e158;
			}
			return _0x470055(_0x397da9, [
				{
					'key': 'playlistRequestError',
					'value': function _0x3e4be5(_0x16c099, _0x55a484, _0x5c3410) {
						this.request = null;
						if (_0x5c3410) {
							this.state = _0x5c3410;
						}
						this.error = {
							'playlist': this.master.playlists[_0x55a484],
							'status': _0x16c099.status,
							'message': 'HLS playlist request error at URL: ' + _0x55a484,
							'responseText': _0x16c099.responseText,
							'code': _0x16c099.status >= 500 ? 4 : 2
						};
						this.trigger('error');
					}
				},
				{
					'key': 'haveMetadata',
					'value': function _0x4c3267(_0x35a98f, _0x50c145) {
						var _0x5524d8 = this;
						this.request = null;
						this.state = 'HAVE_METADATA';
						var _0x31ca17 = new _0x4696ea();
						_0x31ca17.push(_0x35a98f.responseText);
						_0x31ca17.end();
						_0x31ca17.manifest.uri = _0x50c145;
						_0x31ca17.manifest.attributes = _0x31ca17.manifest.attributes || {};
						var _0x56865e = _0x559116(this.master, _0x31ca17.manifest);
						this.targetDuration = _0x31ca17.manifest.targetDuration;
						if (_0x56865e) {
							this.master = _0x56865e;
							this.media_ = this.master.playlists[_0x31ca17.manifest.uri];
						} else {
							this.trigger('playlistunchanged');
						}
						!this.media().endList && (_0x504cd5.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = _0x504cd5.setTimeout(function () {
							_0x5524d8.trigger('mediaupdatetimeout');
						}, _0x14cc37(this.media(), !!_0x56865e)));
						this.trigger('loadedplaylist');
					}
				},
				{
					'key': 'dispose',
					'value': function _0x4a8ad8() {
						this.stopRequest();
						_0x504cd5.clearTimeout(this.mediaUpdateTimeout);
					}
				},
				{
					'key': 'stopRequest',
					'value': function _0x35df08() {
						if (this.request) {
							var _0x5b25e9 = this.request;
							this.request = null;
							_0x5b25e9.onreadystatechange = null;
							_0x5b25e9.abort();
						}
					}
				},
				{
					'key': 'media',
					'value': function _0x172519(_0x1e9d37) {
						var _0x3f9d1e = this;
						if (!_0x1e9d37) {
							return this.media_;
						}
						if (this.state === 'HAVE_NOTHING') {
							throw new Error('Cannot switch media playlist from ' + this.state);
						}
						var _0x4cc7bf = this.state;
						if (typeof _0x1e9d37 === 'string') {
							if (!this.master.playlists[_0x1e9d37]) {
								throw new Error('Unknown playlist URI: ' + _0x1e9d37);
							}
							_0x1e9d37 = this.master.playlists[_0x1e9d37];
						}
						var _0x125e0d = !this.media_ || _0x1e9d37.uri !== this.media_.uri;
						if (this.master.playlists[_0x1e9d37.uri].endList) {
							this.request && (this.request.onreadystatechange = null, this.request.abort(), this.request = null);
							this.state = 'HAVE_METADATA';
							this.media_ = _0x1e9d37;
							_0x125e0d && (this.trigger('mediachanging'), this.trigger('mediachange'));
							return;
						}
						if (!_0x125e0d) {
							return;
						}
						this.state = 'SWITCHING_MEDIA';
						if (this.request) {
							if (_0x18eefc(this.master.uri, _0x1e9d37.uri) === this.request.url) {
								return;
							}
							this.request.onreadystatechange = null;
							this.request.abort();
							this.request = null;
						}
						if (this.media_) {
							this.trigger('mediachanging');
						}
						this.request = this.hls_.xhr({
							'uri': _0x18eefc(this.master.uri, _0x1e9d37.uri),
							'withCredentials': this.withCredentials
						}, function (_0x1e1cd1, _0x5b7be4) {
							if (!_0x3f9d1e.request) {
								return;
							}
							if (_0x1e1cd1) {
								return _0x3f9d1e.playlistRequestError(_0x3f9d1e.request, _0x1e9d37.uri, _0x4cc7bf);
							}
							_0x3f9d1e.haveMetadata(_0x5b7be4, _0x1e9d37.uri);
							if (_0x4cc7bf === 'HAVE_MASTER') {
								_0x3f9d1e.trigger('loadedmetadata');
							} else {
								_0x3f9d1e.trigger('mediachange');
							}
						});
					}
				},
				{
					'key': 'pause',
					'value': function _0x4d32dc() {
						this.stopRequest();
						_0x504cd5.clearTimeout(this.mediaUpdateTimeout);
						if (this.state === 'HAVE_NOTHING') {
							this.started = false;
						}
						if (this.state === 'SWITCHING_MEDIA') {
							if (this.media_) {
								this.state = 'HAVE_METADATA';
							} else {
								this.state = 'HAVE_MASTER';
							}
						} else {
							if (this.state === 'HAVE_CURRENT_METADATA') {
								this.state = 'HAVE_METADATA';
							}
						}
					}
				},
				{
					'key': 'load',
					'value': function _0x5e2b0f(_0x169c23) {
						var _0x1b7d74 = this;
						_0x504cd5.clearTimeout(this.mediaUpdateTimeout);
						var _0x16fa20 = this.media();
						if (_0x169c23) {
							var _0x120d11 = _0x16fa20 ? _0x16fa20.targetDuration / 2 * 1000 : 5000;
							this.mediaUpdateTimeout = _0x504cd5.setTimeout(function () {
								return _0x1b7d74.load();
							}, _0x120d11);
							return;
						}
						if (!this.started) {
							this.start();
							return;
						}
						if (_0x16fa20 && !_0x16fa20.endList) {
							this.trigger('mediaupdatetimeout');
						} else {
							this.trigger('loadedplaylist');
						}
					}
				},
				{
					'key': 'start',
					'value': function _0x4f8364() {
						var _0x101fa7 = this;
						this.started = true;
						this.request = this.hls_.xhr({
							'uri': this.srcUrl,
							'withCredentials': this.withCredentials
						}, function (_0x50b346, _0x520816) {
							if (!_0x101fa7.request) {
								return;
							}
							_0x101fa7.request = null;
							if (_0x50b346) {
								_0x101fa7.error = {
									'status': _0x520816.status,
									'message': 'HLS playlist request error at URL: ' + _0x101fa7.srcUrl,
									'responseText': _0x520816.responseText,
									'code': 2
								};
								if (_0x101fa7.state === 'HAVE_NOTHING') {
									_0x101fa7.started = false;
								}
								return _0x101fa7.trigger('error');
							}
							var _0x4ac84a = new _0x4696ea();
							_0x4ac84a.push(_0x520816.responseText);
							_0x4ac84a.end();
							_0x101fa7.state = 'HAVE_MASTER';
							_0x4ac84a.manifest.uri = _0x101fa7.srcUrl;
							if (_0x4ac84a.manifest.playlists) {
								_0x101fa7.master = _0x4ac84a.manifest;
								_0x340f59(_0x101fa7.master);
								_0x145d96(_0x101fa7.master);
								_0x101fa7.trigger('loadedplaylist');
								if (!_0x101fa7.request) {
									_0x101fa7.media(_0x4ac84a.manifest.playlists[0]);
								}
								return;
							}
							return _0x101fa7.master = {
								'mediaGroups': {
									'AUDIO': {},
									'VIDEO': {},
									'CLOSED-CAPTIONS': {},
									'SUBTITLES': {}
								},
								'uri': _0x504cd5.location.href,
								'playlists': [{
									'uri': _0x101fa7.srcUrl,
									'id': 0
								}]
							}, _0x101fa7.master.playlists[_0x101fa7.srcUrl] = _0x101fa7.master.playlists[0], _0x101fa7.master.playlists[0].resolvedUri = _0x101fa7.srcUrl, _0x101fa7.master.playlists[0].attributes = _0x101fa7.master.playlists[0].attributes || {}, _0x101fa7.haveMetadata(_0x520816, _0x101fa7.srcUrl), _0x101fa7.trigger('loadedmetadata');
						});
					}
				}
			]), _0x397da9;
		}(_0x10a2c6), _0x2faabf = _0x465e34.createTimeRange, _0x5037ac = function _0x47345d(_0x1fc983, _0x57763f) {
			var _0x2f9c35 = 0, _0x17a13a = _0x57763f - _0x1fc983.mediaSequence, _0x220e75 = _0x1fc983.segments[_0x17a13a];
			if (_0x220e75) {
				if (typeof _0x220e75.start !== 'undefined') {
					return {
						'result': _0x220e75.start,
						'precise': true
					};
				}
				if (typeof _0x220e75.end !== 'undefined') {
					return {
						'result': _0x220e75.end - _0x220e75.duration,
						'precise': true
					};
				}
			}
			while (_0x17a13a--) {
				_0x220e75 = _0x1fc983.segments[_0x17a13a];
				if (typeof _0x220e75.end !== 'undefined') {
					return {
						'result': _0x2f9c35 + _0x220e75.end,
						'precise': true
					};
				}
				_0x2f9c35 += _0x220e75.duration;
				if (typeof _0x220e75.start !== 'undefined') {
					return {
						'result': _0x2f9c35 + _0x220e75.start,
						'precise': true
					};
				}
			}
			return {
				'result': _0x2f9c35,
				'precise': false
			};
		}, _0x59edaf = function _0x59e322(_0x31c7a8, _0x527a10) {
			var _0x3a3bd5 = 0, _0x275dd0 = void 0, _0x382bbc = _0x527a10 - _0x31c7a8.mediaSequence;
			for (; _0x382bbc < _0x31c7a8.segments.length; _0x382bbc++) {
				_0x275dd0 = _0x31c7a8.segments[_0x382bbc];
				if (typeof _0x275dd0.start !== 'undefined') {
					return {
						'result': _0x275dd0.start - _0x3a3bd5,
						'precise': true
					};
				}
				_0x3a3bd5 += _0x275dd0.duration;
				if (typeof _0x275dd0.end !== 'undefined') {
					return {
						'result': _0x275dd0.end - _0x3a3bd5,
						'precise': true
					};
				}
			}
			return {
				'result': -1,
				'precise': false
			};
		}, _0x4a50ad = function _0x1971b8(_0x76c721, _0x9dded2, _0x3a39b6) {
			var _0x46e4fc = void 0, _0xd51a = void 0;
			if (typeof _0x9dded2 === 'undefined') {
				_0x9dded2 = _0x76c721.mediaSequence + _0x76c721.segments.length;
			}
			if (_0x9dded2 < _0x76c721.mediaSequence) {
				return 0;
			}
			_0x46e4fc = _0x5037ac(_0x76c721, _0x9dded2);
			if (_0x46e4fc.precise) {
				return _0x46e4fc.result;
			}
			_0xd51a = _0x59edaf(_0x76c721, _0x9dded2);
			if (_0xd51a.precise) {
				return _0xd51a.result;
			}
			return _0x46e4fc.result + _0x3a39b6;
		}, _0x57b3a0 = function _0xc40332(_0x11aebb, _0x2b5994, _0x4895fb) {
			if (!_0x11aebb) {
				return 0;
			}
			if (typeof _0x4895fb !== 'number') {
				_0x4895fb = 0;
			}
			if (typeof _0x2b5994 === 'undefined') {
				if (_0x11aebb.totalDuration) {
					return _0x11aebb.totalDuration;
				}
				if (!_0x11aebb.endList) {
					return _0x504cd5.Infinity;
				}
			}
			return _0x4a50ad(_0x11aebb, _0x2b5994, _0x4895fb);
		}, _0x509849 = function _0x28b441(_0x117a7b, _0x49e0, _0x3e81d5) {
			var _0x4d4d7f = 0;
			if (_0x49e0 > _0x3e81d5) {
				var _0x7860ba = [
					_0x3e81d5,
					_0x49e0
				];
				_0x49e0 = _0x7860ba[0];
				_0x3e81d5 = _0x7860ba[1];
			}
			if (_0x49e0 < 0) {
				for (var _0x5799bf = _0x49e0; _0x5799bf < Math.min(0, _0x3e81d5); _0x5799bf++) {
					_0x4d4d7f += _0x117a7b.targetDuration;
				}
				_0x49e0 = 0;
			}
			for (var _0x4f8819 = _0x49e0; _0x4f8819 < _0x3e81d5; _0x4f8819++) {
				_0x4d4d7f += _0x117a7b.segments[_0x4f8819].duration;
			}
			return _0x4d4d7f;
		}, _0x3047b9 = function _0x29e630(_0x381ad1) {
			if (!_0x381ad1.segments.length) {
				return 0;
			}
			var _0x8823d9 = _0x381ad1.segments.length - 1, _0x33f03e = _0x381ad1.segments[_0x8823d9].duration || _0x381ad1.targetDuration, _0x4bd3db = _0x33f03e + _0x381ad1.targetDuration * 2;
			while (_0x8823d9--) {
				_0x33f03e += _0x381ad1.segments[_0x8823d9].duration;
				if (_0x33f03e >= _0x4bd3db) {
					break;
				}
			}
			return Math.max(0, _0x8823d9);
		}, _0x44ee75 = function _0x8fbab7(_0x45860e, _0x117099, _0x342a84) {
			if (!_0x45860e || !_0x45860e.segments) {
				return null;
			}
			if (_0x45860e.endList) {
				return _0x57b3a0(_0x45860e);
			}
			if (_0x117099 === null) {
				return null;
			}
			_0x117099 = _0x117099 || 0;
			var _0x385a4b = _0x342a84 ? _0x3047b9(_0x45860e) : _0x45860e.segments.length;
			return _0x4a50ad(_0x45860e, _0x45860e.mediaSequence + _0x385a4b, _0x117099);
		}, _0x477aa5 = function _0x48fc4f(_0x3cdf9c, _0x4c81e5) {
			var _0x4de08d = true, _0x5d4f51 = _0x4c81e5 || 0, _0x47486f = _0x44ee75(_0x3cdf9c, _0x4c81e5, _0x4de08d);
			if (_0x47486f === null) {
				return _0x2faabf();
			}
			return _0x2faabf(_0x5d4f51, _0x47486f);
		}, _0x2c9c23 = function _0x27fa12(_0x48307a) {
			return _0x48307a - Math.floor(_0x48307a) === 0;
		}, _0x48c7aa = function _0x2c49f4(_0x34e552, _0x5643c4) {
			if (_0x2c9c23(_0x5643c4)) {
				return _0x5643c4 + _0x34e552 * 0.1;
			}
			var _0x5b959a = _0x5643c4.toString().split('.')[1].length;
			for (var _0x438814 = 1; _0x438814 <= _0x5b959a; _0x438814++) {
				var _0x469e34 = Math.pow(10, _0x438814), _0x23dc16 = _0x5643c4 * _0x469e34;
				if (_0x2c9c23(_0x23dc16) || _0x438814 === _0x5b959a) {
					return (_0x23dc16 + _0x34e552) / _0x469e34;
				}
			}
		}, _0xcd7bb2 = _0x48c7aa.bind(null, 1), _0x5e99f4 = _0x48c7aa.bind(null, -1), _0x11c39e, _0x429533 = function _0x1db305(_0xa5a104) {
			return _0xa5a104.excludeUntil && _0xa5a104.excludeUntil > Date.now();
		}, _0x13f054 = function _0xbb366c(_0x49e62d) {
			return _0x49e62d.excludeUntil && _0x49e62d.excludeUntil === Infinity;
		}, _0x342a04 = function _0x46bfca(_0x9738e3) {
			var _0x55c25d = _0x429533(_0x9738e3);
			return !_0x9738e3.disabled && !_0x55c25d;
		}, _0x487b38, _0x4fa693, _0x49cdce, _0x235607 = function _0x534d07(_0x3312ca, _0x16118b) {
			return _0x16118b.attributes && _0x16118b.attributes[_0x3312ca];
		}, _0x30b4d7, _0x2f0039 = function _0x487f96(_0x380d7d, _0x505fc8) {
			if (_0x380d7d.playlists.length === 1) {
				return true;
			}
			var _0x1e356f = _0x505fc8.attributes.BANDWIDTH || Number.MAX_VALUE;
			return _0x380d7d.playlists.filter(function (_0x34f45e) {
				if (!_0x342a04(_0x34f45e)) {
					return false;
				}
				return (_0x34f45e.attributes.BANDWIDTH || 0) < _0x1e356f;
			}).length === 0;
		}, _0x5a5540 = {
			'duration': _0x57b3a0,
			'seekable': _0x477aa5,
			'safeLiveIndex': _0x3047b9,
			'getMediaInfoForTime': function _0x1d40cf(_0x3a0529, _0x16cfe1, _0x3e180c, _0x2c6fc8) {
				var _0xf7ec0d = void 0, _0x467cc2 = void 0, _0x5f12df = _0x3a0529.segments.length, _0x4798ba = _0x16cfe1 - _0x2c6fc8;
				if (_0x4798ba < 0) {
					if (_0x3e180c > 0) {
						for (_0xf7ec0d = _0x3e180c - 1; _0xf7ec0d >= 0; _0xf7ec0d--) {
							_0x467cc2 = _0x3a0529.segments[_0xf7ec0d];
							_0x4798ba += _0x5e99f4(_0x467cc2.duration);
							if (_0x4798ba > 0) {
								return {
									'mediaIndex': _0xf7ec0d,
									'startTime': _0x2c6fc8 - _0x509849(_0x3a0529, _0x3e180c, _0xf7ec0d)
								};
							}
						}
					}
					return {
						'mediaIndex': 0,
						'startTime': _0x16cfe1
					};
				}
				if (_0x3e180c < 0) {
					for (_0xf7ec0d = _0x3e180c; _0xf7ec0d < 0; _0xf7ec0d++) {
						_0x4798ba -= _0x3a0529.targetDuration;
						if (_0x4798ba < 0) {
							return {
								'mediaIndex': 0,
								'startTime': _0x16cfe1
							};
						}
					}
					_0x3e180c = 0;
				}
				for (_0xf7ec0d = _0x3e180c; _0xf7ec0d < _0x5f12df; _0xf7ec0d++) {
					_0x467cc2 = _0x3a0529.segments[_0xf7ec0d];
					_0x4798ba -= _0xcd7bb2(_0x467cc2.duration);
					if (_0x4798ba < 0) {
						return {
							'mediaIndex': _0xf7ec0d,
							'startTime': _0x2c6fc8 + _0x509849(_0x3a0529, _0x3e180c, _0xf7ec0d)
						};
					}
				}
				return {
					'mediaIndex': _0x5f12df - 1,
					'startTime': _0x16cfe1
				};
			},
			'isEnabled': _0x342a04,
			'isDisabled': function _0x268a55(_0x1a67bf) {
				return _0x1a67bf.disabled;
			},
			'isBlacklisted': _0x429533,
			'isIncompatible': _0x13f054,
			'playlistEnd': _0x44ee75,
			'isAes': function _0x511382(_0x58b975) {
				for (var _0x5b27ee = 0; _0x5b27ee < _0x58b975.segments.length; _0x5b27ee++) {
					if (_0x58b975.segments[_0x5b27ee].key) {
						return true;
					}
				}
				return false;
			},
			'isFmp4': function _0x3f7c4a(_0xf96ba7) {
				for (var _0x24239b = 0; _0x24239b < _0xf96ba7.segments.length; _0x24239b++) {
					if (_0xf96ba7.segments[_0x24239b].map) {
						return true;
					}
				}
				return false;
			},
			'hasAttribute': _0x235607,
			'estimateSegmentRequestTime': function _0xdf8ae0(_0x28fc6d, _0xb50721, _0x343e34) {
				var _0x33be75 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
				if (!_0x235607('BANDWIDTH', _0x343e34)) {
					return NaN;
				}
				var _0x3a1e7f = _0x28fc6d * _0x343e34.attributes.BANDWIDTH;
				return (_0x3a1e7f - _0x33be75 * 8) / _0xb50721;
			},
			'isLowestEnabledRendition': _0x2f0039
		}, _0x3754ce = _0x465e34.xhr, _0x1c3015 = _0x465e34.mergeOptions, _0x3a3f75 = function _0x1e6a4f() {
			var _0x119098 = function _0xb89d17(_0x445f3e, _0x5cf4aa) {
				_0x445f3e = _0x1c3015({ 'timeout': 45000 }, _0x445f3e);
				var _0x539b98 = _0xb89d17.beforeRequest || _0x465e34.Hls.xhr.beforeRequest;
				if (_0x539b98 && typeof _0x539b98 === 'function') {
					var _0x1edb62 = _0x539b98(_0x445f3e);
					if (_0x1edb62) {
						_0x445f3e = _0x1edb62;
					}
				}
				var _0x1c889e = _0x3754ce(_0x445f3e, function (_0x5e18a1, _0x57f997) {
					var _0x404500 = _0x1c889e.response;
					if (!_0x5e18a1 && _0x404500) {
						_0x1c889e.responseTime = Date.now();
						_0x1c889e.roundTripTime = _0x1c889e.responseTime - _0x1c889e.requestTime;
						_0x1c889e.bytesReceived = _0x404500.byteLength || _0x404500.length;
						if (!_0x1c889e.bandwidth) {
							_0x1c889e.bandwidth = Math.floor(_0x1c889e.bytesReceived / _0x1c889e.roundTripTime * 8 * 1000);
						}
					}
					if (_0x57f997.headers) {
						_0x1c889e.responseHeaders = _0x57f997.headers;
					}
					if (_0x5e18a1 && _0x5e18a1.code === 'ETIMEDOUT') {
						_0x1c889e.timedout = true;
					}
					if (!_0x5e18a1 && !_0x1c889e.aborted && _0x57f997.statusCode !== 200 && _0x57f997.statusCode !== 206 && _0x57f997.statusCode !== 0) {
						_0x5e18a1 = new Error('XHR Failed with a response of: ' + (_0x1c889e && (_0x404500 || _0x1c889e.responseText)));
					}
					_0x5cf4aa(_0x5e18a1, _0x1c889e);
				}), _0x287246 = _0x1c889e.abort;
				return _0x1c889e.abort = function () {
					return _0x1c889e.aborted = true, _0x287246.apply(_0x1c889e, arguments);
				}, _0x1c889e.uri = _0x445f3e.uri, _0x1c889e.requestTime = Date.now(), _0x1c889e;
			};
			return _0x119098;
		}, _0x5652da = function _0x5523b9(_0x3a8dfb, _0x2ba622) {
			return _0x3a8dfb.start(_0x2ba622) + '-' + _0x3a8dfb.end(_0x2ba622);
		}, _0x1d0c6c = function _0x5a45e2(_0xfb28a8, _0x446edf) {
			var _0x202816 = _0xfb28a8.toString(16);
			return '00'.substring(0, 2 - _0x202816.length) + _0x202816 + (_0x446edf % 2 ? ' ' : '');
		}, _0x260c73 = function _0x3a9237(_0x841a24) {
			if (_0x841a24 >= 32 && _0x841a24 < 126) {
				return String.fromCharCode(_0x841a24);
			}
			return '.';
		}, _0x2f4764 = function _0x283399(_0x12d661) {
			var _0x2f74a1 = {
				_0xb7943e: {
					'bytes': _0x48a2d6.buffer,
					'byteOffset': _0x48a2d6.byteOffset,
					'byteLength': _0x48a2d6.byteLength
				},
				_0xb7943e: _0x48a2d6
			};
			return Object.keys(_0x12d661).forEach(function (_0xb7943e) {
				var _0x48a2d6 = _0x12d661[_0xb7943e];
				if (ArrayBuffer.isView(_0x48a2d6)) {
				} else {
				}
			}), _0x2f74a1;
		}, _0x330e89 = function _0xe7fa5b(_0x42d5ad) {
			var _0x54d4dc = _0x42d5ad.byterange || {
				'length': Infinity,
				'offset': 0
			};
			return [
				_0x54d4dc.length,
				_0x54d4dc.offset,
				_0x42d5ad.resolvedUri
			].join(',');
		}, _0x1aaeb2 = function _0x30c209(_0x10d1ce) {
			var _0xb4bf39 = Array.prototype.slice.call(_0x10d1ce), _0x41372f = 16, _0x116c4b = '', _0x18be2 = void 0, _0x2e2814 = void 0;
			for (var _0x114c23 = 0; _0x114c23 < _0xb4bf39.length / _0x41372f; _0x114c23++) {
				_0x18be2 = _0xb4bf39.slice(_0x114c23 * _0x41372f, _0x114c23 * _0x41372f + _0x41372f).map(_0x1d0c6c).join('');
				_0x2e2814 = _0xb4bf39.slice(_0x114c23 * _0x41372f, _0x114c23 * _0x41372f + _0x41372f).map(_0x260c73).join('');
				_0x116c4b += _0x18be2 + ' ' + _0x2e2814 + '\n';
			}
			return _0x116c4b;
		}, _0x58c6af, _0x96790c, _0x4f607a = Object.freeze({
			'createTransferableMessage': _0x2f4764,
			'initSegmentId': _0x330e89,
			'hexDump': _0x1aaeb2,
			'tagDump': function _0x1237f7(_0x3a187f) {
				var _0xcc3e4d = _0x3a187f.bytes;
				return _0x1aaeb2(_0xcc3e4d);
			},
			'textRanges': function _0x4c5295(_0x3f9291) {
				var _0x55c567 = '', _0x32fd90 = void 0;
				for (_0x32fd90 = 0; _0x32fd90 < _0x3f9291.length; _0x32fd90++) {
					_0x55c567 += _0x5652da(_0x3f9291, _0x32fd90) + ' ';
				}
				return _0x55c567;
			}
		}), _0x32f8e5 = 0.1, _0x310b6f = function _0x81f399(_0x283474, _0x2e9f9c) {
			var _0x37552f = [], _0x24beda = void 0;
			if (_0x283474 && _0x283474.length) {
				for (_0x24beda = 0; _0x24beda < _0x283474.length; _0x24beda++) {
					if (_0x2e9f9c(_0x283474.start(_0x24beda), _0x283474.end(_0x24beda))) {
						_0x37552f.push([
							_0x283474.start(_0x24beda),
							_0x283474.end(_0x24beda)
						]);
					}
				}
			}
			return _0x465e34.createTimeRanges(_0x37552f);
		}, _0x18ae92 = function _0x10bb4a(_0xcfb8d6, _0x234169) {
			return _0x310b6f(_0xcfb8d6, function (_0x206163, _0x1993af) {
				return _0x206163 - 0.03333333333333333 <= _0x234169 && _0x1993af + 0.03333333333333333 >= _0x234169;
			});
		}, _0x5bf7ff = function _0x4fd820(_0x51c8b6, _0x3fa093) {
			return _0x310b6f(_0x51c8b6, function (_0x51b42d) {
				return _0x51b42d - 0.03333333333333333 >= _0x3fa093;
			});
		}, _0x27dddc = function _0x43eb4e(_0x3bad5f) {
			if (_0x3bad5f.length < 2) {
				return _0x465e34.createTimeRanges();
			}
			var _0x3f489a = [];
			for (var _0x37ead3 = 1; _0x37ead3 < _0x3bad5f.length; _0x37ead3++) {
				var _0xc41507 = _0x3bad5f.end(_0x37ead3 - 1), _0x5bd97a = _0x3bad5f.start(_0x37ead3);
				_0x3f489a.push([
					_0xc41507,
					_0x5bd97a
				]);
			}
			return _0x465e34.createTimeRanges(_0x3f489a);
		}, _0x2e715c = function _0x4bf539(_0x1deae0) {
			var _0x423c37 = [];
			if (!_0x1deae0 || !_0x1deae0.length) {
				return '';
			}
			for (var _0x1f78d6 = 0; _0x1f78d6 < _0x1deae0.length; _0x1f78d6++) {
				_0x423c37.push(_0x1deae0.start(_0x1f78d6) + ' => ' + _0x1deae0.end(_0x1f78d6));
			}
			return _0x423c37.join(', ');
		}, _0x1021c9 = function _0x3fdb14(_0x28bd4a, _0x3d5d79) {
			var _0x1e0f2a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1, _0x45b2db = _0x28bd4a.length ? _0x28bd4a.end(_0x28bd4a.length - 1) : 0;
			return (_0x45b2db - _0x3d5d79) / _0x1e0f2a;
		}, _0x49abd5 = function _0x395296(_0x145519) {
			var _0x42b696 = [];
			for (var _0x3433c8 = 0; _0x3433c8 < _0x145519.length; _0x3433c8++) {
				_0x42b696.push({
					'start': _0x145519.start(_0x3433c8),
					'end': _0x145519.end(_0x3433c8)
				});
			}
			return _0x42b696;
		}, _0x3b6bd7 = function _0x1a0b32(_0x1f3518, _0x5eacc2, _0x2c91ea) {
			var _0x4070a1 = _0x5eacc2.player_;
			if (_0x2c91ea.captions && _0x2c91ea.captions.length) {
				if (!_0x1f3518.inbandTextTracks_) {
					_0x1f3518.inbandTextTracks_ = {};
				}
				for (var _0x5bb753 in _0x2c91ea.captionStreams)
					if (!_0x1f3518.inbandTextTracks_[_0x5bb753]) {
						_0x4070a1.tech_.trigger({
							'type': 'usage',
							'name': 'hls-608'
						});
						var _0xc5b4e = _0x4070a1.textTracks().getTrackById(_0x5bb753);
						if (_0xc5b4e) {
							_0x1f3518.inbandTextTracks_[_0x5bb753] = _0xc5b4e;
						} else {
							_0x1f3518.inbandTextTracks_[_0x5bb753] = _0x4070a1.addRemoteTextTrack({
								'kind': 'captions',
								'id': _0x5bb753,
								'label': _0x5bb753
							}, false).track;
						}
					}
			}
			_0x2c91ea.metadata && _0x2c91ea.metadata.length && !_0x1f3518.metadataTrack_ && (_0x1f3518.metadataTrack_ = _0x4070a1.addRemoteTextTrack({
				'kind': 'metadata',
				'label': 'Timed Metadata'
			}, false).track, _0x1f3518.metadataTrack_.inBandMetadataTrackDispatchType = _0x2c91ea.metadata.dispatchType);
		}, _0x4c24ab = function _0xbf841a(_0x1517fa, _0xa26e0a, _0x2db971) {
			var _0x18c3a5 = void 0, _0x94d9f6 = void 0;
			if (!_0x2db971) {
				return;
			}
			if (!_0x2db971.cues) {
				return;
			}
			_0x18c3a5 = _0x2db971.cues.length;
			while (_0x18c3a5--) {
				_0x94d9f6 = _0x2db971.cues[_0x18c3a5];
				if (_0x94d9f6.startTime <= _0xa26e0a && _0x94d9f6.endTime >= _0x1517fa) {
					_0x2db971.removeCue(_0x94d9f6);
				}
			}
		}, _0x4a8098 = function _0x18620c(_0x2b8c5e) {
			Object.defineProperties(_0x2b8c5e.frame, {
				'id': {
					'get': function _0x8ad188() {
						return _0x465e34.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.'), _0x2b8c5e.value.key;
					}
				},
				'value': {
					'get': function _0x2b8fd3() {
						return _0x465e34.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.'), _0x2b8c5e.value.data;
					}
				},
				'privateData': {
					'get': function _0x5e2dda() {
						return _0x465e34.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.'), _0x2b8c5e.value.data;
					}
				}
			});
		}, _0x131bb9 = function _0x520424(_0x3de427) {
			var _0x169b87 = void 0;
			if (isNaN(_0x3de427) || Math.abs(_0x3de427) === Infinity) {
				_0x169b87 = Number.MAX_VALUE;
			} else {
				_0x169b87 = _0x3de427;
			}
			return _0x169b87;
		}, _0x4049b6 = function _0x1c0a53(_0xb22950, _0xcaaeb, _0xab4fc8) {
			var _0x330dad = _0x504cd5.WebKitDataCue || _0x504cd5.VTTCue;
			if (_0xcaaeb) {
				_0xcaaeb.forEach(function (_0x2ce190) {
					var _0x2e181f = _0x2ce190.stream;
					this.inbandTextTracks_[_0x2e181f].addCue(new _0x330dad(_0x2ce190.startTime + this.timestampOffset, _0x2ce190.endTime + this.timestampOffset, _0x2ce190.text));
				}, _0xb22950);
			}
			if (_0xab4fc8) {
				var _0x75bbe7 = _0x131bb9(_0xb22950.mediaSource_.duration);
				_0xab4fc8.forEach(function (_0xe98191) {
					var _0x2d176e = _0xe98191.cueTime + this.timestampOffset;
					_0xe98191.frames.forEach(function (_0x22e8ff) {
						var _0x499852 = new _0x330dad(_0x2d176e, _0x2d176e, _0x22e8ff.value || _0x22e8ff.url || _0x22e8ff.data || '');
						_0x499852.frame = _0x22e8ff;
						_0x499852.value = _0x22e8ff;
						_0x4a8098(_0x499852);
						this.metadataTrack_.addCue(_0x499852);
					}, this);
				}, _0xb22950);
				if (_0xb22950.metadataTrack_ && _0xb22950.metadataTrack_.cues && _0xb22950.metadataTrack_.cues.length) {
					var _0x294079 = _0xb22950.metadataTrack_.cues, _0x15b457 = [];
					for (var _0x98bb0f = 0; _0x98bb0f < _0x294079.length; _0x98bb0f++) {
						if (_0x294079[_0x98bb0f]) {
							_0x15b457.push(_0x294079[_0x98bb0f]);
						}
					}
					var _0x207cf9 = _0x15b457.reduce(function (_0x582937, _0x1d3c84) {
						var _0x457de4 = _0x582937[_0x1d3c84.startTime] || [];
						return _0x457de4.push(_0x1d3c84), _0x582937[_0x1d3c84.startTime] = _0x457de4, _0x582937;
					}, {}), _0x58d286 = Object.keys(_0x207cf9).sort(function (_0x358729, _0x52159b) {
						return Number(_0x358729) - Number(_0x52159b);
					});
					_0x58d286.forEach(function (_0x5490ad, _0x192912) {
						var _0x2a0556 = _0x207cf9[_0x5490ad], _0xa5be23 = Number(_0x58d286[_0x192912 + 1]) || _0x75bbe7;
						_0x2a0556.forEach(function (_0x18eb0c) {
							_0x18eb0c.endTime = _0xa5be23;
						});
					});
				}
			}
		}, _0xecfd09 = typeof window !== 'undefined' ? window : {}, _0x1ee9ae = typeof Symbol === 'undefined' ? '__target' : Symbol(), _0x597183 = 'application/javascript', _0x4c7464 = _0xecfd09.BlobBuilder || _0xecfd09.WebKitBlobBuilder || _0xecfd09.MozBlobBuilder || _0xecfd09.MSBlobBuilder, _0x2ee5bc = _0xecfd09.URL || _0xecfd09.webkitURL || _0x2ee5bc && _0x2ee5bc.msURL, _0x5da08b = _0xecfd09.Worker;
		function _0x58376c(_0x480fc0, _0x16b435) {
			return function _0x23b7f6(_0x57b2d8) {
				var _0x125c5a = this;
				if (!_0x16b435) {
					return new _0x5da08b(_0x480fc0);
				} else {
					if (_0x5da08b && !_0x57b2d8) {
						var _0x361533 = _0x16b435.toString().replace(/^function.+?{/, '').slice(0, -1), _0x3e02ba = _0x3602f0(_0x361533);
						return this[_0x1ee9ae] = new _0x5da08b(_0x3e02ba), _0xf56150(this[_0x1ee9ae], _0x3e02ba), this[_0x1ee9ae];
					} else {
						var _0x23cc5d = {
							'postMessage': function _0x4e2884(_0x1b95b9) {
								if (_0x125c5a.onmessage) {
									setTimeout(function () {
										_0x125c5a.onmessage({
											'data': _0x1b95b9,
											'target': _0x23cc5d
										});
									});
								}
							}
						};
						_0x16b435.call(_0x23cc5d);
						this.postMessage = function (_0x45cce7) {
							setTimeout(function () {
								_0x23cc5d.onmessage({
									'data': _0x45cce7,
									'target': _0x125c5a
								});
							});
						};
						this.isThisThread = true;
					}
				}
			};
		}
		if (_0x5da08b) {
			var _0x7f79bb, _0x17ef51 = _0x3602f0('self.onmessage = function () {}'), _0x4fcc40 = new Uint8Array(1);
			try {
				_0x7f79bb = new _0x5da08b(_0x17ef51);
				_0x7f79bb.postMessage(_0x4fcc40, [_0x4fcc40.buffer]);
			} catch (_0x2eba25) {
				_0x5da08b = null;
			} finally {
				_0x2ee5bc.revokeObjectURL(_0x17ef51);
				if (_0x7f79bb) {
					_0x7f79bb.terminate();
				}
			}
		}
		function _0x3602f0(_0x22be74) {
			try {
				return _0x2ee5bc.createObjectURL(new Blob([_0x22be74], { 'type': _0x597183 }));
			} catch (_0x1131cf) {
				var _0x1d70ce = new _0x4c7464();
				return _0x1d70ce.append(_0x22be74), _0x2ee5bc.createObjectURL(_0x1d70ce.getBlob(type));
			}
		}
		function _0xf56150(_0x393689, _0x3a7f71) {
			if (!_0x393689 || !_0x3a7f71) {
				return;
			}
			var _0x387dec = _0x393689.terminate;
			_0x393689.objURL = _0x3a7f71;
			_0x393689.terminate = function () {
				if (_0x393689.objURL) {
					_0x2ee5bc.revokeObjectURL(_0x393689.objURL);
				}
				_0x387dec.call(_0x393689);
			};
		}
		var _0x1bfd01 = new _0x58376c('./transmuxer-worker.worker.js', function (_0x4aa48, _0x54be54) {
			var _0x5ce474 = this, _0x12ee32 = (function () {
				var _0x4e06a8 = Math.pow(2, 32) - 1, _0x5a902d, _0x10addf, _0x338269, _0x13dfa7, _0x4c90be, _0x183056, _0x55b9af, _0x3e1ffc, _0x3d1d27, _0x205bb4, _0x15e611, _0x19e713, _0x12907a, _0x26b8ab, _0x7a16e2, _0x1bae79, _0x2775b1, _0x5404f2, _0x395d8d, _0x451d51, _0x17a255, _0xa63050, _0x20286e, _0x1f87b8, _0x1b4c93, _0x313726, _0x54b17b, _0xd96d89, _0x1a709f, _0x466ac3, _0x6e367b, _0x2d00c4, _0x149491, _0x1b75c4, _0x4e7fec, _0x14e55c;
				(function () {
					var _0x53a90e;
					_0x20286e = {
						'avc1': [],
						'avcC': [],
						'btrt': [],
						'dinf': [],
						'dref': [],
						'esds': [],
						'ftyp': [],
						'hdlr': [],
						'mdat': [],
						'mdhd': [],
						'mdia': [],
						'mfhd': [],
						'minf': [],
						'moof': [],
						'moov': [],
						'mp4a': [],
						'mvex': [],
						'mvhd': [],
						'sdtp': [],
						'smhd': [],
						'stbl': [],
						'stco': [],
						'stsc': [],
						'stsd': [],
						'stsz': [],
						'stts': [],
						'styp': [],
						'tfdt': [],
						'tfhd': [],
						'traf': [],
						'trak': [],
						'trun': [],
						'trex': [],
						'tkhd': [],
						'vmhd': []
					};
					if (typeof Uint8Array === 'undefined') {
						return;
					}
					for (_0x53a90e in _0x20286e)
						if (_0x20286e.hasOwnProperty(_0x53a90e)) {
							_0x20286e[_0x53a90e] = [
								_0x53a90e.charCodeAt(0),
								_0x53a90e.charCodeAt(1),
								_0x53a90e.charCodeAt(2),
								_0x53a90e.charCodeAt(3)
							];
						}
					_0x1f87b8 = new Uint8Array([
						'i'.charCodeAt(0),
						's'.charCodeAt(0),
						'o'.charCodeAt(0),
						'm'.charCodeAt(0)
					]);
					_0x313726 = new Uint8Array([
						'a'.charCodeAt(0),
						'v'.charCodeAt(0),
						'c'.charCodeAt(0),
						'1'.charCodeAt(0)
					]);
					_0x1b4c93 = new Uint8Array([
						0,
						0,
						0,
						1
					]);
					_0x54b17b = new Uint8Array([
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						118,
						105,
						100,
						101,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						86,
						105,
						100,
						101,
						111,
						72,
						97,
						110,
						100,
						108,
						101,
						114,
						0
					]);
					_0xd96d89 = new Uint8Array([
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						115,
						111,
						117,
						110,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						83,
						111,
						117,
						110,
						100,
						72,
						97,
						110,
						100,
						108,
						101,
						114,
						0
					]);
					_0x1a709f = {
						'video': _0x54b17b,
						'audio': _0xd96d89
					};
					_0x2d00c4 = new Uint8Array([
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						12,
						117,
						114,
						108,
						32,
						0,
						0,
						0,
						1
					]);
					_0x6e367b = new Uint8Array([
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0
					]);
					_0x149491 = new Uint8Array([
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0
					]);
					_0x1b75c4 = _0x149491;
					_0x4e7fec = new Uint8Array([
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0
					]);
					_0x14e55c = _0x149491;
					_0x466ac3 = new Uint8Array([
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0
					]);
				}());
				_0x5a902d = function _0x2b940b(_0x1f194a) {
					var _0x24d928 = [], _0x3ff00c = 0, _0x4de601, _0x3c3dbd, _0x393bbf;
					for (_0x4de601 = 1; _0x4de601 < arguments.length; _0x4de601++) {
						_0x24d928.push(arguments[_0x4de601]);
					}
					_0x4de601 = _0x24d928.length;
					while (_0x4de601--) {
						_0x3ff00c += _0x24d928[_0x4de601].byteLength;
					}
					_0x3c3dbd = new Uint8Array(_0x3ff00c + 8);
					_0x393bbf = new DataView(_0x3c3dbd.buffer, _0x3c3dbd.byteOffset, _0x3c3dbd.byteLength);
					_0x393bbf.setUint32(0, _0x3c3dbd.byteLength);
					_0x3c3dbd.set(_0x1f194a, 4);
					for (_0x4de601 = 0, _0x3ff00c = 8; _0x4de601 < _0x24d928.length; _0x4de601++) {
						_0x3c3dbd.set(_0x24d928[_0x4de601], _0x3ff00c);
						_0x3ff00c += _0x24d928[_0x4de601].byteLength;
					}
					return _0x3c3dbd;
				};
				_0x10addf = function _0x3b3df9() {
					return _0x5a902d(_0x20286e.dinf, _0x5a902d(_0x20286e.dref, _0x2d00c4));
				};
				_0x338269 = function _0x4ae20c(_0x573b04) {
					return _0x5a902d(_0x20286e.esds, new Uint8Array([
						0,
						0,
						0,
						0,
						3,
						25,
						0,
						0,
						0,
						4,
						17,
						64,
						21,
						0,
						6,
						0,
						0,
						0,
						218,
						192,
						0,
						0,
						218,
						192,
						5,
						2,
						_0x573b04.audioobjecttype << 3 | _0x573b04.samplingfrequencyindex >>> 1,
						_0x573b04.samplingfrequencyindex << 7 | _0x573b04.channelcount << 3,
						6,
						1,
						2
					]));
				};
				_0x13dfa7 = function _0x12cf78() {
					return _0x5a902d(_0x20286e.ftyp, _0x1f87b8, _0x1b4c93, _0x1f87b8, _0x313726);
				};
				_0x1bae79 = function _0x3c11cb(_0x12e4f4) {
					return _0x5a902d(_0x20286e.hdlr, _0x1a709f[_0x12e4f4]);
				};
				_0x4c90be = function _0x41156a(_0x2e56bd) {
					return _0x5a902d(_0x20286e.mdat, _0x2e56bd);
				};
				_0x7a16e2 = function _0x8da313(_0x5ba1ed) {
					var _0x326ed4 = new Uint8Array([
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						2,
						0,
						0,
						0,
						3,
						0,
						1,
						95,
						144,
						_0x5ba1ed.duration >>> 24 & 255,
						_0x5ba1ed.duration >>> 16 & 255,
						_0x5ba1ed.duration >>> 8 & 255,
						_0x5ba1ed.duration & 255,
						85,
						196,
						0,
						0
					]);
					return _0x5ba1ed.samplerate && (_0x326ed4[12] = _0x5ba1ed.samplerate >>> 24 & 255, _0x326ed4[13] = _0x5ba1ed.samplerate >>> 16 & 255, _0x326ed4[14] = _0x5ba1ed.samplerate >>> 8 & 255, _0x326ed4[15] = _0x5ba1ed.samplerate & 255), _0x5a902d(_0x20286e.mdhd, _0x326ed4);
				};
				_0x26b8ab = function _0x41593c(_0xc2e700) {
					return _0x5a902d(_0x20286e.mdia, _0x7a16e2(_0xc2e700), _0x1bae79(_0xc2e700.type), _0x55b9af(_0xc2e700));
				};
				_0x183056 = function _0x38b2f9(_0x244bb4) {
					return _0x5a902d(_0x20286e.mfhd, new Uint8Array([
						0,
						0,
						0,
						0,
						(_0x244bb4 & 4278190080) >> 24,
						(_0x244bb4 & 16711680) >> 16,
						(_0x244bb4 & 65280) >> 8,
						_0x244bb4 & 255
					]));
				};
				_0x55b9af = function _0x25fb8c(_0x50d688) {
					return _0x5a902d(_0x20286e.minf, _0x50d688.type === 'video' ? _0x5a902d(_0x20286e.vmhd, _0x466ac3) : _0x5a902d(_0x20286e.smhd, _0x6e367b), _0x10addf(), _0x5404f2(_0x50d688));
				};
				_0x3e1ffc = function _0x531123(_0x53a3ac, _0x340834) {
					var _0x4809f7 = [], _0x5bf6bc = _0x340834.length;
					while (_0x5bf6bc--) {
						_0x4809f7[_0x5bf6bc] = _0x451d51(_0x340834[_0x5bf6bc]);
					}
					return _0x5a902d.apply(null, [
						_0x20286e.moof,
						_0x183056(_0x53a3ac)
					].concat(_0x4809f7));
				};
				_0x3d1d27 = function _0x527222(_0x504f90) {
					var _0x1a9f42 = _0x504f90.length, _0x3bf2a3 = [];
					while (_0x1a9f42--) {
						_0x3bf2a3[_0x1a9f42] = _0x19e713(_0x504f90[_0x1a9f42]);
					}
					return _0x5a902d.apply(null, [
						_0x20286e.moov,
						_0x15e611(4294967295)
					].concat(_0x3bf2a3).concat(_0x205bb4(_0x504f90)));
				};
				_0x205bb4 = function _0x266b27(_0x2db099) {
					var _0x48b21a = _0x2db099.length, _0x4f016b = [];
					while (_0x48b21a--) {
						_0x4f016b[_0x48b21a] = _0x17a255(_0x2db099[_0x48b21a]);
					}
					return _0x5a902d.apply(null, [_0x20286e.mvex].concat(_0x4f016b));
				};
				_0x15e611 = function _0x27d487(_0x119cb7) {
					var _0x4aea87 = new Uint8Array([
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						2,
						0,
						1,
						95,
						144,
						(_0x119cb7 & 4278190080) >> 24,
						(_0x119cb7 & 16711680) >> 16,
						(_0x119cb7 & 65280) >> 8,
						_0x119cb7 & 255,
						0,
						1,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						64,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						255,
						255,
						255,
						255
					]);
					return _0x5a902d(_0x20286e.mvhd, _0x4aea87);
				};
				_0x2775b1 = function _0xeb3d93(_0x2d0e58) {
					var _0x415904 = _0x2d0e58.samples || [], _0x333acf = new Uint8Array(4 + _0x415904.length), _0x3cf848, _0x2d5197;
					for (_0x2d5197 = 0; _0x2d5197 < _0x415904.length; _0x2d5197++) {
						_0x3cf848 = _0x415904[_0x2d5197].flags;
						_0x333acf[_0x2d5197 + 4] = _0x3cf848.dependsOn << 4 | _0x3cf848.isDependedOn << 2 | _0x3cf848.hasRedundancy;
					}
					return _0x5a902d(_0x20286e.sdtp, _0x333acf);
				};
				_0x5404f2 = function _0x2bfbfc(_0x262926) {
					return _0x5a902d(_0x20286e.stbl, _0x395d8d(_0x262926), _0x5a902d(_0x20286e.stts, _0x14e55c), _0x5a902d(_0x20286e.stsc, _0x1b75c4), _0x5a902d(_0x20286e.stsz, _0x4e7fec), _0x5a902d(_0x20286e.stco, _0x149491));
				};
				(function () {
					var _0x59d920, _0x2befc7;
					_0x395d8d = function _0x14af1c(_0x28e4d1) {
						return _0x5a902d(_0x20286e.stsd, new Uint8Array([
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							1
						]), _0x28e4d1.type === 'video' ? _0x59d920(_0x28e4d1) : _0x2befc7(_0x28e4d1));
					};
					_0x59d920 = function _0xfc46ce(_0x281a4b) {
						var _0x1e4d87 = _0x281a4b.sps || [], _0x33bb3b = _0x281a4b.pps || [], _0x6c6964 = [], _0x423e16 = [], _0x1a837d;
						for (_0x1a837d = 0; _0x1a837d < _0x1e4d87.length; _0x1a837d++) {
							_0x6c6964.push((_0x1e4d87[_0x1a837d].byteLength & 65280) >>> 8);
							_0x6c6964.push(_0x1e4d87[_0x1a837d].byteLength & 255);
							_0x6c6964 = _0x6c6964.concat(Array.prototype.slice.call(_0x1e4d87[_0x1a837d]));
						}
						for (_0x1a837d = 0; _0x1a837d < _0x33bb3b.length; _0x1a837d++) {
							_0x423e16.push((_0x33bb3b[_0x1a837d].byteLength & 65280) >>> 8);
							_0x423e16.push(_0x33bb3b[_0x1a837d].byteLength & 255);
							_0x423e16 = _0x423e16.concat(Array.prototype.slice.call(_0x33bb3b[_0x1a837d]));
						}
						return _0x5a902d(_0x20286e.avc1, new Uint8Array([
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							(_0x281a4b.width & 65280) >> 8,
							_0x281a4b.width & 255,
							(_0x281a4b.height & 65280) >> 8,
							_0x281a4b.height & 255,
							0,
							72,
							0,
							0,
							0,
							72,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							1,
							19,
							118,
							105,
							100,
							101,
							111,
							106,
							115,
							45,
							99,
							111,
							110,
							116,
							114,
							105,
							98,
							45,
							104,
							108,
							115,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							24,
							17,
							17
						]), _0x5a902d(_0x20286e.avcC, new Uint8Array([
							1,
							_0x281a4b.profileIdc,
							_0x281a4b.profileCompatibility,
							_0x281a4b.levelIdc,
							255
						].concat([_0x1e4d87.length]).concat(_0x6c6964).concat([_0x33bb3b.length]).concat(_0x423e16))), _0x5a902d(_0x20286e.btrt, new Uint8Array([
							0,
							28,
							156,
							128,
							0,
							45,
							198,
							192,
							0,
							45,
							198,
							192
						])));
					};
					_0x2befc7 = function _0x89ee7a(_0x71ecbc) {
						return _0x5a902d(_0x20286e.mp4a, new Uint8Array([
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							1,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							(_0x71ecbc.channelcount & 65280) >> 8,
							_0x71ecbc.channelcount & 255,
							(_0x71ecbc.samplesize & 65280) >> 8,
							_0x71ecbc.samplesize & 255,
							0,
							0,
							0,
							0,
							(_0x71ecbc.samplerate & 65280) >> 8,
							_0x71ecbc.samplerate & 255,
							0,
							0
						]), _0x338269(_0x71ecbc));
					};
				}());
				_0x12907a = function _0x51b50e(_0x51370f) {
					var _0xa1f66e = new Uint8Array([
						0,
						0,
						0,
						7,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						(_0x51370f.id & 4278190080) >> 24,
						(_0x51370f.id & 16711680) >> 16,
						(_0x51370f.id & 65280) >> 8,
						_0x51370f.id & 255,
						0,
						0,
						0,
						0,
						(_0x51370f.duration & 4278190080) >> 24,
						(_0x51370f.duration & 16711680) >> 16,
						(_0x51370f.duration & 65280) >> 8,
						_0x51370f.duration & 255,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						64,
						0,
						0,
						0,
						(_0x51370f.width & 65280) >> 8,
						_0x51370f.width & 255,
						0,
						0,
						(_0x51370f.height & 65280) >> 8,
						_0x51370f.height & 255,
						0,
						0
					]);
					return _0x5a902d(_0x20286e.tkhd, _0xa1f66e);
				};
				_0x451d51 = function _0x1bde17(_0x12d8eb) {
					var _0x445fc0, _0x24c514, _0x4015e0, _0x3e706d, _0x1ea864, _0x55bddd, _0x1682f8;
					_0x445fc0 = _0x5a902d(_0x20286e.tfhd, new Uint8Array([
						0,
						0,
						0,
						58,
						(_0x12d8eb.id & 4278190080) >> 24,
						(_0x12d8eb.id & 16711680) >> 16,
						(_0x12d8eb.id & 65280) >> 8,
						_0x12d8eb.id & 255,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0
					]));
					_0x55bddd = Math.floor(_0x12d8eb.baseMediaDecodeTime / (_0x4e06a8 + 1));
					_0x1682f8 = Math.floor(_0x12d8eb.baseMediaDecodeTime % (_0x4e06a8 + 1));
					_0x24c514 = _0x5a902d(_0x20286e.tfdt, new Uint8Array([
						1,
						0,
						0,
						0,
						_0x55bddd >>> 24 & 255,
						_0x55bddd >>> 16 & 255,
						_0x55bddd >>> 8 & 255,
						_0x55bddd & 255,
						_0x1682f8 >>> 24 & 255,
						_0x1682f8 >>> 16 & 255,
						_0x1682f8 >>> 8 & 255,
						_0x1682f8 & 255
					]));
					_0x1ea864 = 92;
					if (_0x12d8eb.type === 'audio') {
						return _0x4015e0 = _0xa63050(_0x12d8eb, _0x1ea864), _0x5a902d(_0x20286e.traf, _0x445fc0, _0x24c514, _0x4015e0);
					}
					return _0x3e706d = _0x2775b1(_0x12d8eb), _0x4015e0 = _0xa63050(_0x12d8eb, _0x3e706d.length + _0x1ea864), _0x5a902d(_0x20286e.traf, _0x445fc0, _0x24c514, _0x4015e0, _0x3e706d);
				};
				_0x19e713 = function _0x273e80(_0x10909b) {
					return _0x10909b.duration = _0x10909b.duration || 4294967295, _0x5a902d(_0x20286e.trak, _0x12907a(_0x10909b), _0x26b8ab(_0x10909b));
				};
				_0x17a255 = function _0x11350b(_0x23a827) {
					var _0x5bc69b = new Uint8Array([
						0,
						0,
						0,
						0,
						(_0x23a827.id & 4278190080) >> 24,
						(_0x23a827.id & 16711680) >> 16,
						(_0x23a827.id & 65280) >> 8,
						_0x23a827.id & 255,
						0,
						0,
						0,
						1,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						0,
						1,
						0,
						1
					]);
					if (_0x23a827.type !== 'video') {
						_0x5bc69b[_0x5bc69b.length - 1] = 0;
					}
					return _0x5a902d(_0x20286e.trex, _0x5bc69b);
				};
				(function () {
					var _0x15df92, _0x4631a5, _0x5ce9ff;
					_0x5ce9ff = function _0x19b87c(_0x458223, _0x344913) {
						var _0xf91adc = 0, _0x5db846 = 0, _0x7b4252 = 0, _0x10c439 = 0;
						if (_0x458223.length) {
							if (_0x458223[0].duration !== undefined) {
								_0xf91adc = 1;
							}
							if (_0x458223[0].size !== undefined) {
								_0x5db846 = 2;
							}
							if (_0x458223[0].flags !== undefined) {
								_0x7b4252 = 4;
							}
							if (_0x458223[0].compositionTimeOffset !== undefined) {
								_0x10c439 = 8;
							}
						}
						return [
							0,
							0,
							_0xf91adc | _0x5db846 | _0x7b4252 | _0x10c439,
							1,
							(_0x458223.length & 4278190080) >>> 24,
							(_0x458223.length & 16711680) >>> 16,
							(_0x458223.length & 65280) >>> 8,
							_0x458223.length & 255,
							(_0x344913 & 4278190080) >>> 24,
							(_0x344913 & 16711680) >>> 16,
							(_0x344913 & 65280) >>> 8,
							_0x344913 & 255
						];
					};
					_0x4631a5 = function _0x14fb1c(_0x3985b0, _0x372cbd) {
						var _0x3c2bd6, _0x5c56a4, _0x161b45, _0x1e44d0;
						_0x5c56a4 = _0x3985b0.samples || [];
						_0x372cbd += 20 + 16 * _0x5c56a4.length;
						_0x3c2bd6 = _0x5ce9ff(_0x5c56a4, _0x372cbd);
						for (_0x1e44d0 = 0; _0x1e44d0 < _0x5c56a4.length; _0x1e44d0++) {
							_0x161b45 = _0x5c56a4[_0x1e44d0];
							_0x3c2bd6 = _0x3c2bd6.concat([
								(_0x161b45.duration & 4278190080) >>> 24,
								(_0x161b45.duration & 16711680) >>> 16,
								(_0x161b45.duration & 65280) >>> 8,
								_0x161b45.duration & 255,
								(_0x161b45.size & 4278190080) >>> 24,
								(_0x161b45.size & 16711680) >>> 16,
								(_0x161b45.size & 65280) >>> 8,
								_0x161b45.size & 255,
								_0x161b45.flags.isLeading << 2 | _0x161b45.flags.dependsOn,
								_0x161b45.flags.isDependedOn << 6 | _0x161b45.flags.hasRedundancy << 4 | _0x161b45.flags.paddingValue << 1 | _0x161b45.flags.isNonSyncSample,
								_0x161b45.flags.degradationPriority & 240 << 8,
								_0x161b45.flags.degradationPriority & 15,
								(_0x161b45.compositionTimeOffset & 4278190080) >>> 24,
								(_0x161b45.compositionTimeOffset & 16711680) >>> 16,
								(_0x161b45.compositionTimeOffset & 65280) >>> 8,
								_0x161b45.compositionTimeOffset & 255
							]);
						}
						return _0x5a902d(_0x20286e.trun, new Uint8Array(_0x3c2bd6));
					};
					_0x15df92 = function _0x2c34f3(_0x15a057, _0x9b9054) {
						var _0x18bb1e, _0x2a69e9, _0x272b5f, _0x2fab33;
						_0x2a69e9 = _0x15a057.samples || [];
						_0x9b9054 += 20 + 8 * _0x2a69e9.length;
						_0x18bb1e = _0x5ce9ff(_0x2a69e9, _0x9b9054);
						for (_0x2fab33 = 0; _0x2fab33 < _0x2a69e9.length; _0x2fab33++) {
							_0x272b5f = _0x2a69e9[_0x2fab33];
							_0x18bb1e = _0x18bb1e.concat([
								(_0x272b5f.duration & 4278190080) >>> 24,
								(_0x272b5f.duration & 16711680) >>> 16,
								(_0x272b5f.duration & 65280) >>> 8,
								_0x272b5f.duration & 255,
								(_0x272b5f.size & 4278190080) >>> 24,
								(_0x272b5f.size & 16711680) >>> 16,
								(_0x272b5f.size & 65280) >>> 8,
								_0x272b5f.size & 255
							]);
						}
						return _0x5a902d(_0x20286e.trun, new Uint8Array(_0x18bb1e));
					};
					_0xa63050 = function _0x14e067(_0x1b91e1, _0x18aba8) {
						if (_0x1b91e1.type === 'audio') {
							return _0x15df92(_0x1b91e1, _0x18aba8);
						}
						return _0x4631a5(_0x1b91e1, _0x18aba8);
					};
				}());
				var _0xbb0259 = {
					'ftyp': _0x13dfa7,
					'mdat': _0x4c90be,
					'moof': _0x3e1ffc,
					'moov': _0x3d1d27,
					'initSegment': function _0x48f3ec(_0x8b3e50) {
						var _0x462508 = _0x13dfa7(), _0x39c955 = _0x3d1d27(_0x8b3e50), _0x2d32ab;
						return _0x2d32ab = new Uint8Array(_0x462508.byteLength + _0x39c955.byteLength), _0x2d32ab.set(_0x462508), _0x2d32ab.set(_0x39c955, _0x462508.byteLength), _0x2d32ab;
					}
				}, _0x23aba2 = function _0xa1be4a(_0x26f645) {
					return _0x26f645 >>> 0;
				}, _0x2f46a9 = { 'toUnsigned': _0x23aba2 }, _0x4c75b5 = _0x2f46a9.toUnsigned, _0x10add6, _0x4f24b1, _0x3c215a, _0x2de6aa, _0x5d09bd;
				_0x10add6 = function _0x5cc834(_0x1a6cb3, _0x8fce60) {
					var _0x20519b = [], _0x212ebd, _0x355903, _0x2d878d, _0x459962, _0x4f2dbb;
					if (!_0x8fce60.length) {
						return null;
					}
					for (_0x212ebd = 0; _0x212ebd < _0x1a6cb3.byteLength;) {
						_0x355903 = _0x4c75b5(_0x1a6cb3[_0x212ebd] << 24 | _0x1a6cb3[_0x212ebd + 1] << 16 | _0x1a6cb3[_0x212ebd + 2] << 8 | _0x1a6cb3[_0x212ebd + 3]);
						_0x2d878d = _0x4f24b1(_0x1a6cb3.subarray(_0x212ebd + 4, _0x212ebd + 8));
						_0x459962 = _0x355903 > 1 ? _0x212ebd + _0x355903 : _0x1a6cb3.byteLength;
						if (_0x2d878d === _0x8fce60[0]) {
							if (_0x8fce60.length === 1) {
								_0x20519b.push(_0x1a6cb3.subarray(_0x212ebd + 8, _0x459962));
							} else {
								_0x4f2dbb = _0x10add6(_0x1a6cb3.subarray(_0x212ebd + 8, _0x459962), _0x8fce60.slice(1));
								if (_0x4f2dbb.length) {
									_0x20519b = _0x20519b.concat(_0x4f2dbb);
								}
							}
						}
						_0x212ebd = _0x459962;
					}
					return _0x20519b;
				};
				_0x4f24b1 = function _0x4ecd00(_0x5ebf27) {
					var _0x44b9be = '';
					return _0x44b9be += String.fromCharCode(_0x5ebf27[0]), _0x44b9be += String.fromCharCode(_0x5ebf27[1]), _0x44b9be += String.fromCharCode(_0x5ebf27[2]), _0x44b9be += String.fromCharCode(_0x5ebf27[3]), _0x44b9be;
				};
				_0x3c215a = function _0x25f088(_0x80902f) {
					var _0x461b3e = {}, _0x318f21 = _0x10add6(_0x80902f, [
						'moov',
						'trak'
					]);
					return _0x318f21.reduce(function (_0x42b339, _0x4d5bae) {
						var _0x50e614, _0x4ddbce, _0x4da67b, _0x3a961b, _0x54b04f;
						_0x50e614 = _0x10add6(_0x4d5bae, ['tkhd'])[0];
						if (!_0x50e614) {
							return null;
						}
						_0x4ddbce = _0x50e614[0];
						_0x4da67b = _0x4ddbce === 0 ? 12 : 20;
						_0x3a961b = _0x4c75b5(_0x50e614[_0x4da67b] << 24 | _0x50e614[_0x4da67b + 1] << 16 | _0x50e614[_0x4da67b + 2] << 8 | _0x50e614[_0x4da67b + 3]);
						_0x54b04f = _0x10add6(_0x4d5bae, [
							'mdia',
							'mdhd'
						])[0];
						if (!_0x54b04f) {
							return null;
						}
						return _0x4ddbce = _0x54b04f[0], _0x4da67b = _0x4ddbce === 0 ? 12 : 20, _0x42b339[_0x3a961b] = _0x4c75b5(_0x54b04f[_0x4da67b] << 24 | _0x54b04f[_0x4da67b + 1] << 16 | _0x54b04f[_0x4da67b + 2] << 8 | _0x54b04f[_0x4da67b + 3]), _0x42b339;
					}, _0x461b3e);
				};
				_0x2de6aa = function _0x57a529(_0x1be90c, _0x1c9fd3) {
					var _0x27825d, _0x2a01ea, _0x494fe4;
					return _0x27825d = _0x10add6(_0x1c9fd3, [
						'moof',
						'traf'
					]), _0x2a01ea = [].concat.apply([], _0x27825d.map(function (_0x566b24) {
						return _0x10add6(_0x566b24, ['tfhd']).map(function (_0x44a286) {
							var _0x17eb2c, _0x4a5dd0, _0x237dd4;
							return _0x17eb2c = _0x4c75b5(_0x44a286[4] << 24 | _0x44a286[5] << 16 | _0x44a286[6] << 8 | _0x44a286[7]), _0x4a5dd0 = _0x1be90c[_0x17eb2c] || 90000, _0x237dd4 = _0x10add6(_0x566b24, ['tfdt']).map(function (_0x208995) {
								var _0x41263a, _0x55deec;
								return _0x41263a = _0x208995[0], _0x55deec = _0x4c75b5(_0x208995[4] << 24 | _0x208995[5] << 16 | _0x208995[6] << 8 | _0x208995[7]), _0x41263a === 1 && (_0x55deec *= Math.pow(2, 32), _0x55deec += _0x4c75b5(_0x208995[8] << 24 | _0x208995[9] << 16 | _0x208995[10] << 8 | _0x208995[11])), _0x55deec;
							})[0], _0x237dd4 = _0x237dd4 || Infinity, _0x237dd4 / _0x4a5dd0;
						});
					})), _0x494fe4 = Math.min.apply(null, _0x2a01ea), isFinite(_0x494fe4) ? _0x494fe4 : 0;
				};
				_0x5d09bd = function _0x1f4bb6(_0xff39be) {
					var _0x4019e4 = _0x10add6(_0xff39be, [
						'moov',
						'trak'
					]), _0x590228 = [];
					return _0x4019e4.forEach(function (_0x4cbf4e) {
						var _0x4d545f = _0x10add6(_0x4cbf4e, [
							'mdia',
							'hdlr'
						]), _0x34f319 = _0x10add6(_0x4cbf4e, ['tkhd']);
						_0x4d545f.forEach(function (_0x6a7e0, _0x59d9df) {
							var _0x404a0d = _0x4f24b1(_0x6a7e0.subarray(8, 12)), _0x53f311 = _0x34f319[_0x59d9df], _0x147f36, _0x5e8e1a, _0xe0799;
							if (_0x404a0d === 'vide') {
								_0x147f36 = new DataView(_0x53f311.buffer, _0x53f311.byteOffset, _0x53f311.byteLength);
								_0x5e8e1a = _0x147f36.getUint8(0);
								_0xe0799 = _0x5e8e1a === 0 ? _0x147f36.getUint32(12) : _0x147f36.getUint32(20);
								_0x590228.push(_0xe0799);
							}
						});
					}), _0x590228;
				};
				var _0x4b4208 = {
					'findBox': _0x10add6,
					'parseType': _0x4f24b1,
					'timescale': _0x3c215a,
					'startTime': _0x2de6aa,
					'videoTrackIds': _0x5d09bd
				}, _0x3f94ad = function _0x423d1e() {
					this.init = function () {
						var _0x586e56 = {
							_0x13fe6c: [],
							_0x13fe6c: _0x586e56[_0x13fe6c].concat(_0x5a6201)
						};
						this.on = function (_0x13fe6c, _0x5a6201) {
							if (!_0x586e56[_0x13fe6c]) {
							}
						};
						this.off = function (_0x562aec, _0x3e97bc) {
							var _0x2ba62a;
							if (!_0x586e56[_0x562aec]) {
								return false;
							}
							return _0x2ba62a = _0x586e56[_0x562aec].indexOf(_0x3e97bc), _0x586e56[_0x562aec] = _0x586e56[_0x562aec].slice(), _0x586e56[_0x562aec].splice(_0x2ba62a, 1), _0x2ba62a > -1;
						};
						this.trigger = function (_0x7645be) {
							var _0x5c31cc, _0x576197, _0x4717ab, _0x55fb47;
							_0x5c31cc = _0x586e56[_0x7645be];
							if (!_0x5c31cc) {
								return;
							}
							if (arguments.length === 2) {
								_0x4717ab = _0x5c31cc.length;
								for (_0x576197 = 0; _0x576197 < _0x4717ab; ++_0x576197) {
									_0x5c31cc[_0x576197].call(this, arguments[1]);
								}
							} else {
								_0x55fb47 = [];
								_0x576197 = arguments.length;
								for (_0x576197 = 1; _0x576197 < arguments.length; ++_0x576197) {
									_0x55fb47.push(arguments[_0x576197]);
								}
								_0x4717ab = _0x5c31cc.length;
								for (_0x576197 = 0; _0x576197 < _0x4717ab; ++_0x576197) {
									_0x5c31cc[_0x576197].apply(this, _0x55fb47);
								}
							}
						};
						this.dispose = function () {
							_0x586e56 = {};
						};
					};
				};
				_0x3f94ad.prototype.pipe = function (_0x435e4f) {
					return this.on('data', function (_0x48be2e) {
						_0x435e4f.push(_0x48be2e);
					}), this.on('done', function (_0x243a8c) {
						_0x435e4f.flush(_0x243a8c);
					}), _0x435e4f;
				};
				_0x3f94ad.prototype.push = function (_0x1de9f1) {
					this.trigger('data', _0x1de9f1);
				};
				_0x3f94ad.prototype.flush = function (_0x3dc009) {
					this.trigger('done', _0x3dc009);
				};
				var _0x1d0554 = _0x3f94ad, _0x37548d = function _0x5cc33e(_0x3fcf06) {
					var _0x6424a3, _0x7ef973, _0x14886e = [], _0x30e976 = [];
					_0x14886e.byteLength = 0;
					for (_0x6424a3 = 0; _0x6424a3 < _0x3fcf06.length; _0x6424a3++) {
						_0x7ef973 = _0x3fcf06[_0x6424a3];
						if (_0x7ef973.nalUnitType === 'access_unit_delimiter_rbsp') {
							_0x14886e.length && (_0x14886e.duration = _0x7ef973.dts - _0x14886e.dts, _0x30e976.push(_0x14886e));
							_0x14886e = [_0x7ef973];
							_0x14886e.byteLength = _0x7ef973.data.byteLength;
							_0x14886e.pts = _0x7ef973.pts;
							_0x14886e.dts = _0x7ef973.dts;
						} else {
							if (_0x7ef973.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {
								_0x14886e.keyFrame = true;
							}
							_0x14886e.duration = _0x7ef973.dts - _0x14886e.dts;
							_0x14886e.byteLength += _0x7ef973.data.byteLength;
							_0x14886e.push(_0x7ef973);
						}
					}
					if (_0x30e976.length && (!_0x14886e.duration || _0x14886e.duration <= 0)) {
						_0x14886e.duration = _0x30e976[_0x30e976.length - 1].duration;
					}
					return _0x30e976.push(_0x14886e), _0x30e976;
				}, _0x3bf854 = function _0x624839(_0x315ddc) {
					var _0x3e16d0, _0x119094, _0x13b263 = [], _0x3a9f91 = [];
					_0x13b263.byteLength = 0;
					_0x13b263.nalCount = 0;
					_0x13b263.duration = 0;
					_0x13b263.pts = _0x315ddc[0].pts;
					_0x13b263.dts = _0x315ddc[0].dts;
					_0x3a9f91.byteLength = 0;
					_0x3a9f91.nalCount = 0;
					_0x3a9f91.duration = 0;
					_0x3a9f91.pts = _0x315ddc[0].pts;
					_0x3a9f91.dts = _0x315ddc[0].dts;
					for (_0x3e16d0 = 0; _0x3e16d0 < _0x315ddc.length; _0x3e16d0++) {
						_0x119094 = _0x315ddc[_0x3e16d0];
						_0x119094.keyFrame ? (_0x13b263.length && (_0x3a9f91.push(_0x13b263), _0x3a9f91.byteLength += _0x13b263.byteLength, _0x3a9f91.nalCount += _0x13b263.nalCount, _0x3a9f91.duration += _0x13b263.duration), _0x13b263 = [_0x119094], _0x13b263.nalCount = _0x119094.length, _0x13b263.byteLength = _0x119094.byteLength, _0x13b263.pts = _0x119094.pts, _0x13b263.dts = _0x119094.dts, _0x13b263.duration = _0x119094.duration) : (_0x13b263.duration += _0x119094.duration, _0x13b263.nalCount += _0x119094.length, _0x13b263.byteLength += _0x119094.byteLength, _0x13b263.push(_0x119094));
					}
					if (_0x3a9f91.length && _0x13b263.duration <= 0) {
						_0x13b263.duration = _0x3a9f91[_0x3a9f91.length - 1].duration;
					}
					return _0x3a9f91.byteLength += _0x13b263.byteLength, _0x3a9f91.nalCount += _0x13b263.nalCount, _0x3a9f91.duration += _0x13b263.duration, _0x3a9f91.push(_0x13b263), _0x3a9f91;
				}, _0x3c79ab = function _0x33c186(_0x4dbd20) {
					var _0x20a79e;
					return !_0x4dbd20[0][0].keyFrame && _0x4dbd20.length > 1 && (_0x20a79e = _0x4dbd20.shift(), _0x4dbd20.byteLength -= _0x20a79e.byteLength, _0x4dbd20.nalCount -= _0x20a79e.nalCount, _0x4dbd20[0][0].dts = _0x20a79e.dts, _0x4dbd20[0][0].pts = _0x20a79e.pts, _0x4dbd20[0][0].duration += _0x20a79e.duration), _0x4dbd20;
				}, _0x250c17 = function _0x437806() {
					return {
						'size': 0,
						'flags': {
							'isLeading': 0,
							'dependsOn': 1,
							'isDependedOn': 0,
							'hasRedundancy': 0,
							'degradationPriority': 0,
							'isNonSyncSample': 1
						}
					};
				}, _0x33bde9 = function _0x32fb3c(_0x25a5d8, _0x34292f) {
					var _0x2c7f03 = _0x250c17();
					return _0x2c7f03.dataOffset = _0x34292f, _0x2c7f03.compositionTimeOffset = _0x25a5d8.pts - _0x25a5d8.dts, _0x2c7f03.duration = _0x25a5d8.duration, _0x2c7f03.size = 4 * _0x25a5d8.length, _0x2c7f03.size += _0x25a5d8.byteLength, _0x25a5d8.keyFrame && (_0x2c7f03.flags.dependsOn = 2, _0x2c7f03.flags.isNonSyncSample = 0), _0x2c7f03;
				}, _0x1033e9 = function _0x55f540(_0x31df19, _0xe90064) {
					var _0x5ba235, _0x573533, _0x1ae66b, _0x57da76, _0x214204, _0x44fe45 = _0xe90064 || 0, _0x26d901 = [];
					for (_0x5ba235 = 0; _0x5ba235 < _0x31df19.length; _0x5ba235++) {
						_0x57da76 = _0x31df19[_0x5ba235];
						for (_0x573533 = 0; _0x573533 < _0x57da76.length; _0x573533++) {
							_0x214204 = _0x57da76[_0x573533];
							_0x1ae66b = _0x33bde9(_0x214204, _0x44fe45);
							_0x44fe45 += _0x1ae66b.size;
							_0x26d901.push(_0x1ae66b);
						}
					}
					return _0x26d901;
				}, _0x5b2468 = function _0x515eae(_0x284ab8) {
					var _0x2ace90, _0x45be7a, _0x3d3619, _0x5e7c4f, _0x201228, _0x172541, _0x4de0f1 = 0, _0x414902 = _0x284ab8.byteLength, _0x7adee8 = _0x284ab8.nalCount, _0x4de48c = _0x414902 + 4 * _0x7adee8, _0x4fa9d4 = new Uint8Array(_0x4de48c), _0xda6514 = new DataView(_0x4fa9d4.buffer);
					for (_0x2ace90 = 0; _0x2ace90 < _0x284ab8.length; _0x2ace90++) {
						_0x5e7c4f = _0x284ab8[_0x2ace90];
						for (_0x45be7a = 0; _0x45be7a < _0x5e7c4f.length; _0x45be7a++) {
							_0x201228 = _0x5e7c4f[_0x45be7a];
							for (_0x3d3619 = 0; _0x3d3619 < _0x201228.length; _0x3d3619++) {
								_0x172541 = _0x201228[_0x3d3619];
								_0xda6514.setUint32(_0x4de0f1, _0x172541.data.byteLength);
								_0x4de0f1 += 4;
								_0x4fa9d4.set(_0x172541.data, _0x4de0f1);
								_0x4de0f1 += _0x172541.data.byteLength;
							}
						}
					}
					return _0x4fa9d4;
				}, _0x321365 = {
					'groupNalsIntoFrames': _0x37548d,
					'groupFramesIntoGops': _0x3bf854,
					'extendFirstKeyFrame': _0x3c79ab,
					'generateSampleTable': _0x1033e9,
					'concatenateNalData': _0x5b2468
				}, _0x47d41a = function _0x26adcf(_0x51aba1, _0x31aa6c) {
					if (typeof _0x31aa6c.pts === 'number') {
						if (_0x51aba1.timelineStartInfo.pts === undefined) {
							_0x51aba1.timelineStartInfo.pts = _0x31aa6c.pts;
						}
						if (_0x51aba1.minSegmentPts === undefined) {
							_0x51aba1.minSegmentPts = _0x31aa6c.pts;
						} else {
							_0x51aba1.minSegmentPts = Math.min(_0x51aba1.minSegmentPts, _0x31aa6c.pts);
						}
						if (_0x51aba1.maxSegmentPts === undefined) {
							_0x51aba1.maxSegmentPts = _0x31aa6c.pts;
						} else {
							_0x51aba1.maxSegmentPts = Math.max(_0x51aba1.maxSegmentPts, _0x31aa6c.pts);
						}
					}
					if (typeof _0x31aa6c.dts === 'number') {
						if (_0x51aba1.timelineStartInfo.dts === undefined) {
							_0x51aba1.timelineStartInfo.dts = _0x31aa6c.dts;
						}
						if (_0x51aba1.minSegmentDts === undefined) {
							_0x51aba1.minSegmentDts = _0x31aa6c.dts;
						} else {
							_0x51aba1.minSegmentDts = Math.min(_0x51aba1.minSegmentDts, _0x31aa6c.dts);
						}
						if (_0x51aba1.maxSegmentDts === undefined) {
							_0x51aba1.maxSegmentDts = _0x31aa6c.dts;
						} else {
							_0x51aba1.maxSegmentDts = Math.max(_0x51aba1.maxSegmentDts, _0x31aa6c.dts);
						}
					}
				}, _0x2aaf5f = function _0x1bc6f7(_0xc16c6f) {
					delete _0xc16c6f.minSegmentDts;
					delete _0xc16c6f.maxSegmentDts;
					delete _0xc16c6f.minSegmentPts;
					delete _0xc16c6f.maxSegmentPts;
				}, _0x22e7c2 = function _0x35cbb0(_0x38a4ff, _0x2509b7) {
					var _0x232756, _0x51951c, _0x2aff82 = _0x38a4ff.minSegmentDts;
					if (!_0x2509b7) {
						_0x2aff82 -= _0x38a4ff.timelineStartInfo.dts;
					}
					return _0x232756 = _0x38a4ff.timelineStartInfo.baseMediaDecodeTime, _0x232756 += _0x2aff82, _0x232756 = Math.max(0, _0x232756), _0x38a4ff.type === 'audio' && (_0x51951c = _0x38a4ff.samplerate / 90000, _0x232756 *= _0x51951c, _0x232756 = Math.floor(_0x232756)), _0x232756;
				}, _0x38563f = {
					'clearDtsInfo': _0x2aaf5f,
					'calculateTrackBaseMediaDecodeTime': _0x22e7c2,
					'collectDtsInfo': _0x47d41a
				}, _0x371fa8 = function _0x1ce3a3(_0x3224f1) {
					var _0x59878b = 0, _0x5c8180 = {
						'payloadType': -1,
						'payloadSize': 0
					}, _0x1547dd = 0, _0x13da70 = 0;
					while (_0x59878b < _0x3224f1.byteLength) {
						if (_0x3224f1[_0x59878b] === 128) {
							break;
						}
						while (_0x3224f1[_0x59878b] === 255) {
							_0x1547dd += 255;
							_0x59878b++;
						}
						_0x1547dd += _0x3224f1[_0x59878b++];
						while (_0x3224f1[_0x59878b] === 255) {
							_0x13da70 += 255;
							_0x59878b++;
						}
						_0x13da70 += _0x3224f1[_0x59878b++];
						if (!_0x5c8180.payload && _0x1547dd === 4) {
							_0x5c8180.payloadType = _0x1547dd;
							_0x5c8180.payloadSize = _0x13da70;
							_0x5c8180.payload = _0x3224f1.subarray(_0x59878b, _0x59878b + _0x13da70);
							break;
						}
						_0x59878b += _0x13da70;
						_0x1547dd = 0;
						_0x13da70 = 0;
					}
					return _0x5c8180;
				}, _0x4b3051 = function _0x1c2cf7(_0x2150d8) {
					if (_0x2150d8.payload[0] !== 181) {
						return null;
					}
					if ((_0x2150d8.payload[1] << 8 | _0x2150d8.payload[2]) !== 49) {
						return null;
					}
					if (String.fromCharCode(_0x2150d8.payload[3], _0x2150d8.payload[4], _0x2150d8.payload[5], _0x2150d8.payload[6]) !== 'GA94') {
						return null;
					}
					if (_0x2150d8.payload[7] !== 3) {
						return null;
					}
					return _0x2150d8.payload.subarray(8, _0x2150d8.payload.length - 1);
				}, _0x4c8c08 = function _0x2a7193(_0x32981f, _0x1d36a0) {
					var _0x227e16 = [], _0xef527c, _0x386657, _0xde5f0c, _0xfca082;
					if (!(_0x1d36a0[0] & 64)) {
						return _0x227e16;
					}
					_0x386657 = _0x1d36a0[0] & 31;
					for (_0xef527c = 0; _0xef527c < _0x386657; _0xef527c++) {
						_0xde5f0c = _0xef527c * 3;
						_0xfca082 = {
							'type': _0x1d36a0[_0xde5f0c + 2] & 3,
							'pts': _0x32981f
						};
						if (_0x1d36a0[_0xde5f0c + 2] & 4) {
							_0xfca082.ccData = _0x1d36a0[_0xde5f0c + 3] << 8 | _0x1d36a0[_0xde5f0c + 4];
							_0x227e16.push(_0xfca082);
						}
					}
					return _0x227e16;
				}, _0x4a3376 = function _0x3b9a2a(_0x4d9edc) {
					var _0x5b91a9 = _0x4d9edc.byteLength, _0x59b1e5 = [], _0x5130fd = 1, _0x147361, _0x5b6452;
					while (_0x5130fd < _0x5b91a9 - 2) {
						if (_0x4d9edc[_0x5130fd] === 0 && _0x4d9edc[_0x5130fd + 1] === 0 && _0x4d9edc[_0x5130fd + 2] === 3) {
							_0x59b1e5.push(_0x5130fd + 2);
							_0x5130fd += 2;
						} else {
							_0x5130fd++;
						}
					}
					if (_0x59b1e5.length === 0) {
						return _0x4d9edc;
					}
					_0x147361 = _0x5b91a9 - _0x59b1e5.length;
					_0x5b6452 = new Uint8Array(_0x147361);
					var _0x5a9517 = 0;
					for (_0x5130fd = 0; _0x5130fd < _0x147361; _0x5a9517++, _0x5130fd++) {
						if (_0x5a9517 === _0x59b1e5[0]) {
							_0x5a9517++;
							_0x59b1e5.shift();
						}
						_0x5b6452[_0x5130fd] = _0x4d9edc[_0x5a9517];
					}
					return _0x5b6452;
				}, _0x89c2b0 = {
					'parseSei': _0x371fa8,
					'parseUserData': _0x4b3051,
					'parseCaptionPackets': _0x4c8c08,
					'discardEmulationPreventionBytes': _0x4a3376,
					'USER_DATA_REGISTERED_ITU_T_T35': 4
				}, _0x20a3f9 = function _0x4b960b() {
					_0x4b960b.prototype.init.call(this);
					this.captionPackets_ = [];
					this.ccStreams_ = [
						new _0x169d54(0, 0),
						new _0x169d54(0, 1),
						new _0x169d54(1, 0),
						new _0x169d54(1, 1)
					];
					this.reset();
					this.ccStreams_.forEach(function (_0x177528) {
						_0x177528.on('data', this.trigger.bind(this, 'data'));
						_0x177528.on('done', this.trigger.bind(this, 'done'));
					}, this);
				};
				_0x20a3f9.prototype = new _0x1d0554();
				_0x20a3f9.prototype.push = function (_0x46f881) {
					var _0x3acbdd, _0xabc016, _0x54d248;
					if (_0x46f881.nalUnitType !== 'sei_rbsp') {
						return;
					}
					_0x3acbdd = _0x89c2b0.parseSei(_0x46f881.escapedRBSP);
					if (_0x3acbdd.payloadType !== _0x89c2b0.USER_DATA_REGISTERED_ITU_T_T35) {
						return;
					}
					_0xabc016 = _0x89c2b0.parseUserData(_0x3acbdd);
					if (!_0xabc016) {
						return;
					}
					if (_0x46f881.dts < this.latestDts_) {
						this.ignoreNextEqualDts_ = true;
						return;
					} else {
						if (_0x46f881.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
							this.numSameDts_--;
							if (!this.numSameDts_) {
								this.ignoreNextEqualDts_ = false;
							}
							return;
						}
					}
					_0x54d248 = _0x89c2b0.parseCaptionPackets(_0x46f881.pts, _0xabc016);
					this.captionPackets_ = this.captionPackets_.concat(_0x54d248);
					if (this.latestDts_ !== _0x46f881.dts) {
						this.numSameDts_ = 0;
					}
					this.numSameDts_++;
					this.latestDts_ = _0x46f881.dts;
				};
				_0x20a3f9.prototype.flush = function () {
					if (!this.captionPackets_.length) {
						this.ccStreams_.forEach(function (_0x198a7c) {
							_0x198a7c.flush();
						}, this);
						return;
					}
					this.captionPackets_.forEach(function (_0x5eab0b, _0x4cccda) {
						_0x5eab0b.presortIndex = _0x4cccda;
					});
					this.captionPackets_.sort(function (_0x3658e6, _0x4792a9) {
						if (_0x3658e6.pts === _0x4792a9.pts) {
							return _0x3658e6.presortIndex - _0x4792a9.presortIndex;
						}
						return _0x3658e6.pts - _0x4792a9.pts;
					});
					this.captionPackets_.forEach(function (_0x207709) {
						if (_0x207709.type < 2) {
							this.dispatchCea608Packet(_0x207709);
						}
					}, this);
					this.captionPackets_.length = 0;
					this.ccStreams_.forEach(function (_0x5e13e6) {
						_0x5e13e6.flush();
					}, this);
					return;
				};
				_0x20a3f9.prototype.reset = function () {
					this.latestDts_ = null;
					this.ignoreNextEqualDts_ = false;
					this.numSameDts_ = 0;
					this.activeCea608Channel_ = [
						null,
						null
					];
					this.ccStreams_.forEach(function (_0x323795) {
						_0x323795.reset();
					});
				};
				_0x20a3f9.prototype.dispatchCea608Packet = function (_0x476efc) {
					if (this.setsChannel1Active(_0x476efc)) {
						this.activeCea608Channel_[_0x476efc.type] = 0;
					} else {
						if (this.setsChannel2Active(_0x476efc)) {
							this.activeCea608Channel_[_0x476efc.type] = 1;
						}
					}
					if (this.activeCea608Channel_[_0x476efc.type] === null) {
						return;
					}
					this.ccStreams_[(_0x476efc.type << 1) + this.activeCea608Channel_[_0x476efc.type]].push(_0x476efc);
				};
				_0x20a3f9.prototype.setsChannel1Active = function (_0x247c3a) {
					return (_0x247c3a.ccData & 30720) === 4096;
				};
				_0x20a3f9.prototype.setsChannel2Active = function (_0x2bc827) {
					return (_0x2bc827.ccData & 30720) === 6144;
				};
				var _0x2edee5 = function _0x582ae3(_0x1db339) {
					if (_0x1db339 === null) {
						return '';
					}
					return _0x1db339 = _0x1a6b77[_0x1db339] || _0x1db339, String.fromCharCode(_0x1db339);
				}, _0x4d6b8d = [
					4352,
					4384,
					4608,
					4640,
					5376,
					5408,
					5632,
					5664,
					5888,
					5920,
					4096,
					4864,
					4896,
					5120,
					5152
				], _0xdcb727 = function _0x4a39ea() {
					var _0x3eee97 = [], _0x5d8655 = 15;
					while (_0x5d8655--) {
						_0x3eee97.push('');
					}
					return _0x3eee97;
				}, _0x169d54 = function _0x21544a(_0x3d5c26, _0x58a155) {
					_0x21544a.prototype.init.call(this);
					this.field_ = _0x3d5c26 || 0;
					this.dataChannel_ = _0x58a155 || 0;
					this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);
					this.setConstants();
					this.reset();
					this.push = function (_0xb06f4f) {
						var _0x5c8feb, _0x2ac5c3, _0x104839, _0x3f98bb, _0x133276;
						_0x5c8feb = _0xb06f4f.ccData & 32639;
						if (_0x5c8feb === this.lastControlCode_) {
							this.lastControlCode_ = null;
							return;
						}
						if ((_0x5c8feb & 61440) === 4096) {
							this.lastControlCode_ = _0x5c8feb;
						} else {
							if (_0x5c8feb !== this.PADDING_) {
								this.lastControlCode_ = null;
							}
						}
						_0x104839 = _0x5c8feb >>> 8;
						_0x3f98bb = _0x5c8feb & 255;
						if (_0x5c8feb === this.PADDING_) {
							return;
						} else {
							if (_0x5c8feb === this.RESUME_CAPTION_LOADING_) {
								this.mode_ = 'popOn';
							} else {
								if (_0x5c8feb === this.END_OF_CAPTION_) {
									this.mode_ = 'popOn';
									this.clearFormatting(_0xb06f4f.pts);
									this.flushDisplayed(_0xb06f4f.pts);
									_0x2ac5c3 = this.displayed_;
									this.displayed_ = this.nonDisplayed_;
									this.nonDisplayed_ = _0x2ac5c3;
									this.startPts_ = _0xb06f4f.pts;
								} else {
									if (_0x5c8feb === this.ROLL_UP_2_ROWS_) {
										this.rollUpRows_ = 2;
										this.setRollUp(_0xb06f4f.pts);
									} else {
										if (_0x5c8feb === this.ROLL_UP_3_ROWS_) {
											this.rollUpRows_ = 3;
											this.setRollUp(_0xb06f4f.pts);
										} else {
											if (_0x5c8feb === this.ROLL_UP_4_ROWS_) {
												this.rollUpRows_ = 4;
												this.setRollUp(_0xb06f4f.pts);
											} else {
												if (_0x5c8feb === this.CARRIAGE_RETURN_) {
													this.clearFormatting(_0xb06f4f.pts);
													this.flushDisplayed(_0xb06f4f.pts);
													this.shiftRowsUp_();
													this.startPts_ = _0xb06f4f.pts;
												} else {
													if (_0x5c8feb === this.BACKSPACE_) {
														if (this.mode_ === 'popOn') {
															this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);
														} else {
															this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);
														}
													} else {
														if (_0x5c8feb === this.ERASE_DISPLAYED_MEMORY_) {
															this.flushDisplayed(_0xb06f4f.pts);
															this.displayed_ = _0xdcb727();
														} else {
															if (_0x5c8feb === this.ERASE_NON_DISPLAYED_MEMORY_) {
																this.nonDisplayed_ = _0xdcb727();
															} else {
																if (_0x5c8feb === this.RESUME_DIRECT_CAPTIONING_) {
																	if (this.mode_ !== 'paintOn') {
																		this.flushDisplayed(_0xb06f4f.pts);
																		this.displayed_ = _0xdcb727();
																	}
																	this.mode_ = 'paintOn';
																	this.startPts_ = _0xb06f4f.pts;
																} else {
																	if (this.isSpecialCharacter(_0x104839, _0x3f98bb)) {
																		_0x104839 = (_0x104839 & 3) << 8;
																		_0x133276 = _0x2edee5(_0x104839 | _0x3f98bb);
																		this[this.mode_](_0xb06f4f.pts, _0x133276);
																		this.column_++;
																	} else {
																		if (this.isExtCharacter(_0x104839, _0x3f98bb)) {
																			if (this.mode_ === 'popOn') {
																				this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);
																			} else {
																				this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);
																			}
																			_0x104839 = (_0x104839 & 3) << 8;
																			_0x133276 = _0x2edee5(_0x104839 | _0x3f98bb);
																			this[this.mode_](_0xb06f4f.pts, _0x133276);
																			this.column_++;
																		} else {
																			if (this.isMidRowCode(_0x104839, _0x3f98bb)) {
																				this.clearFormatting(_0xb06f4f.pts);
																				this[this.mode_](_0xb06f4f.pts, ' ');
																				this.column_++;
																				if ((_0x3f98bb & 14) === 14) {
																					this.addFormatting(_0xb06f4f.pts, ['i']);
																				}
																				if ((_0x3f98bb & 1) === 1) {
																					this.addFormatting(_0xb06f4f.pts, ['u']);
																				}
																			} else {
																				if (this.isOffsetControlCode(_0x104839, _0x3f98bb)) {
																					this.column_ += _0x3f98bb & 3;
																				} else {
																					if (this.isPAC(_0x104839, _0x3f98bb)) {
																						var _0x2f2521 = _0x4d6b8d.indexOf(_0x5c8feb & 7968);
																						if (this.mode_ === 'rollUp') {
																							this.setRollUp(_0xb06f4f.pts, _0x2f2521);
																						}
																						if (_0x2f2521 !== this.row_) {
																							this.clearFormatting(_0xb06f4f.pts);
																							this.row_ = _0x2f2521;
																						}
																						if (_0x3f98bb & 1 && this.formatting_.indexOf('u') === -1) {
																							this.addFormatting(_0xb06f4f.pts, ['u']);
																						}
																						if ((_0x5c8feb & 16) === 16) {
																							this.column_ = ((_0x5c8feb & 14) >> 1) * 4;
																						}
																						if (this.isColorPAC(_0x3f98bb)) {
																							if ((_0x3f98bb & 14) === 14) {
																								this.addFormatting(_0xb06f4f.pts, ['i']);
																							}
																						}
																					} else {
																						if (this.isNormalChar(_0x104839)) {
																							if (_0x3f98bb === 0) {
																								_0x3f98bb = null;
																							}
																							_0x133276 = _0x2edee5(_0x104839);
																							_0x133276 += _0x2edee5(_0x3f98bb);
																							this[this.mode_](_0xb06f4f.pts, _0x133276);
																							this.column_ += _0x133276.length;
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					};
				};
				_0x169d54.prototype = new _0x1d0554();
				_0x169d54.prototype.flushDisplayed = function (_0x3d9296) {
					var _0x2326af = this.displayed_.map(function (_0x3dbd9e) {
						return _0x3dbd9e.trim();
					}).join('\n').replace(/^\n+|\n+$/g, '');
					if (_0x2326af.length) {
						this.trigger('data', {
							'startPts': this.startPts_,
							'endPts': _0x3d9296,
							'text': _0x2326af,
							'stream': this.name_
						});
					}
				};
				_0x169d54.prototype.reset = function () {
					this.mode_ = 'popOn';
					this.topRow_ = 0;
					this.startPts_ = 0;
					this.displayed_ = _0xdcb727();
					this.nonDisplayed_ = _0xdcb727();
					this.lastControlCode_ = null;
					this.column_ = 0;
					this.row_ = 14;
					this.rollUpRows_ = 2;
					this.formatting_ = [];
				};
				_0x169d54.prototype.setConstants = function () {
					if (this.dataChannel_ === 0) {
						this.BASE_ = 16;
						this.EXT_ = 17;
						this.CONTROL_ = (20 | this.field_) << 8;
						this.OFFSET_ = 23;
					} else {
						if (this.dataChannel_ === 1) {
							this.BASE_ = 24;
							this.EXT_ = 25;
							this.CONTROL_ = (28 | this.field_) << 8;
							this.OFFSET_ = 31;
						}
					}
					this.PADDING_ = 0;
					this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
					this.END_OF_CAPTION_ = this.CONTROL_ | 47;
					this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
					this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
					this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
					this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
					this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
					this.BACKSPACE_ = this.CONTROL_ | 33;
					this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
					this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46;
				};
				_0x169d54.prototype.isSpecialCharacter = function (_0x241bce, _0x15cefd) {
					return _0x241bce === this.EXT_ && _0x15cefd >= 48 && _0x15cefd <= 63;
				};
				_0x169d54.prototype.isExtCharacter = function (_0x41d5ed, _0x2200aa) {
					return (_0x41d5ed === this.EXT_ + 1 || _0x41d5ed === this.EXT_ + 2) && _0x2200aa >= 32 && _0x2200aa <= 63;
				};
				_0x169d54.prototype.isMidRowCode = function (_0x2abe23, _0x518ad0) {
					return _0x2abe23 === this.EXT_ && _0x518ad0 >= 32 && _0x518ad0 <= 47;
				};
				_0x169d54.prototype.isOffsetControlCode = function (_0x3941ca, _0xe1e0db) {
					return _0x3941ca === this.OFFSET_ && _0xe1e0db >= 33 && _0xe1e0db <= 35;
				};
				_0x169d54.prototype.isPAC = function (_0x3d3d6a, _0x12adb6) {
					return _0x3d3d6a >= this.BASE_ && _0x3d3d6a < this.BASE_ + 8 && _0x12adb6 >= 64 && _0x12adb6 <= 127;
				};
				_0x169d54.prototype.isColorPAC = function (_0x3b1659) {
					return _0x3b1659 >= 64 && _0x3b1659 <= 79 || _0x3b1659 >= 96 && _0x3b1659 <= 127;
				};
				_0x169d54.prototype.isNormalChar = function (_0x602685) {
					return _0x602685 >= 32 && _0x602685 <= 127;
				};
				_0x169d54.prototype.setRollUp = function (_0x1a99d6, _0x42cd6a) {
					if (this.mode_ !== 'rollUp') {
						this.row_ = _0x5b023d;
						this.mode_ = 'rollUp';
						this.flushDisplayed(_0x1a99d6);
						this.nonDisplayed_ = _0xdcb727();
						this.displayed_ = _0xdcb727();
					}
					if (_0x42cd6a !== undefined && _0x42cd6a !== this.row_) {
						for (var _0x1ee9ee = 0; _0x1ee9ee < this.rollUpRows_; _0x1ee9ee++) {
							this.displayed_[_0x42cd6a - _0x1ee9ee] = this.displayed_[this.row_ - _0x1ee9ee];
							this.displayed_[this.row_ - _0x1ee9ee] = '';
						}
					}
					if (_0x42cd6a === undefined) {
						_0x42cd6a = this.row_;
					}
					this.topRow_ = _0x42cd6a - this.rollUpRows_ + 1;
				};
				_0x169d54.prototype.addFormatting = function (_0x197060, _0x11f6dd) {
					this.formatting_ = this.formatting_.concat(_0x11f6dd);
					var _0x265fdc = _0x11f6dd.reduce(function (_0xdb3470, _0x2c8777) {
						return _0xdb3470 + '<' + _0x2c8777 + '>';
					}, '');
					this[this.mode_](_0x197060, _0x265fdc);
				};
				_0x169d54.prototype.clearFormatting = function (_0x338c91) {
					if (!this.formatting_.length) {
						return;
					}
					var _0x2a2b7f = this.formatting_.reverse().reduce(function (_0x685d3f, _0xb87b2f) {
						return _0x685d3f + '</' + _0xb87b2f + '>';
					}, '');
					this.formatting_ = [];
					this[this.mode_](_0x338c91, _0x2a2b7f);
				};
				_0x169d54.prototype.popOn = function (_0x283440, _0x211414) {
					var _0x2a36c8 = this.nonDisplayed_[this.row_];
					_0x2a36c8 += _0x211414;
					this.nonDisplayed_[this.row_] = _0x2a36c8;
				};
				_0x169d54.prototype.rollUp = function (_0xbed7a2, _0x5429b) {
					var _0x37ff71 = this.displayed_[this.row_];
					_0x37ff71 += _0x5429b;
					this.displayed_[this.row_] = _0x37ff71;
				};
				_0x169d54.prototype.shiftRowsUp_ = function () {
					var _0x3679a8;
					for (_0x3679a8 = 0; _0x3679a8 < this.topRow_; _0x3679a8++) {
						this.displayed_[_0x3679a8] = '';
					}
					for (_0x3679a8 = this.row_ + 1; _0x3679a8 < 15; _0x3679a8++) {
						this.displayed_[_0x3679a8] = '';
					}
					for (_0x3679a8 = this.topRow_; _0x3679a8 < this.row_; _0x3679a8++) {
						this.displayed_[_0x3679a8] = this.displayed_[_0x3679a8 + 1];
					}
					this.displayed_[this.row_] = '';
				};
				_0x169d54.prototype.paintOn = function (_0x5a2dd6, _0x3d6b47) {
					var _0x365ecd = this.displayed_[this.row_];
					_0x365ecd += _0x3d6b47;
					this.displayed_[this.row_] = _0x365ecd;
				};
				var _0x1701d6 = {
					'CaptionStream': _0x20a3f9,
					'Cea608Stream': _0x169d54
				}, _0x8fd57c = function _0x23c458(_0x3362e4, _0x187492) {
					var _0x5466d9 = 1;
					if (_0x3362e4 > _0x187492) {
						_0x5466d9 = -1;
					}
					while (Math.abs(_0x187492 - _0x3362e4) > 4294967296) {
						_0x3362e4 += _0x5466d9 * 8589934592;
					}
					return _0x3362e4;
				}, _0x25232a = function _0x5a75a6(_0x5cf3b4) {
					var _0x34433d, _0x46df80;
					_0x5a75a6.prototype.init.call(this);
					this.type_ = _0x5cf3b4;
					this.push = function (_0x434b83) {
						if (_0x434b83.type !== this.type_) {
							return;
						}
						if (_0x46df80 === undefined) {
							_0x46df80 = _0x434b83.dts;
						}
						_0x434b83.dts = _0x8fd57c(_0x434b83.dts, _0x46df80);
						_0x434b83.pts = _0x8fd57c(_0x434b83.pts, _0x46df80);
						_0x34433d = _0x434b83.dts;
						this.trigger('data', _0x434b83);
					};
					this.flush = function () {
						_0x46df80 = _0x34433d;
						this.trigger('done');
					};
					this.discontinuity = function () {
						_0x46df80 = void 0;
						_0x34433d = void 0;
					};
				};
				_0x25232a.prototype = new _0x1d0554();
				var _0x7d7857 = {
					'TimestampRolloverStream': _0x25232a,
					'handleRollover': _0x8fd57c
				}, _0x3c000b = function _0x59b7c6(_0x4c04a0, _0x221023, _0x19649a) {
					var _0x5cb0c8, _0x2bebbf = '';
					for (_0x5cb0c8 = _0x221023; _0x5cb0c8 < _0x19649a; _0x5cb0c8++) {
						_0x2bebbf += '%' + ('00' + _0x4c04a0[_0x5cb0c8].toString(16)).slice(-2);
					}
					return _0x2bebbf;
				}, _0x2b03c1 = function _0x597d41(_0x55b04b, _0x1dfe41, _0x30b1e5) {
					return decodeURIComponent(_0x3c000b(_0x55b04b, _0x1dfe41, _0x30b1e5));
				}, _0x3c8152 = function _0x2fd631(_0x1ea9f5, _0x4cda96, _0x23f46c) {
					return unescape(_0x3c000b(_0x1ea9f5, _0x4cda96, _0x23f46c));
				}, _0x3b0ee0 = function _0x212830(_0x3666cf) {
					return _0x3666cf[0] << 21 | _0x3666cf[1] << 14 | _0x3666cf[2] << 7 | _0x3666cf[3];
				}, _0x17bbbd = {
					'TXXX': function _0x3875c5(_0x1b66e8) {
						var _0x4d9158;
						if (_0x1b66e8.data[0] !== 3) {
							return;
						}
						for (_0x4d9158 = 1; _0x4d9158 < _0x1b66e8.data.length; _0x4d9158++) {
							if (_0x1b66e8.data[_0x4d9158] === 0) {
								_0x1b66e8.description = _0x2b03c1(_0x1b66e8.data, 1, _0x4d9158);
								_0x1b66e8.value = _0x2b03c1(_0x1b66e8.data, _0x4d9158 + 1, _0x1b66e8.data.length).replace(/\0*$/, '');
								break;
							}
						}
						_0x1b66e8.data = _0x1b66e8.value;
					},
					'WXXX': function _0x2a4df0(_0x27900d) {
						var _0x364dc0;
						if (_0x27900d.data[0] !== 3) {
							return;
						}
						for (_0x364dc0 = 1; _0x364dc0 < _0x27900d.data.length; _0x364dc0++) {
							if (_0x27900d.data[_0x364dc0] === 0) {
								_0x27900d.description = _0x2b03c1(_0x27900d.data, 1, _0x364dc0);
								_0x27900d.url = _0x2b03c1(_0x27900d.data, _0x364dc0 + 1, _0x27900d.data.length);
								break;
							}
						}
					},
					'PRIV': function _0x20874e(_0x14631d) {
						var _0x4fd7f0;
						for (_0x4fd7f0 = 0; _0x4fd7f0 < _0x14631d.data.length; _0x4fd7f0++) {
							if (_0x14631d.data[_0x4fd7f0] === 0) {
								_0x14631d.owner = _0x3c8152(_0x14631d.data, 0, _0x4fd7f0);
								break;
							}
						}
						_0x14631d.privateData = _0x14631d.data.subarray(_0x4fd7f0 + 1);
						_0x14631d.data = _0x14631d.privateData;
					}
				}, _0xa3c6bd;
				_0xa3c6bd = function _0x2ffcfb(_0x443327) {
					var _0x18cf1c = {
						'debug': !!(_0x443327 && _0x443327.debug),
						'descriptor': _0x443327 && _0x443327.descriptor
					}, _0x4debbf = 0, _0x31535c = [], _0x53fc97 = 0, _0x1cb593;
					_0xa3c6bd.prototype.init.call(this);
					this.dispatchType = 21 .toString(16);
					if (_0x18cf1c.descriptor) {
						for (_0x1cb593 = 0; _0x1cb593 < _0x18cf1c.descriptor.length; _0x1cb593++) {
							this.dispatchType += ('00' + _0x18cf1c.descriptor[_0x1cb593].toString(16)).slice(-2);
						}
					}
					this.push = function (_0x42804e) {
						var _0x202512, _0x2df5fd, _0x2f0d5c, _0x2d1cfc, _0x4a545f, _0x346206;
						if (_0x42804e.type !== 'timed-metadata') {
							return;
						}
						_0x42804e.dataAlignmentIndicator && (_0x53fc97 = 0, _0x31535c.length = 0);
						if (_0x31535c.length === 0 && (_0x42804e.data.length < 10 || _0x42804e.data[0] !== 'I'.charCodeAt(0) || _0x42804e.data[1] !== 'D'.charCodeAt(0) || _0x42804e.data[2] !== '3'.charCodeAt(0))) {
							if (_0x18cf1c.debug) {
								console.log('Skipping unrecognized metadata packet');
							}
							return;
						}
						_0x31535c.push(_0x42804e);
						_0x53fc97 += _0x42804e.data.byteLength;
						if (_0x31535c.length === 1) {
							_0x4debbf = _0x3b0ee0(_0x42804e.data.subarray(6, 10));
							_0x4debbf += 10;
						}
						if (_0x53fc97 < _0x4debbf) {
							return;
						}
						_0x202512 = {
							'data': new Uint8Array(_0x4debbf),
							'frames': [],
							'pts': _0x31535c[0].pts,
							'dts': _0x31535c[0].dts
						};
						for (_0x4a545f = 0; _0x4a545f < _0x4debbf;) {
							_0x202512.data.set(_0x31535c[0].data.subarray(0, _0x4debbf - _0x4a545f), _0x4a545f);
							_0x4a545f += _0x31535c[0].data.byteLength;
							_0x53fc97 -= _0x31535c[0].data.byteLength;
							_0x31535c.shift();
						}
						_0x2df5fd = 10;
						if (_0x202512.data[5] & 64) {
							_0x2df5fd += 4;
							_0x2df5fd += _0x3b0ee0(_0x202512.data.subarray(10, 14));
							_0x4debbf -= _0x3b0ee0(_0x202512.data.subarray(16, 20));
						}
						do {
							_0x2f0d5c = _0x3b0ee0(_0x202512.data.subarray(_0x2df5fd + 4, _0x2df5fd + 8));
							if (_0x2f0d5c < 1) {
								return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');
							}
							_0x346206 = String.fromCharCode(_0x202512.data[_0x2df5fd], _0x202512.data[_0x2df5fd + 1], _0x202512.data[_0x2df5fd + 2], _0x202512.data[_0x2df5fd + 3]);
							_0x2d1cfc = {
								'id': _0x346206,
								'data': _0x202512.data.subarray(_0x2df5fd + 10, _0x2df5fd + _0x2f0d5c + 10)
							};
							_0x2d1cfc.key = _0x2d1cfc.id;
							if (_0x17bbbd[_0x2d1cfc.id]) {
								_0x17bbbd[_0x2d1cfc.id](_0x2d1cfc);
								if (_0x2d1cfc.owner === 'com.apple.streaming.transportStreamTimestamp') {
									var _0x435462 = _0x2d1cfc.data, _0x30848d = (_0x435462[3] & 1) << 30 | _0x435462[4] << 22 | _0x435462[5] << 14 | _0x435462[6] << 6 | _0x435462[7] >>> 2;
									_0x30848d *= 4;
									_0x30848d += _0x435462[7] & 3;
									_0x2d1cfc.timeStamp = _0x30848d;
									_0x202512.pts === undefined && _0x202512.dts === undefined && (_0x202512.pts = _0x2d1cfc.timeStamp, _0x202512.dts = _0x2d1cfc.timeStamp);
									this.trigger('timestamp', _0x2d1cfc);
								}
							}
							_0x202512.frames.push(_0x2d1cfc);
							_0x2df5fd += 10;
							_0x2df5fd += _0x2f0d5c;
						} while (_0x2df5fd < _0x4debbf);
						this.trigger('data', _0x202512);
					};
				};
				_0xa3c6bd.prototype = new _0x1d0554();
				var _0xaeafbf = _0xa3c6bd, _0x289a71 = _0x7d7857.TimestampRolloverStream, _0x1c47e8, _0x2ef050, _0x5cc61e;
				_0x1c47e8 = function _0x307f88() {
					var _0x141210 = new Uint8Array(188), _0x5b73f7 = 0;
					_0x1c47e8.prototype.init.call(this);
					this.push = function (_0x58d87b) {
						var _0x1ee737 = 0, _0x49892c = 188, _0x43ffcc;
						if (_0x5b73f7) {
							_0x43ffcc = new Uint8Array(_0x58d87b.byteLength + _0x5b73f7);
							_0x43ffcc.set(_0x141210.subarray(0, _0x5b73f7));
							_0x43ffcc.set(_0x58d87b, _0x5b73f7);
							_0x5b73f7 = 0;
						} else {
							_0x43ffcc = _0x58d87b;
						}
						while (_0x49892c < _0x43ffcc.byteLength) {
							if (_0x43ffcc[_0x1ee737] === 71 && _0x43ffcc[_0x49892c] === 71) {
								this.trigger('data', _0x43ffcc.subarray(_0x1ee737, _0x49892c));
								_0x1ee737 += 188;
								_0x49892c += 188;
								continue;
							}
							_0x1ee737++;
							_0x49892c++;
						}
						if (_0x1ee737 < _0x43ffcc.byteLength) {
							_0x141210.set(_0x43ffcc.subarray(_0x1ee737), 0);
							_0x5b73f7 = _0x43ffcc.byteLength - _0x1ee737;
						}
					};
					this.flush = function () {
						_0x5b73f7 === 188 && _0x141210[0] === 71 && (this.trigger('data', _0x141210), _0x5b73f7 = 0);
						this.trigger('done');
					};
				};
				_0x1c47e8.prototype = new _0x1d0554();
				_0x2ef050 = function _0x4ed0ed() {
					var _0x50e5f2, _0x2392e3, _0x3ed8bf, _0x1291dd;
					_0x2ef050.prototype.init.call(this);
					_0x1291dd = this;
					this.packetsWaitingForPmt = [];
					this.programMapTable = undefined;
					_0x50e5f2 = function _0x67887a(_0x38ce4e, _0x2063d4) {
						var _0x4427ca = 0;
						if (_0x2063d4.payloadUnitStartIndicator) {
							_0x4427ca += _0x38ce4e[_0x4427ca] + 1;
						}
						if (_0x2063d4.type === 'pat') {
							_0x2392e3(_0x38ce4e.subarray(_0x4427ca), _0x2063d4);
						} else {
							_0x3ed8bf(_0x38ce4e.subarray(_0x4427ca), _0x2063d4);
						}
					};
					_0x2392e3 = function _0x44ec14(_0x25f526, _0xc690fd) {
						_0xc690fd.section_number = _0x25f526[7];
						_0xc690fd.last_section_number = _0x25f526[8];
						_0x1291dd.pmtPid = (_0x25f526[10] & 31) << 8 | _0x25f526[11];
						_0xc690fd.pmtPid = _0x1291dd.pmtPid;
					};
					_0x3ed8bf = function _0x2a9b12(_0x106b60, _0x4eb377) {
						var _0x21e9de, _0x51c75f, _0xaab453, _0x3e392e;
						if (!(_0x106b60[5] & 1)) {
							return;
						}
						_0x1291dd.programMapTable = {
							'video': null,
							'audio': null,
							'timed-metadata': {}
						};
						_0x21e9de = (_0x106b60[1] & 15) << 8 | _0x106b60[2];
						_0x51c75f = 3 + _0x21e9de - 4;
						_0xaab453 = (_0x106b60[10] & 15) << 8 | _0x106b60[11];
						_0x3e392e = 12 + _0xaab453;
						while (_0x3e392e < _0x51c75f) {
							var _0xe44e9 = _0x106b60[_0x3e392e], _0x3a7f2f = (_0x106b60[_0x3e392e + 1] & 31) << 8 | _0x106b60[_0x3e392e + 2];
							if (_0xe44e9 === _0x52ad1c.H264_STREAM_TYPE && _0x1291dd.programMapTable.video === null) {
								_0x1291dd.programMapTable.video = _0x3a7f2f;
							} else {
								if (_0xe44e9 === 15 && _0x1291dd.programMapTable.audio === null) {
									_0x1291dd.programMapTable.audio = _0x3a7f2f;
								} else {
									if (_0xe44e9 === _0x52ad1c.METADATA_STREAM_TYPE) {
										_0x1291dd.programMapTable['timed-metadata'][_0x3a7f2f] = _0xe44e9;
									}
								}
							}
							_0x3e392e += ((_0x106b60[_0x3e392e + 3] & 15) << 8 | _0x106b60[_0x3e392e + 4]) + 5;
						}
						_0x4eb377.programMapTable = _0x1291dd.programMapTable;
					};
					this.push = function (_0x255bf6) {
						var _0x2a92b3 = {
							payloadUnitStartIndicator: !!(_0x255bf6[1] & 64),
							pid: _0x255bf6[1] & 31,
							pid: 8,
							pid: _0x255bf6[2],
							type: 'pat',
							type: 'pmt'
						}, _0x146947 = 4;
						if ((_0x255bf6[3] & 48) >>> 4 > 1) {
							_0x146947 += _0x255bf6[_0x146947] + 1;
						}
						if (_0x2a92b3.pid === 0) {
							_0x50e5f2(_0x255bf6.subarray(_0x146947), _0x2a92b3);
							this.trigger('data', _0x2a92b3);
						} else {
							if (_0x2a92b3.pid === this.pmtPid) {
								_0x50e5f2(_0x255bf6.subarray(_0x146947), _0x2a92b3);
								this.trigger('data', _0x2a92b3);
								while (this.packetsWaitingForPmt.length) {
									this.processPes_.apply(this, this.packetsWaitingForPmt.shift());
								}
							} else {
								if (this.programMapTable === undefined) {
									this.packetsWaitingForPmt.push([
										_0x255bf6,
										_0x146947,
										_0x2a92b3
									]);
								} else {
									this.processPes_(_0x255bf6, _0x146947, _0x2a92b3);
								}
							}
						}
					};
					this.processPes_ = function (_0x34da10, _0x437346, _0xb67de) {
						if (_0xb67de.pid === this.programMapTable.video) {
							_0xb67de.streamType = 27;
						} else {
							if (_0xb67de.pid === this.programMapTable.audio) {
								_0xb67de.streamType = _0x52ad1c.ADTS_STREAM_TYPE;
							} else {
								_0xb67de.streamType = this.programMapTable['timed-metadata'][_0xb67de.pid];
							}
						}
						_0xb67de.type = 'pes';
						_0xb67de.data = _0x34da10.subarray(_0x437346);
						this.trigger('data', _0xb67de);
					};
				};
				_0x2ef050.prototype = new _0x1d0554();
				_0x2ef050.STREAM_TYPES = {
					'h264': 27,
					'adts': 15
				};
				_0x5cc61e = function _0x1fac82() {
					var _0xdd3367 = this, _0x50cd25 = {
						'data': [],
						'size': 0
					}, _0x4a33e1 = {
						'data': [],
						'size': 0
					}, _0xa38396 = {
						'data': [],
						'size': 0
					}, _0x232b80 = function _0x184ed7(_0x4d3af7, _0x5f2acc) {
						var _0x56a41c;
						_0x5f2acc.packetLength = 6 + (_0x4d3af7[4] << 8 | _0x4d3af7[5]);
						_0x5f2acc.dataAlignmentIndicator = (_0x4d3af7[6] & 4) !== 0;
						_0x56a41c = _0x4d3af7[7];
						if (_0x56a41c & 192) {
							_0x5f2acc.pts = (_0x4d3af7[9] & 14) << 27 | (_0x4d3af7[10] & 255) << 20 | (_0x4d3af7[11] & 254) << 12 | (_0x4d3af7[12] & 255) << 5 | (_0x4d3af7[13] & 254) >>> 3;
							_0x5f2acc.pts *= 4;
							_0x5f2acc.pts += (_0x4d3af7[13] & 6) >>> 1;
							_0x5f2acc.dts = _0x5f2acc.pts;
							if (_0x56a41c & 64) {
								_0x5f2acc.dts = (_0x4d3af7[14] & 14) << 27 | (_0x4d3af7[15] & 255) << 20 | (_0x4d3af7[16] & 254) << 12 | (_0x4d3af7[17] & 255) << 5 | (_0x4d3af7[18] & 254) >>> 3;
								_0x5f2acc.dts *= 4;
								_0x5f2acc.dts += (_0x4d3af7[18] & 6) >>> 1;
							}
						}
						_0x5f2acc.data = _0x4d3af7.subarray(9 + _0x4d3af7[8]);
					}, _0xedeeac = function _0x54fa9a(_0x25c676, _0x2ed513, _0x473e04) {
						var _0xc156d4 = new Uint8Array(_0x25c676.size), _0x56ae95 = { 'type': _0x2ed513 }, _0x1b4f22 = 0, _0x5b8d97 = 0, _0x437b18 = false, _0x1700aa;
						if (!_0x25c676.data.length || _0x25c676.size < 9) {
							return;
						}
						_0x56ae95.trackId = _0x25c676.data[0].pid;
						for (_0x1b4f22 = 0; _0x1b4f22 < _0x25c676.data.length; _0x1b4f22++) {
							_0x1700aa = _0x25c676.data[_0x1b4f22];
							_0xc156d4.set(_0x1700aa.data, _0x5b8d97);
							_0x5b8d97 += _0x1700aa.data.byteLength;
						}
						_0x232b80(_0xc156d4, _0x56ae95);
						_0x437b18 = _0x2ed513 === 'video' || _0x56ae95.packetLength <= _0x25c676.size;
						(_0x473e04 || _0x437b18) && (_0x25c676.size = 0, _0x25c676.data.length = 0);
						if (_0x437b18) {
							_0xdd3367.trigger('data', _0x56ae95);
						}
					};
					_0x5cc61e.prototype.init.call(this);
					this.push = function (_0x40a095) {
						({
							'pat': function _0x233af9() {
							},
							'pes': function _0x576d29() {
								var _0x328c73, _0x28189a;
								switch (_0x40a095.streamType) {
									case 27:
									case _0x52ad1c.H264_STREAM_TYPE:
										_0x328c73 = _0x50cd25, _0x28189a = 'video';
										break;
									case _0x52ad1c.ADTS_STREAM_TYPE:
										_0x328c73 = _0x4a33e1, _0x28189a = 'audio';
										break;
									case _0x52ad1c.METADATA_STREAM_TYPE:
										_0x328c73 = _0xa38396, _0x28189a = 'timed-metadata';
										break;
									default:
										return;
								}
								if (_0x40a095.payloadUnitStartIndicator) {
									_0xedeeac(_0x328c73, _0x28189a, true);
								}
								_0x328c73.data.push(_0x40a095);
								_0x328c73.size += _0x40a095.data.byteLength;
							},
							'pmt': function _0xdabadd() {
								var _0x17542e = {
									'type': 'metadata',
									'tracks': []
								}, _0x5761f8 = _0x40a095.programMapTable;
								if (_0x5761f8.video !== null) {
									_0x17542e.tracks.push({
										'timelineStartInfo': { 'baseMediaDecodeTime': 0 },
										'id': +_0x5761f8.video,
										'codec': 'avc',
										'type': 'video'
									});
								}
								if (_0x5761f8.audio !== null) {
									_0x17542e.tracks.push({
										'timelineStartInfo': { 'baseMediaDecodeTime': 0 },
										'id': +_0x5761f8.audio,
										'codec': 'adts',
										'type': 'audio'
									});
								}
								_0xdd3367.trigger('data', _0x17542e);
							}
						}[_0x40a095.type]());
					};
					this.flush = function () {
						_0xedeeac(_0x50cd25, 'video');
						_0xedeeac(_0x4a33e1, 'audio');
						_0xedeeac(_0xa38396, 'timed-metadata');
						this.trigger('done');
					};
				};
				_0x5cc61e.prototype = new _0x1d0554();
				var _0x36b21c = {
					'PAT_PID': 0,
					'MP2T_PACKET_LENGTH': 188,
					'TransportPacketStream': _0x1c47e8,
					'TransportParseStream': _0x2ef050,
					'ElementaryStream': _0x5cc61e,
					'TimestampRolloverStream': _0x289a71,
					'CaptionStream': _0x1701d6.CaptionStream,
					'Cea608Stream': _0x1701d6.Cea608Stream,
					'MetadataStream': _0xaeafbf
				};
				for (var _0x515dd5 in _0x52ad1c)
					if (_0x52ad1c.hasOwnProperty(_0x515dd5)) {
						_0x36b21c[_0x515dd5] = _0x52ad1c[_0x515dd5];
					}
				var _0x2fe420 = _0x36b21c, _0x2cb853, _0x192283 = [
					96000,
					88200,
					64000,
					48000,
					44100,
					32000,
					24000,
					22050,
					16000,
					12000,
					11025,
					8000,
					7350
				];
				_0x2cb853 = function _0x98e9c9() {
					var _0x3dac91;
					_0x2cb853.prototype.init.call(this);
					this.push = function (_0x4a183f) {
						var _0x141951 = 0, _0x22b534 = 0, _0x505ef6, _0x1164fe, _0x78a60e, _0x4aa48e, _0x5c9c03, _0x488f02;
						if (_0x4a183f.type !== 'audio') {
							return;
						}
						if (_0x3dac91) {
							_0x4aa48e = _0x3dac91;
							_0x3dac91 = new Uint8Array(_0x4aa48e.byteLength + _0x4a183f.data.byteLength);
							_0x3dac91.set(_0x4aa48e);
							_0x3dac91.set(_0x4a183f.data, _0x4aa48e.byteLength);
						} else {
							_0x3dac91 = _0x4a183f.data;
						}
						while (_0x141951 + 5 < _0x3dac91.length) {
							if (_0x3dac91[_0x141951] !== 255 || (_0x3dac91[_0x141951 + 1] & 246) !== 240) {
								_0x141951++;
								continue;
							}
							_0x1164fe = (~_0x3dac91[_0x141951 + 1] & 1) * 2;
							_0x505ef6 = (_0x3dac91[_0x141951 + 3] & 3) << 11 | _0x3dac91[_0x141951 + 4] << 3 | (_0x3dac91[_0x141951 + 5] & 224) >> 5;
							_0x5c9c03 = ((_0x3dac91[_0x141951 + 6] & 3) + 1) * 1024;
							_0x488f02 = _0x5c9c03 * 90000 / _0x192283[(_0x3dac91[_0x141951 + 2] & 60) >>> 2];
							_0x78a60e = _0x141951 + _0x505ef6;
							if (_0x3dac91.byteLength < _0x78a60e) {
								return;
							}
							this.trigger('data', {
								'pts': _0x4a183f.pts + _0x22b534 * _0x488f02,
								'dts': _0x4a183f.dts + _0x22b534 * _0x488f02,
								'sampleCount': _0x5c9c03,
								'audioobjecttype': (_0x3dac91[_0x141951 + 2] >>> 6 & 3) + 1,
								'channelcount': (_0x3dac91[_0x141951 + 2] & 1) << 2 | (_0x3dac91[_0x141951 + 3] & 192) >>> 6,
								'samplerate': _0x192283[(_0x3dac91[_0x141951 + 2] & 60) >>> 2],
								'samplingfrequencyindex': (_0x3dac91[_0x141951 + 2] & 60) >>> 2,
								'samplesize': 16,
								'data': _0x3dac91.subarray(_0x141951 + 7 + _0x1164fe, _0x78a60e)
							});
							if (_0x3dac91.byteLength === _0x78a60e) {
								_0x3dac91 = undefined;
								return;
							}
							_0x22b534++;
							_0x3dac91 = _0x3dac91.subarray(_0x78a60e);
						}
					};
					this.flush = function () {
						this.trigger('done');
					};
				};
				_0x2cb853.prototype = new _0x1d0554();
				var _0xfdc286 = _0x2cb853, _0x25949c;
				_0x25949c = function _0x5b8896(_0x233709) {
					var _0x5af1f0 = _0x233709.byteLength, _0x55aaaa = 0, _0x2f54d0 = 0;
					this.length = function () {
						return 8 * _0x5af1f0;
					};
					this.bitsAvailable = function () {
						return 8 * _0x5af1f0 + _0x2f54d0;
					};
					this.loadWord = function () {
						var _0x595d1f = _0x233709.byteLength - _0x5af1f0, _0x5b8475 = new Uint8Array(4), _0x567fbb = Math.min(4, _0x5af1f0);
						if (_0x567fbb === 0) {
							throw new Error('no bytes available');
						}
						_0x5b8475.set(_0x233709.subarray(_0x595d1f, _0x595d1f + _0x567fbb));
						_0x55aaaa = new DataView(_0x5b8475.buffer).getUint32(0);
						_0x2f54d0 = _0x567fbb * 8;
						_0x5af1f0 -= _0x567fbb;
					};
					this.skipBits = function (_0x5ef062) {
						var _0x513435;
						_0x2f54d0 > _0x5ef062 ? (_0x55aaaa <<= _0x5ef062, _0x2f54d0 -= _0x5ef062) : (_0x5ef062 -= _0x2f54d0, _0x513435 = Math.floor(_0x5ef062 / 8), _0x5ef062 -= _0x513435 * 8, _0x5af1f0 -= _0x513435, this.loadWord(), _0x55aaaa <<= _0x5ef062, _0x2f54d0 -= _0x5ef062);
					};
					this.readBits = function (_0x4f3ebf) {
						var _0x3b70eb = Math.min(_0x2f54d0, _0x4f3ebf), _0x587b2e = _0x55aaaa >>> 32 - _0x3b70eb;
						_0x2f54d0 -= _0x3b70eb;
						if (_0x2f54d0 > 0) {
							_0x55aaaa <<= _0x3b70eb;
						} else {
							if (_0x5af1f0 > 0) {
								this.loadWord();
							}
						}
						_0x3b70eb = _0x4f3ebf - _0x3b70eb;
						if (_0x3b70eb > 0) {
							return _0x587b2e << _0x3b70eb | this.readBits(_0x3b70eb);
						}
						return _0x587b2e;
					};
					this.skipLeadingZeros = function () {
						var _0x2aaecf;
						for (_0x2aaecf = 0; _0x2aaecf < _0x2f54d0; ++_0x2aaecf) {
							if ((_0x55aaaa & 2147483648 >>> _0x2aaecf) !== 0) {
								return _0x55aaaa <<= _0x2aaecf, _0x2f54d0 -= _0x2aaecf, _0x2aaecf;
							}
						}
						return this.loadWord(), _0x2aaecf + this.skipLeadingZeros();
					};
					this.skipUnsignedExpGolomb = function () {
						this.skipBits(1 + this.skipLeadingZeros());
					};
					this.skipExpGolomb = function () {
						this.skipBits(1 + this.skipLeadingZeros());
					};
					this.readUnsignedExpGolomb = function () {
						var _0x33a67e = this.skipLeadingZeros();
						return this.readBits(_0x33a67e + 1) - 1;
					};
					this.readExpGolomb = function () {
						var _0x14c478 = this.readUnsignedExpGolomb();
						if (1 & _0x14c478) {
							return 1 + _0x14c478 >>> 1;
						}
						return -1 * (_0x14c478 >>> 1);
					};
					this.readBoolean = function () {
						return this.readBits(1) === 1;
					};
					this.readUnsignedByte = function () {
						return this.readBits(8);
					};
					this.loadWord();
				};
				var _0x4d9180 = _0x25949c, _0x13b06c, _0x740a6c, _0x21ad24;
				_0x740a6c = function _0x578383() {
					var _0x4f805a = 0, _0x2ff3fd, _0x4c8a89;
					_0x740a6c.prototype.init.call(this);
					this.push = function (_0x331f53) {
						var _0x2f3425;
						if (!_0x4c8a89) {
							_0x4c8a89 = _0x331f53.data;
						} else {
							_0x2f3425 = new Uint8Array(_0x4c8a89.byteLength + _0x331f53.data.byteLength);
							_0x2f3425.set(_0x4c8a89);
							_0x2f3425.set(_0x331f53.data, _0x4c8a89.byteLength);
							_0x4c8a89 = _0x2f3425;
						}
						for (; _0x4f805a < _0x4c8a89.byteLength - 3; _0x4f805a++) {
							if (_0x4c8a89[_0x4f805a + 2] === 1) {
								_0x2ff3fd = _0x4f805a + 5;
								break;
							}
						}
						while (_0x2ff3fd < _0x4c8a89.byteLength) {
							switch (_0x4c8a89[_0x2ff3fd]) {
								case 0:
									if (_0x4c8a89[_0x2ff3fd - 1] !== 0) {
										_0x2ff3fd += 2;
										break;
									} else {
										if (_0x4c8a89[_0x2ff3fd - 2] !== 0) {
											_0x2ff3fd++;
											break;
										}
									}
									if (_0x4f805a + 3 !== _0x2ff3fd - 2) {
										this.trigger('data', _0x4c8a89.subarray(_0x4f805a + 3, _0x2ff3fd - 2));
									}
									do {
										_0x2ff3fd++;
									} while (_0x4c8a89[_0x2ff3fd] !== 1 && _0x2ff3fd < _0x4c8a89.length);
									_0x4f805a = _0x2ff3fd - 2, _0x2ff3fd += 3;
									break;
								case 1:
									if (_0x4c8a89[_0x2ff3fd - 1] !== 0 || _0x4c8a89[_0x2ff3fd - 2] !== 0) {
										_0x2ff3fd += 3;
										break;
									}
									this.trigger('data', _0x4c8a89.subarray(_0x4f805a + 3, _0x2ff3fd - 2)), _0x4f805a = _0x2ff3fd - 2, _0x2ff3fd += 3;
									break;
								default:
									_0x2ff3fd += 3;
									break;
							}
						}
						_0x4c8a89 = _0x4c8a89.subarray(_0x4f805a);
						_0x2ff3fd -= _0x4f805a;
						_0x4f805a = 0;
					};
					this.flush = function () {
						if (_0x4c8a89 && _0x4c8a89.byteLength > 3) {
							this.trigger('data', _0x4c8a89.subarray(_0x4f805a + 3));
						}
						_0x4c8a89 = null;
						_0x4f805a = 0;
						this.trigger('done');
					};
				};
				_0x740a6c.prototype = new _0x1d0554();
				_0x21ad24 = {
					100: true,
					110: true,
					122: true,
					244: true,
					44: true,
					83: true,
					86: true,
					118: true,
					128: true,
					138: true,
					139: true,
					134: true
				};
				_0x13b06c = function _0x374d74() {
					var _0x3c585f = new _0x740a6c(), _0x5c98ce, _0x1dba2a, _0x1ed4bb, _0x5940ee, _0x13766d, _0x71e0f2, _0x5c56f6;
					_0x13b06c.prototype.init.call(this);
					_0x5c98ce = this;
					this.push = function (_0x16cff1) {
						if (_0x16cff1.type !== 'video') {
							return;
						}
						_0x1dba2a = _0x16cff1.trackId;
						_0x1ed4bb = _0x16cff1.pts;
						_0x5940ee = _0x16cff1.dts;
						_0x3c585f.push(_0x16cff1);
					};
					_0x3c585f.on('data', function (_0x30963a) {
						var _0xdae0d9 = {
							'trackId': _0x1dba2a,
							'pts': _0x1ed4bb,
							'dts': _0x5940ee,
							'data': _0x30963a
						};
						switch (_0x30963a[0] & 31) {
							case 5:
								_0xdae0d9.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';
								break;
							case 6:
								_0xdae0d9.nalUnitType = 'sei_rbsp', _0xdae0d9.escapedRBSP = _0x13766d(_0x30963a.subarray(1));
								break;
							case 7:
								_0xdae0d9.nalUnitType = 'seq_parameter_set_rbsp', _0xdae0d9.escapedRBSP = _0x13766d(_0x30963a.subarray(1)), _0xdae0d9.config = _0x71e0f2(_0xdae0d9.escapedRBSP);
								break;
							case 8:
								_0xdae0d9.nalUnitType = 'pic_parameter_set_rbsp';
								break;
							case 9:
								_0xdae0d9.nalUnitType = 'access_unit_delimiter_rbsp';
								break;
							default:
								break;
						}
						_0x5c98ce.trigger('data', _0xdae0d9);
					});
					_0x3c585f.on('done', function () {
						_0x5c98ce.trigger('done');
					});
					this.flush = function () {
						_0x3c585f.flush();
					};
					_0x5c56f6 = function _0x76dff7(_0x2983e8, _0x3761f0) {
						var _0xd2673d = 8, _0x28aa5a = 8, _0xfbb7e0, _0x4be286;
						for (_0xfbb7e0 = 0; _0xfbb7e0 < _0x2983e8; _0xfbb7e0++) {
							if (_0x28aa5a !== 0) {
								_0x4be286 = _0x3761f0.readExpGolomb();
								_0x28aa5a = (_0xd2673d + _0x4be286 + 256) % 256;
							}
							_0xd2673d = _0x28aa5a === 0 ? _0xd2673d : _0x28aa5a;
						}
					};
					_0x13766d = function _0x4aaca5(_0x3fb54f) {
						var _0x4d8ccd = _0x3fb54f.byteLength, _0x267f6c = [], _0x338d48 = 1, _0x37fb6f, _0x3040b3;
						while (_0x338d48 < _0x4d8ccd - 2) {
							if (_0x3fb54f[_0x338d48] === 0 && _0x3fb54f[_0x338d48 + 1] === 0 && _0x3fb54f[_0x338d48 + 2] === 3) {
								_0x267f6c.push(_0x338d48 + 2);
								_0x338d48 += 2;
							} else {
								_0x338d48++;
							}
						}
						if (_0x267f6c.length === 0) {
							return _0x3fb54f;
						}
						_0x37fb6f = _0x4d8ccd - _0x267f6c.length;
						_0x3040b3 = new Uint8Array(_0x37fb6f);
						var _0x9afc23 = 0;
						for (_0x338d48 = 0; _0x338d48 < _0x37fb6f; _0x9afc23++, _0x338d48++) {
							if (_0x9afc23 === _0x267f6c[0]) {
								_0x9afc23++;
								_0x267f6c.shift();
							}
							_0x3040b3[_0x338d48] = _0x3fb54f[_0x9afc23];
						}
						return _0x3040b3;
					};
					_0x71e0f2 = function _0x242b83(_0x1dcb0b) {
						var _0x3242a1 = 0, _0x352612 = 0, _0x5d5603 = 0, _0x277a41 = 0, _0x2178d2 = 1, _0x2185d6, _0x6835a9, _0x493d83, _0x192c85, _0x398c4f, _0x2ed4a8, _0x5d3087, _0x43e70c, _0x35f948, _0x31fe4e, _0x6ae2d4, _0xef7531, _0x1c48df, _0x53c6f0;
						_0x2185d6 = new _0x4d9180(_0x1dcb0b);
						_0x6835a9 = _0x2185d6.readUnsignedByte();
						_0x192c85 = _0x2185d6.readUnsignedByte();
						_0x493d83 = _0x2185d6.readUnsignedByte();
						_0x2185d6.skipUnsignedExpGolomb();
						if (_0x21ad24[_0x6835a9]) {
							_0x398c4f = _0x2185d6.readUnsignedExpGolomb();
							if (_0x398c4f === 3) {
								_0x2185d6.skipBits(1);
							}
							_0x2185d6.skipUnsignedExpGolomb();
							_0x2185d6.skipUnsignedExpGolomb();
							_0x2185d6.skipBits(1);
							if (_0x2185d6.readBoolean()) {
								_0x6ae2d4 = _0x398c4f !== 3 ? 8 : 12;
								for (_0x53c6f0 = 0; _0x53c6f0 < _0x6ae2d4; _0x53c6f0++) {
									if (_0x2185d6.readBoolean()) {
										if (_0x53c6f0 < 6) {
											_0x5c56f6(16, _0x2185d6);
										} else {
											_0x5c56f6(64, _0x2185d6);
										}
									}
								}
							}
						}
						_0x2185d6.skipUnsignedExpGolomb();
						_0x2ed4a8 = _0x2185d6.readUnsignedExpGolomb();
						if (_0x2ed4a8 === 0) {
							_0x2185d6.readUnsignedExpGolomb();
						} else {
							if (_0x2ed4a8 === 1) {
								_0x2185d6.skipBits(1);
								_0x2185d6.skipExpGolomb();
								_0x2185d6.skipExpGolomb();
								_0x5d3087 = _0x2185d6.readUnsignedExpGolomb();
								for (_0x53c6f0 = 0; _0x53c6f0 < _0x5d3087; _0x53c6f0++) {
									_0x2185d6.skipExpGolomb();
								}
							}
						}
						_0x2185d6.skipUnsignedExpGolomb();
						_0x2185d6.skipBits(1);
						_0x43e70c = _0x2185d6.readUnsignedExpGolomb();
						_0x35f948 = _0x2185d6.readUnsignedExpGolomb();
						_0x31fe4e = _0x2185d6.readBits(1);
						if (_0x31fe4e === 0) {
							_0x2185d6.skipBits(1);
						}
						_0x2185d6.skipBits(1);
						_0x2185d6.readBoolean() && (_0x3242a1 = _0x2185d6.readUnsignedExpGolomb(), _0x352612 = _0x2185d6.readUnsignedExpGolomb(), _0x5d5603 = _0x2185d6.readUnsignedExpGolomb(), _0x277a41 = _0x2185d6.readUnsignedExpGolomb());
						if (_0x2185d6.readBoolean()) {
							if (_0x2185d6.readBoolean()) {
								_0x1c48df = _0x2185d6.readUnsignedByte();
								switch (_0x1c48df) {
									case 1:
										_0xef7531 = [
											1,
											1
										];
										break;
									case 2:
										_0xef7531 = [
											12,
											11
										];
										break;
									case 3:
										_0xef7531 = [
											10,
											11
										];
										break;
									case 4:
										_0xef7531 = [
											16,
											11
										];
										break;
									case 5:
										_0xef7531 = [
											40,
											33
										];
										break;
									case 6:
										_0xef7531 = [
											24,
											11
										];
										break;
									case 7:
										_0xef7531 = [
											20,
											11
										];
										break;
									case 8:
										_0xef7531 = [
											32,
											11
										];
										break;
									case 9:
										_0xef7531 = [
											80,
											33
										];
										break;
									case 10:
										_0xef7531 = [
											18,
											11
										];
										break;
									case 11:
										_0xef7531 = [
											15,
											11
										];
										break;
									case 12:
										_0xef7531 = [
											64,
											33
										];
										break;
									case 13:
										_0xef7531 = [
											160,
											99
										];
										break;
									case 14:
										_0xef7531 = [
											4,
											3
										];
										break;
									case 15:
										_0xef7531 = [
											3,
											2
										];
										break;
									case 16:
										_0xef7531 = [
											2,
											1
										];
										break;
									case 255: {
										_0xef7531 = [
											_0x2185d6.readUnsignedByte() << 8 | _0x2185d6.readUnsignedByte(),
											_0x2185d6.readUnsignedByte() << 8 | _0x2185d6.readUnsignedByte()
										];
										break;
									}
								}
								if (_0xef7531) {
									_0x2178d2 = _0xef7531[0] / _0xef7531[1];
								}
							}
						}
						return {
							'profileIdc': _0x6835a9,
							'levelIdc': _0x493d83,
							'profileCompatibility': _0x192c85,
							'width': Math.ceil(((_0x43e70c + 1) * 16 - _0x3242a1 * 2 - _0x352612 * 2) * _0x2178d2),
							'height': (2 - _0x31fe4e) * (_0x35f948 + 1) * 16 - _0x5d5603 * 2 - _0x277a41 * 2
						};
					};
				};
				_0x13b06c.prototype = new _0x1d0554();
				var _0x302e17 = {
					'H264Stream': _0x13b06c,
					'NalByteStream': _0x740a6c
				}, _0x15c5af;
				_0x15c5af = function _0x31b207() {
					var _0x478ef0 = new Uint8Array(), _0x5cc375 = 0;
					_0x15c5af.prototype.init.call(this);
					this.setTimestamp = function (_0x44f09f) {
						_0x5cc375 = _0x44f09f;
					};
					this.parseId3TagSize = function (_0xaf6144, _0x186105) {
						var _0xc03341 = _0xaf6144[_0x186105 + 6] << 21 | _0xaf6144[_0x186105 + 7] << 14 | _0xaf6144[_0x186105 + 8] << 7 | _0xaf6144[_0x186105 + 9], _0x44fcdd = _0xaf6144[_0x186105 + 5], _0x3a8494 = (_0x44fcdd & 16) >> 4;
						if (_0x3a8494) {
							return _0xc03341 + 20;
						}
						return _0xc03341 + 10;
					};
					this.parseAdtsSize = function (_0x340f76, _0x450231) {
						var _0x42b701 = (_0x340f76[_0x450231 + 5] & 224) >> 5, _0x4b79b7 = _0x340f76[_0x450231 + 4] << 3, _0x3ef794 = _0x340f76[_0x450231 + 3] & 3 << 11;
						return _0x3ef794 | _0x4b79b7 | _0x42b701;
					};
					this.push = function (_0x223e12) {
						var _0x4973d6 = 0, _0x38a326 = 0, _0x2b6b6a, _0x3c6a01, _0x162209, _0x4db451;
						if (_0x478ef0.length) {
							_0x4db451 = _0x478ef0.length;
							_0x478ef0 = new Uint8Array(_0x223e12.byteLength + _0x4db451);
							_0x478ef0.set(_0x478ef0.subarray(0, _0x4db451));
							_0x478ef0.set(_0x223e12, _0x4db451);
						} else {
							_0x478ef0 = _0x223e12;
						}
						while (_0x478ef0.length - _0x38a326 >= 3) {
							if (_0x478ef0[_0x38a326] === 'I'.charCodeAt(0) && _0x478ef0[_0x38a326 + 1] === 'D'.charCodeAt(0) && _0x478ef0[_0x38a326 + 2] === '3'.charCodeAt(0)) {
								if (_0x478ef0.length - _0x38a326 < 10) {
									break;
								}
								_0x4973d6 = this.parseId3TagSize(_0x478ef0, _0x38a326);
								if (_0x4973d6 > _0x478ef0.length) {
									break;
								}
								_0x3c6a01 = {
									'type': 'timed-metadata',
									'data': _0x478ef0.subarray(_0x38a326, _0x38a326 + _0x4973d6)
								};
								this.trigger('data', _0x3c6a01);
								_0x38a326 += _0x4973d6;
								continue;
							} else {
								if (_0x478ef0[_0x38a326] & true && (_0x478ef0[_0x38a326 + 1] & 240) === 240) {
									if (_0x478ef0.length - _0x38a326 < 7) {
										break;
									}
									_0x4973d6 = this.parseAdtsSize(_0x478ef0, _0x38a326);
									if (_0x4973d6 > _0x478ef0.length) {
										break;
									}
									_0x162209 = {
										'type': 'audio',
										'data': _0x478ef0.subarray(_0x38a326, _0x38a326 + _0x4973d6),
										'pts': _0x5cc375,
										'dts': _0x5cc375
									};
									this.trigger('data', _0x162209);
									_0x38a326 += _0x4973d6;
									continue;
								}
							}
							_0x38a326++;
						}
						_0x2b6b6a = _0x478ef0.length - _0x38a326;
						if (_0x2b6b6a > 0) {
							_0x478ef0 = _0x478ef0.subarray(_0x38a326);
						} else {
							_0x478ef0 = new Uint8Array();
						}
					};
				};
				_0x15c5af.prototype = new _0x1d0554();
				var _0x577d79 = _0x15c5af, _0x191461 = [
					33,
					16,
					5,
					32,
					164,
					27
				], _0x5b77ed = [
					33,
					65,
					108,
					84,
					1,
					2,
					4,
					8,
					168,
					2,
					4,
					8,
					17,
					191,
					252
				], _0x35a188 = function _0xbcb63f(_0x560214) {
					var _0x8feda4 = [];
					while (_0x560214--) {
						_0x8feda4.push(0);
					}
					return _0x8feda4;
				}, _0x3c7831 = function _0x10789a(_0x812291) {
					return Object.keys(_0x812291).reduce(function (_0x1a88d1, _0x5891bb) {
						return _0x1a88d1[_0x5891bb] = new Uint8Array(_0x812291[_0x5891bb].reduce(function (_0x2c513e, _0x109b90) {
							return _0x2c513e.concat(_0x109b90);
						}, [])), _0x1a88d1;
					}, {});
				}, _0x5de801 = {
					96000: [
						_0x191461,
						[
							227,
							64
						],
						_0x35a188(154),
						[56]
					],
					88200: [
						_0x191461,
						[231],
						_0x35a188(170),
						[56]
					],
					64000: [
						_0x191461,
						[
							248,
							192
						],
						_0x35a188(240),
						[56]
					],
					48000: [
						_0x191461,
						[
							255,
							192
						],
						_0x35a188(268),
						[
							55,
							148,
							128
						],
						_0x35a188(54),
						[112]
					],
					44100: [
						_0x191461,
						[
							255,
							192
						],
						_0x35a188(268),
						[
							55,
							163,
							128
						],
						_0x35a188(84),
						[112]
					],
					32000: [
						_0x191461,
						[
							255,
							192
						],
						_0x35a188(268),
						[
							55,
							234
						],
						_0x35a188(226),
						[112]
					],
					24000: [
						_0x191461,
						[
							255,
							192
						],
						_0x35a188(268),
						[
							55,
							255,
							128
						],
						_0x35a188(268),
						[
							111,
							112
						],
						_0x35a188(126),
						[224]
					],
					16000: [
						_0x191461,
						[
							255,
							192
						],
						_0x35a188(268),
						[
							55,
							255,
							128
						],
						_0x35a188(268),
						[
							111,
							255
						],
						_0x35a188(269),
						[
							223,
							108
						],
						_0x35a188(195),
						[
							1,
							192
						]
					],
					12000: [
						_0x5b77ed,
						_0x35a188(268),
						[
							3,
							127,
							248
						],
						_0x35a188(268),
						[
							6,
							255,
							240
						],
						_0x35a188(268),
						[
							13,
							255,
							224
						],
						_0x35a188(268),
						[
							27,
							253,
							128
						],
						_0x35a188(259),
						[56]
					],
					11025: [
						_0x5b77ed,
						_0x35a188(268),
						[
							3,
							127,
							248
						],
						_0x35a188(268),
						[
							6,
							255,
							240
						],
						_0x35a188(268),
						[
							13,
							255,
							224
						],
						_0x35a188(268),
						[
							27,
							255,
							192
						],
						_0x35a188(268),
						[
							55,
							175,
							128
						],
						_0x35a188(108),
						[112]
					],
					8000: [
						_0x5b77ed,
						_0x35a188(268),
						[
							3,
							121,
							16
						],
						_0x35a188(47),
						[7]
					]
				}, _0x60b3cc = _0x3c7831(_0x5de801), _0x336524, _0x328722, _0x4007eb, _0x44c2ac, _0x5921fd, _0x28b179;
				_0x336524 = function _0x50a528(_0x2c0aee) {
					return _0x2c0aee * 90000;
				};
				_0x328722 = function _0x3d008a(_0x258587, _0x1b1621) {
					return _0x258587 * _0x1b1621;
				};
				_0x4007eb = function _0x1f7a22(_0x2e7ecb) {
					return _0x2e7ecb / 90000;
				};
				_0x44c2ac = function _0x438c6a(_0x47913a, _0x3300e1) {
					return _0x47913a / _0x3300e1;
				};
				_0x5921fd = function _0x538146(_0x51ae4a, _0x1c17b5) {
					return _0x336524(_0x44c2ac(_0x51ae4a, _0x1c17b5));
				};
				_0x28b179 = function _0x20e1ab(_0x1e231b, _0x59ecff) {
					return _0x328722(_0x4007eb(_0x1e231b), _0x59ecff);
				};
				var _0xc017c3 = {
					'secondsToVideoTs': _0x336524,
					'secondsToAudioTs': _0x328722,
					'videoTsToSeconds': _0x4007eb,
					'audioTsToSeconds': _0x44c2ac,
					'audioTsToVideoTs': _0x5921fd,
					'videoTsToAudioTs': _0x28b179
				}, _0x2d17c7 = _0x302e17.H264Stream, _0x1ae255 = [
					'audioobjecttype',
					'channelcount',
					'samplerate',
					'samplingfrequencyindex',
					'samplesize'
				], _0x1025f9 = [
					'width',
					'height',
					'profileIdc',
					'levelIdc',
					'profileCompatibility'
				], _0xbb5479, _0x2498e5, _0x3aa41c, _0x2688cd, _0x1eca64, _0x25814b, _0x176456;
				_0x1eca64 = function _0x2a6635(_0x469d91) {
					if (_0x469d91[0] === 'I'.charCodeAt(0) && _0x469d91[1] === 'D'.charCodeAt(0) && _0x469d91[2] === '3'.charCodeAt(0)) {
						return true;
					}
					return false;
				};
				_0x25814b = function _0xa1bbf(_0x458596, _0x3cd9cd) {
					var _0x329e94;
					if (_0x458596.length !== _0x3cd9cd.length) {
						return false;
					}
					for (_0x329e94 = 0; _0x329e94 < _0x458596.length; _0x329e94++) {
						if (_0x458596[_0x329e94] !== _0x3cd9cd[_0x329e94]) {
							return false;
						}
					}
					return true;
				};
				_0x176456 = function _0x304c50(_0x2f53c1) {
					var _0x420372, _0x39328a, _0x3d772f = 0;
					for (_0x420372 = 0; _0x420372 < _0x2f53c1.length; _0x420372++) {
						_0x39328a = _0x2f53c1[_0x420372];
						_0x3d772f += _0x39328a.data.byteLength;
					}
					return _0x3d772f;
				};
				_0x2498e5 = function _0x4da1cd(_0xed11e1, _0x58db58) {
					var _0x186a79 = [], _0x426d6c = 0, _0x4718e7 = 0, _0x4442d4 = 0, _0x12e990 = Infinity;
					_0x58db58 = _0x58db58 || {};
					_0x2498e5.prototype.init.call(this);
					this.push = function (_0x5ac587) {
						_0x38563f.collectDtsInfo(_0xed11e1, _0x5ac587);
						if (_0xed11e1) {
							_0x1ae255.forEach(function (_0x4eda2e) {
								_0xed11e1[_0x4eda2e] = _0x5ac587[_0x4eda2e];
							});
						}
						_0x186a79.push(_0x5ac587);
					};
					this.setEarliestDts = function (_0x2d76d5) {
						_0x4718e7 = _0x2d76d5 - _0xed11e1.timelineStartInfo.baseMediaDecodeTime;
					};
					this.setVideoBaseMediaDecodeTime = function (_0x33d48b) {
						_0x12e990 = _0x33d48b;
					};
					this.setAudioAppendStart = function (_0x4589bc) {
						_0x4442d4 = _0x4589bc;
					};
					this.flush = function () {
						var _0x17d17a, _0x297529, _0x201054, _0x50fc8a;
						if (_0x186a79.length === 0) {
							this.trigger('done', 'AudioSegmentStream');
							return;
						}
						_0x17d17a = this.trimAdtsFramesByEarliestDts_(_0x186a79);
						_0xed11e1.baseMediaDecodeTime = _0x38563f.calculateTrackBaseMediaDecodeTime(_0xed11e1, _0x58db58.keepOriginalTimestamps);
						this.prefixWithSilence_(_0xed11e1, _0x17d17a);
						_0xed11e1.samples = this.generateSampleTable_(_0x17d17a);
						_0x201054 = _0xbb0259.mdat(this.concatenateFrameData_(_0x17d17a));
						_0x186a79 = [];
						_0x297529 = _0xbb0259.moof(_0x426d6c, [_0xed11e1]);
						_0x50fc8a = new Uint8Array(_0x297529.byteLength + _0x201054.byteLength);
						_0x426d6c++;
						_0x50fc8a.set(_0x297529);
						_0x50fc8a.set(_0x201054, _0x297529.byteLength);
						_0x38563f.clearDtsInfo(_0xed11e1);
						this.trigger('data', {
							'track': _0xed11e1,
							'boxes': _0x50fc8a
						});
						this.trigger('done', 'AudioSegmentStream');
					};
					this.prefixWithSilence_ = function (_0x3158a3, _0x2ff257) {
						var _0x25c084, _0x14ce05 = 0, _0x1bd876 = 0, _0x318fc5 = 0, _0x3e656e = 0, _0x188f26, _0x2c1b72;
						if (!_0x2ff257.length) {
							return;
						}
						_0x25c084 = _0xc017c3.audioTsToVideoTs(_0x3158a3.baseMediaDecodeTime, _0x3158a3.samplerate);
						_0x14ce05 = Math.ceil(90000 / (_0x3158a3.samplerate / 1024));
						_0x4442d4 && _0x12e990 && (_0x1bd876 = _0x25c084 - Math.max(_0x4442d4, _0x12e990), _0x318fc5 = Math.floor(_0x1bd876 / _0x14ce05), _0x3e656e = _0x318fc5 * _0x14ce05);
						if (_0x318fc5 < 1 || _0x3e656e > 45000) {
							return;
						}
						_0x188f26 = _0x60b3cc[_0x3158a3.samplerate];
						if (!_0x188f26) {
							_0x188f26 = _0x2ff257[0].data;
						}
						for (_0x2c1b72 = 0; _0x2c1b72 < _0x318fc5; _0x2c1b72++) {
							_0x2ff257.splice(_0x2c1b72, 0, { 'data': _0x188f26 });
						}
						_0x3158a3.baseMediaDecodeTime -= Math.floor(_0xc017c3.videoTsToAudioTs(_0x3e656e, _0x3158a3.samplerate));
					};
					this.trimAdtsFramesByEarliestDts_ = function (_0x219fc7) {
						if (_0xed11e1.minSegmentDts >= _0x4718e7) {
							return _0x219fc7;
						}
						return _0xed11e1.minSegmentDts = Infinity, _0x219fc7.filter(function (_0x5dac15) {
							if (_0x5dac15.dts >= _0x4718e7) {
								return _0xed11e1.minSegmentDts = Math.min(_0xed11e1.minSegmentDts, _0x5dac15.dts), _0xed11e1.minSegmentPts = _0xed11e1.minSegmentDts, true;
							}
							return false;
						});
					};
					this.generateSampleTable_ = function (_0x455637) {
						var _0x58c7df, _0x2fca72, _0x55a97c = [];
						for (_0x58c7df = 0; _0x58c7df < _0x455637.length; _0x58c7df++) {
							_0x2fca72 = _0x455637[_0x58c7df];
							_0x55a97c.push({
								'size': _0x2fca72.data.byteLength,
								'duration': 1024
							});
						}
						return _0x55a97c;
					};
					this.concatenateFrameData_ = function (_0x4f6c93) {
						var _0x587398, _0xf0c391, _0x1f0f1b = 0, _0x2c84ed = new Uint8Array(_0x176456(_0x4f6c93));
						for (_0x587398 = 0; _0x587398 < _0x4f6c93.length; _0x587398++) {
							_0xf0c391 = _0x4f6c93[_0x587398];
							_0x2c84ed.set(_0xf0c391.data, _0x1f0f1b);
							_0x1f0f1b += _0xf0c391.data.byteLength;
						}
						return _0x2c84ed;
					};
				};
				_0x2498e5.prototype = new _0x1d0554();
				_0xbb5479 = function _0x4093c1(_0x3824b9, _0xc5dde9) {
					var _0x54695a = 0, _0x289534 = [], _0x371088 = [], _0xf6ae0d, _0x26c41c;
					_0xc5dde9 = _0xc5dde9 || {};
					_0xbb5479.prototype.init.call(this);
					delete _0x3824b9.minPTS;
					this.gopCache_ = [];
					this.push = function (_0x46f2d1) {
						_0x38563f.collectDtsInfo(_0x3824b9, _0x46f2d1);
						_0x46f2d1.nalUnitType === 'seq_parameter_set_rbsp' && !_0xf6ae0d && (_0xf6ae0d = _0x46f2d1.config, _0x3824b9.sps = [_0x46f2d1.data], _0x1025f9.forEach(function (_0x284ee9) {
							_0x3824b9[_0x284ee9] = _0xf6ae0d[_0x284ee9];
						}, this));
						_0x46f2d1.nalUnitType === 'pic_parameter_set_rbsp' && !_0x26c41c && (_0x26c41c = _0x46f2d1.data, _0x3824b9.pps = [_0x46f2d1.data]);
						_0x289534.push(_0x46f2d1);
					};
					this.flush = function () {
						var _0x218605, _0x4aa954, _0x4c6b1b, _0x20a3a6, _0x43fedd, _0x5de7bc;
						while (_0x289534.length) {
							if (_0x289534[0].nalUnitType === 'access_unit_delimiter_rbsp') {
								break;
							}
							_0x289534.shift();
						}
						if (_0x289534.length === 0) {
							this.resetStream_();
							this.trigger('done', 'VideoSegmentStream');
							return;
						}
						_0x218605 = _0x321365.groupNalsIntoFrames(_0x289534);
						_0x4c6b1b = _0x321365.groupFramesIntoGops(_0x218605);
						if (!_0x4c6b1b[0][0].keyFrame) {
							_0x4aa954 = this.getGopForFusion_(_0x289534[0], _0x3824b9);
							if (_0x4aa954) {
								_0x4c6b1b.unshift(_0x4aa954);
								_0x4c6b1b.byteLength += _0x4aa954.byteLength;
								_0x4c6b1b.nalCount += _0x4aa954.nalCount;
								_0x4c6b1b.pts = _0x4aa954.pts;
								_0x4c6b1b.dts = _0x4aa954.dts;
								_0x4c6b1b.duration += _0x4aa954.duration;
							} else {
								_0x4c6b1b = _0x321365.extendFirstKeyFrame(_0x4c6b1b);
							}
						}
						if (_0x371088.length) {
							var _0x224e26;
							if (_0xc5dde9.alignGopsAtEnd) {
								_0x224e26 = this.alignGopsAtEnd_(_0x4c6b1b);
							} else {
								_0x224e26 = this.alignGopsAtStart_(_0x4c6b1b);
							}
							if (!_0x224e26) {
								this.gopCache_.unshift({
									'gop': _0x4c6b1b.pop(),
									'pps': _0x3824b9.pps,
									'sps': _0x3824b9.sps
								});
								this.gopCache_.length = Math.min(6, this.gopCache_.length);
								_0x289534 = [];
								this.resetStream_();
								this.trigger('done', 'VideoSegmentStream');
								return;
							}
							_0x38563f.clearDtsInfo(_0x3824b9);
							_0x4c6b1b = _0x224e26;
						}
						_0x38563f.collectDtsInfo(_0x3824b9, _0x4c6b1b);
						_0x3824b9.samples = _0x321365.generateSampleTable(_0x4c6b1b);
						_0x43fedd = _0xbb0259.mdat(_0x321365.concatenateNalData(_0x4c6b1b));
						_0x3824b9.baseMediaDecodeTime = _0x38563f.calculateTrackBaseMediaDecodeTime(_0x3824b9, _0xc5dde9.keepOriginalTimestamps);
						this.trigger('processedGopsInfo', _0x4c6b1b.map(function (_0x506e35) {
							return {
								'pts': _0x506e35.pts,
								'dts': _0x506e35.dts,
								'byteLength': _0x506e35.byteLength
							};
						}));
						this.gopCache_.unshift({
							'gop': _0x4c6b1b.pop(),
							'pps': _0x3824b9.pps,
							'sps': _0x3824b9.sps
						});
						this.gopCache_.length = Math.min(6, this.gopCache_.length);
						_0x289534 = [];
						this.trigger('baseMediaDecodeTime', _0x3824b9.baseMediaDecodeTime);
						this.trigger('timelineStartInfo', _0x3824b9.timelineStartInfo);
						_0x20a3a6 = _0xbb0259.moof(_0x54695a, [_0x3824b9]);
						_0x5de7bc = new Uint8Array(_0x20a3a6.byteLength + _0x43fedd.byteLength);
						_0x54695a++;
						_0x5de7bc.set(_0x20a3a6);
						_0x5de7bc.set(_0x43fedd, _0x20a3a6.byteLength);
						this.trigger('data', {
							'track': _0x3824b9,
							'boxes': _0x5de7bc
						});
						this.resetStream_();
						this.trigger('done', 'VideoSegmentStream');
					};
					this.resetStream_ = function () {
						_0x38563f.clearDtsInfo(_0x3824b9);
						_0xf6ae0d = undefined;
						_0x26c41c = undefined;
					};
					this.getGopForFusion_ = function (_0x3d51b6) {
						var _0x45eeb2 = Infinity, _0x433f43, _0x3888c0, _0x461fa4, _0x4494b5, _0x5a6d94;
						for (_0x5a6d94 = 0; _0x5a6d94 < this.gopCache_.length; _0x5a6d94++) {
							_0x4494b5 = this.gopCache_[_0x5a6d94];
							_0x461fa4 = _0x4494b5.gop;
							if (!(_0x3824b9.pps && _0x25814b(_0x3824b9.pps[0], _0x4494b5.pps[0])) || !(_0x3824b9.sps && _0x25814b(_0x3824b9.sps[0], _0x4494b5.sps[0]))) {
								continue;
							}
							if (_0x461fa4.dts < _0x3824b9.timelineStartInfo.dts) {
								continue;
							}
							_0x433f43 = _0x3d51b6.dts - _0x461fa4.dts - _0x461fa4.duration;
							if (_0x433f43 >= -10000 && _0x433f43 <= 45000) {
								(!_0x3888c0 || _0x45eeb2 > _0x433f43) && (_0x3888c0 = _0x4494b5, _0x45eeb2 = _0x433f43);
							}
						}
						if (_0x3888c0) {
							return _0x3888c0.gop;
						}
						return null;
					};
					this.alignGopsAtStart_ = function (_0x49b04a) {
						var _0x3cca59, _0x5d7b87, _0x198b60, _0x1339a6, _0x1545f6, _0x1011b7, _0x291bb4, _0x528f0c;
						_0x1545f6 = _0x49b04a.byteLength;
						_0x1011b7 = _0x49b04a.nalCount;
						_0x291bb4 = _0x49b04a.duration;
						_0x3cca59 = _0x5d7b87 = 0;
						while (_0x3cca59 < _0x371088.length && _0x5d7b87 < _0x49b04a.length) {
							_0x198b60 = _0x371088[_0x3cca59];
							_0x1339a6 = _0x49b04a[_0x5d7b87];
							if (_0x198b60.pts === _0x1339a6.pts) {
								break;
							}
							if (_0x1339a6.pts > _0x198b60.pts) {
								_0x3cca59++;
								continue;
							}
							_0x5d7b87++;
							_0x1545f6 -= _0x1339a6.byteLength;
							_0x1011b7 -= _0x1339a6.nalCount;
							_0x291bb4 -= _0x1339a6.duration;
						}
						if (_0x5d7b87 === 0) {
							return _0x49b04a;
						}
						if (_0x5d7b87 === _0x49b04a.length) {
							return null;
						}
						return _0x528f0c = _0x49b04a.slice(_0x5d7b87), _0x528f0c.byteLength = _0x1545f6, _0x528f0c.duration = _0x291bb4, _0x528f0c.nalCount = _0x1011b7, _0x528f0c.pts = _0x528f0c[0].pts, _0x528f0c.dts = _0x528f0c[0].dts, _0x528f0c;
					};
					this.alignGopsAtEnd_ = function (_0x37bced) {
						var _0x468593, _0x4afe8a, _0x4d2172, _0x522087, _0x51332b, _0x56ba3f;
						_0x468593 = _0x371088.length - 1;
						_0x4afe8a = _0x37bced.length - 1;
						_0x51332b = null;
						_0x56ba3f = false;
						while (_0x468593 >= 0 && _0x4afe8a >= 0) {
							_0x4d2172 = _0x371088[_0x468593];
							_0x522087 = _0x37bced[_0x4afe8a];
							if (_0x4d2172.pts === _0x522087.pts) {
								_0x56ba3f = true;
								break;
							}
							if (_0x4d2172.pts > _0x522087.pts) {
								_0x468593--;
								continue;
							}
							if (_0x468593 === _0x371088.length - 1) {
								_0x51332b = _0x4afe8a;
							}
							_0x4afe8a--;
						}
						if (!_0x56ba3f && _0x51332b === null) {
							return null;
						}
						var _0x3f08b2;
						if (_0x56ba3f) {
							_0x3f08b2 = _0x4afe8a;
						} else {
							_0x3f08b2 = _0x51332b;
						}
						if (_0x3f08b2 === 0) {
							return _0x37bced;
						}
						var _0x595d6c = _0x37bced.slice(_0x3f08b2), _0x9b4e1c = _0x595d6c.reduce(function (_0x4c9a9a, _0x3db4b8) {
							return _0x4c9a9a.byteLength += _0x3db4b8.byteLength, _0x4c9a9a.duration += _0x3db4b8.duration, _0x4c9a9a.nalCount += _0x3db4b8.nalCount, _0x4c9a9a;
						}, {
							'byteLength': 0,
							'duration': 0,
							'nalCount': 0
						});
						return _0x595d6c.byteLength = _0x9b4e1c.byteLength, _0x595d6c.duration = _0x9b4e1c.duration, _0x595d6c.nalCount = _0x9b4e1c.nalCount, _0x595d6c.pts = _0x595d6c[0].pts, _0x595d6c.dts = _0x595d6c[0].dts, _0x595d6c;
					};
					this.alignGopsWith = function (_0x159c0) {
						_0x371088 = _0x159c0;
					};
				};
				_0xbb5479.prototype = new _0x1d0554();
				_0x2688cd = function _0xe9a072(_0x276bb0, _0x4cc5c3) {
					this.numberOfTracks = 0;
					this.metadataStream = _0x4cc5c3;
					if (typeof _0x276bb0.remux !== 'undefined') {
						this.remuxTracks = !!_0x276bb0.remux;
					} else {
						this.remuxTracks = true;
					}
					this.pendingTracks = [];
					this.videoTrack = null;
					this.pendingBoxes = [];
					this.pendingCaptions = [];
					this.pendingMetadata = [];
					this.pendingBytes = 0;
					this.emittedTracks = 0;
					_0x2688cd.prototype.init.call(this);
					this.push = function (_0x2bfd3a) {
						if (_0x2bfd3a.text) {
							return this.pendingCaptions.push(_0x2bfd3a);
						}
						if (_0x2bfd3a.frames) {
							return this.pendingMetadata.push(_0x2bfd3a);
						}
						this.pendingTracks.push(_0x2bfd3a.track);
						this.pendingBoxes.push(_0x2bfd3a.boxes);
						this.pendingBytes += _0x2bfd3a.boxes.byteLength;
						if (_0x2bfd3a.track.type === 'video') {
							this.videoTrack = _0x2bfd3a.track;
						}
						if (_0x2bfd3a.track.type === 'audio') {
							this.audioTrack = _0x2bfd3a.track;
						}
					};
				};
				_0x2688cd.prototype = new _0x1d0554();
				_0x2688cd.prototype.flush = function (_0x376b1a) {
					var _0x386fe3 = 0, _0xab8475 = {
						'captions': [],
						'captionStreams': {},
						'metadata': [],
						'info': {}
					}, _0x575752, _0x37a4c0, _0x5247e6, _0x13896d = 0, _0x3efe68;
					if (this.pendingTracks.length < this.numberOfTracks) {
						if (_0x376b1a !== 'VideoSegmentStream' && _0x376b1a !== 'AudioSegmentStream') {
							return;
						} else {
							if (this.remuxTracks) {
								return;
							} else {
								if (this.pendingTracks.length === 0) {
									this.emittedTracks++;
									if (this.emittedTracks >= this.numberOfTracks) {
										this.trigger('done');
										this.emittedTracks = 0;
									}
									return;
								}
							}
						}
					}
					if (this.videoTrack) {
						_0x13896d = this.videoTrack.timelineStartInfo.pts;
						_0x1025f9.forEach(function (_0x2b9aff) {
							_0xab8475.info[_0x2b9aff] = this.videoTrack[_0x2b9aff];
						}, this);
					} else {
						this.audioTrack && (_0x13896d = this.audioTrack.timelineStartInfo.pts, _0x1ae255.forEach(function (_0x271cb2) {
							_0xab8475.info[_0x271cb2] = this.audioTrack[_0x271cb2];
						}, this));
					}
					if (this.pendingTracks.length === 1) {
						_0xab8475.type = this.pendingTracks[0].type;
					} else {
						_0xab8475.type = 'combined';
					}
					this.emittedTracks += this.pendingTracks.length;
					_0x5247e6 = _0xbb0259.initSegment(this.pendingTracks);
					_0xab8475.initSegment = new Uint8Array(_0x5247e6.byteLength);
					_0xab8475.initSegment.set(_0x5247e6);
					_0xab8475.data = new Uint8Array(this.pendingBytes);
					for (_0x3efe68 = 0; _0x3efe68 < this.pendingBoxes.length; _0x3efe68++) {
						_0xab8475.data.set(this.pendingBoxes[_0x3efe68], _0x386fe3);
						_0x386fe3 += this.pendingBoxes[_0x3efe68].byteLength;
					}
					for (_0x3efe68 = 0; _0x3efe68 < this.pendingCaptions.length; _0x3efe68++) {
						_0x575752 = this.pendingCaptions[_0x3efe68];
						_0x575752.startTime = _0x575752.startPts - _0x13896d;
						_0x575752.startTime /= 90000;
						_0x575752.endTime = _0x575752.endPts - _0x13896d;
						_0x575752.endTime /= 90000;
						_0xab8475.captionStreams[_0x575752.stream] = true;
						_0xab8475.captions.push(_0x575752);
					}
					for (_0x3efe68 = 0; _0x3efe68 < this.pendingMetadata.length; _0x3efe68++) {
						_0x37a4c0 = this.pendingMetadata[_0x3efe68];
						_0x37a4c0.cueTime = _0x37a4c0.pts - _0x13896d;
						_0x37a4c0.cueTime /= 90000;
						_0xab8475.metadata.push(_0x37a4c0);
					}
					_0xab8475.metadata.dispatchType = this.metadataStream.dispatchType;
					this.pendingTracks.length = 0;
					this.videoTrack = null;
					this.pendingBoxes.length = 0;
					this.pendingCaptions.length = 0;
					this.pendingBytes = 0;
					this.pendingMetadata.length = 0;
					this.trigger('data', _0xab8475);
					if (this.emittedTracks >= this.numberOfTracks) {
						this.trigger('done');
						this.emittedTracks = 0;
					}
				};
				_0x3aa41c = function _0x4faacc(_0x209e9c) {
					var _0x1584f6 = this, _0x5e92b1 = true, _0xb99939, _0x1e6838;
					_0x3aa41c.prototype.init.call(this);
					_0x209e9c = _0x209e9c || {};
					this.baseMediaDecodeTime = _0x209e9c.baseMediaDecodeTime || 0;
					this.transmuxPipeline_ = {};
					this.setupAacPipeline = function () {
						var _0x92dd37 = {
							type: 'aac',
							metadataStream: new _0x2fe420.MetadataStream(),
							aacStream: new _0x577d79(),
							audioTimestampRolloverStream: new _0x2fe420.TimestampRolloverStream('audio'),
							timedMetadataTimestampRolloverStream: new _0x2fe420.TimestampRolloverStream('timed-metadata'),
							adtsStream: new _0xfdc286(),
							coalesceStream: new _0x2688cd(_0x209e9c, _0x92dd37.metadataStream),
							headOfPipeline: _0x92dd37.aacStream
						};
						this.transmuxPipeline_ = _0x92dd37;
						_0x92dd37.aacStream.pipe(_0x92dd37.audioTimestampRolloverStream).pipe(_0x92dd37.adtsStream);
						_0x92dd37.aacStream.pipe(_0x92dd37.timedMetadataTimestampRolloverStream).pipe(_0x92dd37.metadataStream).pipe(_0x92dd37.coalesceStream);
						_0x92dd37.metadataStream.on('timestamp', function (_0xe30ca1) {
							_0x92dd37.aacStream.setTimestamp(_0xe30ca1.timeStamp);
						});
						_0x92dd37.aacStream.on('data', function (_0x3469e7) {
							_0x3469e7.type === 'timed-metadata' && !_0x92dd37.audioSegmentStream && (_0x1e6838 = _0x1e6838 || {
								'timelineStartInfo': { 'baseMediaDecodeTime': _0x1584f6.baseMediaDecodeTime },
								'codec': 'adts',
								'type': 'audio'
							}, _0x92dd37.coalesceStream.numberOfTracks++, _0x92dd37.audioSegmentStream = new _0x2498e5(_0x1e6838, _0x209e9c), _0x92dd37.adtsStream.pipe(_0x92dd37.audioSegmentStream).pipe(_0x92dd37.coalesceStream));
						});
						_0x92dd37.coalesceStream.on('data', this.trigger.bind(this, 'data'));
						_0x92dd37.coalesceStream.on('done', this.trigger.bind(this, 'done'));
					};
					this.setupTsPipeline = function () {
						var _0x32a946 = {
							type: 'ts',
							metadataStream: new _0x2fe420.MetadataStream(),
							packetStream: new _0x2fe420.TransportPacketStream(),
							parseStream: new _0x2fe420.TransportParseStream(),
							elementaryStream: new _0x2fe420.ElementaryStream(),
							videoTimestampRolloverStream: new _0x2fe420.TimestampRolloverStream('video'),
							audioTimestampRolloverStream: new _0x2fe420.TimestampRolloverStream('audio'),
							timedMetadataTimestampRolloverStream: new _0x2fe420.TimestampRolloverStream('timed-metadata'),
							adtsStream: new _0xfdc286(),
							h264Stream: new _0x2d17c7(),
							captionStream: new _0x2fe420.CaptionStream(),
							coalesceStream: new _0x2688cd(_0x209e9c, _0x32a946.metadataStream),
							headOfPipeline: _0x32a946.packetStream
						};
						this.transmuxPipeline_ = _0x32a946;
						_0x32a946.packetStream.pipe(_0x32a946.parseStream).pipe(_0x32a946.elementaryStream);
						_0x32a946.elementaryStream.pipe(_0x32a946.videoTimestampRolloverStream).pipe(_0x32a946.h264Stream);
						_0x32a946.elementaryStream.pipe(_0x32a946.audioTimestampRolloverStream).pipe(_0x32a946.adtsStream);
						_0x32a946.elementaryStream.pipe(_0x32a946.timedMetadataTimestampRolloverStream).pipe(_0x32a946.metadataStream).pipe(_0x32a946.coalesceStream);
						_0x32a946.h264Stream.pipe(_0x32a946.captionStream).pipe(_0x32a946.coalesceStream);
						_0x32a946.elementaryStream.on('data', function (_0xf00695) {
							var _0x551eff;
							if (_0xf00695.type === 'metadata') {
								_0x551eff = _0xf00695.tracks.length;
								while (_0x551eff--) {
									if (!_0xb99939 && _0xf00695.tracks[_0x551eff].type === 'video') {
										_0xb99939 = _0xf00695.tracks[_0x551eff];
										_0xb99939.timelineStartInfo.baseMediaDecodeTime = _0x1584f6.baseMediaDecodeTime;
									} else {
										!_0x1e6838 && _0xf00695.tracks[_0x551eff].type === 'audio' && (_0x1e6838 = _0xf00695.tracks[_0x551eff], _0x1e6838.timelineStartInfo.baseMediaDecodeTime = _0x1584f6.baseMediaDecodeTime);
									}
								}
								_0xb99939 && !_0x32a946.videoSegmentStream && (_0x32a946.coalesceStream.numberOfTracks++, _0x32a946.videoSegmentStream = new _0xbb5479(_0xb99939, _0x209e9c), _0x32a946.videoSegmentStream.on('timelineStartInfo', function (_0x50fd8e) {
									_0x1e6838 && (_0x1e6838.timelineStartInfo = _0x50fd8e, _0x32a946.audioSegmentStream.setEarliestDts(_0x50fd8e.dts));
								}), _0x32a946.videoSegmentStream.on('processedGopsInfo', _0x1584f6.trigger.bind(_0x1584f6, 'gopInfo')), _0x32a946.videoSegmentStream.on('baseMediaDecodeTime', function (_0x122c5f) {
									if (_0x1e6838) {
										_0x32a946.audioSegmentStream.setVideoBaseMediaDecodeTime(_0x122c5f);
									}
								}), _0x32a946.h264Stream.pipe(_0x32a946.videoSegmentStream).pipe(_0x32a946.coalesceStream));
								_0x1e6838 && !_0x32a946.audioSegmentStream && (_0x32a946.coalesceStream.numberOfTracks++, _0x32a946.audioSegmentStream = new _0x2498e5(_0x1e6838, _0x209e9c), _0x32a946.adtsStream.pipe(_0x32a946.audioSegmentStream).pipe(_0x32a946.coalesceStream));
							}
						});
						_0x32a946.coalesceStream.on('data', this.trigger.bind(this, 'data'));
						_0x32a946.coalesceStream.on('done', this.trigger.bind(this, 'done'));
					};
					this.setBaseMediaDecodeTime = function (_0x407a96) {
						var _0x157a46 = this.transmuxPipeline_;
						this.baseMediaDecodeTime = _0x407a96;
						if (_0x1e6838) {
							_0x1e6838.timelineStartInfo.dts = undefined;
							_0x1e6838.timelineStartInfo.pts = undefined;
							_0x38563f.clearDtsInfo(_0x1e6838);
							_0x1e6838.timelineStartInfo.baseMediaDecodeTime = _0x407a96;
							if (_0x157a46.audioTimestampRolloverStream) {
								_0x157a46.audioTimestampRolloverStream.discontinuity();
							}
						}
						_0xb99939 && (_0x157a46.videoSegmentStream && (_0x157a46.videoSegmentStream.gopCache_ = [], _0x157a46.videoTimestampRolloverStream.discontinuity()), _0xb99939.timelineStartInfo.dts = undefined, _0xb99939.timelineStartInfo.pts = undefined, _0x38563f.clearDtsInfo(_0xb99939), _0x157a46.captionStream.reset(), _0xb99939.timelineStartInfo.baseMediaDecodeTime = _0x407a96);
						if (_0x157a46.timedMetadataTimestampRolloverStream) {
							_0x157a46.timedMetadataTimestampRolloverStream.discontinuity();
						}
					};
					this.setAudioAppendStart = function (_0x27b4c9) {
						if (_0x1e6838) {
							this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(_0x27b4c9);
						}
					};
					this.alignGopsWith = function (_0x22aa2c) {
						if (_0xb99939 && this.transmuxPipeline_.videoSegmentStream) {
							this.transmuxPipeline_.videoSegmentStream.alignGopsWith(_0x22aa2c);
						}
					};
					this.push = function (_0xd5a52a) {
						if (_0x5e92b1) {
							var _0x102217 = _0x1eca64(_0xd5a52a);
							if (_0x102217 && this.transmuxPipeline_.type !== 'aac') {
								this.setupAacPipeline();
							} else {
								if (!_0x102217 && this.transmuxPipeline_.type !== 'ts') {
									this.setupTsPipeline();
								}
							}
							_0x5e92b1 = false;
						}
						this.transmuxPipeline_.headOfPipeline.push(_0xd5a52a);
					};
					this.flush = function () {
						_0x5e92b1 = true;
						this.transmuxPipeline_.headOfPipeline.flush();
					};
					this.resetCaptions = function () {
						if (this.transmuxPipeline_.captionStream) {
							this.transmuxPipeline_.captionStream.reset();
						}
					};
				};
				_0x3aa41c.prototype = new _0x1d0554();
				var _0x5af126 = {
					'Transmuxer': _0x3aa41c,
					'VideoSegmentStream': _0xbb5479,
					'AudioSegmentStream': _0x2498e5,
					'AUDIO_PROPERTIES': _0x1ae255,
					'VIDEO_PROPERTIES': _0x1025f9
				}, _0x5828bb, _0x1ad1f7, _0x5b4d68 = _0x4b4208.parseType, _0xb58340 = function _0x3cf0e6(_0x1b9417) {
					return new Date(_0x1b9417 * 1000 - 2082844800000);
				}, _0x1c384c = function _0x3d8170(_0x57867d) {
					return {
						'isLeading': (_0x57867d[0] & 12) >>> 2,
						'dependsOn': _0x57867d[0] & 3,
						'isDependedOn': (_0x57867d[1] & 192) >>> 6,
						'hasRedundancy': (_0x57867d[1] & 48) >>> 4,
						'paddingValue': (_0x57867d[1] & 14) >>> 1,
						'isNonSyncSample': _0x57867d[1] & 1,
						'degradationPriority': _0x57867d[2] << 8 | _0x57867d[3]
					};
				}, _0x1140bd = function _0xce9a4f(_0x403724) {
					var _0x5696cd = new DataView(_0x403724.buffer, _0x403724.byteOffset, _0x403724.byteLength), _0x1fbe62 = [], _0x4fa109, _0x4ab91f;
					for (_0x4fa109 = 0; _0x4fa109 + 4 < _0x403724.length; _0x4fa109 += _0x4ab91f) {
						_0x4ab91f = _0x5696cd.getUint32(_0x4fa109);
						_0x4fa109 += 4;
						if (_0x4ab91f <= 0) {
							_0x1fbe62.push('<span style=\'color:red;\'>MALFORMED DATA</span>');
							continue;
						}
						switch (_0x403724[_0x4fa109] & 31) {
							case 1:
								_0x1fbe62.push('slice_layer_without_partitioning_rbsp');
								break;
							case 5:
								_0x1fbe62.push('slice_layer_without_partitioning_rbsp_idr');
								break;
							case 6:
								_0x1fbe62.push('sei_rbsp');
								break;
							case 7:
								_0x1fbe62.push('seq_parameter_set_rbsp');
								break;
							case 8:
								_0x1fbe62.push('pic_parameter_set_rbsp');
								break;
							case 9:
								_0x1fbe62.push('access_unit_delimiter_rbsp');
								break;
							default:
								_0x1fbe62.push('UNKNOWN NAL - ' + _0x403724[_0x4fa109] & 31);
								break;
						}
					}
					return _0x1fbe62;
				}, _0x44cb73 = {
					'avc1': function _0x1e6bf9(_0x3eed84) {
						var _0x407739 = new DataView(_0x3eed84.buffer, _0x3eed84.byteOffset, _0x3eed84.byteLength);
						return {
							'dataReferenceIndex': _0x407739.getUint16(6),
							'width': _0x407739.getUint16(24),
							'height': _0x407739.getUint16(26),
							'horizresolution': _0x407739.getUint16(28) + _0x407739.getUint16(30) / 16,
							'vertresolution': _0x407739.getUint16(32) + _0x407739.getUint16(34) / 16,
							'frameCount': _0x407739.getUint16(40),
							'depth': _0x407739.getUint16(74),
							'config': _0x5828bb(_0x3eed84.subarray(78, _0x3eed84.byteLength))
						};
					},
					'avcC': function _0x1e90e0(_0x425a89) {
						var _0xb5f71 = new DataView(_0x425a89.buffer, _0x425a89.byteOffset, _0x425a89.byteLength), _0x4aca1c = {
							'configurationVersion': _0x425a89[0],
							'avcProfileIndication': _0x425a89[1],
							'profileCompatibility': _0x425a89[2],
							'avcLevelIndication': _0x425a89[3],
							'lengthSizeMinusOne': _0x425a89[4] & 3,
							'sps': [],
							'pps': []
						}, _0x1df955 = _0x425a89[5] & 31, _0x15c466, _0x186ebd, _0x5a708e, _0x44746c;
						_0x5a708e = 6;
						for (_0x44746c = 0; _0x44746c < _0x1df955; _0x44746c++) {
							_0x186ebd = _0xb5f71.getUint16(_0x5a708e);
							_0x5a708e += 2;
							_0x4aca1c.sps.push(new Uint8Array(_0x425a89.subarray(_0x5a708e, _0x5a708e + _0x186ebd)));
							_0x5a708e += _0x186ebd;
						}
						_0x15c466 = _0x425a89[_0x5a708e];
						_0x5a708e++;
						for (_0x44746c = 0; _0x44746c < _0x15c466; _0x44746c++) {
							_0x186ebd = _0xb5f71.getUint16(_0x5a708e);
							_0x5a708e += 2;
							_0x4aca1c.pps.push(new Uint8Array(_0x425a89.subarray(_0x5a708e, _0x5a708e + _0x186ebd)));
							_0x5a708e += _0x186ebd;
						}
						return _0x4aca1c;
					},
					'btrt': function _0x2cb924(_0x39b898) {
						var _0x4015c9 = new DataView(_0x39b898.buffer, _0x39b898.byteOffset, _0x39b898.byteLength);
						return {
							'bufferSizeDB': _0x4015c9.getUint32(0),
							'maxBitrate': _0x4015c9.getUint32(4),
							'avgBitrate': _0x4015c9.getUint32(8)
						};
					},
					'esds': function _0x570fc3(_0x2a65c1) {
						return {
							'version': _0x2a65c1[0],
							'flags': new Uint8Array(_0x2a65c1.subarray(1, 4)),
							'esId': _0x2a65c1[6] << 8 | _0x2a65c1[7],
							'streamPriority': _0x2a65c1[8] & 31,
							'decoderConfig': {
								'objectProfileIndication': _0x2a65c1[11],
								'streamType': _0x2a65c1[12] >>> 2 & 63,
								'bufferSize': _0x2a65c1[13] << 16 | _0x2a65c1[14] << 8 | _0x2a65c1[15],
								'maxBitrate': _0x2a65c1[16] << 24 | _0x2a65c1[17] << 16 | _0x2a65c1[18] << 8 | _0x2a65c1[19],
								'avgBitrate': _0x2a65c1[20] << 24 | _0x2a65c1[21] << 16 | _0x2a65c1[22] << 8 | _0x2a65c1[23],
								'decoderConfigDescriptor': {
									'tag': _0x2a65c1[24],
									'length': _0x2a65c1[25],
									'audioObjectType': _0x2a65c1[26] >>> 3 & 31,
									'samplingFrequencyIndex': (_0x2a65c1[26] & 7) << 1 | _0x2a65c1[27] >>> 7 & 1,
									'channelConfiguration': _0x2a65c1[27] >>> 3 & 15
								}
							}
						};
					},
					'ftyp': function _0x3b9f34(_0x312bb5) {
						var _0x2650d0 = new DataView(_0x312bb5.buffer, _0x312bb5.byteOffset, _0x312bb5.byteLength), _0x5dda01 = {
							'majorBrand': _0x5b4d68(_0x312bb5.subarray(0, 4)),
							'minorVersion': _0x2650d0.getUint32(4),
							'compatibleBrands': []
						}, _0x5a7926 = 8;
						while (_0x5a7926 < _0x312bb5.byteLength) {
							_0x5dda01.compatibleBrands.push(_0x5b4d68(_0x312bb5.subarray(_0x5a7926, _0x5a7926 + 4)));
							_0x5a7926 += 4;
						}
						return _0x5dda01;
					},
					'dinf': function _0x58463e(_0x442b17) {
						return { 'boxes': _0x5828bb(_0x442b17) };
					},
					'dref': function _0x442f6e(_0x28d654) {
						return {
							'version': _0x28d654[0],
							'flags': new Uint8Array(_0x28d654.subarray(1, 4)),
							'dataReferences': _0x5828bb(_0x28d654.subarray(8))
						};
					},
					'hdlr': function _0x2e0f07(_0x2990ac) {
						var _0x5445a5 = new DataView(_0x2990ac.buffer, _0x2990ac.byteOffset, _0x2990ac.byteLength), _0x290e56 = {
							'version': _0x5445a5.getUint8(0),
							'flags': new Uint8Array(_0x2990ac.subarray(1, 4)),
							'handlerType': _0x5b4d68(_0x2990ac.subarray(8, 12)),
							'name': ''
						}, _0x12e0d3 = 8;
						for (_0x12e0d3 = 24; _0x12e0d3 < _0x2990ac.byteLength; _0x12e0d3++) {
							if (_0x2990ac[_0x12e0d3] === 0) {
								_0x12e0d3++;
								break;
							}
							_0x290e56.name += String.fromCharCode(_0x2990ac[_0x12e0d3]);
						}
						return _0x290e56.name = decodeURIComponent(escape(_0x290e56.name)), _0x290e56;
					},
					'mdat': function _0x3b5b20(_0x4996dd) {
						return {
							'byteLength': _0x4996dd.byteLength,
							'nals': _0x1140bd(_0x4996dd)
						};
					},
					'mdhd': function _0x28b8bd(_0x2342ed) {
						var _0x6c946c = new DataView(_0x2342ed.buffer, _0x2342ed.byteOffset, _0x2342ed.byteLength), _0x2bb7f8 = 4, _0x1ac6e8, _0x35ea82 = {
							'version': _0x6c946c.getUint8(0),
							'flags': new Uint8Array(_0x2342ed.subarray(1, 4)),
							'language': ''
						};
						return _0x35ea82.version === 1 ? (_0x2bb7f8 += 4, _0x35ea82.creationTime = _0xb58340(_0x6c946c.getUint32(_0x2bb7f8)), _0x2bb7f8 += 8, _0x35ea82.modificationTime = _0xb58340(_0x6c946c.getUint32(_0x2bb7f8)), _0x2bb7f8 += 4, _0x35ea82.timescale = _0x6c946c.getUint32(_0x2bb7f8), _0x2bb7f8 += 8, _0x35ea82.duration = _0x6c946c.getUint32(_0x2bb7f8)) : (_0x35ea82.creationTime = _0xb58340(_0x6c946c.getUint32(_0x2bb7f8)), _0x2bb7f8 += 4, _0x35ea82.modificationTime = _0xb58340(_0x6c946c.getUint32(_0x2bb7f8)), _0x2bb7f8 += 4, _0x35ea82.timescale = _0x6c946c.getUint32(_0x2bb7f8), _0x2bb7f8 += 4, _0x35ea82.duration = _0x6c946c.getUint32(_0x2bb7f8)), _0x2bb7f8 += 4, _0x1ac6e8 = _0x6c946c.getUint16(_0x2bb7f8), _0x35ea82.language += String.fromCharCode((_0x1ac6e8 >> 10) + 96), _0x35ea82.language += String.fromCharCode(((_0x1ac6e8 & 992) >> 5) + 96), _0x35ea82.language += String.fromCharCode((_0x1ac6e8 & 31) + 96), _0x35ea82;
					},
					'mdia': function _0x26f767(_0x52ac6d) {
						return { 'boxes': _0x5828bb(_0x52ac6d) };
					},
					'mfhd': function _0x1e3e44(_0x124103) {
						return {
							'version': _0x124103[0],
							'flags': new Uint8Array(_0x124103.subarray(1, 4)),
							'sequenceNumber': _0x124103[4] << 24 | _0x124103[5] << 16 | _0x124103[6] << 8 | _0x124103[7]
						};
					},
					'minf': function _0x1e1323(_0x288b93) {
						return { 'boxes': _0x5828bb(_0x288b93) };
					},
					'mp4a': function _0x453a5c(_0x59a425) {
						var _0x1459dd = new DataView(_0x59a425.buffer, _0x59a425.byteOffset, _0x59a425.byteLength), _0x7c567b = {
							'dataReferenceIndex': _0x1459dd.getUint16(6),
							'channelcount': _0x1459dd.getUint16(16),
							'samplesize': _0x1459dd.getUint16(18),
							'samplerate': _0x1459dd.getUint16(24) + _0x1459dd.getUint16(26) / 65536
						};
						if (_0x59a425.byteLength > 28) {
							_0x7c567b.streamDescriptor = _0x5828bb(_0x59a425.subarray(28))[0];
						}
						return _0x7c567b;
					},
					'moof': function _0x144444(_0x449587) {
						return { 'boxes': _0x5828bb(_0x449587) };
					},
					'moov': function _0x2b6ca7(_0x4944d0) {
						return { 'boxes': _0x5828bb(_0x4944d0) };
					},
					'mvex': function _0x5b2325(_0x4a3aaf) {
						return { 'boxes': _0x5828bb(_0x4a3aaf) };
					},
					'mvhd': function _0x150f6e(_0x42c2e7) {
						var _0xa1018b = new DataView(_0x42c2e7.buffer, _0x42c2e7.byteOffset, _0x42c2e7.byteLength), _0x38f6f1 = 4, _0x1ffa27 = {
							'version': _0xa1018b.getUint8(0),
							'flags': new Uint8Array(_0x42c2e7.subarray(1, 4))
						};
						return _0x1ffa27.version === 1 ? (_0x38f6f1 += 4, _0x1ffa27.creationTime = _0xb58340(_0xa1018b.getUint32(_0x38f6f1)), _0x38f6f1 += 8, _0x1ffa27.modificationTime = _0xb58340(_0xa1018b.getUint32(_0x38f6f1)), _0x38f6f1 += 4, _0x1ffa27.timescale = _0xa1018b.getUint32(_0x38f6f1), _0x38f6f1 += 8, _0x1ffa27.duration = _0xa1018b.getUint32(_0x38f6f1)) : (_0x1ffa27.creationTime = _0xb58340(_0xa1018b.getUint32(_0x38f6f1)), _0x38f6f1 += 4, _0x1ffa27.modificationTime = _0xb58340(_0xa1018b.getUint32(_0x38f6f1)), _0x38f6f1 += 4, _0x1ffa27.timescale = _0xa1018b.getUint32(_0x38f6f1), _0x38f6f1 += 4, _0x1ffa27.duration = _0xa1018b.getUint32(_0x38f6f1)), _0x38f6f1 += 4, _0x1ffa27.rate = _0xa1018b.getUint16(_0x38f6f1) + _0xa1018b.getUint16(_0x38f6f1 + 2) / 16, _0x38f6f1 += 4, _0x1ffa27.volume = _0xa1018b.getUint8(_0x38f6f1) + _0xa1018b.getUint8(_0x38f6f1 + 1) / 8, _0x38f6f1 += 2, _0x38f6f1 += 2, _0x38f6f1 += 8, _0x1ffa27.matrix = new Uint32Array(_0x42c2e7.subarray(_0x38f6f1, _0x38f6f1 + 36)), _0x38f6f1 += 36, _0x38f6f1 += 24, _0x1ffa27.nextTrackId = _0xa1018b.getUint32(_0x38f6f1), _0x1ffa27;
					},
					'pdin': function _0x398e5c(_0x18443a) {
						var _0xcd2272 = new DataView(_0x18443a.buffer, _0x18443a.byteOffset, _0x18443a.byteLength);
						return {
							'version': _0xcd2272.getUint8(0),
							'flags': new Uint8Array(_0x18443a.subarray(1, 4)),
							'rate': _0xcd2272.getUint32(4),
							'initialDelay': _0xcd2272.getUint32(8)
						};
					},
					'sdtp': function _0x45f677(_0x1bbb8d) {
						var _0x41ae76 = {
							'version': _0x1bbb8d[0],
							'flags': new Uint8Array(_0x1bbb8d.subarray(1, 4)),
							'samples': []
						}, _0x2cb879;
						for (_0x2cb879 = 4; _0x2cb879 < _0x1bbb8d.byteLength; _0x2cb879++) {
							_0x41ae76.samples.push({
								'dependsOn': (_0x1bbb8d[_0x2cb879] & 48) >> 4,
								'isDependedOn': (_0x1bbb8d[_0x2cb879] & 12) >> 2,
								'hasRedundancy': _0x1bbb8d[_0x2cb879] & 3
							});
						}
						return _0x41ae76;
					},
					'sidx': function _0x1fa286(_0x5d4223) {
						var _0x2d2a41 = new DataView(_0x5d4223.buffer, _0x5d4223.byteOffset, _0x5d4223.byteLength), _0x4a43f4 = {
							'version': _0x5d4223[0],
							'flags': new Uint8Array(_0x5d4223.subarray(1, 4)),
							'references': [],
							'referenceId': _0x2d2a41.getUint32(4),
							'timescale': _0x2d2a41.getUint32(8),
							'earliestPresentationTime': _0x2d2a41.getUint32(12),
							'firstOffset': _0x2d2a41.getUint32(16)
						}, _0x3c8001 = _0x2d2a41.getUint16(22), _0x6ab175;
						for (_0x6ab175 = 24; _0x3c8001; _0x6ab175 += 12, _0x3c8001--) {
							_0x4a43f4.references.push({
								'referenceType': (_0x5d4223[_0x6ab175] & 128) >>> 7,
								'referencedSize': _0x2d2a41.getUint32(_0x6ab175) & 2147483647,
								'subsegmentDuration': _0x2d2a41.getUint32(_0x6ab175 + 4),
								'startsWithSap': !!(_0x5d4223[_0x6ab175 + 8] & 128),
								'sapType': (_0x5d4223[_0x6ab175 + 8] & 112) >>> 4,
								'sapDeltaTime': _0x2d2a41.getUint32(_0x6ab175 + 8) & 268435455
							});
						}
						return _0x4a43f4;
					},
					'smhd': function _0x43e423(_0x1fda6a) {
						return {
							'version': _0x1fda6a[0],
							'flags': new Uint8Array(_0x1fda6a.subarray(1, 4)),
							'balance': _0x1fda6a[4] + _0x1fda6a[5] / 256
						};
					},
					'stbl': function _0x17a38c(_0x400c00) {
						return { 'boxes': _0x5828bb(_0x400c00) };
					},
					'stco': function _0x3a786b(_0xdcb006) {
						var _0x3bef42 = new DataView(_0xdcb006.buffer, _0xdcb006.byteOffset, _0xdcb006.byteLength), _0x232d89 = {
							'version': _0xdcb006[0],
							'flags': new Uint8Array(_0xdcb006.subarray(1, 4)),
							'chunkOffsets': []
						}, _0x5372cf = _0x3bef42.getUint32(4), _0x3bca4f;
						for (_0x3bca4f = 8; _0x5372cf; _0x3bca4f += 4, _0x5372cf--) {
							_0x232d89.chunkOffsets.push(_0x3bef42.getUint32(_0x3bca4f));
						}
						return _0x232d89;
					},
					'stsc': function _0x20b1fd(_0x41fa21) {
						var _0x5a3583 = new DataView(_0x41fa21.buffer, _0x41fa21.byteOffset, _0x41fa21.byteLength), _0x20b522 = _0x5a3583.getUint32(4), _0x521b44 = {
							'version': _0x41fa21[0],
							'flags': new Uint8Array(_0x41fa21.subarray(1, 4)),
							'sampleToChunks': []
						}, _0x2a03fe;
						for (_0x2a03fe = 8; _0x20b522; _0x2a03fe += 12, _0x20b522--) {
							_0x521b44.sampleToChunks.push({
								'firstChunk': _0x5a3583.getUint32(_0x2a03fe),
								'samplesPerChunk': _0x5a3583.getUint32(_0x2a03fe + 4),
								'sampleDescriptionIndex': _0x5a3583.getUint32(_0x2a03fe + 8)
							});
						}
						return _0x521b44;
					},
					'stsd': function _0x2e5561(_0x3c38b1) {
						return {
							'version': _0x3c38b1[0],
							'flags': new Uint8Array(_0x3c38b1.subarray(1, 4)),
							'sampleDescriptions': _0x5828bb(_0x3c38b1.subarray(8))
						};
					},
					'stsz': function _0x1c5da4(_0x4ae131) {
						var _0x2d30b1 = new DataView(_0x4ae131.buffer, _0x4ae131.byteOffset, _0x4ae131.byteLength), _0xe0e582 = {
							'version': _0x4ae131[0],
							'flags': new Uint8Array(_0x4ae131.subarray(1, 4)),
							'sampleSize': _0x2d30b1.getUint32(4),
							'entries': []
						}, _0x1c63d6;
						for (_0x1c63d6 = 12; _0x1c63d6 < _0x4ae131.byteLength; _0x1c63d6 += 4) {
							_0xe0e582.entries.push(_0x2d30b1.getUint32(_0x1c63d6));
						}
						return _0xe0e582;
					},
					'stts': function _0x4bc86e(_0xd95a43) {
						var _0xfd3056 = new DataView(_0xd95a43.buffer, _0xd95a43.byteOffset, _0xd95a43.byteLength), _0x3adb52 = {
							'version': _0xd95a43[0],
							'flags': new Uint8Array(_0xd95a43.subarray(1, 4)),
							'timeToSamples': []
						}, _0x505073 = _0xfd3056.getUint32(4), _0x622c4b;
						for (_0x622c4b = 8; _0x505073; _0x622c4b += 8, _0x505073--) {
							_0x3adb52.timeToSamples.push({
								'sampleCount': _0xfd3056.getUint32(_0x622c4b),
								'sampleDelta': _0xfd3056.getUint32(_0x622c4b + 4)
							});
						}
						return _0x3adb52;
					},
					'styp': function _0x3ad1be(_0x334c7a) {
						return _0x44cb73.ftyp(_0x334c7a);
					},
					'tfdt': function _0x68222e(_0x2027f6) {
						var _0x29f670 = {
							'version': _0x2027f6[0],
							'flags': new Uint8Array(_0x2027f6.subarray(1, 4)),
							'baseMediaDecodeTime': _0x2027f6[4] << 24 | _0x2027f6[5] << 16 | _0x2027f6[6] << 8 | _0x2027f6[7]
						};
						return _0x29f670.version === 1 && (_0x29f670.baseMediaDecodeTime *= Math.pow(2, 32), _0x29f670.baseMediaDecodeTime += _0x2027f6[8] << 24 | _0x2027f6[9] << 16 | _0x2027f6[10] << 8 | _0x2027f6[11]), _0x29f670;
					},
					'tfhd': function _0x58d2d3(_0x136eae) {
						var _0x5d3a6d = new DataView(_0x136eae.buffer, _0x136eae.byteOffset, _0x136eae.byteLength), _0x4db19f = {
							'version': _0x136eae[0],
							'flags': new Uint8Array(_0x136eae.subarray(1, 4)),
							'trackId': _0x5d3a6d.getUint32(4)
						}, _0x4761d0 = _0x4db19f.flags[2] & 1, _0x18f797 = _0x4db19f.flags[2] & 2, _0x2a2314 = _0x4db19f.flags[2] & 8, _0x5ca372 = _0x4db19f.flags[2] & 16, _0x19aea0 = _0x4db19f.flags[2] & 32, _0x2be463 = _0x4db19f.flags[0] & 65536, _0x5967f5 = _0x4db19f.flags[0] & 131072, _0x3edde1;
						_0x3edde1 = 8;
						_0x4761d0 && (_0x3edde1 += 4, _0x4db19f.baseDataOffset = _0x5d3a6d.getUint32(12), _0x3edde1 += 4);
						_0x18f797 && (_0x4db19f.sampleDescriptionIndex = _0x5d3a6d.getUint32(_0x3edde1), _0x3edde1 += 4);
						_0x2a2314 && (_0x4db19f.defaultSampleDuration = _0x5d3a6d.getUint32(_0x3edde1), _0x3edde1 += 4);
						_0x5ca372 && (_0x4db19f.defaultSampleSize = _0x5d3a6d.getUint32(_0x3edde1), _0x3edde1 += 4);
						if (_0x19aea0) {
							_0x4db19f.defaultSampleFlags = _0x5d3a6d.getUint32(_0x3edde1);
						}
						if (_0x2be463) {
							_0x4db19f.durationIsEmpty = true;
						}
						if (!_0x4761d0 && _0x5967f5) {
							_0x4db19f.baseDataOffsetIsMoof = true;
						}
						return _0x4db19f;
					},
					'tkhd': function _0x1a7a2d(_0x12dc1d) {
						var _0x3a23c8 = new DataView(_0x12dc1d.buffer, _0x12dc1d.byteOffset, _0x12dc1d.byteLength), _0x4307a1 = 4, _0x84f4f7 = {
							'version': _0x3a23c8.getUint8(0),
							'flags': new Uint8Array(_0x12dc1d.subarray(1, 4))
						};
						return _0x84f4f7.version === 1 ? (_0x4307a1 += 4, _0x84f4f7.creationTime = _0xb58340(_0x3a23c8.getUint32(_0x4307a1)), _0x4307a1 += 8, _0x84f4f7.modificationTime = _0xb58340(_0x3a23c8.getUint32(_0x4307a1)), _0x4307a1 += 4, _0x84f4f7.trackId = _0x3a23c8.getUint32(_0x4307a1), _0x4307a1 += 4, _0x4307a1 += 8, _0x84f4f7.duration = _0x3a23c8.getUint32(_0x4307a1)) : (_0x84f4f7.creationTime = _0xb58340(_0x3a23c8.getUint32(_0x4307a1)), _0x4307a1 += 4, _0x84f4f7.modificationTime = _0xb58340(_0x3a23c8.getUint32(_0x4307a1)), _0x4307a1 += 4, _0x84f4f7.trackId = _0x3a23c8.getUint32(_0x4307a1), _0x4307a1 += 4, _0x4307a1 += 4, _0x84f4f7.duration = _0x3a23c8.getUint32(_0x4307a1)), _0x4307a1 += 4, _0x4307a1 += 8, _0x84f4f7.layer = _0x3a23c8.getUint16(_0x4307a1), _0x4307a1 += 2, _0x84f4f7.alternateGroup = _0x3a23c8.getUint16(_0x4307a1), _0x4307a1 += 2, _0x84f4f7.volume = _0x3a23c8.getUint8(_0x4307a1) + _0x3a23c8.getUint8(_0x4307a1 + 1) / 8, _0x4307a1 += 2, _0x4307a1 += 2, _0x84f4f7.matrix = new Uint32Array(_0x12dc1d.subarray(_0x4307a1, _0x4307a1 + 36)), _0x4307a1 += 36, _0x84f4f7.width = _0x3a23c8.getUint16(_0x4307a1) + _0x3a23c8.getUint16(_0x4307a1 + 2) / 16, _0x4307a1 += 4, _0x84f4f7.height = _0x3a23c8.getUint16(_0x4307a1) + _0x3a23c8.getUint16(_0x4307a1 + 2) / 16, _0x84f4f7;
					},
					'traf': function _0x51d8e8(_0x7ba79a) {
						return { 'boxes': _0x5828bb(_0x7ba79a) };
					},
					'trak': function _0x311ed5(_0x4f2c1f) {
						return { 'boxes': _0x5828bb(_0x4f2c1f) };
					},
					'trex': function _0x19438b(_0x141364) {
						var _0x42ec31 = new DataView(_0x141364.buffer, _0x141364.byteOffset, _0x141364.byteLength);
						return {
							'version': _0x141364[0],
							'flags': new Uint8Array(_0x141364.subarray(1, 4)),
							'trackId': _0x42ec31.getUint32(4),
							'defaultSampleDescriptionIndex': _0x42ec31.getUint32(8),
							'defaultSampleDuration': _0x42ec31.getUint32(12),
							'defaultSampleSize': _0x42ec31.getUint32(16),
							'sampleDependsOn': _0x141364[20] & 3,
							'sampleIsDependedOn': (_0x141364[21] & 192) >> 6,
							'sampleHasRedundancy': (_0x141364[21] & 48) >> 4,
							'samplePaddingValue': (_0x141364[21] & 14) >> 1,
							'sampleIsDifferenceSample': !!(_0x141364[21] & 1),
							'sampleDegradationPriority': _0x42ec31.getUint16(22)
						};
					},
					'trun': function _0x3a2fd4(_0x520eb5) {
						var _0x351266 = {
							'version': _0x520eb5[0],
							'flags': new Uint8Array(_0x520eb5.subarray(1, 4)),
							'samples': []
						}, _0x56a2dc = new DataView(_0x520eb5.buffer, _0x520eb5.byteOffset, _0x520eb5.byteLength), _0x488cd7 = _0x351266.flags[2] & 1, _0x4c8779 = _0x351266.flags[2] & 4, _0x5547e8 = _0x351266.flags[1] & 1, _0x2b8302 = _0x351266.flags[1] & 2, _0x3af215 = _0x351266.flags[1] & 4, _0x98d38f = _0x351266.flags[1] & 8, _0x4940f3 = _0x56a2dc.getUint32(4), _0x5d2047 = 8, _0x2c8d82;
						_0x488cd7 && (_0x351266.dataOffset = _0x56a2dc.getInt32(_0x5d2047), _0x5d2047 += 4);
						_0x4c8779 && _0x4940f3 && (_0x2c8d82 = { 'flags': _0x1c384c(_0x520eb5.subarray(_0x5d2047, _0x5d2047 + 4)) }, _0x5d2047 += 4, _0x5547e8 && (_0x2c8d82.duration = _0x56a2dc.getUint32(_0x5d2047), _0x5d2047 += 4), _0x2b8302 && (_0x2c8d82.size = _0x56a2dc.getUint32(_0x5d2047), _0x5d2047 += 4), _0x98d38f && (_0x2c8d82.compositionTimeOffset = _0x56a2dc.getUint32(_0x5d2047), _0x5d2047 += 4), _0x351266.samples.push(_0x2c8d82), _0x4940f3--);
						while (_0x4940f3--) {
							_0x2c8d82 = {};
							_0x5547e8 && (_0x2c8d82.duration = _0x56a2dc.getUint32(_0x5d2047), _0x5d2047 += 4);
							_0x2b8302 && (_0x2c8d82.size = _0x56a2dc.getUint32(_0x5d2047), _0x5d2047 += 4);
							_0x3af215 && (_0x2c8d82.flags = _0x1c384c(_0x520eb5.subarray(_0x5d2047, _0x5d2047 + 4)), _0x5d2047 += 4);
							_0x98d38f && (_0x2c8d82.compositionTimeOffset = _0x56a2dc.getUint32(_0x5d2047), _0x5d2047 += 4);
							_0x351266.samples.push(_0x2c8d82);
						}
						return _0x351266;
					},
					'url ': function _0xd10129(_0x2a5027) {
						return {
							'version': _0x2a5027[0],
							'flags': new Uint8Array(_0x2a5027.subarray(1, 4))
						};
					},
					'vmhd': function _0x318385(_0x3d06c6) {
						var _0x23f63e = new DataView(_0x3d06c6.buffer, _0x3d06c6.byteOffset, _0x3d06c6.byteLength);
						return {
							'version': _0x3d06c6[0],
							'flags': new Uint8Array(_0x3d06c6.subarray(1, 4)),
							'graphicsmode': _0x23f63e.getUint16(4),
							'opcolor': new Uint16Array([
								_0x23f63e.getUint16(6),
								_0x23f63e.getUint16(8),
								_0x23f63e.getUint16(10)
							])
						};
					}
				};
				_0x5828bb = function _0x5256c4(_0xd5004e) {
					var _0x5a7ae3 = 0, _0x736426 = [], _0x5c591b, _0xf6dc07, _0x1d7ff7, _0x5b2004, _0x39dd76, _0x5406a7 = new ArrayBuffer(_0xd5004e.length), _0x430eea = new Uint8Array(_0x5406a7);
					for (var _0xe81903 = 0; _0xe81903 < _0xd5004e.length; ++_0xe81903) {
						_0x430eea[_0xe81903] = _0xd5004e[_0xe81903];
					}
					_0x5c591b = new DataView(_0x5406a7);
					while (_0x5a7ae3 < _0xd5004e.byteLength) {
						_0xf6dc07 = _0x5c591b.getUint32(_0x5a7ae3);
						_0x1d7ff7 = _0x5b4d68(_0xd5004e.subarray(_0x5a7ae3 + 4, _0x5a7ae3 + 8));
						_0x5b2004 = _0xf6dc07 > 1 ? _0x5a7ae3 + _0xf6dc07 : _0xd5004e.byteLength;
						_0x39dd76 = (_0x44cb73[_0x1d7ff7] || function (_0x268864) {
							return { 'data': _0x268864 };
						})(_0xd5004e.subarray(_0x5a7ae3 + 8, _0x5b2004));
						_0x39dd76.size = _0xf6dc07;
						_0x39dd76.type = _0x1d7ff7;
						_0x736426.push(_0x39dd76);
						_0x5a7ae3 = _0x5b2004;
					}
					return _0x736426;
				};
				_0x1ad1f7 = function _0x7df7b7(_0x31b15a, _0x510652) {
					var _0x260026;
					return _0x510652 = _0x510652 || 0, _0x260026 = new Array(_0x510652 * 2 + 1).join(' '), _0x31b15a.map(function (_0x12300b, _0x22b12e) {
						return _0x260026 + _0x12300b.type + '\n' + Object.keys(_0x12300b).filter(function (_0x20809b) {
							return _0x20809b !== 'type' && _0x20809b !== 'boxes';
						}).map(function (_0x37d02b) {
							var _0x1b8dc9 = _0x260026 + '  ' + _0x37d02b + ': ', _0x4d1c7d = _0x12300b[_0x37d02b];
							if (_0x4d1c7d instanceof Uint8Array || _0x4d1c7d instanceof Uint32Array) {
								var _0x232d6a = Array.prototype.slice.call(new Uint8Array(_0x4d1c7d.buffer, _0x4d1c7d.byteOffset, _0x4d1c7d.byteLength)).map(function (_0x36f4c2) {
									return ' ' + ('00' + _0x36f4c2.toString(16)).slice(-2);
								}).join('').match(/.{1,24}/g);
								if (!_0x232d6a) {
									return _0x1b8dc9 + '<>';
								}
								if (_0x232d6a.length === 1) {
									return _0x1b8dc9 + '<' + _0x232d6a.join('').slice(1) + '>';
								}
								return _0x1b8dc9 + '<\n' + _0x232d6a.map(function (_0x4cb3b8) {
									return _0x260026 + '  ' + _0x4cb3b8;
								}).join('\n') + '\n' + _0x260026 + '  >';
							}
							return _0x1b8dc9 + JSON.stringify(_0x4d1c7d, null, 2).split('\n').map(function (_0xb8212f, _0x58fc61) {
								if (_0x58fc61 === 0) {
									return _0xb8212f;
								}
								return _0x260026 + '  ' + _0xb8212f;
							}).join('\n');
						}).join('\n') + (_0x12300b.boxes ? '\n' + _0x1ad1f7(_0x12300b.boxes, _0x510652 + 1) : '');
					}).join('\n');
				};
				var _0x353aaa = {
					'inspect': _0x5828bb,
					'textify': _0x1ad1f7,
					'parseTfdt': _0x44cb73.tfdt,
					'parseHdlr': _0x44cb73.hdlr,
					'parseTfhd': _0x44cb73.tfhd,
					'parseTrun': _0x44cb73.trun
				}, _0x36ac16 = _0x89c2b0.discardEmulationPreventionBytes, _0x5ee4d0 = _0x1701d6.CaptionStream, _0x5c4b0e = function _0x17aa1c(_0x285eef, _0x2e8054) {
					var _0x577cde = _0x285eef;
					for (var _0xee73c4 = 0; _0xee73c4 < _0x2e8054.length; _0xee73c4++) {
						var _0x3b5787 = _0x2e8054[_0xee73c4];
						if (_0x577cde < _0x3b5787.size) {
							return _0x3b5787;
						}
						_0x577cde -= _0x3b5787.size;
					}
					return null;
				}, _0x5a01f4 = function _0x43959e(_0x4ccea9, _0x362e9e, _0x4d9760) {
					var _0x42b579 = new DataView(_0x4ccea9.buffer, _0x4ccea9.byteOffset, _0x4ccea9.byteLength), _0x5b05ce = [], _0x4d0a94, _0x25d1d1, _0x2c9182, _0x4ca8b2;
					for (_0x25d1d1 = 0; _0x25d1d1 + 4 < _0x4ccea9.length; _0x25d1d1 += _0x2c9182) {
						_0x2c9182 = _0x42b579.getUint32(_0x25d1d1);
						_0x25d1d1 += 4;
						if (_0x2c9182 <= 0) {
							continue;
						}
						switch (_0x4ccea9[_0x25d1d1] & 31) {
							case 6:
								var _0x1314d7 = _0x4ccea9.subarray(_0x25d1d1 + 1, _0x25d1d1 + 1 + _0x2c9182), _0x43705c = _0x5c4b0e(_0x25d1d1, _0x362e9e);
								_0x4d0a94 = {
									'nalUnitType': 'sei_rbsp',
									'size': _0x2c9182,
									'data': _0x1314d7,
									'escapedRBSP': _0x36ac16(_0x1314d7),
									'trackId': _0x4d9760
								};
								_0x43705c ? (_0x4d0a94.pts = _0x43705c.pts, _0x4d0a94.dts = _0x43705c.dts, _0x4ca8b2 = _0x43705c) : (_0x4d0a94.pts = _0x4ca8b2.pts, _0x4d0a94.dts = _0x4ca8b2.dts);
								_0x5b05ce.push(_0x4d0a94);
								break;
							default:
								break;
						}
					}
					return _0x5b05ce;
				}, _0x89e61e = function _0x3b0634(_0x3b78b4, _0x3a4ac1, _0x5139a2) {
					var _0xc4e617 = _0x3a4ac1, _0x44dd68 = _0x5139a2.defaultSampleDuration || 0, _0x108f95 = _0x5139a2.defaultSampleSize || 0, _0x2475a8 = _0x5139a2.trackId, _0x3020d1 = [];
					return _0x3b78b4.forEach(function (_0x19ddee) {
						var _0x1b0d58 = _0x353aaa.parseTrun(_0x19ddee), _0x19bb2b = _0x1b0d58.samples;
						_0x19bb2b.forEach(function (_0x3cb6ef) {
							if (_0x3cb6ef.duration === undefined) {
								_0x3cb6ef.duration = _0x44dd68;
							}
							if (_0x3cb6ef.size === undefined) {
								_0x3cb6ef.size = _0x108f95;
							}
							_0x3cb6ef.trackId = _0x2475a8;
							_0x3cb6ef.dts = _0xc4e617;
							if (_0x3cb6ef.compositionTimeOffset === undefined) {
								_0x3cb6ef.compositionTimeOffset = 0;
							}
							_0x3cb6ef.pts = _0xc4e617 + _0x3cb6ef.compositionTimeOffset;
							_0xc4e617 += _0x3cb6ef.duration;
						});
						_0x3020d1 = _0x3020d1.concat(_0x19bb2b);
					}), _0x3020d1;
				}, _0x30b33c = function _0x5eb943(_0x54132f, _0x2b081d) {
					var _0x2bca33 = _0x4b4208.findBox(_0x54132f, [
						'moof',
						'traf'
					]), _0x20f694 = _0x4b4208.findBox(_0x54132f, ['mdat']), _0x4a2f69 = {
						_0x54cc63: [],
						_0x54cc63: _0x4a2f69[_0x54cc63].concat(_0x5a9565)
					}, _0x37d682 = [];
					return _0x20f694.forEach(function (_0x197333, _0x1ac875) {
						var _0xef3698 = _0x2bca33[_0x1ac875];
						_0x37d682.push({
							'mdat': _0x197333,
							'traf': _0xef3698
						});
					}), _0x37d682.forEach(function (_0x3a2ada) {
						var _0x2de8bc = _0x3a2ada.mdat, _0x550ab4 = _0x3a2ada.traf, _0x3665ad = _0x4b4208.findBox(_0x550ab4, ['tfhd']), _0x5d5bec = _0x353aaa.parseTfhd(_0x3665ad[0]), _0x54cc63 = _0x5d5bec.trackId, _0x397bd2 = _0x4b4208.findBox(_0x550ab4, ['tfdt']), _0x5c8029 = _0x397bd2.length > 0 ? _0x353aaa.parseTfdt(_0x397bd2[0]).baseMediaDecodeTime : 0, _0x528867 = _0x4b4208.findBox(_0x550ab4, ['trun']), _0x570d44, _0x5a9565;
						if (_0x2b081d === _0x54cc63 && _0x528867.length > 0) {
							_0x570d44 = _0x89e61e(_0x528867, _0x5c8029, _0x5d5bec);
							_0x5a9565 = _0x5a01f4(_0x2de8bc, _0x570d44, _0x54cc63);
							if (!_0x4a2f69[_0x54cc63]) {
							}
						}
					}), _0x4a2f69;
				}, _0x199a99 = function _0x4278f1(_0x2e21be, _0x4bfd93, _0x3bad8f) {
					var _0x38d376;
					if (!_0x4bfd93) {
						return null;
					}
					return _0x38d376 = _0x30b33c(_0x2e21be, _0x4bfd93), {
						'seiNals': _0x38d376[_0x4bfd93],
						'timescale': _0x3bad8f
					};
				}, _0x5a0aa4 = function _0x77e4b() {
					var _0x2a3086 = false, _0x1d26f0, _0x37bd91, _0x588994, _0x164026, _0x2ed075;
					this.isInitialized = function () {
						return _0x2a3086;
					};
					this.init = function () {
						_0x1d26f0 = new _0x5ee4d0();
						_0x2a3086 = true;
						_0x1d26f0.on('data', function (_0x1465c4) {
							_0x1465c4.startTime = _0x1465c4.startPts / _0x164026;
							_0x1465c4.endTime = _0x1465c4.endPts / _0x164026;
							_0x2ed075.captions.push(_0x1465c4);
							_0x2ed075.captionStreams[_0x1465c4.stream] = true;
						});
					};
					this.isNewInit = function (_0x2e0b99, _0x3ff54b) {
						if (_0x2e0b99 && _0x2e0b99.length === 0 || _0x3ff54b && (typeof _0x3ff54b === 'undefined' ? 'undefined' : _0x413e18(_0x3ff54b)) === 'object' && Object.keys(_0x3ff54b).length === 0) {
							return false;
						}
						return _0x588994 !== _0x2e0b99[0] || _0x164026 !== _0x3ff54b[_0x588994];
					};
					this.parse = function (_0x20f0e1, _0x52f1a0, _0x2c7d0) {
						var _0x369691;
						if (!this.isInitialized()) {
							return null;
						} else {
							if (!_0x52f1a0 || !_0x2c7d0) {
								return null;
							} else {
								if (this.isNewInit(_0x52f1a0, _0x2c7d0)) {
									_0x588994 = _0x52f1a0[0];
									_0x164026 = _0x2c7d0[_0x588994];
								} else {
									if (!_0x588994 || !_0x164026) {
										return _0x37bd91.push(_0x20f0e1), null;
									}
								}
							}
						}
						while (_0x37bd91.length > 0) {
							var _0x4057cc = _0x37bd91.shift();
							this.parse(_0x4057cc, _0x52f1a0, _0x2c7d0);
						}
						_0x369691 = _0x199a99(_0x20f0e1, _0x588994, _0x164026);
						if (_0x369691 === null || !_0x369691.seiNals) {
							return null;
						}
						return this.pushNals(_0x369691.seiNals), this.flushStream(), _0x2ed075;
					};
					this.pushNals = function (_0x196a2c) {
						if (!this.isInitialized() || !_0x196a2c || _0x196a2c.length === 0) {
							return null;
						}
						_0x196a2c.forEach(function (_0x3d6639) {
							_0x1d26f0.push(_0x3d6639);
						});
					};
					this.flushStream = function () {
						if (!this.isInitialized()) {
							return null;
						}
						_0x1d26f0.flush();
					};
					this.clearParsedCaptions = function () {
						_0x2ed075.captions = [];
						_0x2ed075.captionStreams = {};
					};
					this.resetCaptionStream = function () {
						if (!this.isInitialized()) {
							return null;
						}
						_0x1d26f0.reset();
					};
					this.clearAllCaptions = function () {
						this.clearParsedCaptions();
						this.resetCaptionStream();
					};
					this.reset = function () {
						_0x37bd91 = [];
						_0x588994 = null;
						_0x164026 = null;
						if (!_0x2ed075) {
							_0x2ed075 = {
								'captions': [],
								'captionStreams': {}
							};
						} else {
							this.clearParsedCaptions();
						}
						this.resetCaptionStream();
					};
					this.reset();
				}, _0x5eb87f = _0x5a0aa4, _0x4cfda7 = {
					'generator': _0xbb0259,
					'probe': _0x4b4208,
					'Transmuxer': _0x5af126.Transmuxer,
					'AudioSegmentStream': _0x5af126.AudioSegmentStream,
					'VideoSegmentStream': _0x5af126.VideoSegmentStream,
					'CaptionParser': _0x5eb87f
				}, _0x57c2f6 = function _0x3c953d(_0x3ebb94, _0x53f72f) {
					if (!(_0x3ebb94 instanceof _0x53f72f)) {
						throw new TypeError('Cannot call a class as a function');
					}
				}, _0x43bb96 = (function () {
					function _0x33fa13(_0x53583a, _0x22c4cf) {
						for (var _0x48e9bc = 0; _0x48e9bc < _0x22c4cf.length; _0x48e9bc++) {
							var _0x3cd475 = _0x22c4cf[_0x48e9bc];
							_0x3cd475.enumerable = _0x3cd475.enumerable || false;
							_0x3cd475.configurable = true;
							if ('value' in _0x3cd475) {
								_0x3cd475.writable = true;
							}
							Object.defineProperty(_0x53583a, _0x3cd475.key, _0x3cd475);
						}
					}
					return function (_0x3358b2, _0x5bd733, _0x37da84) {
						if (_0x5bd733) {
							_0x33fa13(_0x3358b2.prototype, _0x5bd733);
						}
						if (_0x37da84) {
							_0x33fa13(_0x3358b2, _0x37da84);
						}
						return _0x3358b2;
					};
				}()), _0x3c83a1 = function _0x469634(_0x783f9a, _0x89639a) {
					_0x89639a.on('data', function (_0x264732) {
						var _0x51220b = _0x264732.initSegment;
						_0x264732.initSegment = {
							'data': _0x51220b.buffer,
							'byteOffset': _0x51220b.byteOffset,
							'byteLength': _0x51220b.byteLength
						};
						var _0x56fa19 = _0x264732.data;
						_0x264732.data = _0x56fa19.buffer;
						_0x783f9a.postMessage({
							'action': 'data',
							'segment': _0x264732,
							'byteOffset': _0x56fa19.byteOffset,
							'byteLength': _0x56fa19.byteLength
						}, [_0x264732.data]);
					});
					if (_0x89639a.captionStream) {
						_0x89639a.captionStream.on('data', function (_0x4b425c) {
							_0x783f9a.postMessage({
								'action': 'caption',
								'data': _0x4b425c
							});
						});
					}
					_0x89639a.on('done', function (_0x162152) {
						_0x783f9a.postMessage({ 'action': 'done' });
					});
					_0x89639a.on('gopInfo', function (_0x4cdff7) {
						_0x783f9a.postMessage({
							'action': 'gopInfo',
							'gopInfo': _0x4cdff7
						});
					});
				}, _0x278957 = (function () {
					function _0x1bf0ca(_0x3ce30b, _0x9792d7) {
						_0x57c2f6(this, _0x1bf0ca);
						this.options = _0x9792d7 || {};
						this.self = _0x3ce30b;
						this.init();
					}
					return _0x43bb96(_0x1bf0ca, [
						{
							'key': 'init',
							'value': function _0x4671af() {
								if (this.transmuxer) {
									this.transmuxer.dispose();
								}
								this.transmuxer = new _0x4cfda7.Transmuxer(this.options);
								_0x3c83a1(this.self, this.transmuxer);
							}
						},
						{
							'key': 'push',
							'value': function _0x4baf6a(_0x5e30f0) {
								var _0x474d13 = new Uint8Array(_0x5e30f0.data, _0x5e30f0.byteOffset, _0x5e30f0.byteLength);
								this.transmuxer.push(_0x474d13);
							}
						},
						{
							'key': 'reset',
							'value': function _0x15916a() {
								this.init();
							}
						},
						{
							'key': 'setTimestampOffset',
							'value': function _0x3d781f(_0x4b153f) {
								var _0x190067 = _0x4b153f.timestampOffset || 0;
								this.transmuxer.setBaseMediaDecodeTime(Math.round(_0x190067 * 90000));
							}
						},
						{
							'key': 'setAudioAppendStart',
							'value': function _0x4392c0(_0x56ce91) {
								this.transmuxer.setAudioAppendStart(Math.ceil(_0x56ce91.appendStart * 90000));
							}
						},
						{
							'key': 'flush',
							'value': function _0x46bb08(_0x28d862) {
								this.transmuxer.flush();
							}
						},
						{
							'key': 'resetCaptions',
							'value': function _0x5ef4bd() {
								this.transmuxer.resetCaptions();
							}
						},
						{
							'key': 'alignGopsWith',
							'value': function _0x5333fe(_0x55a304) {
								this.transmuxer.alignGopsWith(_0x55a304.gopsToAlignWith.slice());
							}
						}
					]), _0x1bf0ca;
				}()), _0x47baeb = function _0x54b493(_0x53bab6) {
					_0x53bab6.onmessage = function (_0x270c6d) {
						if (_0x270c6d.data.action === 'init' && _0x270c6d.data.options) {
							this.messageHandlers = new _0x278957(_0x53bab6, _0x270c6d.data.options);
							return;
						}
						if (!this.messageHandlers) {
							this.messageHandlers = new _0x278957(_0x53bab6);
						}
						if (_0x270c6d.data && _0x270c6d.data.action && _0x270c6d.data.action !== 'init') {
							if (this.messageHandlers[_0x270c6d.data.action]) {
								this.messageHandlers[_0x270c6d.data.action](_0x270c6d.data);
							}
						}
					};
				}, _0x450954 = new _0x47baeb(_0x5ce474);
				return _0x450954;
			}());
		}), _0x3bd322 = {
			'videoCodec': 'avc1',
			'videoObjectTypeIndicator': '.4d400d',
			'audioProfile': '2'
		}, _0x108532 = function _0x556d8f(_0x4b9612) {
			return _0x4b9612.map(function (_0x561ade) {
				return _0x561ade.replace(/avc1\.(\d+)\.(\d+)/i, function (_0x3f328c, _0x320f48, _0x2dd3a8) {
					var _0x25d64c = ('00' + Number(_0x320f48).toString(16)).slice(-2), _0x341cab = ('00' + Number(_0x2dd3a8).toString(16)).slice(-2);
					return 'avc1.' + _0x25d64c + '00' + _0x341cab;
				});
			});
		}, _0x4e9622 = function _0x1c6b1c() {
			var _0x47a70e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '', _0x5a05f0 = void 0;
			return 0 = _0x47a70e.split(',').length, _0x2d3fb0.codecCount = _0x2d3fb0.codecCount || 2, _0x5a05f0 = /(^|\s|,)+(avc[13])([^ ,]*)/i.exec(_0x47a70e), _0x5a05f0 && (_0x2d3fb0.videoCodec = _0x5a05f0[2], _0x2d3fb0.videoObjectTypeIndicator = _0x5a05f0[3]), _0x2d3fb0.audioProfile = /(^|\s|,)+mp4a.[0-9A-Fa-f]+\.([0-9A-Fa-f]+)/i.exec(_0x47a70e), _0x2d3fb0.audioProfile = _0x2d3fb0.audioProfile && _0x2d3fb0.audioProfile[2], _0x2d3fb0;
		}, _0x5bcd96 = function _0x3ae4ef(_0x313ff0) {
			return _0x313ff0.replace(/avc1\.(\d+)\.(\d+)/i, function (_0x2502aa) {
				return _0x108532([_0x2502aa])[0];
			});
		}, _0x2f970b = function _0x2b24c7(_0x1c4ce9, _0x591397, _0x341647) {
			return _0x1c4ce9 + '/' + _0x591397 + '; codecs="' + _0x341647.filter(function (_0x1cc1b8) {
				return !!_0x1cc1b8;
			}).join(', ') + '"';
		}, _0x2e2ce7 = function _0x3753cd(_0x56e6f4) {
			if (_0x56e6f4.segments && _0x56e6f4.segments.length && _0x56e6f4.segments[0].map) {
				return 'mp4';
			}
			return 'mp2t';
		}, _0x41282b = function _0x41950b(_0x41aab3) {
			var _0x22b3c1 = _0x41aab3.attributes || {};
			if (_0x22b3c1.CODECS) {
				return _0x4e9622(_0x22b3c1.CODECS);
			}
			return _0x3bd322;
		}, _0x4d6931 = function _0x376687(_0x48118d, _0xed2978) {
			if (!_0x48118d.mediaGroups.AUDIO || !_0xed2978) {
				return null;
			}
			var _0x556bb5 = _0x48118d.mediaGroups.AUDIO[_0xed2978];
			if (!_0x556bb5) {
				return null;
			}
			for (var _0x19fa8e in _0x556bb5) {
				var _0xb2b12d = _0x556bb5[_0x19fa8e];
				if (_0xb2b12d.default && _0xb2b12d.playlists) {
					return _0x4e9622(_0xb2b12d.playlists[0].attributes.CODECS).audioProfile;
				}
			}
			return null;
		}, _0x4d18ab = function _0x412597(_0x30c449, _0x3a559a) {
			var _0x42489a = _0x2e2ce7(_0x3a559a), _0x3345fb = _0x41282b(_0x3a559a), _0x364212 = _0x3a559a.attributes || {}, _0x1989ff = true, _0x31671f = false;
			if (!_0x3a559a) {
				return [];
			}
			if (_0x30c449.mediaGroups.AUDIO && _0x364212.AUDIO) {
				var _0x352fc3 = _0x30c449.mediaGroups.AUDIO[_0x364212.AUDIO];
				if (_0x352fc3) {
					_0x31671f = true;
					_0x1989ff = false;
					for (var _0x34245c in _0x352fc3)
						if (!_0x352fc3[_0x34245c].uri && !_0x352fc3[_0x34245c].playlists) {
							_0x1989ff = true;
							break;
						}
				}
			}
			if (_0x31671f && !_0x3345fb.audioProfile) {
				if (!_0x1989ff) {
					_0x3345fb.audioProfile = _0x4d6931(_0x30c449, _0x364212.AUDIO);
				}
				!_0x3345fb.audioProfile && (_0x465e34.log.warn('Multiple audio tracks present but no audio codec string is specified. Attempting to use the default audio codec (mp4a.40.2)'), _0x3345fb.audioProfile = _0x3bd322.audioProfile);
			}
			var _0x1c98e4 = {
				video: '' + _0x3345fb.videoCodec + _0x3345fb.videoObjectTypeIndicator,
				audio: 'mp4a.40.' + _0x3345fb.audioProfile
			};
			if (_0x3345fb.videoCodec) {
			}
			if (_0x3345fb.audioProfile) {
			}
			var _0x5657d4 = _0x2f970b('audio', _0x42489a, [_0x1c98e4.audio]), _0x28de87 = _0x2f970b('video', _0x42489a, [_0x1c98e4.video]), _0x4511d2 = _0x2f970b('video', _0x42489a, [
				_0x1c98e4.video,
				_0x1c98e4.audio
			]);
			if (_0x31671f) {
				if (!_0x1989ff && _0x1c98e4.video) {
					return [
						_0x28de87,
						_0x5657d4
					];
				}
				if (!_0x1989ff && !_0x1c98e4.video) {
					return [
						_0x5657d4,
						_0x5657d4
					];
				}
				return [
					_0x4511d2,
					_0x5657d4
				];
			}
			if (!_0x1c98e4.video) {
				return [_0x5657d4];
			}
			return [_0x4511d2];
		}, _0x4a2904 = function _0x1b39ac(_0x4a2eb6) {
			var _0x8c297c = {
				'type': '',
				'parameters': {}
			}, _0x4bf23f = _0x4a2eb6.trim().split(';');
			return _0x8c297c.type = _0x4bf23f.shift().trim(), _0x4bf23f.forEach(function (_0x5f586d) {
				var _0x3aa62c = _0x5f586d.trim().split('=');
				if (_0x3aa62c.length > 1) {
					var _0x36f13d = _0x3aa62c[0].replace(/"/g, '').trim(), _0x136e91 = _0x3aa62c[1].replace(/"/g, '').trim();
					_0x8c297c.parameters[_0x36f13d] = _0x136e91;
				}
			}), _0x8c297c;
		}, _0x3f4e2e = function _0x1e32e7(_0xaa3cc0) {
			return /mp4a\.\d+.\d+/i.test(_0xaa3cc0);
		}, _0x197edd = function _0x2ed137(_0x4adf3b) {
			return /avc1\.[\da-f]+/i.test(_0x4adf3b);
		}, _0x8b5d9e = function _0x162fbf(_0x6f5ad4, _0x14b714, _0x59ecbe) {
			if (typeof _0x14b714 === 'undefined' || _0x14b714 === null || !_0x6f5ad4.length) {
				return [];
			}
			var _0x543212 = Math.ceil((_0x14b714 - _0x59ecbe + 3) * 90000), _0x3d6d8e = void 0;
			for (_0x3d6d8e = 0; _0x3d6d8e < _0x6f5ad4.length; _0x3d6d8e++) {
				if (_0x6f5ad4[_0x3d6d8e].pts > _0x543212) {
					break;
				}
			}
			return _0x6f5ad4.slice(_0x3d6d8e);
		}, _0x32d76d = function _0x37fccc(_0x2ecef3, _0x2733f1, _0x47f62e) {
			if (!_0x2733f1.length) {
				return _0x2ecef3;
			}
			if (_0x47f62e) {
				return _0x2733f1.slice();
			}
			var _0x24ba62 = _0x2733f1[0].pts, _0x5699ba = 0;
			for (_0x5699ba; _0x5699ba < _0x2ecef3.length; _0x5699ba++) {
				if (_0x2ecef3[_0x5699ba].pts >= _0x24ba62) {
					break;
				}
			}
			return _0x2ecef3.slice(0, _0x5699ba).concat(_0x2733f1);
		}, _0x1ff04e = function _0x30186f(_0x393c88, _0x483b49, _0x44da74, _0x416c8a) {
			var _0x3756f5 = Math.ceil((_0x483b49 - _0x416c8a) * 90000), _0x392f86 = Math.ceil((_0x44da74 - _0x416c8a) * 90000), _0x16e8a9 = _0x393c88.slice(), _0x12dfba = _0x393c88.length;
			while (_0x12dfba--) {
				if (_0x393c88[_0x12dfba].pts <= _0x392f86) {
					break;
				}
			}
			if (_0x12dfba === -1) {
				return _0x16e8a9;
			}
			var _0x377f13 = _0x12dfba + 1;
			while (_0x377f13--) {
				if (_0x393c88[_0x377f13].pts <= _0x3756f5) {
					break;
				}
			}
			return _0x377f13 = Math.max(_0x377f13, 0), _0x16e8a9.splice(_0x377f13, _0x12dfba - _0x377f13 + 1), _0x16e8a9;
		}, _0x2096ed = function _0xdac056(_0x377dd0, _0x264a09, _0x21703a) {
			var _0x26bb07 = null, _0x264c95 = null, _0x399b59 = 0, _0x2cced4 = [], _0x2e4ebe = [];
			if (!_0x377dd0 && !_0x264a09) {
				return _0x465e34.createTimeRange();
			}
			if (!_0x377dd0) {
				return _0x264a09.buffered;
			}
			if (!_0x264a09) {
				return _0x377dd0.buffered;
			}
			if (_0x21703a) {
				return _0x377dd0.buffered;
			}
			if (_0x377dd0.buffered.length === 0 && _0x264a09.buffered.length === 0) {
				return _0x465e34.createTimeRange();
			}
			var _0x5f1613 = _0x377dd0.buffered, _0x3c7b40 = _0x264a09.buffered, _0x418deb = _0x5f1613.length;
			while (_0x418deb--) {
				_0x2cced4.push({
					'time': _0x5f1613.start(_0x418deb),
					'type': 'start'
				});
				_0x2cced4.push({
					'time': _0x5f1613.end(_0x418deb),
					'type': 'end'
				});
			}
			_0x418deb = _0x3c7b40.length;
			while (_0x418deb--) {
				_0x2cced4.push({
					'time': _0x3c7b40.start(_0x418deb),
					'type': 'start'
				});
				_0x2cced4.push({
					'time': _0x3c7b40.end(_0x418deb),
					'type': 'end'
				});
			}
			_0x2cced4.sort(function (_0x458156, _0x1299cd) {
				return _0x458156.time - _0x1299cd.time;
			});
			for (_0x418deb = 0; _0x418deb < _0x2cced4.length; _0x418deb++) {
				if (_0x2cced4[_0x418deb].type === 'start') {
					_0x399b59++;
					if (_0x399b59 === 2) {
						_0x26bb07 = _0x2cced4[_0x418deb].time;
					}
				} else {
					if (_0x2cced4[_0x418deb].type === 'end') {
						_0x399b59--;
						if (_0x399b59 === 1) {
							_0x264c95 = _0x2cced4[_0x418deb].time;
						}
					}
				}
				_0x26bb07 !== null && _0x264c95 !== null && (_0x2e4ebe.push([
					_0x26bb07,
					_0x264c95
				]), _0x26bb07 = null, _0x264c95 = null);
			}
			return _0x465e34.createTimeRanges(_0x2e4ebe);
		}, _0x37f7dd = function _0x55046d(_0x4d0de5, _0x5c9d15) {
			var _0x5539f1 = _0x4d0de5.addSourceBuffer(_0x5c9d15), _0x50319c = Object.create(null);
			_0x50319c.updating = false;
			_0x50319c.realBuffer_ = _0x5539f1;
			var _0x5647b5 = function _0x5c5637(_0x8568cc) {
				if (typeof _0x5539f1[_0x8568cc] === 'function') {
					_0x50319c[_0x8568cc] = function () {
						return _0x5539f1[_0x8568cc].apply(_0x5539f1, arguments);
					};
				} else {
					if (typeof _0x50319c[_0x8568cc] === 'undefined') {
						Object.defineProperty(_0x50319c, _0x8568cc, {
							'get': function _0x2d3274() {
								return _0x5539f1[_0x8568cc];
							},
							'set': function _0x2d35b8(_0x2b9212) {
								return _0x5539f1[_0x8568cc] = _0x2b9212;
							}
						});
					}
				}
			};
			for (var _0x477828 in _0x5539f1)
				_0x5647b5(_0x477828);
			return _0x50319c;
		}, _0xdbc9cf = function (_0x175390) {
			_0x4b5e39(_0x48bee4, _0x175390);
			function _0x48bee4(_0x4adab3, _0x3f8936) {
				_0x43a5ef(this, _0x48bee4);
				var _0x5adac7 = _0xb2fb9f(this, (_0x48bee4['__proto__'] || Object.getPrototypeOf(_0x48bee4)).call(this, _0x465e34.EventTarget));
				_0x5adac7.timestampOffset_ = 0;
				_0x5adac7.pendingBuffers_ = [];
				_0x5adac7.bufferUpdating_ = false;
				_0x5adac7.mediaSource_ = _0x4adab3;
				_0x5adac7.codecs_ = _0x3f8936;
				_0x5adac7.audioCodec_ = null;
				_0x5adac7.videoCodec_ = null;
				_0x5adac7.audioDisabled_ = false;
				_0x5adac7.appendAudioInitSegment_ = true;
				_0x5adac7.gopBuffer_ = [];
				_0x5adac7.timeMapping_ = 0;
				_0x5adac7.safeAppend_ = _0x465e34.browser.IE_VERSION >= 11;
				var _0x321469 = {
					'remux': false,
					'alignGopsAtEnd': _0x5adac7.safeAppend_
				};
				return _0x5adac7.codecs_.forEach(function (_0x4418a4) {
					if (_0x3f4e2e(_0x4418a4)) {
						_0x5adac7.audioCodec_ = _0x4418a4;
					} else {
						if (_0x197edd(_0x4418a4)) {
							_0x5adac7.videoCodec_ = _0x4418a4;
						}
					}
				}), _0x5adac7.transmuxer_ = new _0x1bfd01(), _0x5adac7.transmuxer_.postMessage({
					'action': 'init',
					'options': _0x321469
				}), _0x5adac7.transmuxer_.onmessage = function (_0x5aa783) {
					if (_0x5aa783.data.action === 'data') {
						return _0x5adac7.data_(_0x5aa783);
					}
					if (_0x5aa783.data.action === 'done') {
						return _0x5adac7.done_(_0x5aa783);
					}
					if (_0x5aa783.data.action === 'gopInfo') {
						return _0x5adac7.appendGopInfo_(_0x5aa783);
					}
				}, Object.defineProperty(_0x5adac7, 'timestampOffset', {
					'get': function _0x4580fa() {
						return this.timestampOffset_;
					},
					'set': function _0x37560e(_0x5ef52f) {
						typeof _0x5ef52f === 'number' && _0x5ef52f >= 0 && (this.timestampOffset_ = _0x5ef52f, this.appendAudioInitSegment_ = true, this.gopBuffer_.length = 0, this.timeMapping_ = 0, this.transmuxer_.postMessage({
							'action': 'setTimestampOffset',
							'timestampOffset': _0x5ef52f
						}));
					}
				}), Object.defineProperty(_0x5adac7, 'appendWindowStart', {
					'get': function _0xf4bdd0() {
						return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;
					},
					'set': function _0x2a92f6(_0x783ae5) {
						if (this.videoBuffer_) {
							this.videoBuffer_.appendWindowStart = _0x783ae5;
						}
						if (this.audioBuffer_) {
							this.audioBuffer_.appendWindowStart = _0x783ae5;
						}
					}
				}), Object.defineProperty(_0x5adac7, 'updating', {
					'get': function _0x2270d1() {
						return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);
					}
				}), Object.defineProperty(_0x5adac7, 'buffered', {
					'get': function _0x284e25() {
						return _0x2096ed(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);
					}
				}), _0x5adac7;
			}
			return _0x470055(_0x48bee4, [
				{
					'key': 'data_',
					'value': function _0xf328a5(_0x25f9c8) {
						var _0x40ba2d = _0x25f9c8.data.segment;
						_0x40ba2d.data = new Uint8Array(_0x40ba2d.data, _0x25f9c8.data.byteOffset, _0x25f9c8.data.byteLength);
						_0x40ba2d.initSegment = new Uint8Array(_0x40ba2d.initSegment.data, _0x40ba2d.initSegment.byteOffset, _0x40ba2d.initSegment.byteLength);
						_0x3b6bd7(this, this.mediaSource_, _0x40ba2d);
						this.pendingBuffers_.push(_0x40ba2d);
						return;
					}
				},
				{
					'key': 'done_',
					'value': function _0x59dbb6(_0x2dca96) {
						if (this.mediaSource_.readyState === 'closed') {
							this.pendingBuffers_.length = 0;
							return;
						}
						this.processPendingSegments_();
						return;
					}
				},
				{
					'key': 'createRealSourceBuffers_',
					'value': function _0x124bbb() {
						var _0x8c8b2 = this, _0x396fd9 = [
							'audio',
							'video'
						];
						_0x396fd9.forEach(function (_0x12069d) {
							if (!_0x8c8b2[_0x12069d + 'Codec_']) {
								return;
							}
							if (_0x8c8b2[_0x12069d + 'Buffer_']) {
								return;
							}
							var _0x4bbfdc = null;
							if (_0x8c8b2.mediaSource_[_0x12069d + 'Buffer_']) {
								_0x4bbfdc = _0x8c8b2.mediaSource_[_0x12069d + 'Buffer_'];
								_0x4bbfdc.updating = false;
							} else {
								var _0x142b30 = _0x12069d + 'Codec_', _0x15c1c4 = _0x12069d + '/mp4;codecs="' + _0x8c8b2[_0x142b30] + '"';
								_0x4bbfdc = _0x37f7dd(_0x8c8b2.mediaSource_.nativeMediaSource_, _0x15c1c4);
								_0x8c8b2.mediaSource_[_0x12069d + 'Buffer_'] = _0x4bbfdc;
							}
							_0x8c8b2[_0x12069d + 'Buffer_'] = _0x4bbfdc;
							[
								'update',
								'updatestart',
								'updateend'
							].forEach(function (_0x4ecdfc) {
								_0x4bbfdc.addEventListener(_0x4ecdfc, function () {
									if (_0x12069d === 'audio' && _0x8c8b2.audioDisabled_) {
										return;
									}
									if (_0x4ecdfc === 'updateend') {
										_0x8c8b2[_0x12069d + 'Buffer_'].updating = false;
									}
									var _0xfe345a = _0x396fd9.every(function (_0x5d96e1) {
										if (_0x5d96e1 === 'audio' && _0x8c8b2.audioDisabled_) {
											return true;
										}
										if (_0x12069d !== _0x5d96e1 && _0x8c8b2[_0x5d96e1 + 'Buffer_'] && _0x8c8b2[_0x5d96e1 + 'Buffer_'].updating) {
											return false;
										}
										return true;
									});
									if (_0xfe345a) {
										return _0x8c8b2.trigger(_0x4ecdfc);
									}
								});
							});
						});
					}
				},
				{
					'key': 'appendBuffer',
					'value': function _0x3bc9ae(_0x96d3ff) {
						this.bufferUpdating_ = true;
						if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {
							var _0x43189a = this.audioBuffer_.buffered;
							this.transmuxer_.postMessage({
								'action': 'setAudioAppendStart',
								'appendStart': _0x43189a.end(_0x43189a.length - 1)
							});
						}
						if (this.videoBuffer_) {
							this.transmuxer_.postMessage({
								'action': 'alignGopsWith',
								'gopsToAlignWith': _0x8b5d9e(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)
							});
						}
						this.transmuxer_.postMessage({
							'action': 'push',
							'data': _0x96d3ff.buffer,
							'byteOffset': _0x96d3ff.byteOffset,
							'byteLength': _0x96d3ff.byteLength
						}, [_0x96d3ff.buffer]);
						this.transmuxer_.postMessage({ 'action': 'flush' });
					}
				},
				{
					'key': 'appendGopInfo_',
					'value': function _0x32be1b(_0xec31f3) {
						this.gopBuffer_ = _0x32d76d(this.gopBuffer_, _0xec31f3.data.gopInfo, this.safeAppend_);
					}
				},
				{
					'key': 'remove',
					'value': function _0x25a153(_0x497ede, _0x4009) {
						this.videoBuffer_ && (this.videoBuffer_.updating = true, this.videoBuffer_.remove(_0x497ede, _0x4009), this.gopBuffer_ = _0x1ff04e(this.gopBuffer_, _0x497ede, _0x4009, this.timeMapping_));
						!this.audioDisabled_ && this.audioBuffer_ && (this.audioBuffer_.updating = true, this.audioBuffer_.remove(_0x497ede, _0x4009));
						_0x4c24ab(_0x497ede, _0x4009, this.metadataTrack_);
						if (this.inbandTextTracks_) {
							for (var _0x52b816 in this.inbandTextTracks_)
								_0x4c24ab(_0x497ede, _0x4009, this.inbandTextTracks_[_0x52b816]);
						}
					}
				},
				{
					'key': 'processPendingSegments_',
					'value': function _0x3cd231() {
						var _0x346c2d = {
							'video': {
								'segments': [],
								'bytes': 0
							},
							'audio': {
								'segments': [],
								'bytes': 0
							},
							'captions': [],
							'metadata': []
						};
						_0x346c2d = this.pendingBuffers_.reduce(function (_0x302794, _0xa09875) {
							var _0x1d4206 = _0xa09875.type, _0x2f0be0 = _0xa09875.data, _0x27473d = _0xa09875.initSegment;
							_0x302794[_0x1d4206].segments.push(_0x2f0be0);
							_0x302794[_0x1d4206].bytes += _0x2f0be0.byteLength;
							_0x302794[_0x1d4206].initSegment = _0x27473d;
							if (_0xa09875.captions) {
								_0x302794.captions = _0x302794.captions.concat(_0xa09875.captions);
							}
							if (_0xa09875.info) {
								_0x302794[_0x1d4206].info = _0xa09875.info;
							}
							if (_0xa09875.metadata) {
								_0x302794.metadata = _0x302794.metadata.concat(_0xa09875.metadata);
							}
							return _0x302794;
						}, _0x346c2d);
						if (!this.videoBuffer_ && !this.audioBuffer_) {
							if (_0x346c2d.video.bytes === 0) {
								this.videoCodec_ = null;
							}
							if (_0x346c2d.audio.bytes === 0) {
								this.audioCodec_ = null;
							}
							this.createRealSourceBuffers_();
						}
						if (_0x346c2d.audio.info) {
							this.mediaSource_.trigger({
								'type': 'audioinfo',
								'info': _0x346c2d.audio.info
							});
						}
						if (_0x346c2d.video.info) {
							this.mediaSource_.trigger({
								'type': 'videoinfo',
								'info': _0x346c2d.video.info
							});
						}
						this.appendAudioInitSegment_ && (!this.audioDisabled_ && this.audioBuffer_ && (_0x346c2d.audio.segments.unshift(_0x346c2d.audio.initSegment), _0x346c2d.audio.bytes += _0x346c2d.audio.initSegment.byteLength), this.appendAudioInitSegment_ = false);
						var _0x3c32ae = false;
						if (this.videoBuffer_ && _0x346c2d.video.bytes) {
							_0x346c2d.video.segments.unshift(_0x346c2d.video.initSegment);
							_0x346c2d.video.bytes += _0x346c2d.video.initSegment.byteLength;
							this.concatAndAppendSegments_(_0x346c2d.video, this.videoBuffer_);
							_0x4049b6(this, _0x346c2d.captions, _0x346c2d.metadata);
						} else {
							if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {
								_0x3c32ae = true;
							}
						}
						if (!this.audioDisabled_ && this.audioBuffer_) {
							this.concatAndAppendSegments_(_0x346c2d.audio, this.audioBuffer_);
						}
						this.pendingBuffers_.length = 0;
						if (_0x3c32ae) {
							this.trigger('updateend');
						}
						this.bufferUpdating_ = false;
					}
				},
				{
					'key': 'concatAndAppendSegments_',
					'value': function _0x4ba25c(_0x19e2ac, _0xa69e83) {
						var _0x573d49 = 0, _0x3a8806 = void 0;
						if (_0x19e2ac.bytes) {
							_0x3a8806 = new Uint8Array(_0x19e2ac.bytes);
							_0x19e2ac.segments.forEach(function (_0x156cd2) {
								_0x3a8806.set(_0x156cd2, _0x573d49);
								_0x573d49 += _0x156cd2.byteLength;
							});
							try {
								_0xa69e83.updating = true;
								_0xa69e83.appendBuffer(_0x3a8806);
							} catch (_0x5062aa) {
								if (this.mediaSource_.player_) {
									this.mediaSource_.player_.error({
										'code': -3,
										'type': 'APPEND_BUFFER_ERR',
										'message': _0x5062aa.message,
										'originalError': _0x5062aa
									});
								}
							}
						}
					}
				},
				{
					'key': 'abort',
					'value': function _0x6a4e6d() {
						if (this.videoBuffer_) {
							this.videoBuffer_.abort();
						}
						if (!this.audioDisabled_ && this.audioBuffer_) {
							this.audioBuffer_.abort();
						}
						if (this.transmuxer_) {
							this.transmuxer_.postMessage({ 'action': 'reset' });
						}
						this.pendingBuffers_.length = 0;
						this.bufferUpdating_ = false;
					}
				}
			]), _0x48bee4;
		}(_0x465e34.EventTarget), _0x20d567 = function (_0x5830de) {
			_0x4b5e39(_0x94da96, _0x5830de);
			function _0x94da96() {
				_0x43a5ef(this, _0x94da96);
				var _0x4f9962 = _0xb2fb9f(this, (_0x94da96['__proto__'] || Object.getPrototypeOf(_0x94da96)).call(this)), _0x50069a = void 0;
				_0x4f9962.nativeMediaSource_ = new _0x504cd5.MediaSource();
				for (_0x50069a in _0x4f9962.nativeMediaSource_)
					if (!(_0x50069a in _0x94da96.prototype) && typeof _0x4f9962.nativeMediaSource_[_0x50069a] === 'function') {
						_0x4f9962[_0x50069a] = _0x4f9962.nativeMediaSource_[_0x50069a].bind(_0x4f9962.nativeMediaSource_);
					}
				return _0x4f9962.duration_ = NaN, Object.defineProperty(_0x4f9962, 'duration', {
					'get': function _0x19e806() {
						if (this.duration_ === Infinity) {
							return this.duration_;
						}
						return this.nativeMediaSource_.duration;
					},
					'set': function _0x37229a(_0x2bf306) {
						this.duration_ = _0x2bf306;
						if (_0x2bf306 !== Infinity) {
							this.nativeMediaSource_.duration = _0x2bf306;
							return;
						}
					}
				}), Object.defineProperty(_0x4f9962, 'seekable', {
					'get': function _0x2c6700() {
						if (this.duration_ === Infinity) {
							return _0x465e34.createTimeRanges([[
								0,
								this.nativeMediaSource_.duration
							]]);
						}
						return this.nativeMediaSource_.seekable;
					}
				}), Object.defineProperty(_0x4f9962, 'readyState', {
					'get': function _0x1fac98() {
						return this.nativeMediaSource_.readyState;
					}
				}), Object.defineProperty(_0x4f9962, 'activeSourceBuffers', {
					'get': function _0x38ce85() {
						return this.activeSourceBuffers_;
					}
				}), _0x4f9962.sourceBuffers = [], _0x4f9962.activeSourceBuffers_ = [], _0x4f9962.updateActiveSourceBuffers_ = function () {
					_0x4f9962.activeSourceBuffers_.length = 0;
					if (_0x4f9962.sourceBuffers.length === 1) {
						var _0x332906 = _0x4f9962.sourceBuffers[0];
						_0x332906.appendAudioInitSegment_ = true;
						_0x332906.audioDisabled_ = !_0x332906.audioCodec_;
						_0x4f9962.activeSourceBuffers_.push(_0x332906);
						return;
					}
					var _0x379d57 = false, _0x4198a0 = true;
					for (var _0x2925b7 = 0; _0x2925b7 < _0x4f9962.player_.audioTracks().length; _0x2925b7++) {
						var _0x21e171 = _0x4f9962.player_.audioTracks()[_0x2925b7];
						if (_0x21e171.enabled && _0x21e171.kind !== 'main') {
							_0x379d57 = true;
							_0x4198a0 = false;
							break;
						}
					}
					_0x4f9962.sourceBuffers.forEach(function (_0x58610c, _0x471502) {
						_0x58610c.appendAudioInitSegment_ = true;
						if (_0x58610c.videoCodec_ && _0x58610c.audioCodec_) {
							_0x58610c.audioDisabled_ = _0x379d57;
						} else {
							if (_0x58610c.videoCodec_ && !_0x58610c.audioCodec_) {
								_0x58610c.audioDisabled_ = true;
								_0x4198a0 = false;
							} else {
								if (!_0x58610c.videoCodec_ && _0x58610c.audioCodec_) {
									_0x58610c.audioDisabled_ = _0x471502 ? _0x4198a0 : !_0x4198a0;
									if (_0x58610c.audioDisabled_) {
										return;
									}
								}
							}
						}
						_0x4f9962.activeSourceBuffers_.push(_0x58610c);
					});
				}, _0x4f9962.onPlayerMediachange_ = function () {
					_0x4f9962.sourceBuffers.forEach(function (_0x46a18d) {
						_0x46a18d.appendAudioInitSegment_ = true;
					});
				}, _0x4f9962.onHlsReset_ = function () {
					_0x4f9962.sourceBuffers.forEach(function (_0x181f8e) {
						if (_0x181f8e.transmuxer_) {
							_0x181f8e.transmuxer_.postMessage({ 'action': 'resetCaptions' });
						}
					});
				}, _0x4f9962.onHlsSegmentTimeMapping_ = function (_0x4991ca) {
					_0x4f9962.sourceBuffers.forEach(function (_0x34cff3) {
						return _0x34cff3.timeMapping_ = _0x4991ca.mapping;
					});
				}, [
					'sourceopen',
					'sourceclose',
					'sourceended'
				].forEach(function (_0x19a5f8) {
					this.nativeMediaSource_.addEventListener(_0x19a5f8, this.trigger.bind(this));
				}, _0x4f9962), _0x4f9962.on('sourceopen', function (_0x4fbeb7) {
					var _0x1e9d9b = _0x19e198.querySelector('[src="' + _0x4f9962.url_ + '"]');
					if (!_0x1e9d9b) {
						return;
					}
					_0x4f9962.player_ = _0x465e34(_0x1e9d9b.parentNode);
					_0x4f9962.player_.tech_.on('hls-reset', _0x4f9962.onHlsReset_);
					_0x4f9962.player_.tech_.on('hls-segment-time-mapping', _0x4f9962.onHlsSegmentTimeMapping_);
					_0x4f9962.player_.audioTracks && _0x4f9962.player_.audioTracks() && (_0x4f9962.player_.audioTracks().on('change', _0x4f9962.updateActiveSourceBuffers_), _0x4f9962.player_.audioTracks().on('addtrack', _0x4f9962.updateActiveSourceBuffers_), _0x4f9962.player_.audioTracks().on('removetrack', _0x4f9962.updateActiveSourceBuffers_));
					_0x4f9962.player_.on('mediachange', _0x4f9962.onPlayerMediachange_);
				}), _0x4f9962.on('sourceended', function (_0x1785b5) {
					var _0x3dc9c0 = _0x131bb9(_0x4f9962.duration);
					for (var _0x4c9985 = 0; _0x4c9985 < _0x4f9962.sourceBuffers.length; _0x4c9985++) {
						var _0x121c32 = _0x4f9962.sourceBuffers[_0x4c9985], _0x2ba105 = _0x121c32.metadataTrack_ && _0x121c32.metadataTrack_.cues;
						if (_0x2ba105 && _0x2ba105.length) {
							_0x2ba105[_0x2ba105.length - 1].endTime = _0x3dc9c0;
						}
					}
				}), _0x4f9962.on('sourceclose', function (_0x16f963) {
					this.sourceBuffers.forEach(function (_0x1b82bf) {
						if (_0x1b82bf.transmuxer_) {
							_0x1b82bf.transmuxer_.terminate();
						}
					});
					this.sourceBuffers.length = 0;
					if (!this.player_) {
						return;
					}
					this.player_.audioTracks && this.player_.audioTracks() && (this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_), this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_), this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_));
					this.player_.el_ && (this.player_.off('mediachange', this.onPlayerMediachange_), this.player_.tech_.off('hls-reset', this.onHlsReset_), this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_));
				}), _0x4f9962;
			}
			return _0x470055(_0x94da96, [
				{
					'key': 'addSeekableRange_',
					'value': function _0x2ded83(_0x2e65b0, _0x1d270f) {
						var _0x4c4d6e = void 0;
						if (this.duration !== Infinity) {
							_0x4c4d6e = new Error('MediaSource.addSeekableRange() can only be invoked when the duration is Infinity');
							_0x4c4d6e.name = 'InvalidStateError';
							_0x4c4d6e.code = 11;
							throw _0x4c4d6e;
						}
						if (_0x1d270f > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {
							this.nativeMediaSource_.duration = _0x1d270f;
						}
					}
				},
				{
					'key': 'addSourceBuffer',
					'value': function _0x11ea5c(_0x225c27) {
						var _0x38ab0f = void 0, _0x391d0b = _0x4a2904(_0x225c27);
						if (/^(video|audio)\/mp2t$/i.test(_0x391d0b.type)) {
							var _0x4f58a2 = [];
							_0x391d0b.parameters && _0x391d0b.parameters.codecs && (_0x4f58a2 = _0x391d0b.parameters.codecs.split(','), _0x4f58a2 = _0x108532(_0x4f58a2), _0x4f58a2 = _0x4f58a2.filter(function (_0x1c3fe9) {
								return _0x3f4e2e(_0x1c3fe9) || _0x197edd(_0x1c3fe9);
							}));
							if (_0x4f58a2.length === 0) {
								_0x4f58a2 = [
									'avc1.4d400d',
									'mp4a.40.2'
								];
							}
							_0x38ab0f = new _0xdbc9cf(this, _0x4f58a2);
							if (this.sourceBuffers.length !== 0) {
								this.sourceBuffers[0].createRealSourceBuffers_();
								_0x38ab0f.createRealSourceBuffers_();
								this.sourceBuffers[0].audioDisabled_ = true;
							}
						} else {
							_0x38ab0f = this.nativeMediaSource_.addSourceBuffer(_0x225c27);
						}
						return this.sourceBuffers.push(_0x38ab0f), _0x38ab0f;
					}
				}
			]), _0x94da96;
		}(_0x465e34.EventTarget), _0x16731f = 0, _0x37d11c = (_0x465e34.mediaSources = {}, function _0x5ed3d8(_0x45c7cc, _0x2883de) {
			var _0x35e4d8 = _0x465e34.mediaSources[_0x45c7cc];
			if (_0x35e4d8) {
				_0x35e4d8.trigger({
					'type': 'sourceopen',
					'swfId': _0x2883de
				});
			} else {
				throw new Error('Media Source not found (Video.js)');
			}
		}), _0x1e9af0 = function _0x4c8292() {
			return !!_0x504cd5.MediaSource && !!_0x504cd5.MediaSource.isTypeSupported && _0x504cd5.MediaSource.isTypeSupported('video/mp4;codecs="avc1.4d400d,mp4a.40.2"');
		}, _0x321826 = function _0x22cee7() {
			this.MediaSource = {
				'open': _0x37d11c,
				'supportsNativeMediaSources': _0x1e9af0
			};
			if (_0x1e9af0()) {
				return new _0x20d567();
			}
			throw new Error('Cannot use create a virtual MediaSource for this video');
		}, _0x19f11e = (_0x321826.open = _0x37d11c, _0x321826.supportsNativeMediaSources = _0x1e9af0, {
			'createObjectURL': function _0x50fe97(_0x56e712) {
				var _0xcd080b = 'blob:vjs-media-source/', _0x1a4fd2 = void 0;
				if (_0x56e712 instanceof _0x20d567) {
					return _0x1a4fd2 = _0x504cd5.URL.createObjectURL(_0x56e712.nativeMediaSource_), _0x56e712.url_ = _0x1a4fd2, _0x1a4fd2;
				}
				if (!(_0x56e712 instanceof _0x20d567)) {
					return _0x1a4fd2 = _0x504cd5.URL.createObjectURL(_0x56e712), _0x56e712.url_ = _0x1a4fd2, _0x1a4fd2;
				}
				return _0x1a4fd2 = _0xcd080b + _0x16731f, _0x16731f++, _0x465e34.mediaSources[_0x1a4fd2] = _0x56e712, _0x1a4fd2;
			}
		}), _0x3d2e33 = (_0x465e34.MediaSource = _0x321826, _0x465e34.URL = _0x19f11e, _0x465e34.EventTarget), _0xa82ab = _0x465e34.mergeOptions, _0x45e8c0 = function _0x185d03(_0x4a510c, _0x2abf60) {
			var _0x108c18 = _0xa82ab(_0x4a510c, {
				'duration': _0x2abf60.duration,
				'minimumUpdatePeriod': _0x2abf60.minimumUpdatePeriod
			});
			for (var _0x3a5fda = 0; _0x3a5fda < _0x2abf60.playlists.length; _0x3a5fda++) {
				var _0x12af3f = _0x559116(_0x108c18, _0x2abf60.playlists[_0x3a5fda]);
				if (_0x12af3f) {
					_0x108c18 = _0x12af3f;
				}
			}
			return _0x260277(_0x2abf60, function (_0x38d826, _0x45c4c3, _0x51424c, _0x39abd2) {
				if (_0x38d826.playlists && _0x38d826.playlists.length) {
					var _0x251544 = _0x38d826.playlists[0].uri, _0x32872f = _0x559116(_0x108c18, _0x38d826.playlists[0]);
					_0x32872f && (_0x108c18 = _0x32872f, _0x108c18.mediaGroups[_0x45c4c3][_0x51424c][_0x39abd2].playlists[0] = _0x108c18.playlists[_0x251544]);
				}
			}), _0x108c18;
		}, _0x29ee61 = function (_0x50bc49) {
			_0x4b5e39(_0x8b79fa, _0x50bc49);
			function _0x8b79fa(_0x36d5b0, _0x2c1308, _0x31defe, _0x41d89e) {
				_0x43a5ef(this, _0x8b79fa);
				var _0x2c99fe = _0xb2fb9f(this, (_0x8b79fa['__proto__'] || Object.getPrototypeOf(_0x8b79fa)).call(this));
				_0x2c99fe.hls_ = _0x2c1308;
				_0x2c99fe.withCredentials = _0x31defe;
				if (!_0x36d5b0) {
					throw new Error('A non-empty playlist URL or playlist is required');
				}
				_0x2c99fe.on('minimumUpdatePeriod', function () {
					_0x2c99fe.refreshXml_();
				});
				_0x2c99fe.on('mediaupdatetimeout', function () {
					_0x2c99fe.refreshMedia_();
				});
				if (typeof _0x36d5b0 === 'string') {
					return _0x2c99fe.srcUrl = _0x36d5b0, _0x2c99fe.state = 'HAVE_NOTHING', _0xb2fb9f(_0x2c99fe);
				}
				return _0x2c99fe.masterPlaylistLoader_ = _0x41d89e, _0x2c99fe.state = 'HAVE_METADATA', _0x2c99fe.started = true, _0x2c99fe.media(_0x36d5b0), _0x504cd5.setTimeout(function () {
					_0x2c99fe.trigger('loadedmetadata');
				}, 0), _0x2c99fe;
			}
			return _0x470055(_0x8b79fa, [
				{
					'key': 'dispose',
					'value': function _0x126fd6() {
						this.stopRequest();
						_0x504cd5.clearTimeout(this.mediaUpdateTimeout);
					}
				},
				{
					'key': 'stopRequest',
					'value': function _0xf9df3() {
						if (this.request) {
							var _0x458440 = this.request;
							this.request = null;
							_0x458440.onreadystatechange = null;
							_0x458440.abort();
						}
					}
				},
				{
					'key': 'media',
					'value': function _0x161d61(_0x5bca8e) {
						if (!_0x5bca8e) {
							return this.media_;
						}
						if (this.state === 'HAVE_NOTHING') {
							throw new Error('Cannot switch media playlist from ' + this.state);
						}
						var _0x46df9c = this.state;
						if (typeof _0x5bca8e === 'string') {
							if (!this.master.playlists[_0x5bca8e]) {
								throw new Error('Unknown playlist URI: ' + _0x5bca8e);
							}
							_0x5bca8e = this.master.playlists[_0x5bca8e];
						}
						var _0x144c97 = !this.media_ || _0x5bca8e.uri !== this.media_.uri;
						this.state = 'HAVE_METADATA';
						if (!_0x144c97) {
							return;
						}
						if (this.media_) {
							this.trigger('mediachanging');
						}
						this.media_ = _0x5bca8e;
						this.refreshMedia_();
						if (_0x46df9c !== 'HAVE_MASTER') {
							this.trigger('mediachange');
						}
					}
				},
				{
					'key': 'pause',
					'value': function _0x4d5c7f() {
						this.stopRequest();
						if (this.state === 'HAVE_NOTHING') {
							this.started = false;
						}
					}
				},
				{
					'key': 'load',
					'value': function _0x5ead7b() {
						if (!this.started) {
							this.start();
							return;
						}
						this.trigger('loadedplaylist');
					}
				},
				{
					'key': 'parseMasterXml',
					'value': function _0x35831a() {
						var _0x29901f = _0x463a78(this.masterXml_, {
							'manifestUri': this.srcUrl,
							'clientOffset': this.clientOffset_
						});
						_0x29901f.uri = this.srcUrl;
						for (var _0x38c81a = 0; _0x38c81a < _0x29901f.playlists.length; _0x38c81a++) {
							var _0x4b74ee = 'placeholder-uri-' + _0x38c81a;
							_0x29901f.playlists[_0x38c81a].uri = _0x4b74ee;
							_0x29901f.playlists[_0x4b74ee] = _0x29901f.playlists[_0x38c81a];
						}
						return _0x260277(_0x29901f, function (_0x4950c9, _0x32396b, _0x526620, _0x386e56) {
							if (_0x4950c9.playlists && _0x4950c9.playlists.length) {
								var _0x53130b = 'placeholder-uri-' + _0x32396b + '-' + _0x526620 + '-' + _0x386e56;
								_0x4950c9.playlists[0].uri = _0x53130b;
								_0x29901f.playlists[_0x53130b] = _0x4950c9.playlists[0];
							}
						}), _0x340f59(_0x29901f), _0x145d96(_0x29901f), _0x29901f;
					}
				},
				{
					'key': 'start',
					'value': function _0x5bf584() {
						var _0x20a593 = this;
						this.started = true;
						this.request = this.hls_.xhr({
							'uri': this.srcUrl,
							'withCredentials': this.withCredentials
						}, function (_0x57afa2, _0x464b75) {
							if (!_0x20a593.request) {
								return;
							}
							_0x20a593.request = null;
							if (_0x57afa2) {
								_0x20a593.error = {
									'status': _0x464b75.status,
									'message': 'DASH playlist request error at URL: ' + _0x20a593.srcUrl,
									'responseText': _0x464b75.responseText,
									'code': 2
								};
								if (_0x20a593.state === 'HAVE_NOTHING') {
									_0x20a593.started = false;
								}
								return _0x20a593.trigger('error');
							}
							_0x20a593.masterXml_ = _0x464b75.responseText;
							if (_0x464b75.responseHeaders && _0x464b75.responseHeaders.date) {
								_0x20a593.masterLoaded_ = Date.parse(_0x464b75.responseHeaders.date);
							} else {
								_0x20a593.masterLoaded_ = Date.now();
							}
							_0x20a593.syncClientServerClock_(_0x20a593.onClientServerClockSync_.bind(_0x20a593));
						});
					}
				},
				{
					'key': 'syncClientServerClock_',
					'value': function _0x587b7a(_0x105e37) {
						var _0x5eaa0a = this, _0x112c0c = _0x51d4f3(this.masterXml_);
						if (_0x112c0c === null) {
							return this.clientOffset_ = this.masterLoaded_ - Date.now(), _0x105e37();
						}
						if (_0x112c0c.method === 'DIRECT') {
							return this.clientOffset_ = _0x112c0c.value - Date.now(), _0x105e37();
						}
						this.request = this.hls_.xhr({
							'uri': _0x18eefc(this.srcUrl, _0x112c0c.value),
							'method': _0x112c0c.method,
							'withCredentials': this.withCredentials
						}, function (_0x543ad5, _0x267835) {
							if (!_0x5eaa0a.request) {
								return;
							}
							if (_0x543ad5) {
								return _0x5eaa0a.clientOffset_ = _0x5eaa0a.masterLoaded_ - Date.now(), _0x105e37();
							}
							var _0x4b04d6 = void 0;
							if (_0x112c0c.method === 'HEAD') {
								if (!_0x267835.responseHeaders || !_0x267835.responseHeaders.date) {
									_0x4b04d6 = _0x5eaa0a.masterLoaded_;
								} else {
									_0x4b04d6 = Date.parse(_0x267835.responseHeaders.date);
								}
							} else {
								_0x4b04d6 = Date.parse(_0x267835.responseText);
							}
							_0x5eaa0a.clientOffset_ = _0x4b04d6 - Date.now();
							_0x105e37();
						});
					}
				},
				{
					'key': 'onClientServerClockSync_',
					'value': function _0x59a481() {
						var _0x336ca2 = this;
						this.master = this.parseMasterXml();
						this.state = 'HAVE_MASTER';
						this.trigger('loadedplaylist');
						if (!this.media_) {
							this.media(this.master.playlists[0]);
						}
						_0x504cd5.setTimeout(function () {
							_0x336ca2.trigger('loadedmetadata');
						}, 0);
						if (this.master.minimumUpdatePeriod) {
							_0x504cd5.setTimeout(function () {
								_0x336ca2.trigger('minimumUpdatePeriod');
							}, this.master.minimumUpdatePeriod);
						}
					}
				},
				{
					'key': 'refreshXml_',
					'value': function _0x2e4b00() {
						var _0x16895d = this;
						this.request = this.hls_.xhr({
							'uri': this.srcUrl,
							'withCredentials': this.withCredentials
						}, function (_0x15a8a5, _0x330575) {
							if (!_0x16895d.request) {
								return;
							}
							_0x16895d.request = null;
							if (_0x15a8a5) {
								_0x16895d.error = {
									'status': _0x330575.status,
									'message': 'DASH playlist request error at URL: ' + _0x16895d.srcUrl,
									'responseText': _0x330575.responseText,
									'code': 2
								};
								if (_0x16895d.state === 'HAVE_NOTHING') {
									_0x16895d.started = false;
								}
								return _0x16895d.trigger('error');
							}
							_0x16895d.masterXml_ = _0x330575.responseText;
							var _0x43db4c = _0x16895d.parseMasterXml();
							_0x16895d.master = _0x45e8c0(_0x16895d.master, _0x43db4c);
							_0x504cd5.setTimeout(function () {
								_0x16895d.trigger('minimumUpdatePeriod');
							}, _0x16895d.master.minimumUpdatePeriod);
						});
					}
				},
				{
					'key': 'refreshMedia_',
					'value': function _0x5d4739() {
						var _0x32eecd = this, _0x34e92b = void 0, _0x126993 = void 0;
						this.masterPlaylistLoader_ ? (_0x34e92b = this.masterPlaylistLoader_.master, _0x126993 = this.masterPlaylistLoader_.parseMasterXml()) : (_0x34e92b = this.master, _0x126993 = this.parseMasterXml());
						var _0x4c19e6 = _0x45e8c0(_0x34e92b, _0x126993);
						if (_0x4c19e6) {
							if (this.masterPlaylistLoader_) {
								this.masterPlaylistLoader_.master = _0x4c19e6;
							} else {
								this.master = _0x4c19e6;
							}
							this.media_ = _0x4c19e6.playlists[this.media_.uri];
						} else {
							this.trigger('playlistunchanged');
						}
						if (!this.media().endList) {
							this.mediaUpdateTimeout = _0x504cd5.setTimeout(function () {
								_0x32eecd.trigger('mediaupdatetimeout');
							}, _0x14cc37(this.media(), !!_0x4c19e6));
						}
						this.trigger('loadedplaylist');
					}
				}
			]), _0x8b79fa;
		}(_0x3d2e33), _0x243d7c = function _0x4c6986(_0x33c12f) {
			if (_0x465e34.log.debug) {
				return _0x465e34.log.debug.bind(_0x465e34, 'VHS:', _0x33c12f + ' >');
			}
			return function () {
			};
		};
		function _0x190247() {
		}
		var _0xffb42f = (function () {
			function _0x21110a(_0x19c06f, _0x114263, _0x4d0b0e, _0x50787e) {
				_0x43a5ef(this, _0x21110a);
				this.callbacks_ = [];
				this.pendingCallback_ = null;
				this.timestampOffset_ = 0;
				this.mediaSource = _0x19c06f;
				this.processedAppend_ = false;
				this.type_ = _0x4d0b0e;
				this.mimeType_ = _0x114263;
				this.logger_ = _0x243d7c('SourceUpdater[' + _0x4d0b0e + '][' + _0x114263 + ']');
				if (_0x19c06f.readyState === 'closed') {
					_0x19c06f.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, _0x114263, _0x50787e));
				} else {
					this.createSourceBuffer_(_0x114263, _0x50787e);
				}
			}
			return _0x470055(_0x21110a, [
				{
					'key': 'createSourceBuffer_',
					'value': function _0x248367(_0x83121f, _0x28f9c7) {
						var _0x109496 = this;
						this.sourceBuffer_ = this.mediaSource.addSourceBuffer(_0x83121f);
						this.logger_('created SourceBuffer');
						if (_0x28f9c7) {
							_0x28f9c7.trigger('sourcebufferadded');
							if (this.mediaSource.sourceBuffers.length < 2) {
								_0x28f9c7.on('sourcebufferadded', function () {
									_0x109496.start_();
								});
								return;
							}
						}
						this.start_();
					}
				},
				{
					'key': 'start_',
					'value': function _0x2304f8() {
						var _0x5de4ba = this;
						this.started_ = true;
						this.onUpdateendCallback_ = function () {
							var _0x490f2c = _0x5de4ba.pendingCallback_;
							_0x5de4ba.pendingCallback_ = null;
							_0x5de4ba.logger_('buffered [' + _0x2e715c(_0x5de4ba.buffered()) + ']');
							if (_0x490f2c) {
								_0x490f2c();
							}
							_0x5de4ba.runCallback_();
						};
						this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);
						this.runCallback_();
					}
				},
				{
					'key': 'abort',
					'value': function _0x1857eb(_0xcd08ed) {
						var _0xe3f7d = this;
						if (this.processedAppend_) {
							this.queueCallback_(function () {
								_0xe3f7d.sourceBuffer_.abort();
							}, _0xcd08ed);
						}
					}
				},
				{
					'key': 'appendBuffer',
					'value': function _0x82ef7a(_0x593dd6, _0x469f27) {
						var _0x190b0b = this;
						this.processedAppend_ = true;
						this.queueCallback_(function () {
							_0x190b0b.sourceBuffer_.appendBuffer(_0x593dd6);
						}, _0x469f27);
					}
				},
				{
					'key': 'buffered',
					'value': function _0x4b9c3a() {
						if (!this.sourceBuffer_) {
							return _0x465e34.createTimeRanges();
						}
						return this.sourceBuffer_.buffered;
					}
				},
				{
					'key': 'remove',
					'value': function _0x229d18(_0x55e872, _0x82d33f) {
						var _0x31b690 = this, _0x3041d2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _0x190247;
						if (this.processedAppend_) {
							this.queueCallback_(function () {
								_0x31b690.logger_('remove [' + _0x55e872 + ' => ' + _0x82d33f + ']');
								_0x31b690.sourceBuffer_.remove(_0x55e872, _0x82d33f);
							}, _0x3041d2);
						}
					}
				},
				{
					'key': 'updating',
					'value': function _0x4ae02a() {
						return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;
					}
				},
				{
					'key': 'timestampOffset',
					'value': function _0x4f08bf(_0x4aba6e) {
						var _0x5df8cc = this;
						return typeof _0x4aba6e !== 'undefined' && (this.queueCallback_(function () {
							_0x5df8cc.sourceBuffer_.timestampOffset = _0x4aba6e;
						}), this.timestampOffset_ = _0x4aba6e), this.timestampOffset_;
					}
				},
				{
					'key': 'queueCallback_',
					'value': function _0x33990d(_0xfa460d, _0x1669b3) {
						this.callbacks_.push([
							_0xfa460d.bind(this),
							_0x1669b3
						]);
						this.runCallback_();
					}
				},
				{
					'key': 'runCallback_',
					'value': function _0x3d1055() {
						var _0x4c2448 = void 0;
						!this.updating() && this.callbacks_.length && this.started_ && (_0x4c2448 = this.callbacks_.shift(), this.pendingCallback_ = _0x4c2448[1], _0x4c2448[0]());
					}
				},
				{
					'key': 'dispose',
					'value': function _0x650db5() {
						this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);
						if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {
							this.sourceBuffer_.abort();
						}
					}
				}
			]), _0x21110a;
		}()), _0x37262f = {
			'FAILURE': 2,
			'TIMEOUT': -101,
			'ABORTED': -102
		}, _0x36d709 = function _0x4d7054(_0x33ae03) {
			var _0x1f3805 = void 0, _0xf27d9 = void 0;
			return _0xf27d9 = _0x33ae03.offset + _0x33ae03.length - 1, _0x1f3805 = _0x33ae03.offset, 'bytes=' + _0x1f3805 + '-' + _0xf27d9;
		}, _0x532896 = function _0x41ee94(_0x3b9746) {
			var _0x1e5ec7 = { Range: _0x36d709(_0x3b9746.byterange) };
			if (_0x3b9746.byterange) {
			}
			return _0x1e5ec7;
		}, _0x40ed8b = function _0x252eba(_0x59d5d6) {
			_0x59d5d6.forEach(function (_0x3d12a8) {
				_0x3d12a8.abort();
			});
		}, _0x12ff2a = function _0x28cc28(_0x54676d) {
			return {
				'bandwidth': _0x54676d.bandwidth,
				'bytesReceived': _0x54676d.bytesReceived || 0,
				'roundTripTime': _0x54676d.roundTripTime || 0
			};
		}, _0x13d383 = function _0x429907(_0x4fc017) {
			var _0x2cb078 = _0x4fc017.target, _0x13ea5e = Date.now() - _0x2cb078.requestTime, _0x3648f3 = {
				'bandwidth': Infinity,
				'bytesReceived': 0,
				'roundTripTime': _0x13ea5e || 0
			};
			return _0x3648f3.bytesReceived = _0x4fc017.loaded, _0x3648f3.bandwidth = Math.floor(_0x3648f3.bytesReceived / _0x3648f3.roundTripTime * 8 * 1000), _0x3648f3;
		}, _0x31c171 = function _0x2e8d03(_0x57a9c3, _0x4bcfb8) {
			if (_0x4bcfb8.timedout) {
				return {
					'status': _0x4bcfb8.status,
					'message': 'HLS request timed-out at URL: ' + _0x4bcfb8.uri,
					'code': _0x37262f.TIMEOUT,
					'xhr': _0x4bcfb8
				};
			}
			if (_0x4bcfb8.aborted) {
				return {
					'status': _0x4bcfb8.status,
					'message': 'HLS request aborted at URL: ' + _0x4bcfb8.uri,
					'code': _0x37262f.ABORTED,
					'xhr': _0x4bcfb8
				};
			}
			if (_0x57a9c3) {
				return {
					'status': _0x4bcfb8.status,
					'message': 'HLS request errored at URL: ' + _0x4bcfb8.uri,
					'code': _0x37262f.FAILURE,
					'xhr': _0x4bcfb8
				};
			}
			return null;
		}, _0x52d76e = function _0x1ebc5f(_0x2e6c8f, _0x5845a0) {
			return function (_0x4430d2, _0x45aad8) {
				var _0x2d76a8 = _0x45aad8.response, _0x1aa5d0 = _0x31c171(_0x4430d2, _0x45aad8);
				if (_0x1aa5d0) {
					return _0x5845a0(_0x1aa5d0, _0x2e6c8f);
				}
				if (_0x2d76a8.byteLength !== 16) {
					return _0x5845a0({
						'status': _0x45aad8.status,
						'message': 'Invalid HLS key at URL: ' + _0x45aad8.uri,
						'code': _0x37262f.FAILURE,
						'xhr': _0x45aad8
					}, _0x2e6c8f);
				}
				var _0x2c083b = new DataView(_0x2d76a8);
				return _0x2e6c8f.key.bytes = new Uint32Array([
					_0x2c083b.getUint32(0),
					_0x2c083b.getUint32(4),
					_0x2c083b.getUint32(8),
					_0x2c083b.getUint32(12)
				]), _0x5845a0(null, _0x2e6c8f);
			};
		}, _0x16ffc9 = function _0x56cd73(_0x30275b, _0x275322, _0x6d517b) {
			return function (_0x126cfe, _0x32511c) {
				var _0x1f8531 = _0x32511c.response, _0x108531 = _0x31c171(_0x126cfe, _0x32511c);
				if (_0x108531) {
					return _0x6d517b(_0x108531, _0x30275b);
				}
				if (_0x1f8531.byteLength === 0) {
					return _0x6d517b({
						'status': _0x32511c.status,
						'message': 'Empty HLS segment content at URL: ' + _0x32511c.uri,
						'code': _0x37262f.FAILURE,
						'xhr': _0x32511c
					}, _0x30275b);
				}
				_0x30275b.map.bytes = new Uint8Array(_0x32511c.response);
				if (!_0x275322.isInitialized()) {
					_0x275322.init();
				}
				return _0x30275b.map.timescales = _0x1d4ee0.timescale(_0x30275b.map.bytes), _0x30275b.map.videoTrackIds = _0x1d4ee0.videoTrackIds(_0x30275b.map.bytes), _0x6d517b(null, _0x30275b);
			};
		}, _0x269bc1 = function _0x61871a(_0x459d5c, _0x23baa0, _0x36062e) {
			return function (_0x36e474, _0x4354d3) {
				var _0x90ffb = _0x4354d3.response, _0x8b45a6 = _0x31c171(_0x36e474, _0x4354d3), _0xa4559b = void 0;
				if (_0x8b45a6) {
					return _0x36062e(_0x8b45a6, _0x459d5c);
				}
				if (_0x90ffb.byteLength === 0) {
					return _0x36062e({
						'status': _0x4354d3.status,
						'message': 'Empty HLS segment content at URL: ' + _0x4354d3.uri,
						'code': _0x37262f.FAILURE,
						'xhr': _0x4354d3
					}, _0x459d5c);
				}
				_0x459d5c.stats = _0x12ff2a(_0x4354d3);
				if (_0x459d5c.key) {
					_0x459d5c.encryptedBytes = new Uint8Array(_0x4354d3.response);
				} else {
					_0x459d5c.bytes = new Uint8Array(_0x4354d3.response);
				}
				if (_0x459d5c.map && _0x459d5c.map.bytes) {
					if (!_0x23baa0.isInitialized()) {
						_0x23baa0.init();
					}
					_0xa4559b = _0x23baa0.parse(_0x459d5c.bytes, _0x459d5c.map.videoTrackIds, _0x459d5c.map.timescales);
					_0xa4559b && _0xa4559b.captions && (_0x459d5c.captionStreams = _0xa4559b.captionStreams, _0x459d5c.fmp4Captions = _0xa4559b.captions);
				}
				return _0x36062e(null, _0x459d5c);
			};
		}, _0x4e56bc = function _0x511b65(_0x4a1fd4, _0x3766cf, _0x4e5661) {
			var _0x2751e9 = function _0x2d92e1(_0x5c514) {
				if (_0x5c514.data.source === _0x3766cf.requestId) {
					_0x4a1fd4.removeEventListener('message', _0x2d92e1);
					var _0x239c0f = _0x5c514.data.decrypted;
					return _0x3766cf.bytes = new Uint8Array(_0x239c0f.bytes, _0x239c0f.byteOffset, _0x239c0f.byteLength), _0x4e5661(null, _0x3766cf);
				}
			};
			_0x4a1fd4.addEventListener('message', _0x2751e9);
			_0x4a1fd4.postMessage(_0x2f4764({
				'source': _0x3766cf.requestId,
				'encrypted': _0x3766cf.encryptedBytes,
				'key': _0x3766cf.key.bytes,
				'iv': _0x3766cf.key.iv
			}), [
				_0x3766cf.encryptedBytes.buffer,
				_0x3766cf.key.bytes.buffer
			]);
		}, _0x44bfa2 = function _0x4996d0(_0x1cc320) {
			return _0x1cc320.reduce(function (_0x56b10a, _0x428d9a) {
				return _0x428d9a.code > _0x56b10a.code ? _0x428d9a : _0x56b10a;
			});
		}, _0x3e1f83 = function _0x418d32(_0x108e67, _0x353e66, _0x15c056) {
			var _0x53f19b = [], _0x7dc053 = 0;
			return function (_0x2c6113, _0x2ad556) {
				_0x2c6113 && (_0x40ed8b(_0x108e67), _0x53f19b.push(_0x2c6113));
				_0x7dc053 += 1;
				if (_0x7dc053 === _0x108e67.length) {
					_0x2ad556.endOfAllRequests = Date.now();
					if (_0x53f19b.length > 0) {
						var _0x5ee6c9 = _0x44bfa2(_0x53f19b);
						return _0x15c056(_0x5ee6c9, _0x2ad556);
					}
					if (_0x2ad556.encryptedBytes) {
						return _0x4e56bc(_0x353e66, _0x2ad556, _0x15c056);
					}
					return _0x15c056(null, _0x2ad556);
				}
			};
		}, _0x564ee4 = function _0x3e5e36(_0x319c2f, _0x4a5398) {
			return function (_0x29aafd) {
				_0x319c2f.stats = _0x465e34.mergeOptions(_0x319c2f.stats, _0x13d383(_0x29aafd));
				if (!_0x319c2f.stats.firstBytesReceivedAt && _0x319c2f.stats.bytesReceived) {
					_0x319c2f.stats.firstBytesReceivedAt = Date.now();
				}
				return _0x4a5398(_0x29aafd, _0x319c2f);
			};
		}, _0x276f52 = function _0x1e3ac3(_0x51d964, _0x2b6924, _0x3e819d, _0x24c7c5, _0x57ca7f, _0x49586d, _0x46e8b4) {
			var _0x497d2a = [], _0x38a088 = _0x3e1f83(_0x497d2a, _0x3e819d, _0x46e8b4);
			if (_0x57ca7f.key) {
				var _0x3c786b = _0x465e34.mergeOptions(_0x2b6924, {
					'uri': _0x57ca7f.key.resolvedUri,
					'responseType': 'arraybuffer'
				}), _0x1f060e = _0x52d76e(_0x57ca7f, _0x38a088), _0x4b0e77 = _0x51d964(_0x3c786b, _0x1f060e);
				_0x497d2a.push(_0x4b0e77);
			}
			if (_0x57ca7f.map && !_0x57ca7f.map.bytes) {
				var _0x132f40 = _0x465e34.mergeOptions(_0x2b6924, {
					'uri': _0x57ca7f.map.resolvedUri,
					'responseType': 'arraybuffer',
					'headers': _0x532896(_0x57ca7f.map)
				}), _0x572ddb = _0x16ffc9(_0x57ca7f, _0x24c7c5, _0x38a088), _0x3b532a = _0x51d964(_0x132f40, _0x572ddb);
				_0x497d2a.push(_0x3b532a);
			}
			var _0x8643a1 = _0x465e34.mergeOptions(_0x2b6924, {
				'uri': _0x57ca7f.resolvedUri,
				'responseType': 'arraybuffer',
				'headers': _0x532896(_0x57ca7f)
			}), _0x126b01 = _0x269bc1(_0x57ca7f, _0x24c7c5, _0x38a088), _0x4f1f80 = _0x51d964(_0x8643a1, _0x126b01);
			return _0x4f1f80.addEventListener('progress', _0x564ee4(_0x57ca7f, _0x49586d)), _0x497d2a.push(_0x4f1f80), function () {
				return _0x40ed8b(_0x497d2a);
			};
		}, _0x40e0d6 = function _0x3ae469(_0x451c7b, _0x5c9743) {
			var _0x264989 = void 0;
			if (!_0x451c7b) {
				return '';
			}
			_0x264989 = _0x504cd5.getComputedStyle(_0x451c7b);
			if (!_0x264989) {
				return '';
			}
			return _0x264989[_0x5c9743];
		}, _0x2266e0 = function _0x41d127(_0x3ad312, _0x3556d4) {
			var _0x5e9c69 = _0x3ad312.slice();
			_0x3ad312.sort(function (_0x582bab, _0x21d0d5) {
				var _0x3d0fb4 = _0x3556d4(_0x582bab, _0x21d0d5);
				if (_0x3d0fb4 === 0) {
					return _0x5e9c69.indexOf(_0x582bab) - _0x5e9c69.indexOf(_0x21d0d5);
				}
				return _0x3d0fb4;
			});
		}, _0x548459 = function _0x15ffcf(_0x471eb0, _0x2fb0f9) {
			var _0x5a80cf = void 0, _0x344920 = void 0;
			if (_0x471eb0.attributes.BANDWIDTH) {
				_0x5a80cf = _0x471eb0.attributes.BANDWIDTH;
			}
			_0x5a80cf = _0x5a80cf || _0x504cd5.Number.MAX_VALUE;
			if (_0x2fb0f9.attributes.BANDWIDTH) {
				_0x344920 = _0x2fb0f9.attributes.BANDWIDTH;
			}
			return _0x344920 = _0x344920 || _0x504cd5.Number.MAX_VALUE, _0x5a80cf - _0x344920;
		}, _0x134243 = function _0x384f25(_0x446104, _0x22c717) {
			var _0x508837 = void 0, _0x352eea = void 0;
			if (_0x446104.attributes.RESOLUTION && _0x446104.attributes.RESOLUTION.width) {
				_0x508837 = _0x446104.attributes.RESOLUTION.width;
			}
			_0x508837 = _0x508837 || _0x504cd5.Number.MAX_VALUE;
			if (_0x22c717.attributes.RESOLUTION && _0x22c717.attributes.RESOLUTION.width) {
				_0x352eea = _0x22c717.attributes.RESOLUTION.width;
			}
			_0x352eea = _0x352eea || _0x504cd5.Number.MAX_VALUE;
			if (_0x508837 === _0x352eea && _0x446104.attributes.BANDWIDTH && _0x22c717.attributes.BANDWIDTH) {
				return _0x446104.attributes.BANDWIDTH - _0x22c717.attributes.BANDWIDTH;
			}
			return _0x508837 - _0x352eea;
		}, _0x40e0b5 = function _0x2ccb00(_0x2c69f, _0x2077e8, _0x360509, _0x3fedd2) {
			var _0x41fb63 = _0x2c69f.playlists.map(function (_0x7bda51) {
				var _0x5e2c35 = void 0, _0x23b764 = void 0, _0x4cca2d = void 0;
				return _0x5e2c35 = _0x7bda51.attributes.RESOLUTION && _0x7bda51.attributes.RESOLUTION.width, _0x23b764 = _0x7bda51.attributes.RESOLUTION && _0x7bda51.attributes.RESOLUTION.height, _0x4cca2d = _0x7bda51.attributes.BANDWIDTH, _0x4cca2d = _0x4cca2d || _0x504cd5.Number.MAX_VALUE, {
					'bandwidth': _0x4cca2d,
					'width': _0x5e2c35,
					'height': _0x23b764,
					'playlist': _0x7bda51
				};
			});
			_0x2266e0(_0x41fb63, function (_0x57e7e5, _0x16ebac) {
				return _0x57e7e5.bandwidth - _0x16ebac.bandwidth;
			});
			_0x41fb63 = _0x41fb63.filter(function (_0x6101e4) {
				return !_0x5a5540.isIncompatible(_0x6101e4.playlist);
			});
			var _0xd5150e = _0x41fb63.filter(function (_0x22fba6) {
				return _0x5a5540.isEnabled(_0x22fba6.playlist);
			});
			if (!_0xd5150e.length) {
				_0xd5150e = _0x41fb63.filter(function (_0x2f329c) {
					return !_0x5a5540.isDisabled(_0x2f329c.playlist);
				});
			}
			var _0xe5fec0 = _0xd5150e.filter(function (_0x4aa36e) {
				return _0x4aa36e.bandwidth * _0x26fd19.BANDWIDTH_VARIANCE < _0x2077e8;
			}), _0x51956b = _0xe5fec0[_0xe5fec0.length - 1], _0x4f05e4 = _0xe5fec0.filter(function (_0x237784) {
				return _0x237784.bandwidth === _0x51956b.bandwidth;
			})[0], _0x4e8319 = _0xe5fec0.filter(function (_0x22235e) {
				return _0x22235e.width && _0x22235e.height;
			});
			_0x2266e0(_0x4e8319, function (_0x2386a8, _0x5dc23e) {
				return _0x2386a8.width - _0x5dc23e.width;
			});
			var _0xce9d99 = _0x4e8319.filter(function (_0x98d9d4) {
				return _0x98d9d4.width === _0x360509 && _0x98d9d4.height === _0x3fedd2;
			});
			_0x51956b = _0xce9d99[_0xce9d99.length - 1];
			var _0x20719c = _0xce9d99.filter(function (_0x241322) {
				return _0x241322.bandwidth === _0x51956b.bandwidth;
			})[0], _0x3dfe1d = void 0, _0x3b2595 = void 0, _0x32166d = void 0;
			!_0x20719c && (_0x3dfe1d = _0x4e8319.filter(function (_0x53e31a) {
				return _0x53e31a.width > _0x360509 || _0x53e31a.height > _0x3fedd2;
			}), _0x3b2595 = _0x3dfe1d.filter(function (_0x3f2f68) {
				return _0x3f2f68.width === _0x3dfe1d[0].width && _0x3f2f68.height === _0x3dfe1d[0].height;
			}), _0x51956b = _0x3b2595[_0x3b2595.length - 1], _0x32166d = _0x3b2595.filter(function (_0x38cd58) {
				return _0x38cd58.bandwidth === _0x51956b.bandwidth;
			})[0]);
			var _0x32c0bb = _0x32166d || _0x20719c || _0x4f05e4 || _0xd5150e[0] || _0x41fb63[0];
			return _0x32c0bb ? _0x32c0bb.playlist : null;
		}, _0x5986a4 = function _0x492585() {
			return _0x40e0b5(this.playlists.master, this.systemBandwidth, parseInt(_0x40e0d6(this.tech_.el(), 'width'), 10), parseInt(_0x40e0d6(this.tech_.el(), 'height'), 10));
		}, _0x16d4f5 = function _0x1359f1(_0x67c6c3) {
			var _0x4ab18a = _0x67c6c3.master, _0x84c35d = _0x67c6c3.currentTime, _0x1c830f = _0x67c6c3.bandwidth, _0x284519 = _0x67c6c3.duration, _0xb8a58c = _0x67c6c3.segmentDuration, _0x2c51ce = _0x67c6c3.timeUntilRebuffer, _0x5be8d8 = _0x67c6c3.currentTimeline, _0x55d5b7 = _0x67c6c3.syncController, _0x3aa7bc = _0x4ab18a.playlists.filter(function (_0xfa63e2) {
				return !_0x5a5540.isIncompatible(_0xfa63e2);
			}), _0x190aae = _0x3aa7bc.filter(_0x5a5540.isEnabled);
			if (!_0x190aae.length) {
				_0x190aae = _0x3aa7bc.filter(function (_0x44bd35) {
					return !_0x5a5540.isDisabled(_0x44bd35);
				});
			}
			var _0xea96 = _0x190aae.filter(_0x5a5540.hasAttribute.bind(null, 'BANDWIDTH')), _0x33e1aa = _0xea96.map(function (_0x6e6f29) {
				var _0x478c54 = _0x55d5b7.getSyncPoint(_0x6e6f29, _0x284519, _0x5be8d8, _0x84c35d), _0x4a84d0 = _0x478c54 ? 1 : 2, _0x532d7b = _0x5a5540.estimateSegmentRequestTime(_0xb8a58c, _0x1c830f, _0x6e6f29), _0x19b7c6 = _0x532d7b * _0x4a84d0 - _0x2c51ce;
				return {
					'playlist': _0x6e6f29,
					'rebufferingImpact': _0x19b7c6
				};
			}), _0x56d541 = _0x33e1aa.filter(function (_0x4b2b3e) {
				return _0x4b2b3e.rebufferingImpact <= 0;
			});
			_0x2266e0(_0x56d541, function (_0x1b81cc, _0x45b985) {
				return _0x548459(_0x45b985.playlist, _0x1b81cc.playlist);
			});
			if (_0x56d541.length) {
				return _0x56d541[0];
			}
			return _0x2266e0(_0x33e1aa, function (_0x4214b0, _0x4ac249) {
				return _0x4214b0.rebufferingImpact - _0x4ac249.rebufferingImpact;
			}), _0x33e1aa[0] || null;
		}, _0x445be3 = function _0x3f2f39() {
			var _0x15053f = this.playlists.master.playlists.filter(_0x5a5540.isEnabled);
			_0x2266e0(_0x15053f, function (_0x142de, _0xc2142d) {
				return _0x548459(_0x142de, _0xc2142d);
			});
			var _0x521aed = _0x15053f.filter(function (_0x5c8fdb) {
				return _0x4e9622(_0x5c8fdb.attributes.CODECS).videoCodec;
			});
			return _0x521aed[0] || null;
		}, _0x505678 = function _0x5b1a52(_0x245944, _0x2cd593, _0x5e92da) {
			for (var _0x66975c in _0x5e92da)
				if (!_0x245944[_0x66975c]) {
					_0x2cd593.trigger({
						'type': 'usage',
						'name': 'hls-608'
					});
					var _0x3f4a53 = _0x2cd593.textTracks().getTrackById(_0x66975c);
					if (_0x3f4a53) {
						_0x245944[_0x66975c] = _0x3f4a53;
					} else {
						_0x245944[_0x66975c] = _0x2cd593.addRemoteTextTrack({
							'kind': 'captions',
							'id': _0x66975c,
							'label': _0x66975c
						}, false).track;
					}
				}
		}, _0x4508fe = function _0x220f31(_0xb1ead8) {
			var _0x2791ce = _0xb1ead8.inbandTextTracks, _0x25c825 = _0xb1ead8.captionArray, _0x300b48 = _0xb1ead8.timestampOffset;
			if (!_0x25c825) {
				return;
			}
			var _0x14b20d = window.WebKitDataCue || window.VTTCue;
			_0x25c825.forEach(function (_0x2d3310) {
				var _0x41be34 = _0x2d3310.stream, _0xc183be = _0x2d3310.startTime, _0x1a04cc = _0x2d3310.endTime;
				if (!_0x2791ce[_0x41be34]) {
					return;
				}
				_0xc183be += _0x300b48;
				_0x1a04cc += _0x300b48;
				_0x2791ce[_0x41be34].addCue(new _0x14b20d(_0xc183be, _0x1a04cc, _0x2d3310.text));
			});
		}, _0x17e337 = function _0x33df62(_0x4a7c55, _0x539afc, _0x5d490f) {
			if (!_0x4a7c55 || !_0x539afc) {
				return false;
			}
			var _0x4bcb11 = _0x4a7c55.segments, _0x11464a = _0x5d490f === _0x4bcb11.length;
			return _0x4a7c55.endList && _0x539afc.readyState === 'open' && _0x11464a;
		}, _0x431d01 = function _0x187a22(_0x25b0c5) {
			return typeof _0x25b0c5 === 'number' && isFinite(_0x25b0c5);
		}, _0xcd8893 = function _0x45e644(_0xeb270d, _0x301d6c, _0x3f9e1d) {
			if (_0xeb270d !== 'main' || !_0x301d6c || !_0x3f9e1d) {
				return null;
			}
			if (!_0x3f9e1d.containsAudio && !_0x3f9e1d.containsVideo) {
				return 'Neither audio nor video found in segment.';
			}
			if (_0x301d6c.containsVideo && !_0x3f9e1d.containsVideo) {
				return 'Only audio found in segment when we expected video. We can\'t switch to audio only from a stream that had video. To get rid of this message, please add codec information to the manifest.';
			}
			if (!_0x301d6c.containsVideo && _0x3f9e1d.containsVideo) {
				return 'Video found in segment when we expected only audio. We can\'t switch to a stream with video from an audio only stream. To get rid of this message, please add codec information to the manifest.';
			}
			return null;
		}, _0x3cf8c3 = function _0x5b6953(_0x498123, _0x26538a, _0x136eba) {
			var _0x1c9897 = void 0;
			if (_0x498123.length && _0x498123.start(0) > 0 && _0x498123.start(0) < _0x26538a) {
				_0x1c9897 = _0x498123.start(0);
			} else {
				_0x1c9897 = _0x26538a - 30;
			}
			return Math.min(_0x1c9897, _0x26538a - _0x136eba);
		}, _0x7c7865 = function _0x4c15a2(_0x3d16df) {
			var _0x973d9d = _0x3d16df.segment, _0x229c84 = _0x973d9d.start, _0x20f934 = _0x973d9d.end, _0x1d2bcf = _0x3d16df.playlist, _0xc7c6d3 = _0x1d2bcf.mediaSequence, _0x429d5f = _0x1d2bcf.id, _0x289c7e = _0x1d2bcf.segments, _0x58571c = _0x289c7e === undefined ? [] : _0x289c7e, _0x582cb9 = _0x3d16df.mediaIndex, _0x1b1bd0 = _0x3d16df.timeline;
			return [
				'appending [' + _0x582cb9 + '] of [' + _0xc7c6d3 + ', ' + (_0xc7c6d3 + _0x58571c.length) + '] from playlist [' + _0x429d5f + ']',
				'[' + _0x229c84 + ' => ' + _0x20f934 + '] in timeline [' + _0x1b1bd0 + ']'
			].join(' ');
		}, _0x576ef8 = function (_0x288bc1) {
			_0x4b5e39(_0x42713e, _0x288bc1);
			function _0x42713e(_0x39257a) {
				_0x43a5ef(this, _0x42713e);
				var _0x52f8b7 = _0xb2fb9f(this, (_0x42713e['__proto__'] || Object.getPrototypeOf(_0x42713e)).call(this));
				if (!_0x39257a) {
					throw new TypeError('Initialization settings are required');
				}
				if (typeof _0x39257a.currentTime !== 'function') {
					throw new TypeError('No currentTime getter specified');
				}
				if (!_0x39257a.mediaSource) {
					throw new TypeError('No MediaSource specified');
				}
				return _0x52f8b7.bandwidth = _0x39257a.bandwidth, _0x52f8b7.throughput = {
					'rate': 0,
					'count': 0
				}, _0x52f8b7.roundTrip = NaN, _0x52f8b7.resetStats_(), _0x52f8b7.mediaIndex = null, _0x52f8b7.hasPlayed_ = _0x39257a.hasPlayed, _0x52f8b7.currentTime_ = _0x39257a.currentTime, _0x52f8b7.seekable_ = _0x39257a.seekable, _0x52f8b7.seeking_ = _0x39257a.seeking, _0x52f8b7.duration_ = _0x39257a.duration, _0x52f8b7.mediaSource_ = _0x39257a.mediaSource, _0x52f8b7.hls_ = _0x39257a.hls, _0x52f8b7.loaderType_ = _0x39257a.loaderType, _0x52f8b7.startingMedia_ = void 0, _0x52f8b7.segmentMetadataTrack_ = _0x39257a.segmentMetadataTrack, _0x52f8b7.goalBufferLength_ = _0x39257a.goalBufferLength, _0x52f8b7.sourceType_ = _0x39257a.sourceType, _0x52f8b7.inbandTextTracks_ = _0x39257a.inbandTextTracks, _0x52f8b7.state_ = 'INIT', _0x52f8b7.checkBufferTimeout_ = null, _0x52f8b7.error_ = void 0, _0x52f8b7.currentTimeline_ = -1, _0x52f8b7.pendingSegment_ = null, _0x52f8b7.mimeType_ = null, _0x52f8b7.sourceUpdater_ = null, _0x52f8b7.xhrOptions_ = null, _0x52f8b7.activeInitSegmentId_ = null, _0x52f8b7.initSegments_ = {}, _0x52f8b7.captionParser_ = new _0x414457(), _0x52f8b7.decrypter_ = _0x39257a.decrypter, _0x52f8b7.syncController_ = _0x39257a.syncController, _0x52f8b7.syncPoint_ = {
					'segmentIndex': 0,
					'time': 0
				}, _0x52f8b7.syncController_.on('syncinfoupdate', function () {
					return _0x52f8b7.trigger('syncinfoupdate');
				}), _0x52f8b7.mediaSource_.addEventListener('sourceopen', function () {
					return _0x52f8b7.ended_ = false;
				}), _0x52f8b7.fetchAtBuffer_ = false, _0x52f8b7.logger_ = _0x243d7c('SegmentLoader[' + _0x52f8b7.loaderType_ + ']'), Object.defineProperty(_0x52f8b7, 'state', {
					'get': function _0xc6c84f() {
						return this.state_;
					},
					'set': function _0x2af435(_0x2d9e00) {
						if (_0x2d9e00 !== this.state_) {
							this.logger_(this.state_ + ' -> ' + _0x2d9e00);
							this.state_ = _0x2d9e00;
						}
					}
				}), _0x52f8b7;
			}
			return _0x470055(_0x42713e, [
				{
					'key': 'resetStats_',
					'value': function _0x14cbcb() {
						this.mediaBytesTransferred = 0;
						this.mediaRequests = 0;
						this.mediaRequestsAborted = 0;
						this.mediaRequestsTimedout = 0;
						this.mediaRequestsErrored = 0;
						this.mediaTransferDuration = 0;
						this.mediaSecondsLoaded = 0;
					}
				},
				{
					'key': 'dispose',
					'value': function _0x1ef24b() {
						this.state = 'DISPOSED';
						this.pause();
						this.abort_();
						if (this.sourceUpdater_) {
							this.sourceUpdater_.dispose();
						}
						this.resetStats_();
						this.captionParser_.reset();
					}
				},
				{
					'key': 'abort',
					'value': function _0x3d59c3() {
						if (this.state !== 'WAITING') {
							if (this.pendingSegment_) {
								this.pendingSegment_ = null;
							}
							return;
						}
						this.abort_();
						this.state = 'READY';
						if (!this.paused()) {
							this.monitorBuffer_();
						}
					}
				},
				{
					'key': 'abort_',
					'value': function _0x5569af() {
						if (this.pendingSegment_) {
							this.pendingSegment_.abortRequests();
						}
						this.pendingSegment_ = null;
					}
				},
				{
					'key': 'error',
					'value': function _0x39ed4c(_0x2c2e53) {
						if (typeof _0x2c2e53 !== 'undefined') {
							this.error_ = _0x2c2e53;
						}
						return this.pendingSegment_ = null, this.error_;
					}
				},
				{
					'key': 'endOfStream',
					'value': function _0x53f7c1() {
						this.ended_ = true;
						this.pause();
						this.trigger('ended');
					}
				},
				{
					'key': 'buffered_',
					'value': function _0x2e65c5() {
						if (!this.sourceUpdater_) {
							return _0x465e34.createTimeRanges();
						}
						return this.sourceUpdater_.buffered();
					}
				},
				{
					'key': 'initSegment',
					'value': function _0x5debed(_0x2430da) {
						var _0x387b8f = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
						if (!_0x2430da) {
							return null;
						}
						var _0x355a48 = _0x330e89(_0x2430da), _0x56b397 = this.initSegments_[_0x355a48];
						if (_0x387b8f && !_0x56b397 && _0x2430da.bytes) {
							this.initSegments_[_0x355a48] = _0x56b397 = {
								'resolvedUri': _0x2430da.resolvedUri,
								'byterange': _0x2430da.byterange,
								'bytes': _0x2430da.bytes,
								'timescales': _0x2430da.timescales,
								'videoTrackIds': _0x2430da.videoTrackIds
							};
						}
						return _0x56b397 || _0x2430da;
					}
				},
				{
					'key': 'couldBeginLoading_',
					'value': function _0x31bab6() {
						return this.playlist_ && (this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();
					}
				},
				{
					'key': 'load',
					'value': function _0x50a511() {
						this.monitorBuffer_();
						if (!this.playlist_) {
							return;
						}
						this.syncController_.setDateTimeMapping(this.playlist_);
						if (this.state === 'INIT' && this.couldBeginLoading_()) {
							return this.init_();
						}
						if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {
							return;
						}
						this.state = 'READY';
					}
				},
				{
					'key': 'init_',
					'value': function _0x3e6017() {
						return this.state = 'READY', this.sourceUpdater_ = new _0xffb42f(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_), this.resetEverything(), this.monitorBuffer_();
					}
				},
				{
					'key': 'playlist',
					'value': function _0x9ce0e5(_0x57ab17) {
						var _0x3f2ddc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
						if (!_0x57ab17) {
							return;
						}
						var _0x49055b = this.playlist_, _0x3016f8 = this.pendingSegment_;
						this.playlist_ = _0x57ab17;
						this.xhrOptions_ = _0x3f2ddc;
						if (!this.hasPlayed_()) {
							_0x57ab17.syncInfo = {
								'mediaSequence': _0x57ab17.mediaSequence,
								'time': 0
							};
						}
						var _0x147a57 = _0x49055b ? _0x49055b.id : null;
						this.logger_('playlist update [' + _0x147a57 + ' => ' + _0x57ab17.id + ']');
						this.trigger('syncinfoupdate');
						if (this.state === 'INIT' && this.couldBeginLoading_()) {
							return this.init_();
						}
						if (!_0x49055b || _0x49055b.uri !== _0x57ab17.uri) {
							if (this.mediaIndex !== null) {
								this.resyncLoader();
							}
							return;
						}
						var _0x4808d7 = _0x57ab17.mediaSequence - _0x49055b.mediaSequence;
						this.logger_('live window shift [' + _0x4808d7 + ']');
						if (this.mediaIndex !== null) {
							this.mediaIndex -= _0x4808d7;
						}
						if (_0x3016f8) {
							_0x3016f8.mediaIndex -= _0x4808d7;
							if (_0x3016f8.mediaIndex >= 0) {
								_0x3016f8.segment = _0x57ab17.segments[_0x3016f8.mediaIndex];
							}
						}
						this.syncController_.saveExpiredSegmentInfo(_0x49055b, _0x57ab17);
					}
				},
				{
					'key': 'pause',
					'value': function _0x533627() {
						this.checkBufferTimeout_ && (_0x504cd5.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = null);
					}
				},
				{
					'key': 'paused',
					'value': function _0x5c3bb0() {
						return this.checkBufferTimeout_ === null;
					}
				},
				{
					'key': 'mimeType',
					'value': function _0xb325a4(_0x6862af, _0xefd1e7) {
						if (this.mimeType_) {
							return;
						}
						this.mimeType_ = _0x6862af;
						this.sourceBufferEmitter_ = _0xefd1e7;
						if (this.state === 'INIT' && this.couldBeginLoading_()) {
							this.init_();
						}
					}
				},
				{
					'key': 'resetEverything',
					'value': function _0x918c5b(_0x64fb81) {
						this.ended_ = false;
						this.resetLoader();
						this.remove(0, this.duration_(), _0x64fb81);
						this.captionParser_.clearAllCaptions();
						this.trigger('reseteverything');
					}
				},
				{
					'key': 'resetLoader',
					'value': function _0x258fd9() {
						this.fetchAtBuffer_ = false;
						this.resyncLoader();
					}
				},
				{
					'key': 'resyncLoader',
					'value': function _0x4bda02() {
						this.mediaIndex = null;
						this.syncPoint_ = null;
						this.abort();
					}
				},
				{
					'key': 'remove',
					'value': function _0x4511d8(_0x16818a, _0x4fe2dc, _0x41330a) {
						if (this.sourceUpdater_) {
							this.sourceUpdater_.remove(_0x16818a, _0x4fe2dc, _0x41330a);
						}
						_0x4c24ab(_0x16818a, _0x4fe2dc, this.segmentMetadataTrack_);
						if (this.inbandTextTracks_) {
							for (var _0x573891 in this.inbandTextTracks_)
								_0x4c24ab(_0x16818a, _0x4fe2dc, this.inbandTextTracks_[_0x573891]);
						}
					}
				},
				{
					'key': 'monitorBuffer_',
					'value': function _0x1e6cfd() {
						if (this.checkBufferTimeout_) {
							_0x504cd5.clearTimeout(this.checkBufferTimeout_);
						}
						this.checkBufferTimeout_ = _0x504cd5.setTimeout(this.monitorBufferTick_.bind(this), 1);
					}
				},
				{
					'key': 'monitorBufferTick_',
					'value': function _0xedae96() {
						if (this.state === 'READY') {
							this.fillBuffer_();
						}
						if (this.checkBufferTimeout_) {
							_0x504cd5.clearTimeout(this.checkBufferTimeout_);
						}
						this.checkBufferTimeout_ = _0x504cd5.setTimeout(this.monitorBufferTick_.bind(this), 500);
					}
				},
				{
					'key': 'fillBuffer_',
					'value': function _0x23b531() {
						if (this.sourceUpdater_.updating()) {
							return;
						}
						if (!this.syncPoint_) {
							this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());
						}
						var _0x48d696 = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
						if (!_0x48d696) {
							return;
						}
						var _0x577b82 = _0x17e337(this.playlist_, this.mediaSource_, _0x48d696.mediaIndex);
						if (_0x577b82) {
							this.endOfStream();
							return;
						}
						if (_0x48d696.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {
							return;
						}
						(_0x48d696.timeline !== this.currentTimeline_ || _0x48d696.startOfSegment !== null && _0x48d696.startOfSegment < this.sourceUpdater_.timestampOffset()) && (this.syncController_.reset(), _0x48d696.timestampOffset = _0x48d696.startOfSegment, this.captionParser_.clearAllCaptions());
						this.loadSegment_(_0x48d696);
					}
				},
				{
					'key': 'checkBuffer_',
					'value': function _0x316bc8(_0x348f20, _0x18ad47, _0xb05e93, _0x63dcf9, _0x13d176, _0x14f708) {
						var _0x104f45 = 0, _0x148a90 = void 0;
						if (_0x348f20.length) {
							_0x104f45 = _0x348f20.end(_0x348f20.length - 1);
						}
						var _0x33af06 = Math.max(0, _0x104f45 - _0x13d176);
						if (!_0x18ad47.segments.length) {
							return null;
						}
						if (_0x33af06 >= this.goalBufferLength_()) {
							return null;
						}
						if (!_0x63dcf9 && _0x33af06 >= 1) {
							return null;
						}
						if (_0x14f708 === null) {
							return _0xb05e93 = this.getSyncSegmentCandidate_(_0x18ad47), this.generateSegmentInfo_(_0x18ad47, _0xb05e93, null, true);
						}
						if (_0xb05e93 !== null) {
							var _0x37b319 = _0x18ad47.segments[_0xb05e93];
							if (_0x37b319 && _0x37b319.end) {
								_0x148a90 = _0x37b319.end;
							} else {
								_0x148a90 = _0x104f45;
							}
							return this.generateSegmentInfo_(_0x18ad47, _0xb05e93 + 1, _0x148a90, false);
						}
						if (this.fetchAtBuffer_) {
							var _0x16d32d = _0x5a5540.getMediaInfoForTime(_0x18ad47, _0x104f45, _0x14f708.segmentIndex, _0x14f708.time);
							_0xb05e93 = _0x16d32d.mediaIndex;
							_0x148a90 = _0x16d32d.startTime;
						} else {
							var _0x503d4c = _0x5a5540.getMediaInfoForTime(_0x18ad47, _0x13d176, _0x14f708.segmentIndex, _0x14f708.time);
							_0xb05e93 = _0x503d4c.mediaIndex;
							_0x148a90 = _0x503d4c.startTime;
						}
						return this.generateSegmentInfo_(_0x18ad47, _0xb05e93, _0x148a90, false);
					}
				},
				{
					'key': 'getSyncSegmentCandidate_',
					'value': function _0xb5abf1(_0x443147) {
						var _0x518292 = this;
						if (this.currentTimeline_ === -1) {
							return 0;
						}
						var _0x2f0610 = _0x443147.segments.map(function (_0x6bad73, _0xb2b7a7) {
							return {
								'timeline': _0x6bad73.timeline,
								'segmentIndex': _0xb2b7a7
							};
						}).filter(function (_0x22547c) {
							return _0x22547c.timeline === _0x518292.currentTimeline_;
						});
						if (_0x2f0610.length) {
							return _0x2f0610[Math.min(_0x2f0610.length - 1, 1)].segmentIndex;
						}
						return Math.max(_0x443147.segments.length - 1, 0);
					}
				},
				{
					'key': 'generateSegmentInfo_',
					'value': function _0x7655ac(_0xb589f9, _0x85b151, _0x216a68, _0x2e038c) {
						if (_0x85b151 < 0 || _0x85b151 >= _0xb589f9.segments.length) {
							return null;
						}
						var _0x5de773 = _0xb589f9.segments[_0x85b151];
						return {
							'requestId': 'segment-loader-' + Math.random(),
							'uri': _0x5de773.resolvedUri,
							'mediaIndex': _0x85b151,
							'isSyncRequest': _0x2e038c,
							'startOfSegment': _0x216a68,
							'playlist': _0xb589f9,
							'bytes': null,
							'encryptedBytes': null,
							'timestampOffset': null,
							'timeline': _0x5de773.timeline,
							'duration': _0x5de773.duration,
							'segment': _0x5de773
						};
					}
				},
				{
					'key': 'abortRequestEarly_',
					'value': function _0x1ec4ef(_0x4e00a0) {
						if (this.hls_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) {
							return false;
						}
						if (Date.now() - (_0x4e00a0.firstBytesReceivedAt || Date.now()) < 1000) {
							return false;
						}
						var _0x2fa2c2 = this.currentTime_(), _0x71e879 = _0x4e00a0.bandwidth, _0x48f9ee = this.pendingSegment_.duration, _0x5f1c3f = _0x5a5540.estimateSegmentRequestTime(_0x48f9ee, _0x71e879, this.playlist_, _0x4e00a0.bytesReceived), _0xfb1f8b = _0x1021c9(this.buffered_(), _0x2fa2c2, this.hls_.tech_.playbackRate()) - 1;
						if (_0x5f1c3f <= _0xfb1f8b) {
							return false;
						}
						var _0x271591 = _0x16d4f5({
							'master': this.hls_.playlists.master,
							'currentTime': _0x2fa2c2,
							'bandwidth': _0x71e879,
							'duration': this.duration_(),
							'segmentDuration': _0x48f9ee,
							'timeUntilRebuffer': _0xfb1f8b,
							'currentTimeline': this.currentTimeline_,
							'syncController': this.syncController_
						});
						if (!_0x271591) {
							return;
						}
						var _0x24c202 = _0x5f1c3f - _0xfb1f8b, _0x4026eb = _0x24c202 - _0x271591.rebufferingImpact, _0x370d79 = 0.5;
						if (_0xfb1f8b <= 0.03333333333333333) {
							_0x370d79 = 1;
						}
						if (!_0x271591.playlist || _0x271591.playlist.uri === this.playlist_.uri || _0x4026eb < _0x370d79) {
							return false;
						}
						return this.bandwidth = _0x271591.playlist.attributes.BANDWIDTH * 1.2 + 1, this.abort(), this.trigger('earlyabort'), true;
					}
				},
				{
					'key': 'handleProgress_',
					'value': function _0x8580f5(_0x38d6fe, _0x241de1) {
						if (!this.pendingSegment_ || _0x241de1.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(_0x241de1.stats)) {
							return;
						}
						this.trigger('progress');
					}
				},
				{
					'key': 'loadSegment_',
					'value': function _0x11a323(_0x37d376) {
						this.state = 'WAITING';
						this.pendingSegment_ = _0x37d376;
						this.trimBackBuffer_(_0x37d376);
						_0x37d376.abortRequests = _0x276f52(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(_0x37d376), this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));
					}
				},
				{
					'key': 'trimBackBuffer_',
					'value': function _0x1d4d2e(_0x1a36dc) {
						var _0xddf093 = _0x3cf8c3(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
						if (_0xddf093 > 0) {
							this.remove(0, _0xddf093);
						}
					}
				},
				{
					'key': 'createSimplifiedSegmentObj_',
					'value': function _0x1147dd(_0x588361) {
						var _0x2882ec = _0x588361.segment, _0x50b947 = {
							'resolvedUri': _0x2882ec.resolvedUri,
							'byterange': _0x2882ec.byterange,
							'requestId': _0x588361.requestId
						};
						if (_0x2882ec.key) {
							var _0x2a2938 = _0x2882ec.key.iv || new Uint32Array([
								0,
								0,
								0,
								_0x588361.mediaIndex + _0x588361.playlist.mediaSequence
							]);
							_0x50b947.key = {
								'resolvedUri': _0x2882ec.key.resolvedUri,
								'iv': _0x2a2938
							};
						}
						if (_0x2882ec.map) {
							_0x50b947.map = this.initSegment(_0x2882ec.map);
						}
						return _0x50b947;
					}
				},
				{
					'key': 'segmentRequestFinished_',
					'value': function _0x246087(_0x288ece, _0xe183ca) {
						this.mediaRequests += 1;
						_0xe183ca.stats && (this.mediaBytesTransferred += _0xe183ca.stats.bytesReceived, this.mediaTransferDuration += _0xe183ca.stats.roundTripTime);
						if (!this.pendingSegment_) {
							this.mediaRequestsAborted += 1;
							return;
						}
						if (_0xe183ca.requestId !== this.pendingSegment_.requestId) {
							return;
						}
						if (_0x288ece) {
							this.pendingSegment_ = null;
							this.state = 'READY';
							if (_0x288ece.code === _0x37262f.ABORTED) {
								this.mediaRequestsAborted += 1;
								return;
							}
							this.pause();
							if (_0x288ece.code === _0x37262f.TIMEOUT) {
								this.mediaRequestsTimedout += 1;
								this.bandwidth = 1;
								this.roundTrip = NaN;
								this.trigger('bandwidthupdate');
								return;
							}
							this.mediaRequestsErrored += 1;
							this.error(_0x288ece);
							this.trigger('error');
							return;
						}
						this.bandwidth = _0xe183ca.stats.bandwidth;
						this.roundTrip = _0xe183ca.stats.roundTripTime;
						if (_0xe183ca.map) {
							_0xe183ca.map = this.initSegment(_0xe183ca.map, true);
						}
						this.processSegmentResponse_(_0xe183ca);
					}
				},
				{
					'key': 'processSegmentResponse_',
					'value': function _0x5acc52(_0x54e9ae) {
						var _0x562f88 = this.pendingSegment_;
						_0x562f88.bytes = _0x54e9ae.bytes;
						if (_0x54e9ae.map) {
							_0x562f88.segment.map.bytes = _0x54e9ae.map.bytes;
						}
						_0x562f88.endOfAllRequests = _0x54e9ae.endOfAllRequests;
						_0x54e9ae.fmp4Captions && (_0x505678(this.inbandTextTracks_, this.hls_.tech_, _0x54e9ae.captionStreams), _0x4508fe({
							'inbandTextTracks': this.inbandTextTracks_,
							'captionArray': _0x54e9ae.fmp4Captions,
							'timestampOffset': 0
						}), this.captionParser_.clearParsedCaptions());
						this.handleSegment_();
					}
				},
				{
					'key': 'handleSegment_',
					'value': function _0x8cf0c1() {
						var _0x169c27 = this;
						if (!this.pendingSegment_) {
							this.state = 'READY';
							return;
						}
						var _0x336aec = this.pendingSegment_, _0x611b5b = _0x336aec.segment, _0x15598d = this.syncController_.probeSegmentInfo(_0x336aec);
						if (typeof this.startingMedia_ === 'undefined' && _0x15598d && (_0x15598d.containsAudio || _0x15598d.containsVideo)) {
							this.startingMedia_ = {
								'containsAudio': _0x15598d.containsAudio,
								'containsVideo': _0x15598d.containsVideo
							};
						}
						var _0x34d076 = _0xcd8893(this.loaderType_, this.startingMedia_, _0x15598d);
						if (_0x34d076) {
							this.error({
								'message': _0x34d076,
								'blacklistDuration': Infinity
							});
							this.trigger('error');
							return;
						}
						if (_0x336aec.isSyncRequest) {
							this.trigger('syncinfoupdate');
							this.pendingSegment_ = null;
							this.state = 'READY';
							return;
						}
						_0x336aec.timestampOffset !== null && _0x336aec.timestampOffset !== this.sourceUpdater_.timestampOffset() && (this.sourceUpdater_.timestampOffset(_0x336aec.timestampOffset), this.trigger('timestampoffset'));
						var _0x2f13fd = this.syncController_.mappingForTimeline(_0x336aec.timeline);
						if (_0x2f13fd !== null) {
							this.trigger({
								'type': 'segmenttimemapping',
								'mapping': _0x2f13fd
							});
						}
						this.state = 'APPENDING';
						if (_0x611b5b.map) {
							var _0x4bb0ae = _0x330e89(_0x611b5b.map);
							if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== _0x4bb0ae) {
								var _0x5d9ea5 = this.initSegment(_0x611b5b.map);
								this.sourceUpdater_.appendBuffer(_0x5d9ea5.bytes, function () {
									_0x169c27.activeInitSegmentId_ = _0x4bb0ae;
								});
							}
						}
						_0x336aec.byteLength = _0x336aec.bytes.byteLength;
						if (typeof _0x611b5b.start === 'number' && typeof _0x611b5b.end === 'number') {
							this.mediaSecondsLoaded += _0x611b5b.end - _0x611b5b.start;
						} else {
							this.mediaSecondsLoaded += _0x611b5b.duration;
						}
						this.logger_(_0x7c7865(_0x336aec));
						this.sourceUpdater_.appendBuffer(_0x336aec.bytes, this.handleUpdateEnd_.bind(this));
					}
				},
				{
					'key': 'handleUpdateEnd_',
					'value': function _0x5650d6() {
						if (!this.pendingSegment_) {
							this.state = 'READY';
							if (!this.paused()) {
								this.monitorBuffer_();
							}
							return;
						}
						var _0x3d7cb7 = this.pendingSegment_, _0x55945c = _0x3d7cb7.segment, _0x361ad8 = this.mediaIndex !== null;
						this.pendingSegment_ = null;
						this.recordThroughput_(_0x3d7cb7);
						this.addSegmentMetadataCue_(_0x3d7cb7);
						this.state = 'READY';
						this.mediaIndex = _0x3d7cb7.mediaIndex;
						this.fetchAtBuffer_ = true;
						this.currentTimeline_ = _0x3d7cb7.timeline;
						this.trigger('syncinfoupdate');
						if (_0x55945c.end && this.currentTime_() - _0x55945c.end > _0x3d7cb7.playlist.targetDuration * 3) {
							this.resetEverything();
							return;
						}
						if (_0x361ad8) {
							this.trigger('bandwidthupdate');
						}
						this.trigger('progress');
						var _0x37e03a = _0x17e337(_0x3d7cb7.playlist, this.mediaSource_, _0x3d7cb7.mediaIndex + 1);
						if (_0x37e03a) {
							this.endOfStream();
						}
						if (!this.paused()) {
							this.monitorBuffer_();
						}
					}
				},
				{
					'key': 'recordThroughput_',
					'value': function _0x2800b0(_0x317196) {
						var _0x27ae2c = this.throughput.rate, _0x38c4aa = Date.now() - _0x317196.endOfAllRequests + 1, _0x93188e = Math.floor(_0x317196.byteLength / _0x38c4aa * 8 * 1000);
						this.throughput.rate += (_0x93188e - _0x27ae2c) / ++this.throughput.count;
					}
				},
				{
					'key': 'addSegmentMetadataCue_',
					'value': function _0x23a20d(_0x4e550c) {
						if (!this.segmentMetadataTrack_) {
							return;
						}
						var _0x2f5307 = _0x4e550c.segment, _0xe14f6 = _0x2f5307.start, _0x20e69a = _0x2f5307.end;
						if (!_0x431d01(_0xe14f6) || !_0x431d01(_0x20e69a)) {
							return;
						}
						_0x4c24ab(_0xe14f6, _0x20e69a, this.segmentMetadataTrack_);
						var _0x398001 = _0x504cd5.WebKitDataCue || _0x504cd5.VTTCue, _0xfc9656 = {
							'bandwidth': _0x4e550c.playlist.attributes.BANDWIDTH,
							'resolution': _0x4e550c.playlist.attributes.RESOLUTION,
							'codecs': _0x4e550c.playlist.attributes.CODECS,
							'byteLength': _0x4e550c.byteLength,
							'uri': _0x4e550c.uri,
							'timeline': _0x4e550c.timeline,
							'playlist': _0x4e550c.playlist.uri,
							'start': _0xe14f6,
							'end': _0x20e69a
						}, _0x44c03d = JSON.stringify(_0xfc9656), _0x30ee20 = new _0x398001(_0xe14f6, _0x20e69a, _0x44c03d);
						_0x30ee20.value = _0xfc9656;
						this.segmentMetadataTrack_.addCue(_0x30ee20);
					}
				}
			]), _0x42713e;
		}(_0x465e34.EventTarget), _0x9d48d0 = function _0x1bd905(_0x5453db) {
			return decodeURIComponent(escape(String.fromCharCode.apply(null, _0x5453db)));
		}, _0x59def1 = new Uint8Array('\n\n'.split('').map(function (_0x1c1ca1) {
			return _0x1c1ca1.charCodeAt(0);
		})), _0x214d23 = function (_0x7adae2) {
			_0x4b5e39(_0x512e13, _0x7adae2);
			function _0x512e13(_0xb60f1a) {
				var _0x95b103 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
				_0x43a5ef(this, _0x512e13);
				var _0x35d8bf = _0xb2fb9f(this, (_0x512e13['__proto__'] || Object.getPrototypeOf(_0x512e13)).call(this, _0xb60f1a, _0x95b103));
				return _0x35d8bf.mediaSource_ = null, _0x35d8bf.subtitlesTrack_ = null, _0x35d8bf;
			}
			return _0x470055(_0x512e13, [
				{
					'key': 'buffered_',
					'value': function _0x2992a8() {
						if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {
							return _0x465e34.createTimeRanges();
						}
						var _0xd4891c = this.subtitlesTrack_.cues, _0x4d8d76 = _0xd4891c[0].startTime, _0x405e87 = _0xd4891c[_0xd4891c.length - 1].startTime;
						return _0x465e34.createTimeRanges([[
							_0x4d8d76,
							_0x405e87
						]]);
					}
				},
				{
					'key': 'initSegment',
					'value': function _0x988132(_0x283456) {
						var _0x425469 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
						if (!_0x283456) {
							return null;
						}
						var _0x3d286d = _0x330e89(_0x283456), _0x114f60 = this.initSegments_[_0x3d286d];
						if (_0x425469 && !_0x114f60 && _0x283456.bytes) {
							var _0x5cd8c5 = _0x59def1.byteLength + _0x283456.bytes.byteLength, _0x599b91 = new Uint8Array(_0x5cd8c5);
							_0x599b91.set(_0x283456.bytes);
							_0x599b91.set(_0x59def1, _0x283456.bytes.byteLength);
							this.initSegments_[_0x3d286d] = _0x114f60 = {
								'resolvedUri': _0x283456.resolvedUri,
								'byterange': _0x283456.byterange,
								'bytes': _0x599b91
							};
						}
						return _0x114f60 || _0x283456;
					}
				},
				{
					'key': 'couldBeginLoading_',
					'value': function _0x26f176() {
						return this.playlist_ && this.subtitlesTrack_ && !this.paused();
					}
				},
				{
					'key': 'init_',
					'value': function _0xf4b558() {
						return this.state = 'READY', this.resetEverything(), this.monitorBuffer_();
					}
				},
				{
					'key': 'track',
					'value': function _0x538d4e(_0x3d3996) {
						if (typeof _0x3d3996 === 'undefined') {
							return this.subtitlesTrack_;
						}
						this.subtitlesTrack_ = _0x3d3996;
						if (this.state === 'INIT' && this.couldBeginLoading_()) {
							this.init_();
						}
						return this.subtitlesTrack_;
					}
				},
				{
					'key': 'remove',
					'value': function _0x53af9e(_0x2e2b09, _0x42008b) {
						_0x4c24ab(_0x2e2b09, _0x42008b, this.subtitlesTrack_);
					}
				},
				{
					'key': 'fillBuffer_',
					'value': function _0x3f9dc5() {
						var _0x549aec = this;
						if (!this.syncPoint_) {
							this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());
						}
						var _0x522b77 = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
						_0x522b77 = this.skipEmptySegments_(_0x522b77);
						if (!_0x522b77) {
							return;
						}
						if (this.syncController_.timestampOffsetForTimeline(_0x522b77.timeline) === null) {
							var _0x4cfbf4 = function _0x54e87c() {
								_0x549aec.state = 'READY';
								if (!_0x549aec.paused()) {
									_0x549aec.monitorBuffer_();
								}
							};
							this.syncController_.one('timestampoffset', _0x4cfbf4);
							this.state = 'WAITING_ON_TIMELINE';
							return;
						}
						this.loadSegment_(_0x522b77);
					}
				},
				{
					'key': 'skipEmptySegments_',
					'value': function _0xca3c25(_0x4ed0c1) {
						while (_0x4ed0c1 && _0x4ed0c1.segment.empty) {
							_0x4ed0c1 = this.generateSegmentInfo_(_0x4ed0c1.playlist, _0x4ed0c1.mediaIndex + 1, _0x4ed0c1.startOfSegment + _0x4ed0c1.duration, _0x4ed0c1.isSyncRequest);
						}
						return _0x4ed0c1;
					}
				},
				{
					'key': 'handleSegment_',
					'value': function _0x3344bd() {
						var _0x3d3e9b = this;
						if (!this.pendingSegment_ || !this.subtitlesTrack_) {
							this.state = 'READY';
							return;
						}
						this.state = 'APPENDING';
						var _0x633795 = this.pendingSegment_, _0x14741f = _0x633795.segment;
						if (typeof _0x504cd5.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {
							var _0x57c316 = function _0x572a15() {
								_0x3d3e9b.handleSegment_();
							};
							this.state = 'WAITING_ON_VTTJS';
							this.subtitlesTrack_.tech_.one('vttjsloaded', _0x57c316);
							this.subtitlesTrack_.tech_.one('vttjserror', function () {
								_0x3d3e9b.subtitlesTrack_.tech_.off('vttjsloaded', _0x57c316);
								_0x3d3e9b.error({ 'message': 'Error loading vtt.js' });
								_0x3d3e9b.state = 'READY';
								_0x3d3e9b.pause();
								_0x3d3e9b.trigger('error');
							});
							return;
						}
						_0x14741f.requested = true;
						try {
							this.parseVTTCues_(_0x633795);
						} catch (_0x1b0dd3) {
							return this.error({ 'message': _0x1b0dd3.message }), this.state = 'READY', this.pause(), this.trigger('error');
						}
						this.updateTimeMapping_(_0x633795, this.syncController_.timelines[_0x633795.timeline], this.playlist_);
						if (_0x633795.isSyncRequest) {
							this.trigger('syncinfoupdate');
							this.pendingSegment_ = null;
							this.state = 'READY';
							return;
						}
						_0x633795.byteLength = _0x633795.bytes.byteLength;
						this.mediaSecondsLoaded += _0x14741f.duration;
						if (_0x633795.cues.length) {
							this.remove(_0x633795.cues[0].endTime, _0x633795.cues[_0x633795.cues.length - 1].endTime);
						}
						_0x633795.cues.forEach(function (_0x498734) {
							_0x3d3e9b.subtitlesTrack_.addCue(_0x498734);
						});
						this.handleUpdateEnd_();
					}
				},
				{
					'key': 'parseVTTCues_',
					'value': function _0x4411f6(_0x449b9e) {
						var _0x307dc1 = void 0, _0x6cb7d5 = false;
						if (typeof _0x504cd5.TextDecoder === 'function') {
							_0x307dc1 = new _0x504cd5.TextDecoder('utf8');
						} else {
							_0x307dc1 = _0x504cd5.WebVTT.StringDecoder();
							_0x6cb7d5 = true;
						}
						var _0x27a7cc = new _0x504cd5.WebVTT.Parser(_0x504cd5, _0x504cd5.vttjs, _0x307dc1);
						_0x449b9e.cues = [];
						_0x449b9e.timestampmap = {
							'MPEGTS': 0,
							'LOCAL': 0
						};
						_0x27a7cc.oncue = _0x449b9e.cues.push.bind(_0x449b9e.cues);
						_0x27a7cc.ontimestampmap = function (_0x1ca816) {
							return _0x449b9e.timestampmap = _0x1ca816;
						};
						_0x27a7cc.onparsingerror = function (_0x59e824) {
							_0x465e34.log.warn('Error encountered when parsing cues: ' + _0x59e824.message);
						};
						if (_0x449b9e.segment.map) {
							var _0xd1ed29 = _0x449b9e.segment.map.bytes;
							if (_0x6cb7d5) {
								_0xd1ed29 = _0x9d48d0(_0xd1ed29);
							}
							_0x27a7cc.parse(_0xd1ed29);
						}
						var _0x34254f = _0x449b9e.bytes;
						if (_0x6cb7d5) {
							_0x34254f = _0x9d48d0(_0x34254f);
						}
						_0x27a7cc.parse(_0x34254f);
						_0x27a7cc.flush();
					}
				},
				{
					'key': 'updateTimeMapping_',
					'value': function _0xe084c5(_0xd2f039, _0x59a48c, _0xd2b000) {
						var _0x31c9aa = _0xd2f039.segment;
						if (!_0x59a48c) {
							return;
						}
						if (!_0xd2f039.cues.length) {
							_0x31c9aa.empty = true;
							return;
						}
						var _0x1db348 = _0xd2f039.timestampmap, _0x53d90d = _0x1db348.MPEGTS / 90000 - _0x1db348.LOCAL + _0x59a48c.mapping;
						_0xd2f039.cues.forEach(function (_0x184830) {
							_0x184830.startTime += _0x53d90d;
							_0x184830.endTime += _0x53d90d;
						});
						if (!_0xd2b000.syncInfo) {
							var _0x1e7862 = _0xd2f039.cues[0].startTime, _0x26cae3 = _0xd2f039.cues[_0xd2f039.cues.length - 1].startTime;
							_0xd2b000.syncInfo = {
								'mediaSequence': _0xd2b000.mediaSequence + _0xd2f039.mediaIndex,
								'time': Math.min(_0x1e7862, _0x26cae3 - _0x31c9aa.duration)
							};
						}
					}
				}
			]), _0x512e13;
		}(_0x576ef8), _0xea9ea4 = function _0x395b98(_0x111ece, _0x13bc62) {
			var _0x2788f6 = _0x111ece.cues;
			for (var _0x4cb2a7 = 0; _0x4cb2a7 < _0x2788f6.length; _0x4cb2a7++) {
				var _0x6ec620 = _0x2788f6[_0x4cb2a7];
				if (_0x13bc62 >= _0x6ec620.adStartTime && _0x13bc62 <= _0x6ec620.adEndTime) {
					return _0x6ec620;
				}
			}
			return null;
		}, _0x2bd00c = function _0x262185(_0x3ca253, _0x20f095) {
			var _0x58cf01 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
			if (!_0x3ca253.segments) {
				return;
			}
			var _0x5cce73 = _0x58cf01, _0x835b8e = void 0;
			for (var _0x5eb2aa = 0; _0x5eb2aa < _0x3ca253.segments.length; _0x5eb2aa++) {
				var _0x19022e = _0x3ca253.segments[_0x5eb2aa];
				if (!_0x835b8e) {
					_0x835b8e = _0xea9ea4(_0x20f095, _0x5cce73 + _0x19022e.duration / 2);
				}
				if (_0x835b8e) {
					if ('cueIn' in _0x19022e) {
						_0x835b8e.endTime = _0x5cce73;
						_0x835b8e.adEndTime = _0x5cce73;
						_0x5cce73 += _0x19022e.duration;
						_0x835b8e = null;
						continue;
					}
					if (_0x5cce73 < _0x835b8e.endTime) {
						_0x5cce73 += _0x19022e.duration;
						continue;
					}
					_0x835b8e.endTime += _0x19022e.duration;
				} else {
					if ('cueOut' in _0x19022e) {
						_0x835b8e = new _0x504cd5.VTTCue(_0x5cce73, _0x5cce73 + _0x19022e.duration, _0x19022e.cueOut);
						_0x835b8e.adStartTime = _0x5cce73;
						_0x835b8e.adEndTime = _0x5cce73 + parseFloat(_0x19022e.cueOut);
						_0x20f095.addCue(_0x835b8e);
					}
					if ('cueOutCont' in _0x19022e) {
						var _0x5460ea = void 0, _0x5acc46 = void 0, _0x2a9028 = _0x19022e.cueOutCont.split('/').map(parseFloat), _0x95fc14 = _0x1b6cd5(_0x2a9028, 2);
						_0x5460ea = _0x95fc14[0];
						_0x5acc46 = _0x95fc14[1];
						_0x835b8e = new _0x504cd5.VTTCue(_0x5cce73, _0x5cce73 + _0x19022e.duration, '');
						_0x835b8e.adStartTime = _0x5cce73 - _0x5460ea;
						_0x835b8e.adEndTime = _0x835b8e.adStartTime + _0x5acc46;
						_0x20f095.addCue(_0x835b8e);
					}
				}
				_0x5cce73 += _0x19022e.duration;
			}
		}, _0x5b76a1 = _0x41fa43.inspect, _0x1f02b6 = [
			{
				'name': 'VOD',
				'run': function _0x445145(_0x34e61f, _0x2ed48a, _0x410944, _0xab0094, _0x5dc969) {
					if (_0x410944 !== Infinity) {
						return _0x3047e6;
					}
					return null;
				}
			},
			{
				'name': 'ProgramDateTime',
				'run': function _0x5cf1be(_0x45da07, _0x76c9f9, _0x4b0cb9, _0x391b10, _0x3f3a00) {
					if (!_0x45da07.datetimeToDisplayTime) {
						return null;
					}
					var _0x406a11 = _0x76c9f9.segments || [], _0x561a79 = null, _0x1bad11 = null;
					_0x3f3a00 = _0x3f3a00 || 0;
					for (var _0x411fa2 = 0; _0x411fa2 < _0x406a11.length; _0x411fa2++) {
						var _0x1f13fc = _0x406a11[_0x411fa2];
						if (_0x1f13fc.dateTimeObject) {
							var _0x323443 = _0x1f13fc.dateTimeObject.getTime() / 1000, _0x5ee112 = _0x323443 + _0x45da07.datetimeToDisplayTime, _0x3c9646 = Math.abs(_0x3f3a00 - _0x5ee112);
							if (_0x1bad11 !== null && _0x1bad11 < _0x3c9646) {
								break;
							}
							_0x1bad11 = _0x3c9646;
							_0x561a79 = {
								'time': _0x5ee112,
								'segmentIndex': _0x411fa2
							};
						}
					}
					return _0x561a79;
				}
			},
			{
				'name': 'Segment',
				'run': function _0x518fc7(_0x2cc692, _0x5ebf0a, _0x5c9453, _0x198bfe, _0x5c8f28) {
					var _0x59f9a4 = _0x5ebf0a.segments || [], _0x7103a2 = null, _0x56499 = null;
					_0x5c8f28 = _0x5c8f28 || 0;
					for (var _0x5218c2 = 0; _0x5218c2 < _0x59f9a4.length; _0x5218c2++) {
						var _0xe3f58f = _0x59f9a4[_0x5218c2];
						if (_0xe3f58f.timeline === _0x198bfe && typeof _0xe3f58f.start !== 'undefined') {
							var _0x30d078 = Math.abs(_0x5c8f28 - _0xe3f58f.start);
							if (_0x56499 !== null && _0x56499 < _0x30d078) {
								break;
							}
							(!_0x7103a2 || _0x56499 === null || _0x56499 >= _0x30d078) && (_0x56499 = _0x30d078, _0x7103a2 = {
								'time': _0xe3f58f.start,
								'segmentIndex': _0x5218c2
							});
						}
					}
					return _0x7103a2;
				}
			},
			{
				'name': 'Discontinuity',
				'run': function _0xc5ed65(_0xbd773f, _0x55b535, _0x1c975c, _0x5c6cf8, _0x2f3be1) {
					var _0x36abbc = null;
					_0x2f3be1 = _0x2f3be1 || 0;
					if (_0x55b535.discontinuityStarts && _0x55b535.discontinuityStarts.length) {
						var _0x426248 = null;
						for (var _0x4e1e62 = 0; _0x4e1e62 < _0x55b535.discontinuityStarts.length; _0x4e1e62++) {
							var _0x29a9e7 = _0x55b535.discontinuityStarts[_0x4e1e62], _0x31fe9c = _0x55b535.discontinuitySequence + _0x4e1e62 + 1, _0x1be8a4 = _0xbd773f.discontinuities[_0x31fe9c];
							if (_0x1be8a4) {
								var _0x7ed441 = Math.abs(_0x2f3be1 - _0x1be8a4.time);
								if (_0x426248 !== null && _0x426248 < _0x7ed441) {
									break;
								}
								(!_0x36abbc || _0x426248 === null || _0x426248 >= _0x7ed441) && (_0x426248 = _0x7ed441, _0x36abbc = {
									'time': _0x1be8a4.time,
									'segmentIndex': _0x29a9e7
								});
							}
						}
					}
					return _0x36abbc;
				}
			},
			{
				'name': 'Playlist',
				'run': function _0x4283b3(_0x1441c6, _0x1b5d02, _0x3db703, _0x422ac5, _0x28115e) {
					if (_0x1b5d02.syncInfo) {
						var _0x265111 = {
							'time': _0x1b5d02.syncInfo.time,
							'segmentIndex': _0x1b5d02.syncInfo.mediaSequence - _0x1b5d02.mediaSequence
						};
						return _0x265111;
					}
					return null;
				}
			}
		], _0x1bb179 = function (_0x33bcd8) {
			_0x4b5e39(_0x5ba4d3, _0x33bcd8);
			function _0x5ba4d3() {
				_0x43a5ef(this, _0x5ba4d3);
				var _0x3cc1c1 = _0xb2fb9f(this, (_0x5ba4d3['__proto__'] || Object.getPrototypeOf(_0x5ba4d3)).call(this));
				return _0x3cc1c1.inspectCache_ = undefined, _0x3cc1c1.timelines = [], _0x3cc1c1.discontinuities = [], _0x3cc1c1.datetimeToDisplayTime = null, _0x3cc1c1.logger_ = _0x243d7c('SyncController'), _0x3cc1c1;
			}
			return _0x470055(_0x5ba4d3, [
				{
					'key': 'getSyncPoint',
					'value': function _0x2dfcb8(_0x506eac, _0x1f7fcb, _0x33447d, _0x3ed61e) {
						var _0x153e4b = this.runStrategies_(_0x506eac, _0x1f7fcb, _0x33447d, _0x3ed61e);
						if (!_0x153e4b.length) {
							return null;
						}
						return this.selectSyncPoint_(_0x153e4b, {
							'key': 'time',
							'value': _0x3ed61e
						});
					}
				},
				{
					'key': 'getExpiredTime',
					'value': function _0x522b28(_0x46b008, _0x365430) {
						if (!_0x46b008 || !_0x46b008.segments) {
							return null;
						}
						var _0x1e06ea = this.runStrategies_(_0x46b008, _0x365430, _0x46b008.discontinuitySequence, 0);
						if (!_0x1e06ea.length) {
							return null;
						}
						var _0x156c32 = this.selectSyncPoint_(_0x1e06ea, {
							'key': 'segmentIndex',
							'value': 0
						});
						if (_0x156c32.segmentIndex > 0) {
							_0x156c32.time *= -1;
						}
						return Math.abs(_0x156c32.time + _0x509849(_0x46b008, _0x156c32.segmentIndex, 0));
					}
				},
				{
					'key': 'runStrategies_',
					'value': function _0x413bab(_0x39b376, _0x48d91d, _0x2da23c, _0x444aee) {
						var _0x583769 = [];
						for (var _0x41161a = 0; _0x41161a < _0x1f02b6.length; _0x41161a++) {
							var _0x2a89ae = _0x1f02b6[_0x41161a], _0x384aec = _0x2a89ae.run(this, _0x39b376, _0x48d91d, _0x2da23c, _0x444aee);
							_0x384aec && (_0x384aec.strategy = _0x2a89ae.name, _0x583769.push({
								'strategy': _0x2a89ae.name,
								'syncPoint': _0x384aec
							}));
						}
						return _0x583769;
					}
				},
				{
					'key': 'selectSyncPoint_',
					'value': function _0x26b621(_0x20f1d4, _0x35d260) {
						var _0x2ba003 = _0x20f1d4[0].syncPoint, _0x1584a9 = Math.abs(_0x20f1d4[0].syncPoint[_0x35d260.key] - _0x35d260.value), _0x34d87b = _0x20f1d4[0].strategy;
						for (var _0x177cfc = 1; _0x177cfc < _0x20f1d4.length; _0x177cfc++) {
							var _0x1a8b7f = Math.abs(_0x20f1d4[_0x177cfc].syncPoint[_0x35d260.key] - _0x35d260.value);
							if (_0x1a8b7f < _0x1584a9) {
								_0x1584a9 = _0x1a8b7f;
								_0x2ba003 = _0x20f1d4[_0x177cfc].syncPoint;
								_0x34d87b = _0x20f1d4[_0x177cfc].strategy;
							}
						}
						return this.logger_('syncPoint for [' + _0x35d260.key + ': ' + _0x35d260.value + '] chosen with strategy' + (' [' + _0x34d87b + ']: [time:' + _0x2ba003.time + ',') + (' segmentIndex:' + _0x2ba003.segmentIndex + ']')), _0x2ba003;
					}
				},
				{
					'key': 'saveExpiredSegmentInfo',
					'value': function _0x298ef9(_0x3c6541, _0x57f096) {
						var _0x265cc6 = _0x57f096.mediaSequence - _0x3c6541.mediaSequence;
						for (var _0x24bc56 = _0x265cc6 - 1; _0x24bc56 >= 0; _0x24bc56--) {
							var _0x4dfff4 = _0x3c6541.segments[_0x24bc56];
							if (_0x4dfff4 && typeof _0x4dfff4.start !== 'undefined') {
								_0x57f096.syncInfo = {
									'mediaSequence': _0x3c6541.mediaSequence + _0x24bc56,
									'time': _0x4dfff4.start
								};
								this.logger_('playlist refresh sync: [time:' + _0x57f096.syncInfo.time + ',' + (' mediaSequence: ' + _0x57f096.syncInfo.mediaSequence + ']'));
								this.trigger('syncinfoupdate');
								break;
							}
						}
					}
				},
				{
					'key': 'setDateTimeMapping',
					'value': function _0xb458e3(_0x1a97eb) {
						if (!this.datetimeToDisplayTime && _0x1a97eb.segments && _0x1a97eb.segments.length && _0x1a97eb.segments[0].dateTimeObject) {
							var _0x3005fb = _0x1a97eb.segments[0].dateTimeObject.getTime() / 1000;
							this.datetimeToDisplayTime = -_0x3005fb;
						}
					}
				},
				{
					'key': 'reset',
					'value': function _0x51b574() {
						this.inspectCache_ = undefined;
					}
				},
				{
					'key': 'probeSegmentInfo',
					'value': function _0x45a5c6(_0x40e5e4) {
						var _0x87c0fe = _0x40e5e4.segment, _0x5b27b1 = _0x40e5e4.playlist, _0x21e684 = void 0;
						if (_0x87c0fe.map) {
							_0x21e684 = this.probeMp4Segment_(_0x40e5e4);
						} else {
							_0x21e684 = this.probeTsSegment_(_0x40e5e4);
						}
						if (_0x21e684) {
							if (this.calculateSegmentTimeMapping_(_0x40e5e4, _0x21e684)) {
								this.saveDiscontinuitySyncInfo_(_0x40e5e4);
								if (!_0x5b27b1.syncInfo) {
									_0x5b27b1.syncInfo = {
										'mediaSequence': _0x5b27b1.mediaSequence + _0x40e5e4.mediaIndex,
										'time': _0x87c0fe.start
									};
								}
							}
						}
						return _0x21e684;
					}
				},
				{
					'key': 'probeMp4Segment_',
					'value': function _0x4aa93c(_0x1905f6) {
						var _0x4979a6 = _0x1905f6.segment, _0x1fa472 = _0x1d4ee0.timescale(_0x4979a6.map.bytes), _0x32b2f6 = _0x1d4ee0.startTime(_0x1fa472, _0x1905f6.bytes);
						if (_0x1905f6.timestampOffset !== null) {
							_0x1905f6.timestampOffset -= _0x32b2f6;
						}
						return {
							'start': _0x32b2f6,
							'end': _0x32b2f6 + _0x4979a6.duration
						};
					}
				},
				{
					'key': 'probeTsSegment_',
					'value': function _0x591de2(_0x5da064) {
						var _0x288696 = _0x5b76a1(_0x5da064.bytes, this.inspectCache_), _0x242dad = void 0, _0x1274f8 = void 0;
						if (!_0x288696) {
							return null;
						}
						if (_0x288696.video && _0x288696.video.length === 2) {
							this.inspectCache_ = _0x288696.video[1].dts;
							_0x242dad = _0x288696.video[0].dtsTime;
							_0x1274f8 = _0x288696.video[1].dtsTime;
						} else {
							_0x288696.audio && _0x288696.audio.length === 2 && (this.inspectCache_ = _0x288696.audio[1].dts, _0x242dad = _0x288696.audio[0].dtsTime, _0x1274f8 = _0x288696.audio[1].dtsTime);
						}
						return {
							'start': _0x242dad,
							'end': _0x1274f8,
							'containsVideo': _0x288696.video && _0x288696.video.length === 2,
							'containsAudio': _0x288696.audio && _0x288696.audio.length === 2
						};
					}
				},
				{
					'key': 'timestampOffsetForTimeline',
					'value': function _0x283528(_0x280fc3) {
						if (typeof this.timelines[_0x280fc3] === 'undefined') {
							return null;
						}
						return this.timelines[_0x280fc3].time;
					}
				},
				{
					'key': 'mappingForTimeline',
					'value': function _0x1a41f1(_0x30c479) {
						if (typeof this.timelines[_0x30c479] === 'undefined') {
							return null;
						}
						return this.timelines[_0x30c479].mapping;
					}
				},
				{
					'key': 'calculateSegmentTimeMapping_',
					'value': function _0x274bab(_0x4860a4, _0x1ddc64) {
						var _0x173198 = _0x4860a4.segment, _0xc44900 = this.timelines[_0x4860a4.timeline];
						if (_0x4860a4.timestampOffset !== null) {
							_0xc44900 = {
								'time': _0x4860a4.startOfSegment,
								'mapping': _0x4860a4.startOfSegment - _0x1ddc64.start
							};
							this.timelines[_0x4860a4.timeline] = _0xc44900;
							this.trigger('timestampoffset');
							this.logger_('time mapping for timeline ' + _0x4860a4.timeline + ': ' + ('[time: ' + _0xc44900.time + '] [mapping: ' + _0xc44900.mapping + ']'));
							_0x173198.start = _0x4860a4.startOfSegment;
							_0x173198.end = _0x1ddc64.end + _0xc44900.mapping;
						} else {
							if (_0xc44900) {
								_0x173198.start = _0x1ddc64.start + _0xc44900.mapping;
								_0x173198.end = _0x1ddc64.end + _0xc44900.mapping;
							} else {
								return false;
							}
						}
						return true;
					}
				},
				{
					'key': 'saveDiscontinuitySyncInfo_',
					'value': function _0x29eee6(_0x255071) {
						var _0x439d5f = _0x255071.playlist, _0x490085 = _0x255071.segment;
						if (_0x490085.discontinuity) {
							this.discontinuities[_0x490085.timeline] = {
								'time': _0x490085.start,
								'accuracy': 0
							};
						} else {
							if (_0x439d5f.discontinuityStarts && _0x439d5f.discontinuityStarts.length) {
								for (var _0x27df27 = 0; _0x27df27 < _0x439d5f.discontinuityStarts.length; _0x27df27++) {
									var _0x2908ff = _0x439d5f.discontinuityStarts[_0x27df27], _0x2e8a90 = _0x439d5f.discontinuitySequence + _0x27df27 + 1, _0x236671 = _0x2908ff - _0x255071.mediaIndex, _0x5c09ec = Math.abs(_0x236671);
									if (!this.discontinuities[_0x2e8a90] || this.discontinuities[_0x2e8a90].accuracy > _0x5c09ec) {
										var _0x2f6d7c = void 0;
										if (_0x236671 < 0) {
											_0x2f6d7c = _0x490085.start - _0x509849(_0x439d5f, _0x255071.mediaIndex, _0x2908ff);
										} else {
											_0x2f6d7c = _0x490085.end + _0x509849(_0x439d5f, _0x255071.mediaIndex + 1, _0x2908ff);
										}
										this.discontinuities[_0x2e8a90] = {
											'time': _0x2f6d7c,
											'accuracy': _0x5c09ec
										};
									}
								}
							}
						}
					}
				}
			]), _0x5ba4d3;
		}(_0x465e34.EventTarget), _0x2c5866 = new _0x58376c('./decrypter-worker.worker.js', function (_0x5767aa, _0x4c0e04) {
			var _0x25e743 = this, _0x175401 = (function () {
				function _0x1cf5ff(_0xbe0915) {
					return _0xbe0915.subarray(0, _0xbe0915.byteLength - _0xbe0915[_0xbe0915.byteLength - 1]);
				}
				var _0x2f84c5 = function _0x2a15fc(_0x13068d, _0x52f745) {
					if (!(_0x13068d instanceof _0x52f745)) {
						throw new TypeError('Cannot call a class as a function');
					}
				}, _0x95e0ed = (function () {
					function _0x1fcbc5(_0x4201f4, _0x14487a) {
						for (var _0x252e45 = 0; _0x252e45 < _0x14487a.length; _0x252e45++) {
							var _0x2ad22e = _0x14487a[_0x252e45];
							_0x2ad22e.enumerable = _0x2ad22e.enumerable || false;
							_0x2ad22e.configurable = true;
							if ('value' in _0x2ad22e) {
								_0x2ad22e.writable = true;
							}
							Object.defineProperty(_0x4201f4, _0x2ad22e.key, _0x2ad22e);
						}
					}
					return function (_0x426951, _0x1093d8, _0x1b71db) {
						if (_0x1093d8) {
							_0x1fcbc5(_0x426951.prototype, _0x1093d8);
						}
						if (_0x1b71db) {
							_0x1fcbc5(_0x426951, _0x1b71db);
						}
						return _0x426951;
					};
				}()), _0x255e4f = function _0x368017(_0x4546f2, _0x41cf57) {
					if (typeof _0x41cf57 !== 'function' && _0x41cf57 !== null) {
						throw new TypeError('Super expression must either be null or a function, not ' + (typeof _0x41cf57 === 'undefined' ? 'undefined' : _0x413e18(_0x41cf57)));
					}
					_0x4546f2.prototype = Object.create(_0x41cf57 && _0x41cf57.prototype, {
						'constructor': {
							'value': _0x4546f2,
							'enumerable': false,
							'writable': true,
							'configurable': true
						}
					});
					if (_0x41cf57) {
						Object.setPrototypeOf ? Object.setPrototypeOf(_0x4546f2, _0x41cf57) : _0x4546f2['__proto__'] = _0x41cf57;
					}
				}, _0x1d2ad2 = function _0xfe4cb7(_0x42b7f2, _0x1a8128) {
					if (!_0x42b7f2) {
						throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
					}
					return _0x1a8128 && ((typeof _0x1a8128 === 'undefined' ? 'undefined' : _0x413e18(_0x1a8128)) === 'object' || typeof _0x1a8128 === 'function') ? _0x1a8128 : _0x42b7f2;
				}, _0x3537ac = function _0x8f121b() {
					var _0xd48a8e = [
						[
							[],
							[],
							[],
							[],
							[]
						],
						[
							[],
							[],
							[],
							[],
							[]
						]
					], _0x303a9f = _0xd48a8e[0], _0x1c3165 = _0xd48a8e[1], _0x503fa5 = _0x303a9f[4], _0x1ef2b5 = _0x1c3165[4], _0x1a464a = void 0, _0x525ac5 = void 0, _0x3d2724 = void 0, _0x2d9b75 = [], _0x2d8b93 = [], _0x2d1609 = void 0, _0x40cc72 = void 0, _0xf2e5cf = void 0, _0x466570 = void 0, _0x839ef8 = void 0, _0x575db8 = void 0;
					for (_0x1a464a = 0; _0x1a464a < 256; _0x1a464a++) {
						_0x2d8b93[(_0x2d9b75[_0x1a464a] = _0x1a464a << 1 ^ (_0x1a464a >> 7) * 283) ^ _0x1a464a] = _0x1a464a;
					}
					for (_0x525ac5 = _0x3d2724 = 0; !_0x503fa5[_0x525ac5]; _0x525ac5 ^= _0x2d1609 || 1, _0x3d2724 = _0x2d8b93[_0x3d2724] || 1) {
						_0x466570 = _0x3d2724 ^ _0x3d2724 << 1 ^ _0x3d2724 << 2 ^ _0x3d2724 << 3 ^ _0x3d2724 << 4;
						_0x466570 = _0x466570 >> 8 ^ _0x466570 & 255 ^ 99;
						_0x503fa5[_0x525ac5] = _0x466570;
						_0x1ef2b5[_0x466570] = _0x525ac5;
						_0xf2e5cf = _0x2d9b75[_0x40cc72 = _0x2d9b75[_0x2d1609 = _0x2d9b75[_0x525ac5]]];
						_0x575db8 = _0xf2e5cf * 16843009 ^ _0x40cc72 * 65537 ^ _0x2d1609 * 257 ^ _0x525ac5 * 16843008;
						_0x839ef8 = _0x2d9b75[_0x466570] * 257 ^ _0x466570 * 16843008;
						for (_0x1a464a = 0; _0x1a464a < 4; _0x1a464a++) {
							_0x303a9f[_0x1a464a][_0x525ac5] = _0x839ef8 = _0x839ef8 << 24 ^ _0x839ef8 >>> 8;
							_0x1c3165[_0x1a464a][_0x466570] = _0x575db8 = _0x575db8 << 24 ^ _0x575db8 >>> 8;
						}
					}
					for (_0x1a464a = 0; _0x1a464a < 5; _0x1a464a++) {
						_0x303a9f[_0x1a464a] = _0x303a9f[_0x1a464a].slice(0);
						_0x1c3165[_0x1a464a] = _0x1c3165[_0x1a464a].slice(0);
					}
					return _0xd48a8e;
				}, _0x482ab5 = null, _0x31184a = (function () {
					function _0x1e7a08(_0x52f2bd) {
						_0x2f84c5(this, _0x1e7a08);
						if (!_0x482ab5) {
							_0x482ab5 = _0x3537ac();
						}
						this['_tables'] = [
							[
								_0x482ab5[0][0].slice(),
								_0x482ab5[0][1].slice(),
								_0x482ab5[0][2].slice(),
								_0x482ab5[0][3].slice(),
								_0x482ab5[0][4].slice()
							],
							[
								_0x482ab5[1][0].slice(),
								_0x482ab5[1][1].slice(),
								_0x482ab5[1][2].slice(),
								_0x482ab5[1][3].slice(),
								_0x482ab5[1][4].slice()
							]
						];
						var _0x545059 = void 0, _0xfac665 = void 0, _0x468598 = void 0, _0x4f06e2 = void 0, _0x1f8ae3 = void 0, _0x3a6621 = this['_tables'][0][4], _0x745242 = this['_tables'][1], _0x2c8131 = _0x52f2bd.length, _0x50d4d2 = 1;
						if (_0x2c8131 !== 4 && _0x2c8131 !== 6 && _0x2c8131 !== 8) {
							throw new Error('Invalid aes key size');
						}
						_0x4f06e2 = _0x52f2bd.slice(0);
						_0x1f8ae3 = [];
						this['_key'] = [
							_0x4f06e2,
							_0x1f8ae3
						];
						for (_0x545059 = _0x2c8131; _0x545059 < 4 * _0x2c8131 + 28; _0x545059++) {
							_0x468598 = _0x4f06e2[_0x545059 - 1];
							(_0x545059 % _0x2c8131 === 0 || _0x2c8131 === 8 && _0x545059 % _0x2c8131 === 4) && (_0x468598 = _0x3a6621[_0x468598 >>> 24] << 24 ^ _0x3a6621[_0x468598 >> 16 & 255] << 16 ^ _0x3a6621[_0x468598 >> 8 & 255] << 8 ^ _0x3a6621[_0x468598 & 255], _0x545059 % _0x2c8131 === 0 && (_0x468598 = _0x468598 << 8 ^ _0x468598 >>> 24 ^ _0x50d4d2 << 24, _0x50d4d2 = _0x50d4d2 << 1 ^ (_0x50d4d2 >> 7) * 283));
							_0x4f06e2[_0x545059] = _0x4f06e2[_0x545059 - _0x2c8131] ^ _0x468598;
						}
						for (_0xfac665 = 0; _0x545059; _0xfac665++, _0x545059--) {
							_0x468598 = _0x4f06e2[_0xfac665 & 3 ? _0x545059 : _0x545059 - 4];
							if (_0x545059 <= 4 || _0xfac665 < 4) {
								_0x1f8ae3[_0xfac665] = _0x468598;
							} else {
								_0x1f8ae3[_0xfac665] = _0x745242[0][_0x3a6621[_0x468598 >>> 24]] ^ _0x745242[1][_0x3a6621[_0x468598 >> 16 & 255]] ^ _0x745242[2][_0x3a6621[_0x468598 >> 8 & 255]] ^ _0x745242[3][_0x3a6621[_0x468598 & 255]];
							}
						}
					}
					return _0x1e7a08.prototype.decrypt = function _0x5a3f76(_0x24b00d, _0x2f8ad0, _0x35f72c, _0x12b848, _0x59a632, _0x7b05f8) {
						var _0x12a3b7 = this['_key'][1], _0x21c11c = _0x24b00d ^ _0x12a3b7[0], _0x136f62 = _0x12b848 ^ _0x12a3b7[1], _0x57e078 = _0x35f72c ^ _0x12a3b7[2], _0x43f50b = _0x2f8ad0 ^ _0x12a3b7[3], _0x36d26c = void 0, _0x23f331 = void 0, _0x4b3d1b = void 0, _0x9e01d5 = _0x12a3b7.length / 4 - 2, _0xea1cd4 = void 0, _0xfa7ce2 = 4, _0x2710b7 = this['_tables'][1], _0xc5600 = _0x2710b7[0], _0x141fbe = _0x2710b7[1], _0x81d0df = _0x2710b7[2], _0x27cb5b = _0x2710b7[3], _0x361f9e = _0x2710b7[4];
						for (_0xea1cd4 = 0; _0xea1cd4 < _0x9e01d5; _0xea1cd4++) {
							_0x36d26c = _0xc5600[_0x21c11c >>> 24] ^ _0x141fbe[_0x136f62 >> 16 & 255] ^ _0x81d0df[_0x57e078 >> 8 & 255] ^ _0x27cb5b[_0x43f50b & 255] ^ _0x12a3b7[_0xfa7ce2];
							_0x23f331 = _0xc5600[_0x136f62 >>> 24] ^ _0x141fbe[_0x57e078 >> 16 & 255] ^ _0x81d0df[_0x43f50b >> 8 & 255] ^ _0x27cb5b[_0x21c11c & 255] ^ _0x12a3b7[_0xfa7ce2 + 1];
							_0x4b3d1b = _0xc5600[_0x57e078 >>> 24] ^ _0x141fbe[_0x43f50b >> 16 & 255] ^ _0x81d0df[_0x21c11c >> 8 & 255] ^ _0x27cb5b[_0x136f62 & 255] ^ _0x12a3b7[_0xfa7ce2 + 2];
							_0x43f50b = _0xc5600[_0x43f50b >>> 24] ^ _0x141fbe[_0x21c11c >> 16 & 255] ^ _0x81d0df[_0x136f62 >> 8 & 255] ^ _0x27cb5b[_0x57e078 & 255] ^ _0x12a3b7[_0xfa7ce2 + 3];
							_0xfa7ce2 += 4;
							_0x21c11c = _0x36d26c;
							_0x136f62 = _0x23f331;
							_0x57e078 = _0x4b3d1b;
						}
						for (_0xea1cd4 = 0; _0xea1cd4 < 4; _0xea1cd4++) {
							_0x59a632[(3 & -_0xea1cd4) + _0x7b05f8] = _0x361f9e[_0x21c11c >>> 24] << 24 ^ _0x361f9e[_0x136f62 >> 16 & 255] << 16 ^ _0x361f9e[_0x57e078 >> 8 & 255] << 8 ^ _0x361f9e[_0x43f50b & 255] ^ _0x12a3b7[_0xfa7ce2++];
							_0x36d26c = _0x21c11c;
							_0x21c11c = _0x136f62;
							_0x136f62 = _0x57e078;
							_0x57e078 = _0x43f50b;
							_0x43f50b = _0x36d26c;
						}
					}, _0x1e7a08;
				}()), _0x2a9d80 = (function () {
					function _0x5f0334() {
						_0x2f84c5(this, _0x5f0334);
						this.listeners = {};
					}
					return _0x5f0334.prototype.on = function _0x4fab6a(_0x3ae9a7, _0x391023) {
						if (!this.listeners[_0x3ae9a7]) {
							this.listeners[_0x3ae9a7] = [];
						}
						this.listeners[_0x3ae9a7].push(_0x391023);
					}, _0x5f0334.prototype.off = function _0x1697b9(_0x2c834a, _0x11a572) {
						if (!this.listeners[_0x2c834a]) {
							return false;
						}
						var _0x563bd2 = this.listeners[_0x2c834a].indexOf(_0x11a572);
						return this.listeners[_0x2c834a].splice(_0x563bd2, 1), _0x563bd2 > -1;
					}, _0x5f0334.prototype.trigger = function _0x1be469(_0x428202) {
						var _0x47eeef = this.listeners[_0x428202];
						if (!_0x47eeef) {
							return;
						}
						if (arguments.length === 2) {
							var _0x4926f4 = _0x47eeef.length;
							for (var _0x2a78ac = 0; _0x2a78ac < _0x4926f4; ++_0x2a78ac) {
								_0x47eeef[_0x2a78ac].call(this, arguments[1]);
							}
						} else {
							var _0x4856e1 = Array.prototype.slice.call(arguments, 1), _0x5e2c46 = _0x47eeef.length;
							for (var _0x584895 = 0; _0x584895 < _0x5e2c46; ++_0x584895) {
								_0x47eeef[_0x584895].apply(this, _0x4856e1);
							}
						}
					}, _0x5f0334.prototype.dispose = function _0x251a78() {
						this.listeners = {};
					}, _0x5f0334.prototype.pipe = function _0x5cd7a9(_0x37cf47) {
						this.on('data', function (_0x41fb1b) {
							_0x37cf47.push(_0x41fb1b);
						});
					}, _0x5f0334;
				}()), _0x49fbaa = function (_0x476ee3) {
					_0x255e4f(_0xc902aa, _0x476ee3);
					function _0xc902aa() {
						_0x2f84c5(this, _0xc902aa);
						var _0x180ce4 = _0x1d2ad2(this, _0x476ee3.call(this, _0x2a9d80));
						return _0x180ce4.jobs = [], _0x180ce4.delay = 1, _0x180ce4.timeout_ = null, _0x180ce4;
					}
					return _0xc902aa.prototype.processJob_ = function _0x112253() {
						this.jobs.shift()();
						if (this.jobs.length) {
							this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);
						} else {
							this.timeout_ = null;
						}
					}, _0xc902aa.prototype.push = function _0x14446d(_0x126242) {
						this.jobs.push(_0x126242);
						if (!this.timeout_) {
							this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);
						}
					}, _0xc902aa;
				}(_0x2a9d80), _0x54f334 = function _0x88aec7(_0x3d52b8) {
					return _0x3d52b8 << 24 | (_0x3d52b8 & 65280) << 8 | (_0x3d52b8 & 16711680) >> 8 | _0x3d52b8 >>> 24;
				}, _0x4bad3a = function _0x13bb36(_0x526cad, _0x1bb479, _0x5b534f) {
					var _0x539f91 = new Int32Array(_0x526cad.buffer, _0x526cad.byteOffset, _0x526cad.byteLength >> 2), _0x5a687b = new _0x31184a(Array.prototype.slice.call(_0x1bb479)), _0x108e59 = new Uint8Array(_0x526cad.byteLength), _0x14a9bf = new Int32Array(_0x108e59.buffer), _0x42df59 = void 0, _0x468d0c = void 0, _0x363e24 = void 0, _0x11ac3f = void 0, _0x5210f7 = void 0, _0x28bccd = void 0, _0x5deb57 = void 0, _0xdd40f2 = void 0, _0x421bff = void 0;
					_0x42df59 = _0x5b534f[0];
					_0x468d0c = _0x5b534f[1];
					_0x363e24 = _0x5b534f[2];
					_0x11ac3f = _0x5b534f[3];
					for (_0x421bff = 0; _0x421bff < _0x539f91.length; _0x421bff += 4) {
						_0x5210f7 = _0x54f334(_0x539f91[_0x421bff]);
						_0x28bccd = _0x54f334(_0x539f91[_0x421bff + 1]);
						_0x5deb57 = _0x54f334(_0x539f91[_0x421bff + 2]);
						_0xdd40f2 = _0x54f334(_0x539f91[_0x421bff + 3]);
						_0x5a687b.decrypt(_0x5210f7, _0x28bccd, _0x5deb57, _0xdd40f2, _0x14a9bf, _0x421bff);
						_0x14a9bf[_0x421bff] = _0x54f334(_0x14a9bf[_0x421bff] ^ _0x42df59);
						_0x14a9bf[_0x421bff + 1] = _0x54f334(_0x14a9bf[_0x421bff + 1] ^ _0x468d0c);
						_0x14a9bf[_0x421bff + 2] = _0x54f334(_0x14a9bf[_0x421bff + 2] ^ _0x363e24);
						_0x14a9bf[_0x421bff + 3] = _0x54f334(_0x14a9bf[_0x421bff + 3] ^ _0x11ac3f);
						_0x42df59 = _0x5210f7;
						_0x468d0c = _0x28bccd;
						_0x363e24 = _0x5deb57;
						_0x11ac3f = _0xdd40f2;
					}
					return _0x108e59;
				}, _0x3c7cfd = (function () {
					function _0x57f0d5(_0x5a6b3c, _0x17706f, _0xe0a241, _0x18ca8b) {
						_0x2f84c5(this, _0x57f0d5);
						var _0x1f0a1d = _0x57f0d5.STEP, _0x171455 = new Int32Array(_0x5a6b3c.buffer), _0x33725f = new Uint8Array(_0x5a6b3c.byteLength), _0x41a959 = 0;
						this.asyncStream_ = new _0x49fbaa();
						this.asyncStream_.push(this.decryptChunk_(_0x171455.subarray(_0x41a959, _0x41a959 + _0x1f0a1d), _0x17706f, _0xe0a241, _0x33725f));
						for (_0x41a959 = _0x1f0a1d; _0x41a959 < _0x171455.length; _0x41a959 += _0x1f0a1d) {
							_0xe0a241 = new Uint32Array([
								_0x54f334(_0x171455[_0x41a959 - 4]),
								_0x54f334(_0x171455[_0x41a959 - 3]),
								_0x54f334(_0x171455[_0x41a959 - 2]),
								_0x54f334(_0x171455[_0x41a959 - 1])
							]);
							this.asyncStream_.push(this.decryptChunk_(_0x171455.subarray(_0x41a959, _0x41a959 + _0x1f0a1d), _0x17706f, _0xe0a241, _0x33725f));
						}
						this.asyncStream_.push(function () {
							_0x18ca8b(null, _0x1cf5ff(_0x33725f));
						});
					}
					return _0x57f0d5.prototype.decryptChunk_ = function _0x4bb374(_0x17244a, _0x5f8145, _0x5c7097, _0x3f04b1) {
						return function () {
							var _0x2c971c = _0x4bad3a(_0x17244a, _0x5f8145, _0x5c7097);
							_0x3f04b1.set(_0x2c971c, _0x17244a.byteOffset);
						};
					}, _0x95e0ed(_0x57f0d5, null, [{
						'key': 'STEP',
						'get': function _0x240ec7() {
							return 32000;
						}
					}]), _0x57f0d5;
				}()), _0x138dc6 = function _0x36807f(_0x341adb) {
					var _0x10ffdf = {
						_0x2f9c65: {
							'bytes': _0x1f7194.buffer,
							'byteOffset': _0x1f7194.byteOffset,
							'byteLength': _0x1f7194.byteLength
						},
						_0x2f9c65: _0x1f7194
					};
					return Object.keys(_0x341adb).forEach(function (_0x2f9c65) {
						var _0x1f7194 = _0x341adb[_0x2f9c65];
						if (ArrayBuffer.isView(_0x1f7194)) {
						} else {
						}
					}), _0x10ffdf;
				}, _0x108a43 = function _0x47cdff(_0x2c51da) {
					_0x2c51da.onmessage = function (_0x282a3c) {
						var _0x75f1b8 = _0x282a3c.data, _0x445cb8 = new Uint8Array(_0x75f1b8.encrypted.bytes, _0x75f1b8.encrypted.byteOffset, _0x75f1b8.encrypted.byteLength), _0x4da974 = new Uint32Array(_0x75f1b8.key.bytes, _0x75f1b8.key.byteOffset, _0x75f1b8.key.byteLength / 4), _0x5378b8 = new Uint32Array(_0x75f1b8.iv.bytes, _0x75f1b8.iv.byteOffset, _0x75f1b8.iv.byteLength / 4);
						new _0x3c7cfd(_0x445cb8, _0x4da974, _0x5378b8, function (_0x47e331, _0x5ae339) {
							_0x2c51da.postMessage(_0x138dc6({
								'source': _0x75f1b8.source,
								'decrypted': _0x5ae339
							}), [_0x5ae339.buffer]);
						});
					};
				}, _0x496d55 = new _0x108a43(_0x25e743);
				return _0x496d55;
			}());
		}), _0x17f074 = function _0x5636dd(_0x3b3c02) {
			var _0x260ae2 = _0x3b3c02.default ? 'main' : 'alternative';
			if (_0x3b3c02.characteristics && _0x3b3c02.characteristics.indexOf('public.accessibility.describes-video') >= 0) {
				_0x260ae2 = 'main-desc';
			}
			return _0x260ae2;
		}, _0x243cb1 = function _0x3bba4d(_0x2217b3, _0x5c817e) {
			_0x2217b3.abort();
			_0x2217b3.pause();
			_0x5c817e && _0x5c817e.activePlaylistLoader && (_0x5c817e.activePlaylistLoader.pause(), _0x5c817e.activePlaylistLoader = null);
		}, _0x5d3b66 = function _0x30e5cc(_0x55a0ee, _0x24c529) {
			_0x24c529.activePlaylistLoader = _0x55a0ee;
			_0x55a0ee.load();
		}, _0x4171fe = function _0x1bbfd9(_0x5dec33, _0x40c335) {
			return function () {
				var _0x422020 = _0x40c335.segmentLoaders, _0x405955 = _0x422020[_0x5dec33], _0x40e9aa = _0x422020.main, _0xfd1441 = _0x40c335.mediaTypes[_0x5dec33], _0x58c915 = _0xfd1441.activeTrack(), _0x5f2657 = _0xfd1441.activeGroup(_0x58c915), _0x10e260 = _0xfd1441.activePlaylistLoader;
				_0x243cb1(_0x405955, _0xfd1441);
				if (!_0x5f2657) {
					return;
				}
				if (!_0x5f2657.playlistLoader) {
					if (_0x10e260) {
						_0x40e9aa.resetEverything();
					}
					return;
				}
				_0x405955.resyncLoader();
				_0x5d3b66(_0x5f2657.playlistLoader, _0xfd1441);
			};
		}, _0x5a833e = function _0xe3f8e2(_0x2c5bd8, _0x2e9b00) {
			return function () {
				var _0x564a65 = _0x2e9b00.segmentLoaders, _0x242165 = _0x564a65[_0x2c5bd8], _0xc13800 = _0x564a65.main, _0x1b355e = _0x2e9b00.mediaTypes[_0x2c5bd8], _0x91841a = _0x1b355e.activeTrack(), _0x4a3781 = _0x1b355e.activeGroup(_0x91841a), _0x37be08 = _0x1b355e.activePlaylistLoader;
				_0x243cb1(_0x242165, _0x1b355e);
				if (!_0x4a3781) {
					return;
				}
				if (!_0x4a3781.playlistLoader) {
					_0xc13800.resetEverything();
					return;
				}
				if (_0x37be08 === _0x4a3781.playlistLoader) {
					_0x5d3b66(_0x4a3781.playlistLoader, _0x1b355e);
					return;
				}
				if (_0x242165.track) {
					_0x242165.track(_0x91841a);
				}
				_0x242165.resetEverything();
				_0x5d3b66(_0x4a3781.playlistLoader, _0x1b355e);
			};
		}, _0x376052 = {
			'AUDIO': function _0x4d5394(_0x124644, _0x3a34e4) {
				return function () {
					var _0x3999cf = _0x3a34e4.segmentLoaders[_0x124644], _0x48dade = _0x3a34e4.mediaTypes[_0x124644], _0x274e78 = _0x3a34e4.blacklistCurrentPlaylist;
					_0x243cb1(_0x3999cf, _0x48dade);
					var _0x3c5447 = _0x48dade.activeTrack(), _0x453307 = _0x48dade.activeGroup(), _0xcdbf05 = (_0x453307.filter(function (_0x31ec3f) {
						return _0x31ec3f.default;
					})[0] || _0x453307[0]).id, _0x331e20 = _0x48dade.tracks[_0xcdbf05];
					if (_0x3c5447 === _0x331e20) {
						_0x274e78({ 'message': 'Problem encountered loading the default audio track.' });
						return;
					}
					_0x465e34.log.warn('Problem encountered loading the alternate audio track.Switching back to default.');
					for (var _0x31357b in _0x48dade.tracks)
						_0x48dade.tracks[_0x31357b].enabled = _0x48dade.tracks[_0x31357b] === _0x331e20;
					_0x48dade.onTrackChanged();
				};
			},
			'SUBTITLES': function _0x23e362(_0x214f0d, _0x473116) {
				return function () {
					var _0x457e51 = _0x473116.segmentLoaders[_0x214f0d], _0x504ef5 = _0x473116.mediaTypes[_0x214f0d];
					_0x465e34.log.warn('Problem encountered loading the subtitle track.Disabling subtitle track.');
					_0x243cb1(_0x457e51, _0x504ef5);
					var _0x1d1cf1 = _0x504ef5.activeTrack();
					if (_0x1d1cf1) {
						_0x1d1cf1.mode = 'disabled';
					}
					_0x504ef5.onTrackChanged();
				};
			}
		}, _0x1cd395 = {
			'AUDIO': function _0x3d1cc2(_0xed1b92, _0x2ec6ba, _0x4fb665) {
				if (!_0x2ec6ba) {
					return;
				}
				var _0x5b8a1d = _0x4fb665.tech, _0x3d447c = _0x4fb665.requestOptions, _0x23e1d0 = _0x4fb665.segmentLoaders[_0xed1b92];
				_0x2ec6ba.on('loadedmetadata', function () {
					var _0x1fbfd4 = _0x2ec6ba.media();
					_0x23e1d0.playlist(_0x1fbfd4, _0x3d447c);
					if (!_0x5b8a1d.paused() || _0x1fbfd4.endList && _0x5b8a1d.preload() !== 'none') {
						_0x23e1d0.load();
					}
				});
				_0x2ec6ba.on('loadedplaylist', function () {
					_0x23e1d0.playlist(_0x2ec6ba.media(), _0x3d447c);
					if (!_0x5b8a1d.paused()) {
						_0x23e1d0.load();
					}
				});
				_0x2ec6ba.on('error', _0x376052[_0xed1b92](_0xed1b92, _0x4fb665));
			},
			'SUBTITLES': function _0xed9ac0(_0x3985f8, _0x12e5d9, _0x2d3423) {
				var _0x2cfa2e = _0x2d3423.tech, _0x8e2068 = _0x2d3423.requestOptions, _0x466ae4 = _0x2d3423.segmentLoaders[_0x3985f8], _0x10d11a = _0x2d3423.mediaTypes[_0x3985f8];
				_0x12e5d9.on('loadedmetadata', function () {
					var _0x53d723 = _0x12e5d9.media();
					_0x466ae4.playlist(_0x53d723, _0x8e2068);
					_0x466ae4.track(_0x10d11a.activeTrack());
					if (!_0x2cfa2e.paused() || _0x53d723.endList && _0x2cfa2e.preload() !== 'none') {
						_0x466ae4.load();
					}
				});
				_0x12e5d9.on('loadedplaylist', function () {
					_0x466ae4.playlist(_0x12e5d9.media(), _0x8e2068);
					if (!_0x2cfa2e.paused()) {
						_0x466ae4.load();
					}
				});
				_0x12e5d9.on('error', _0x376052[_0x3985f8](_0x3985f8, _0x2d3423));
			}
		}, _0x8d59a4 = function _0x73230a(_0x111360, _0x164137) {
			return function (_0x437566) {
				return _0x437566.attributes[_0x111360] === _0x164137;
			};
		}, _0x4cf5ee = function _0x43ebdc(_0x22e992) {
			return function (_0x2650a5) {
				return _0x2650a5.resolvedUri === _0x22e992;
			};
		}, _0x423177 = {
			'AUDIO': function _0x40febf(_0x52ce63, _0x213177) {
				var _0x90b96e = _0x213177.hls, _0x2a563d = _0x213177.sourceType, _0x299cca = _0x213177.segmentLoaders[_0x52ce63], _0x53520f = _0x213177.requestOptions.withCredentials, _0xc2a37c = _0x213177.master, _0x3c966c = _0xc2a37c.mediaGroups, _0x89462 = _0xc2a37c.playlists, _0x2d7b0e = _0x213177.mediaTypes[_0x52ce63], _0x2c4b9f = _0x2d7b0e.groups, _0xa2e18a = _0x2d7b0e.tracks, _0x579359 = _0x213177.masterPlaylistLoader;
				if (!_0x3c966c[_0x52ce63] || Object.keys(_0x3c966c[_0x52ce63]).length === 0) {
					_0x3c966c[_0x52ce63] = { 'main': { 'default': { 'default': true } } };
				}
				for (var _0x570db2 in _0x3c966c[_0x52ce63]) {
					if (!_0x2c4b9f[_0x570db2]) {
						_0x2c4b9f[_0x570db2] = [];
					}
					var _0x1ff354 = _0x89462.filter(_0x8d59a4(_0x52ce63, _0x570db2));
					for (var _0x3efa9c in _0x3c966c[_0x52ce63][_0x570db2]) {
						var _0x29f6bd = _0x3c966c[_0x52ce63][_0x570db2][_0x3efa9c], _0x1107da = _0x1ff354.filter(_0x4cf5ee(_0x29f6bd.resolvedUri));
						if (_0x1107da.length) {
							delete _0x29f6bd.resolvedUri;
						}
						var _0x44772c = void 0;
						if (_0x29f6bd.resolvedUri) {
							_0x44772c = new _0x1734c6(_0x29f6bd.resolvedUri, _0x90b96e, _0x53520f);
						} else {
							if (_0x29f6bd.playlists && _0x2a563d === 'dash') {
								_0x44772c = new _0x29ee61(_0x29f6bd.playlists[0], _0x90b96e, _0x53520f, _0x579359);
							} else {
								_0x44772c = null;
							}
						}
						_0x29f6bd = _0x465e34.mergeOptions({
							'id': _0x3efa9c,
							'playlistLoader': _0x44772c
						}, _0x29f6bd);
						_0x1cd395[_0x52ce63](_0x52ce63, _0x29f6bd.playlistLoader, _0x213177);
						_0x2c4b9f[_0x570db2].push(_0x29f6bd);
						if (typeof _0xa2e18a[_0x3efa9c] === 'undefined') {
							var _0x7f4210 = new _0x465e34.AudioTrack({
								'id': _0x3efa9c,
								'kind': _0x17f074(_0x29f6bd),
								'enabled': false,
								'language': _0x29f6bd.language,
								'default': _0x29f6bd.default,
								'label': _0x3efa9c
							});
							_0xa2e18a[_0x3efa9c] = _0x7f4210;
						}
					}
				}
				_0x299cca.on('error', _0x376052[_0x52ce63](_0x52ce63, _0x213177));
			},
			'SUBTITLES': function _0x33d838(_0x3cbf6d, _0x8d9951) {
				var _0x437bb4 = _0x8d9951.tech, _0x1f196f = _0x8d9951.hls, _0x5465d0 = _0x8d9951.sourceType, _0x499fcc = _0x8d9951.segmentLoaders[_0x3cbf6d], _0x74a4dd = _0x8d9951.requestOptions.withCredentials, _0x2a6e48 = _0x8d9951.master.mediaGroups, _0x54090b = _0x8d9951.mediaTypes[_0x3cbf6d], _0x107da5 = _0x54090b.groups, _0x36f9dd = _0x54090b.tracks, _0xf1a192 = _0x8d9951.masterPlaylistLoader;
				for (var _0xc3efe9 in _0x2a6e48[_0x3cbf6d]) {
					if (!_0x107da5[_0xc3efe9]) {
						_0x107da5[_0xc3efe9] = [];
					}
					for (var _0x2bed9d in _0x2a6e48[_0x3cbf6d][_0xc3efe9]) {
						if (_0x2a6e48[_0x3cbf6d][_0xc3efe9][_0x2bed9d].forced) {
							continue;
						}
						var _0x4c94db = _0x2a6e48[_0x3cbf6d][_0xc3efe9][_0x2bed9d], _0x5056fa = void 0;
						if (_0x5465d0 === 'hls') {
							_0x5056fa = new _0x1734c6(_0x4c94db.resolvedUri, _0x1f196f, _0x74a4dd);
						} else {
							if (_0x5465d0 === 'dash') {
								_0x5056fa = new _0x29ee61(_0x4c94db.playlists[0], _0x1f196f, _0x74a4dd, _0xf1a192);
							}
						}
						_0x4c94db = _0x465e34.mergeOptions({
							'id': _0x2bed9d,
							'playlistLoader': _0x5056fa
						}, _0x4c94db);
						_0x1cd395[_0x3cbf6d](_0x3cbf6d, _0x4c94db.playlistLoader, _0x8d9951);
						_0x107da5[_0xc3efe9].push(_0x4c94db);
						if (typeof _0x36f9dd[_0x2bed9d] === 'undefined') {
							var _0x1bc1a8 = _0x437bb4.addRemoteTextTrack({
								'id': _0x2bed9d,
								'kind': 'subtitles',
								'enabled': false,
								'language': _0x4c94db.language,
								'label': _0x2bed9d
							}, false).track;
							_0x36f9dd[_0x2bed9d] = _0x1bc1a8;
						}
					}
				}
				_0x499fcc.on('error', _0x376052[_0x3cbf6d](_0x3cbf6d, _0x8d9951));
			},
			'CLOSED-CAPTIONS': function _0x2ceb8b(_0x43195f, _0x1817de) {
				var _0x13f4f7 = _0x1817de.tech, _0x3e2507 = _0x1817de.master.mediaGroups, _0x4ddc0e = _0x1817de.mediaTypes[_0x43195f], _0x27e2ff = _0x4ddc0e.groups, _0x2bf08b = _0x4ddc0e.tracks;
				for (var _0x3c15eb in _0x3e2507[_0x43195f]) {
					if (!_0x27e2ff[_0x3c15eb]) {
						_0x27e2ff[_0x3c15eb] = [];
					}
					for (var _0x1823ad in _0x3e2507[_0x43195f][_0x3c15eb]) {
						var _0x1c4a7 = _0x3e2507[_0x43195f][_0x3c15eb][_0x1823ad];
						if (!_0x1c4a7.instreamId.match(/CC\d/)) {
							continue;
						}
						_0x27e2ff[_0x3c15eb].push(_0x465e34.mergeOptions({ 'id': _0x1823ad }, _0x1c4a7));
						if (typeof _0x2bf08b[_0x1823ad] === 'undefined') {
							var _0x21d8be = _0x13f4f7.addRemoteTextTrack({
								'id': _0x1c4a7.instreamId,
								'kind': 'captions',
								'enabled': false,
								'language': _0x1c4a7.language,
								'label': _0x1823ad
							}, false).track;
							_0x2bf08b[_0x1823ad] = _0x21d8be;
						}
					}
				}
			}
		}, _0x54d5d8 = function _0x3b2db7(_0x46d427, _0x4e278d) {
			return function (_0x26d93d) {
				var _0x3867f7 = _0x4e278d.masterPlaylistLoader, _0x592ec7 = _0x4e278d.mediaTypes[_0x46d427].groups, _0x596f50 = _0x3867f7.media();
				if (!_0x596f50) {
					return null;
				}
				var _0x578b5c = null;
				if (_0x596f50.attributes[_0x46d427]) {
					_0x578b5c = _0x592ec7[_0x596f50.attributes[_0x46d427]];
				}
				_0x578b5c = _0x578b5c || _0x592ec7.main;
				if (typeof _0x26d93d === 'undefined') {
					return _0x578b5c;
				}
				if (_0x26d93d === null) {
					return null;
				}
				return _0x578b5c.filter(function (_0x4ae1fd) {
					return _0x4ae1fd.id === _0x26d93d.id;
				})[0] || null;
			};
		}, _0x49f323 = {
			'AUDIO': function _0x72102f(_0x2b6304, _0x376cae) {
				return function () {
					var _0x30fb76 = _0x376cae.mediaTypes[_0x2b6304].tracks;
					for (var _0x51d562 in _0x30fb76)
						if (_0x30fb76[_0x51d562].enabled) {
							return _0x30fb76[_0x51d562];
						}
					return null;
				};
			},
			'SUBTITLES': function _0xeae220(_0x3daf24, _0x35595c) {
				return function () {
					var _0xa6f9a9 = _0x35595c.mediaTypes[_0x3daf24].tracks;
					for (var _0x416ed9 in _0xa6f9a9)
						if (_0xa6f9a9[_0x416ed9].mode === 'showing') {
							return _0xa6f9a9[_0x416ed9];
						}
					return null;
				};
			}
		}, _0x1fbe23 = function _0x6f58f7(_0x274329) {
			[
				'AUDIO',
				'SUBTITLES',
				'CLOSED-CAPTIONS'
			].forEach(function (_0x5f4ade) {
				_0x423177[_0x5f4ade](_0x5f4ade, _0x274329);
			});
			var _0x5f0746 = _0x274329.mediaTypes, _0x3aad02 = _0x274329.masterPlaylistLoader, _0xd51845 = _0x274329.tech, _0x3c9583 = _0x274329.hls;
			[
				'AUDIO',
				'SUBTITLES'
			].forEach(function (_0x3a70f9) {
				_0x5f0746[_0x3a70f9].activeGroup = _0x54d5d8(_0x3a70f9, _0x274329);
				_0x5f0746[_0x3a70f9].activeTrack = _0x49f323[_0x3a70f9](_0x3a70f9, _0x274329);
				_0x5f0746[_0x3a70f9].onGroupChanged = _0x4171fe(_0x3a70f9, _0x274329);
				_0x5f0746[_0x3a70f9].onTrackChanged = _0x5a833e(_0x3a70f9, _0x274329);
			});
			var _0x13df42 = _0x5f0746.AUDIO.activeGroup(), _0x34aeb2 = (_0x13df42.filter(function (_0xef755f) {
				return _0xef755f.default;
			})[0] || _0x13df42[0]).id;
			_0x5f0746.AUDIO.tracks[_0x34aeb2].enabled = true;
			_0x5f0746.AUDIO.onTrackChanged();
			_0x3aad02.on('mediachange', function () {
				[
					'AUDIO',
					'SUBTITLES'
				].forEach(function (_0x3d2b3d) {
					return _0x5f0746[_0x3d2b3d].onGroupChanged();
				});
			});
			var _0x28a4d2 = function _0x2882ed() {
				_0x5f0746.AUDIO.onTrackChanged();
				_0xd51845.trigger({
					'type': 'usage',
					'name': 'hls-audio-change'
				});
			};
			_0xd51845.audioTracks().addEventListener('change', _0x28a4d2);
			_0xd51845.remoteTextTracks().addEventListener('change', _0x5f0746.SUBTITLES.onTrackChanged);
			_0x3c9583.on('dispose', function () {
				_0xd51845.audioTracks().removeEventListener('change', _0x28a4d2);
				_0xd51845.remoteTextTracks().removeEventListener('change', _0x5f0746.SUBTITLES.onTrackChanged);
			});
			_0xd51845.clearTracks('audio');
			for (var _0xe1f9b2 in _0x5f0746.AUDIO.tracks)
				_0xd51845.audioTracks().addTrack(_0x5f0746.AUDIO.tracks[_0xe1f9b2]);
		}, _0x2b23d6 = function _0x25e2e7() {
			var _0x45ff53 = {
				_0x481be1: {
					'groups': {},
					'tracks': {},
					'activePlaylistLoader': null,
					'activeGroup': _0x190247,
					'activeTrack': _0x190247,
					'onGroupChanged': _0x190247,
					'onTrackChanged': _0x190247
				}
			};
			return [
				'AUDIO',
				'SUBTITLES',
				'CLOSED-CAPTIONS'
			].forEach(function (_0x481be1) {
			}), _0x45ff53;
		}, _0x6f742d = void 0, _0x20895e = [
			'mediaRequests',
			'mediaRequestsAborted',
			'mediaRequestsTimedout',
			'mediaRequestsErrored',
			'mediaTransferDuration',
			'mediaBytesTransferred'
		], _0x49bcef = function _0x59a3b7(_0xbd5e53) {
			return this.audioSegmentLoader_[_0xbd5e53] + this.mainSegmentLoader_[_0xbd5e53];
		}, _0x45a615 = function (_0x230049) {
			_0x4b5e39(_0x39ec0d, _0x230049);
			function _0x39ec0d(_0x2cce7a) {
				_0x43a5ef(this, _0x39ec0d);
				var _0x540a36 = _0xb2fb9f(this, (_0x39ec0d['__proto__'] || Object.getPrototypeOf(_0x39ec0d)).call(this)), _0x3cc74e = _0x2cce7a.url, _0x5f458d = _0x2cce7a.withCredentials, _0xc9cb6b = _0x2cce7a.tech, _0x3f7dfe = _0x2cce7a.bandwidth, _0x3efd98 = _0x2cce7a.externHls, _0x3897a8 = _0x2cce7a.useCueTags, _0x3390b7 = _0x2cce7a.blacklistDuration, _0x54cec1 = _0x2cce7a.enableLowInitialPlaylist, _0x220b0c = _0x2cce7a.sourceType, _0x244b78 = _0x2cce7a.seekTo;
				if (!_0x3cc74e) {
					throw new Error('A non-empty playlist URL is required');
				}
				_0x6f742d = _0x3efd98;
				_0x540a36.withCredentials = _0x5f458d;
				_0x540a36.tech_ = _0xc9cb6b;
				_0x540a36.hls_ = _0xc9cb6b.hls;
				_0x540a36.seekTo_ = _0x244b78;
				_0x540a36.sourceType_ = _0x220b0c;
				_0x540a36.useCueTags_ = _0x3897a8;
				_0x540a36.blacklistDuration = _0x3390b7;
				_0x540a36.enableLowInitialPlaylist = _0x54cec1;
				_0x540a36.useCueTags_ && (_0x540a36.cueTagsTrack_ = _0x540a36.tech_.addTextTrack('metadata', 'ad-cues'), _0x540a36.cueTagsTrack_.inBandMetadataTrackDispatchType = '');
				_0x540a36.requestOptions_ = {
					'withCredentials': _0x540a36.withCredentials,
					'timeout': null
				};
				_0x540a36.mediaTypes_ = _0x2b23d6();
				_0x540a36.mediaSource = new _0x465e34.MediaSource();
				_0x540a36.mediaSource.addEventListener('sourceopen', _0x540a36.handleSourceOpen_.bind(_0x540a36));
				_0x540a36.seekable_ = _0x465e34.createTimeRanges();
				_0x540a36.hasPlayed_ = function () {
					return false;
				};
				_0x540a36.syncController_ = new _0x1bb179(_0x2cce7a);
				_0x540a36.segmentMetadataTrack_ = _0xc9cb6b.addRemoteTextTrack({
					'kind': 'metadata',
					'label': 'segment-metadata'
				}, false).track;
				_0x540a36.decrypter_ = new _0x2c5866();
				_0x540a36.inbandTextTracks_ = {};
				var _0x1393e3 = {
					'hls': _0x540a36.hls_,
					'mediaSource': _0x540a36.mediaSource,
					'currentTime': _0x540a36.tech_.currentTime.bind(_0x540a36.tech_),
					'seekable': function _0x1c7a6f() {
						return _0x540a36.seekable();
					},
					'seeking': function _0x1b2881() {
						return _0x540a36.tech_.seeking();
					},
					'duration': function _0x5cc934() {
						return _0x540a36.mediaSource.duration;
					},
					'hasPlayed': function _0x274c10() {
						return _0x540a36.hasPlayed_();
					},
					'goalBufferLength': function _0x24f03f() {
						return _0x540a36.goalBufferLength();
					},
					'bandwidth': _0x3f7dfe,
					'syncController': _0x540a36.syncController_,
					'decrypter': _0x540a36.decrypter_,
					'sourceType': _0x540a36.sourceType_,
					'inbandTextTracks': _0x540a36.inbandTextTracks_
				};
				return _0x540a36.masterPlaylistLoader_ = _0x540a36.sourceType_ === 'dash' ? new _0x29ee61(_0x3cc74e, _0x540a36.hls_, _0x540a36.withCredentials) : new _0x1734c6(_0x3cc74e, _0x540a36.hls_, _0x540a36.withCredentials), _0x540a36.setupMasterPlaylistLoaderListeners_(), _0x540a36.mainSegmentLoader_ = new _0x576ef8(_0x465e34.mergeOptions(_0x1393e3, {
					'segmentMetadataTrack': _0x540a36.segmentMetadataTrack_,
					'loaderType': 'main'
				}), _0x2cce7a), _0x540a36.audioSegmentLoader_ = new _0x576ef8(_0x465e34.mergeOptions(_0x1393e3, { 'loaderType': 'audio' }), _0x2cce7a), _0x540a36.subtitleSegmentLoader_ = new _0x214d23(_0x465e34.mergeOptions(_0x1393e3, { 'loaderType': 'vtt' }), _0x2cce7a), _0x540a36.setupSegmentLoaderListeners_(), _0x20895e.forEach(function (_0x4624a6) {
					_0x540a36[_0x4624a6 + '_'] = _0x49bcef.bind(_0x540a36, _0x4624a6);
				}), _0x540a36.logger_ = _0x243d7c('MPC'), _0x540a36.masterPlaylistLoader_.load(), _0x540a36;
			}
			return _0x470055(_0x39ec0d, [
				{
					'key': 'setupMasterPlaylistLoaderListeners_',
					'value': function _0x32d9d8() {
						var _0x348226 = this;
						this.masterPlaylistLoader_.on('loadedmetadata', function () {
							var _0x9648a0 = _0x348226.masterPlaylistLoader_.media(), _0x3e210f = _0x348226.masterPlaylistLoader_.targetDuration * 1.5 * 1000;
							if (_0x2f0039(_0x348226.masterPlaylistLoader_.master, _0x348226.masterPlaylistLoader_.media())) {
								_0x348226.requestOptions_.timeout = 0;
							} else {
								_0x348226.requestOptions_.timeout = _0x3e210f;
							}
							_0x9648a0.endList && _0x348226.tech_.preload() !== 'none' && (_0x348226.mainSegmentLoader_.playlist(_0x9648a0, _0x348226.requestOptions_), _0x348226.mainSegmentLoader_.load());
							_0x1fbe23({
								'sourceType': _0x348226.sourceType_,
								'segmentLoaders': {
									'AUDIO': _0x348226.audioSegmentLoader_,
									'SUBTITLES': _0x348226.subtitleSegmentLoader_,
									'main': _0x348226.mainSegmentLoader_
								},
								'tech': _0x348226.tech_,
								'requestOptions': _0x348226.requestOptions_,
								'masterPlaylistLoader': _0x348226.masterPlaylistLoader_,
								'hls': _0x348226.hls_,
								'master': _0x348226.master(),
								'mediaTypes': _0x348226.mediaTypes_,
								'blacklistCurrentPlaylist': _0x348226.blacklistCurrentPlaylist.bind(_0x348226)
							});
							_0x348226.triggerPresenceUsage_(_0x348226.master(), _0x9648a0);
							try {
								_0x348226.setupSourceBuffers_();
							} catch (_0x490789) {
								return _0x465e34.log.warn('Failed to create SourceBuffers', _0x490789), _0x348226.mediaSource.endOfStream('decode');
							}
							_0x348226.setupFirstPlay();
							_0x348226.trigger('selectedinitialmedia');
						});
						this.masterPlaylistLoader_.on('loadedplaylist', function () {
							var _0x3cdd86 = _0x348226.masterPlaylistLoader_.media();
							if (!_0x3cdd86) {
								_0x348226.excludeUnsupportedVariants_();
								var _0x5df810 = void 0;
								if (_0x348226.enableLowInitialPlaylist) {
									_0x5df810 = _0x348226.selectInitialPlaylist();
								}
								if (!_0x5df810) {
									_0x5df810 = _0x348226.selectPlaylist();
								}
								_0x348226.initialMedia_ = _0x5df810;
								_0x348226.masterPlaylistLoader_.media(_0x348226.initialMedia_);
								return;
							}
							if (_0x348226.useCueTags_) {
								_0x348226.updateAdCues_(_0x3cdd86);
							}
							_0x348226.mainSegmentLoader_.playlist(_0x3cdd86, _0x348226.requestOptions_);
							_0x348226.updateDuration();
							if (!_0x348226.tech_.paused()) {
								_0x348226.mainSegmentLoader_.load();
								if (_0x348226.audioSegmentLoader_) {
									_0x348226.audioSegmentLoader_.load();
								}
							}
							if (!_0x3cdd86.endList) {
								var _0x5eacff = function _0x113a83() {
									var _0x498df4 = _0x348226.seekable();
									if (_0x498df4.length !== 0) {
										_0x348226.mediaSource.addSeekableRange_(_0x498df4.start(0), _0x498df4.end(0));
									}
								};
								if (_0x348226.duration() !== Infinity) {
									var _0x1eaae3 = function _0xa217ad() {
										if (_0x348226.duration() === Infinity) {
											_0x5eacff();
										} else {
											_0x348226.tech_.one('durationchange', _0xa217ad);
										}
									};
									_0x348226.tech_.one('durationchange', _0x1eaae3);
								} else {
									_0x5eacff();
								}
							}
						});
						this.masterPlaylistLoader_.on('error', function () {
							_0x348226.blacklistCurrentPlaylist(_0x348226.masterPlaylistLoader_.error);
						});
						this.masterPlaylistLoader_.on('mediachanging', function () {
							_0x348226.mainSegmentLoader_.abort();
							_0x348226.mainSegmentLoader_.pause();
						});
						this.masterPlaylistLoader_.on('mediachange', function () {
							var _0x312250 = _0x348226.masterPlaylistLoader_.media(), _0x52a87b = _0x348226.masterPlaylistLoader_.targetDuration * 1.5 * 1000;
							if (_0x2f0039(_0x348226.masterPlaylistLoader_.master, _0x348226.masterPlaylistLoader_.media())) {
								_0x348226.requestOptions_.timeout = 0;
							} else {
								_0x348226.requestOptions_.timeout = _0x52a87b;
							}
							_0x348226.mainSegmentLoader_.playlist(_0x312250, _0x348226.requestOptions_);
							_0x348226.mainSegmentLoader_.load();
							_0x348226.tech_.trigger({
								'type': 'mediachange',
								'bubbles': true
							});
						});
						this.masterPlaylistLoader_.on('playlistunchanged', function () {
							var _0x271fc8 = _0x348226.masterPlaylistLoader_.media(), _0x1a289d = _0x348226.stuckAtPlaylistEnd_(_0x271fc8);
							_0x1a289d && (_0x348226.blacklistCurrentPlaylist({ 'message': 'Playlist no longer updating.' }), _0x348226.tech_.trigger('playliststuck'));
						});
						this.masterPlaylistLoader_.on('renditiondisabled', function () {
							_0x348226.tech_.trigger({
								'type': 'usage',
								'name': 'hls-rendition-disabled'
							});
						});
						this.masterPlaylistLoader_.on('renditionenabled', function () {
							_0x348226.tech_.trigger({
								'type': 'usage',
								'name': 'hls-rendition-enabled'
							});
						});
					}
				},
				{
					'key': 'triggerPresenceUsage_',
					'value': function _0x3344cd(_0x54f17c, _0x2d0f28) {
						var _0x2187cf = _0x54f17c.mediaGroups || {}, _0x11cf7b = true, _0x85c1b5 = Object.keys(_0x2187cf.AUDIO);
						for (var _0x5cc197 in _0x2187cf.AUDIO)
							for (var _0x6e3eae in _0x2187cf.AUDIO[_0x5cc197]) {
								var _0x518abb = _0x2187cf.AUDIO[_0x5cc197][_0x6e3eae];
								if (!_0x518abb.uri) {
									_0x11cf7b = false;
								}
							}
						if (_0x11cf7b) {
							this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-demuxed'
							});
						}
						if (Object.keys(_0x2187cf.SUBTITLES).length) {
							this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-webvtt'
							});
						}
						if (_0x6f742d.Playlist.isAes(_0x2d0f28)) {
							this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-aes'
							});
						}
						if (_0x6f742d.Playlist.isFmp4(_0x2d0f28)) {
							this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-fmp4'
							});
						}
						if (_0x85c1b5.length && Object.keys(_0x2187cf.AUDIO[_0x85c1b5[0]]).length > 1) {
							this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-alternate-audio'
							});
						}
						if (this.useCueTags_) {
							this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-playlist-cue-tags'
							});
						}
					}
				},
				{
					'key': 'setupSegmentLoaderListeners_',
					'value': function _0x1ac8d2() {
						var _0x3ab238 = this;
						this.mainSegmentLoader_.on('bandwidthupdate', function () {
							var _0x23e3f6 = _0x3ab238.selectPlaylist(), _0x4c7d7d = _0x3ab238.masterPlaylistLoader_.media(), _0x4c2517 = _0x3ab238.tech_.buffered(), _0x5b6ced = _0x4c2517.length ? _0x4c2517.end(_0x4c2517.length - 1) - _0x3ab238.tech_.currentTime() : 0, _0xded856 = _0x3ab238.bufferLowWaterLine();
							if (!_0x4c7d7d.endList || _0x3ab238.duration() < _0x26fd19.MAX_BUFFER_LOW_WATER_LINE || _0x23e3f6.attributes.BANDWIDTH < _0x4c7d7d.attributes.BANDWIDTH || _0x5b6ced >= _0xded856) {
								_0x3ab238.masterPlaylistLoader_.media(_0x23e3f6);
							}
							_0x3ab238.tech_.trigger('bandwidthupdate');
						});
						this.mainSegmentLoader_.on('progress', function () {
							_0x3ab238.trigger('progress');
						});
						this.mainSegmentLoader_.on('error', function () {
							_0x3ab238.blacklistCurrentPlaylist(_0x3ab238.mainSegmentLoader_.error());
						});
						this.mainSegmentLoader_.on('syncinfoupdate', function () {
							_0x3ab238.onSyncInfoUpdate_();
						});
						this.mainSegmentLoader_.on('timestampoffset', function () {
							_0x3ab238.tech_.trigger({
								'type': 'usage',
								'name': 'hls-timestamp-offset'
							});
						});
						this.audioSegmentLoader_.on('syncinfoupdate', function () {
							_0x3ab238.onSyncInfoUpdate_();
						});
						this.mainSegmentLoader_.on('ended', function () {
							_0x3ab238.onEndOfStream();
						});
						this.mainSegmentLoader_.on('earlyabort', function () {
							_0x3ab238.blacklistCurrentPlaylist({ 'message': 'Aborted early because there isn\'t enough bandwidth to complete the request without rebuffering.' }, 120);
						});
						this.mainSegmentLoader_.on('reseteverything', function () {
							_0x3ab238.tech_.trigger('hls-reset');
						});
						this.mainSegmentLoader_.on('segmenttimemapping', function (_0xc8d00e) {
							_0x3ab238.tech_.trigger({
								'type': 'hls-segment-time-mapping',
								'mapping': _0xc8d00e.mapping
							});
						});
						this.audioSegmentLoader_.on('ended', function () {
							_0x3ab238.onEndOfStream();
						});
					}
				},
				{
					'key': 'mediaSecondsLoaded_',
					'value': function _0x2f184e() {
						return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);
					}
				},
				{
					'key': 'load',
					'value': function _0x4206e0() {
						this.mainSegmentLoader_.load();
						if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
							this.audioSegmentLoader_.load();
						}
						if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
							this.subtitleSegmentLoader_.load();
						}
					}
				},
				{
					'key': 'smoothQualityChange_',
					'value': function _0x235a64() {
						var _0x1104e1 = this.selectPlaylist();
						if (_0x1104e1 !== this.masterPlaylistLoader_.media()) {
							this.masterPlaylistLoader_.media(_0x1104e1);
							this.mainSegmentLoader_.resetLoader();
						}
					}
				},
				{
					'key': 'fastQualityChange_',
					'value': function _0x5359b2() {
						var _0x3f3e81 = this, _0x2d1efb = this.selectPlaylist();
						if (_0x2d1efb === this.masterPlaylistLoader_.media()) {
							return;
						}
						this.masterPlaylistLoader_.media(_0x2d1efb);
						this.mainSegmentLoader_.resetEverything(function () {
							_0x3f3e81.tech_.setCurrentTime(_0x3f3e81.tech_.currentTime());
						});
					}
				},
				{
					'key': 'play',
					'value': function _0x314f65() {
						if (this.setupFirstPlay()) {
							return;
						}
						if (this.tech_.ended()) {
							this.seekTo_(0);
						}
						if (this.hasPlayed_()) {
							this.load();
						}
						var _0x41d11a = this.tech_.seekable();
						if (this.tech_.duration() === Infinity) {
							if (this.tech_.currentTime() < _0x41d11a.start(0)) {
								return this.seekTo_(_0x41d11a.end(_0x41d11a.length - 1));
							}
						}
					}
				},
				{
					'key': 'setupFirstPlay',
					'value': function _0x47fe6f() {
						var _0x344d3b = this, _0x202f92 = this.masterPlaylistLoader_.media();
						if (!_0x202f92 || this.tech_.paused() || this.hasPlayed_()) {
							return false;
						}
						if (!_0x202f92.endList) {
							var _0x46c7b0 = this.seekable();
							if (!_0x46c7b0.length) {
								return false;
							}
							if (_0x465e34.browser.IE_VERSION && this.tech_.readyState() === 0) {
								return this.tech_.one('loadedmetadata', function () {
									_0x344d3b.trigger('firstplay');
									_0x344d3b.seekTo_(_0x46c7b0.end(0));
									_0x344d3b.hasPlayed_ = function () {
										return true;
									};
								}), false;
							}
							this.trigger('firstplay');
							this.seekTo_(_0x46c7b0.end(0));
						}
						return this.hasPlayed_ = function () {
							return true;
						}, this.load(), true;
					}
				},
				{
					'key': 'handleSourceOpen_',
					'value': function _0x1305a8() {
						try {
							this.setupSourceBuffers_();
						} catch (_0xbe35d9) {
							return _0x465e34.log.warn('Failed to create Source Buffers', _0xbe35d9), this.mediaSource.endOfStream('decode');
						}
						if (this.tech_.autoplay()) {
							var _0x36fbf8 = this.tech_.play();
							if (typeof _0x36fbf8 !== 'undefined' && typeof _0x36fbf8.then === 'function') {
								_0x36fbf8.then(null, function (_0x1c2735) {
								});
							}
						}
						this.trigger('sourceopen');
					}
				},
				{
					'key': 'onEndOfStream',
					'value': function _0x2e1d41() {
						var _0x527403 = this.mainSegmentLoader_.ended_;
						if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
							if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {
								_0x527403 = _0x527403 && this.audioSegmentLoader_.ended_;
							} else {
								_0x527403 = this.audioSegmentLoader_.ended_;
							}
						}
						if (_0x527403) {
							this.mediaSource.endOfStream();
						}
					}
				},
				{
					'key': 'stuckAtPlaylistEnd_',
					'value': function _0x42cd56(_0x455e5a) {
						var _0x31fd80 = this.seekable();
						if (!_0x31fd80.length) {
							return false;
						}
						var _0x291658 = this.syncController_.getExpiredTime(_0x455e5a, this.mediaSource.duration);
						if (_0x291658 === null) {
							return false;
						}
						var _0x2648c6 = _0x6f742d.Playlist.playlistEnd(_0x455e5a, _0x291658), _0x15c34f = this.tech_.currentTime(), _0xde560a = this.tech_.buffered();
						if (!_0xde560a.length) {
							return _0x2648c6 - _0x15c34f <= _0x32f8e5;
						}
						var _0x91c35c = _0xde560a.end(_0xde560a.length - 1);
						return _0x91c35c - _0x15c34f <= _0x32f8e5 && _0x2648c6 - _0x91c35c <= _0x32f8e5;
					}
				},
				{
					'key': 'blacklistCurrentPlaylist',
					'value': function _0x3d75af() {
						var _0x2bb93f = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _0x509356 = arguments[1], _0x1ced69 = void 0, _0x491773 = void 0;
						_0x1ced69 = _0x2bb93f.playlist || this.masterPlaylistLoader_.media();
						_0x509356 = _0x509356 || _0x2bb93f.blacklistDuration || this.blacklistDuration;
						if (!_0x1ced69) {
							this.error = _0x2bb93f;
							try {
								return this.mediaSource.endOfStream('network');
							} catch (_0xf3946b) {
								return this.trigger('error');
							}
						}
						var _0x413424 = this.masterPlaylistLoader_.master.playlists.filter(_0x342a04).length === 1;
						if (_0x413424) {
							return _0x465e34.log.warn('Problem encountered with the current HLS playlist. Trying again since it is the final playlist.'), this.tech_.trigger('retryplaylist'), this.masterPlaylistLoader_.load(_0x413424);
						}
						return _0x1ced69.excludeUntil = Date.now() + _0x509356 * 1000, this.tech_.trigger('blacklistplaylist'), this.tech_.trigger({
							'type': 'usage',
							'name': 'hls-rendition-blacklisted'
						}), _0x491773 = this.selectPlaylist(), _0x465e34.log.warn('Problem encountered with the current HLS playlist.' + (_0x2bb93f.message ? ' ' + _0x2bb93f.message : '') + ' Switching to another playlist.'), this.masterPlaylistLoader_.media(_0x491773);
					}
				},
				{
					'key': 'pauseLoading',
					'value': function _0x36226e() {
						this.mainSegmentLoader_.pause();
						if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
							this.audioSegmentLoader_.pause();
						}
						if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
							this.subtitleSegmentLoader_.pause();
						}
					}
				},
				{
					'key': 'setCurrentTime',
					'value': function _0x174e43(_0x48e4d8) {
						var _0x19d020 = _0x18ae92(this.tech_.buffered(), _0x48e4d8);
						if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {
							return 0;
						}
						if (!this.masterPlaylistLoader_.media().segments) {
							return 0;
						}
						if (_0x19d020 && _0x19d020.length) {
							return _0x48e4d8;
						}
						this.mainSegmentLoader_.resetEverything();
						this.mainSegmentLoader_.abort();
						this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.resetEverything(), this.audioSegmentLoader_.abort());
						this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.resetEverything(), this.subtitleSegmentLoader_.abort());
						this.load();
					}
				},
				{
					'key': 'duration',
					'value': function _0x50a58d() {
						if (!this.masterPlaylistLoader_) {
							return 0;
						}
						if (this.mediaSource) {
							return this.mediaSource.duration;
						}
						return _0x6f742d.Playlist.duration(this.masterPlaylistLoader_.media());
					}
				},
				{
					'key': 'seekable',
					'value': function _0x54d99e() {
						return this.seekable_;
					}
				},
				{
					'key': 'onSyncInfoUpdate_',
					'value': function _0x50b195() {
						var _0x47d247 = void 0, _0x570def = void 0;
						if (!this.masterPlaylistLoader_) {
							return;
						}
						var _0x1ca3ad = this.masterPlaylistLoader_.media();
						if (!_0x1ca3ad) {
							return;
						}
						var _0x53781d = this.syncController_.getExpiredTime(_0x1ca3ad, this.mediaSource.duration);
						if (_0x53781d === null) {
							return;
						}
						_0x47d247 = _0x6f742d.Playlist.seekable(_0x1ca3ad, _0x53781d);
						if (_0x47d247.length === 0) {
							return;
						}
						if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
							_0x1ca3ad = this.mediaTypes_.AUDIO.activePlaylistLoader.media();
							_0x53781d = this.syncController_.getExpiredTime(_0x1ca3ad, this.mediaSource.duration);
							if (_0x53781d === null) {
								return;
							}
							_0x570def = _0x6f742d.Playlist.seekable(_0x1ca3ad, _0x53781d);
							if (_0x570def.length === 0) {
								return;
							}
						}
						if (!_0x570def) {
							this.seekable_ = _0x47d247;
						} else {
							if (_0x570def.start(0) > _0x47d247.end(0) || _0x47d247.start(0) > _0x570def.end(0)) {
								this.seekable_ = _0x47d247;
							} else {
								this.seekable_ = _0x465e34.createTimeRanges([[
									_0x570def.start(0) > _0x47d247.start(0) ? _0x570def.start(0) : _0x47d247.start(0),
									_0x570def.end(0) < _0x47d247.end(0) ? _0x570def.end(0) : _0x47d247.end(0)
								]]);
							}
						}
						this.logger_('seekable updated [' + _0x2e715c(this.seekable_) + ']');
						this.tech_.trigger('seekablechanged');
					}
				},
				{
					'key': 'updateDuration',
					'value': function _0x36dfaa() {
						var _0x570b64 = this, _0x15a2cf = this.mediaSource.duration, _0x455dd5 = _0x6f742d.Playlist.duration(this.masterPlaylistLoader_.media()), _0x5843b3 = this.tech_.buffered(), _0x33e757 = function _0x4df4a1() {
							_0x570b64.mediaSource.duration = _0x455dd5;
							_0x570b64.tech_.trigger('durationchange');
							_0x570b64.mediaSource.removeEventListener('sourceopen', _0x4df4a1);
						};
						if (_0x5843b3.length > 0) {
							_0x455dd5 = Math.max(_0x455dd5, _0x5843b3.end(_0x5843b3.length - 1));
						}
						if (_0x15a2cf !== _0x455dd5) {
							if (this.mediaSource.readyState !== 'open') {
								this.mediaSource.addEventListener('sourceopen', _0x33e757);
							} else {
								_0x33e757();
							}
						}
					}
				},
				{
					'key': 'dispose',
					'value': function _0x3122f4() {
						var _0x18fe17 = this;
						this.decrypter_.terminate();
						this.masterPlaylistLoader_.dispose();
						this.mainSegmentLoader_.dispose();
						[
							'AUDIO',
							'SUBTITLES'
						].forEach(function (_0x14a60f) {
							var _0x5e57f2 = _0x18fe17.mediaTypes_[_0x14a60f].groups;
							for (var _0x228dc5 in _0x5e57f2)
								_0x5e57f2[_0x228dc5].forEach(function (_0x5d8177) {
									if (_0x5d8177.playlistLoader) {
										_0x5d8177.playlistLoader.dispose();
									}
								});
						});
						this.audioSegmentLoader_.dispose();
						this.subtitleSegmentLoader_.dispose();
					}
				},
				{
					'key': 'master',
					'value': function _0x467428() {
						return this.masterPlaylistLoader_.master;
					}
				},
				{
					'key': 'media',
					'value': function _0x4c9de0() {
						return this.masterPlaylistLoader_.media() || this.initialMedia_;
					}
				},
				{
					'key': 'setupSourceBuffers_',
					'value': function _0x1d6fca() {
						var _0x23df17 = this.masterPlaylistLoader_.media(), _0x5bed47 = void 0;
						if (!_0x23df17 || this.mediaSource.readyState !== 'open') {
							return;
						}
						_0x5bed47 = _0x4d18ab(this.masterPlaylistLoader_.master, _0x23df17);
						if (_0x5bed47.length < 1) {
							return this.error = 'No compatible SourceBuffer configuration for the variant stream:' + _0x23df17.resolvedUri, this.mediaSource.endOfStream('decode');
						}
						this.configureLoaderMimeTypes_(_0x5bed47);
						this.excludeIncompatibleVariants_(_0x23df17);
					}
				},
				{
					'key': 'configureLoaderMimeTypes_',
					'value': function _0x199e93(_0xa958cd) {
						var _0x3ddaa0 = _0xa958cd.length > 1 && _0xa958cd[0].indexOf(',') === -1 && _0xa958cd[0] !== _0xa958cd[1] ? new _0x465e34.EventTarget() : null;
						this.mainSegmentLoader_.mimeType(_0xa958cd[0], _0x3ddaa0);
						if (_0xa958cd[1]) {
							this.audioSegmentLoader_.mimeType(_0xa958cd[1], _0x3ddaa0);
						}
					}
				},
				{
					'key': 'excludeUnsupportedVariants_',
					'value': function _0x174c89() {
						this.master().playlists.forEach(function (_0x141ccc) {
							if (_0x141ccc.attributes.CODECS && _0x504cd5.MediaSource && _0x504cd5.MediaSource.isTypeSupported && !_0x504cd5.MediaSource.isTypeSupported('video/mp4; codecs="' + _0x5bcd96(_0x141ccc.attributes.CODECS) + '"')) {
								_0x141ccc.excludeUntil = Infinity;
							}
						});
					}
				},
				{
					'key': 'excludeIncompatibleVariants_',
					'value': function _0x494357(_0x525df8) {
						var _0x419882 = 2, _0x2160bf = null, _0x5aa8b4 = void 0;
						_0x525df8.attributes.CODECS && (_0x5aa8b4 = _0x4e9622(_0x525df8.attributes.CODECS), _0x2160bf = _0x5aa8b4.videoCodec, _0x419882 = _0x5aa8b4.codecCount);
						this.master().playlists.forEach(function (_0x55754b) {
							if (_0x55754b.attributes.CODECS) {
								_0x39abbd = _0x4e9622(_0x55754b.attributes.CODECS);
							}
							if (_0x39abbd.codecCount !== _0x419882) {
								_0x55754b.excludeUntil = Infinity;
							}
							if (_0x39abbd.videoCodec !== _0x2160bf) {
								_0x55754b.excludeUntil = Infinity;
							}
						});
					}
				},
				{
					'key': 'updateAdCues_',
					'value': function _0x38ef41(_0x354a6c) {
						var _0x1088d5 = 0, _0x33898a = this.seekable();
						if (_0x33898a.length) {
							_0x1088d5 = _0x33898a.start(0);
						}
						_0x2bd00c(_0x354a6c, this.cueTagsTrack_, _0x1088d5);
					}
				},
				{
					'key': 'goalBufferLength',
					'value': function _0x32db7e() {
						var _0xb03fb = this.tech_.currentTime(), _0x2bec57 = _0x26fd19.GOAL_BUFFER_LENGTH, _0x21a4b0 = _0x26fd19.GOAL_BUFFER_LENGTH_RATE, _0x324df6 = Math.max(_0x2bec57, _0x26fd19.MAX_GOAL_BUFFER_LENGTH);
						return Math.min(_0x2bec57 + _0xb03fb * _0x21a4b0, _0x324df6);
					}
				},
				{
					'key': 'bufferLowWaterLine',
					'value': function _0x1d9758() {
						var _0xbdb2a9 = this.tech_.currentTime(), _0x101f47 = _0x26fd19.BUFFER_LOW_WATER_LINE, _0x110361 = 1, _0xf44977 = Math.max(_0x101f47, 30);
						return Math.min(_0x101f47 + _0xbdb2a9 * _0x110361, _0xf44977);
					}
				}
			]), _0x39ec0d;
		}(_0x465e34.EventTarget), _0x4ec85f = function _0x466041(_0xc6eb1, _0x263e8c, _0x11a2ea) {
			return function (_0x46bb17) {
				var _0x3571d5 = _0xc6eb1.master.playlists[_0x263e8c], _0x47b66a = _0x13f054(_0x3571d5), _0x53cc20 = _0x342a04(_0x3571d5);
				if (typeof _0x46bb17 === 'undefined') {
					return _0x53cc20;
				}
				if (_0x46bb17) {
					delete _0x3571d5.disabled;
				} else {
					_0x3571d5.disabled = true;
				}
				if (_0x46bb17 !== _0x53cc20 && !_0x47b66a) {
					_0x11a2ea();
					if (_0x46bb17) {
						_0xc6eb1.trigger('renditionenabled');
					} else {
						_0xc6eb1.trigger('renditiondisabled');
					}
				}
				return _0x46bb17;
			};
		}, _0x26ba92 = function _0x1b3068(_0x6ddfbc, _0x2cc84e, _0x3d37cc) {
			_0x43a5ef(this, _0x1b3068);
			var _0x1790a6 = _0x6ddfbc.masterPlaylistController_.fastQualityChange_.bind(_0x6ddfbc.masterPlaylistController_);
			if (_0x2cc84e.attributes.RESOLUTION) {
				var _0x37b7e3 = _0x2cc84e.attributes.RESOLUTION;
				this.width = _0x37b7e3.width;
				this.height = _0x37b7e3.height;
			}
			this.bandwidth = _0x2cc84e.attributes.BANDWIDTH;
			this.id = _0x3d37cc;
			this.enabled = _0x4ec85f(_0x6ddfbc.playlists, _0x2cc84e.uri, _0x1790a6);
		}, _0x3e51b1 = function _0x3ff564(_0x4754ec) {
			var _0x3f18be = _0x4754ec.playlists;
			_0x4754ec.representations = function () {
				return _0x3f18be.master.playlists.filter(function (_0xe201ae) {
					return !_0x13f054(_0xe201ae);
				}).map(function (_0x18ac36, _0x473b62) {
					return new _0x26ba92(_0x4754ec, _0x18ac36, _0x18ac36.uri);
				});
			};
		}, _0x4ca62e = [
			'seeking',
			'seeked',
			'pause',
			'playing',
			'error'
		], _0x2ea928 = (function () {
			function _0x56b111(_0x3bb40a) {
				var _0x2f3984 = this;
				_0x43a5ef(this, _0x56b111);
				this.tech_ = _0x3bb40a.tech;
				this.seekable = _0x3bb40a.seekable;
				this.seekTo = _0x3bb40a.seekTo;
				this.consecutiveUpdates = 0;
				this.lastRecordedTime = null;
				this.timer_ = null;
				this.checkCurrentTimeTimeout_ = null;
				this.logger_ = _0x243d7c('PlaybackWatcher');
				this.logger_('initialize');
				var _0x30cdf0 = function _0x256156() {
					return _0x2f3984.monitorCurrentTime_();
				}, _0x5f5d67 = function _0x199b6d() {
					return _0x2f3984.techWaiting_();
				}, _0x15183b = function _0x507172() {
					return _0x2f3984.cancelTimer_();
				}, _0x10ef02 = function _0x5a4b8d() {
					return _0x2f3984.fixesBadSeeks_();
				};
				this.tech_.on('seekablechanged', _0x10ef02);
				this.tech_.on('waiting', _0x5f5d67);
				this.tech_.on(_0x4ca62e, _0x15183b);
				this.tech_.on('canplay', _0x30cdf0);
				this.dispose = function () {
					_0x2f3984.logger_('dispose');
					_0x2f3984.tech_.off('seekablechanged', _0x10ef02);
					_0x2f3984.tech_.off('waiting', _0x5f5d67);
					_0x2f3984.tech_.off(_0x4ca62e, _0x15183b);
					_0x2f3984.tech_.off('canplay', _0x30cdf0);
					if (_0x2f3984.checkCurrentTimeTimeout_) {
						_0x504cd5.clearTimeout(_0x2f3984.checkCurrentTimeTimeout_);
					}
					_0x2f3984.cancelTimer_();
				};
			}
			return _0x470055(_0x56b111, [
				{
					'key': 'monitorCurrentTime_',
					'value': function _0x19a5f4() {
						this.checkCurrentTime_();
						if (this.checkCurrentTimeTimeout_) {
							_0x504cd5.clearTimeout(this.checkCurrentTimeTimeout_);
						}
						this.checkCurrentTimeTimeout_ = _0x504cd5.setTimeout(this.monitorCurrentTime_.bind(this), 250);
					}
				},
				{
					'key': 'checkCurrentTime_',
					'value': function _0x4471a9() {
						if (this.tech_.seeking() && this.fixesBadSeeks_()) {
							this.consecutiveUpdates = 0;
							this.lastRecordedTime = this.tech_.currentTime();
							return;
						}
						if (this.tech_.paused() || this.tech_.seeking()) {
							return;
						}
						var _0x32635a = this.tech_.currentTime(), _0x5a7afb = this.tech_.buffered();
						if (this.lastRecordedTime === _0x32635a && (!_0x5a7afb.length || _0x32635a + _0x32f8e5 >= _0x5a7afb.end(_0x5a7afb.length - 1))) {
							return this.techWaiting_();
						}
						if (this.consecutiveUpdates >= 5 && _0x32635a === this.lastRecordedTime) {
							this.consecutiveUpdates++;
							this.waiting_();
						} else {
							if (_0x32635a === this.lastRecordedTime) {
								this.consecutiveUpdates++;
							} else {
								this.consecutiveUpdates = 0;
								this.lastRecordedTime = _0x32635a;
							}
						}
					}
				},
				{
					'key': 'cancelTimer_',
					'value': function _0x5e10d7() {
						this.consecutiveUpdates = 0;
						this.timer_ && (this.logger_('cancelTimer_'), clearTimeout(this.timer_));
						this.timer_ = null;
					}
				},
				{
					'key': 'fixesBadSeeks_',
					'value': function _0x3d6554() {
						var _0x2aec4c = this.tech_.seeking(), _0x9331e = this.seekable(), _0x199958 = this.tech_.currentTime(), _0x5c8c89 = void 0;
						if (_0x2aec4c && this.afterSeekableWindow_(_0x9331e, _0x199958)) {
							var _0x48d6ca = _0x9331e.end(_0x9331e.length - 1);
							_0x5c8c89 = _0x48d6ca;
						}
						if (_0x2aec4c && this.beforeSeekableWindow_(_0x9331e, _0x199958)) {
							var _0xc052d3 = _0x9331e.start(0);
							_0x5c8c89 = _0xc052d3 + _0x32f8e5;
						}
						if (typeof _0x5c8c89 !== 'undefined') {
							return this.logger_('Trying to seek outside of seekable at time ' + _0x199958 + ' with ' + ('seekable range ' + _0x2e715c(_0x9331e) + '. Seeking to ') + (_0x5c8c89 + '.')), this.seekTo(_0x5c8c89), true;
						}
						return false;
					}
				},
				{
					'key': 'waiting_',
					'value': function _0x38b389() {
						if (this.techWaiting_()) {
							return;
						}
						var _0x1c4637 = this.tech_.currentTime(), _0x2e6c6f = this.tech_.buffered(), _0x2a2bdd = _0x18ae92(_0x2e6c6f, _0x1c4637);
						if (_0x2a2bdd.length && _0x1c4637 + 3 <= _0x2a2bdd.end(0)) {
							this.cancelTimer_();
							this.seekTo(_0x1c4637);
							this.logger_('Stopped at ' + _0x1c4637 + ' while inside a buffered region ' + ('[' + _0x2a2bdd.start(0) + ' -> ' + _0x2a2bdd.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');
							this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-unknown-waiting'
							});
							return;
						}
					}
				},
				{
					'key': 'techWaiting_',
					'value': function _0x15c344() {
						var _0xebefce = this.seekable(), _0x1f94bf = this.tech_.currentTime();
						if (this.tech_.seeking() && this.fixesBadSeeks_()) {
							return true;
						}
						if (this.tech_.seeking() || this.timer_ !== null) {
							return true;
						}
						if (this.beforeSeekableWindow_(_0xebefce, _0x1f94bf)) {
							var _0xb57452 = _0xebefce.end(_0xebefce.length - 1);
							return this.logger_('Fell out of live window at time ' + _0x1f94bf + '. Seeking to ' + ('live point (seekable end) ' + _0xb57452)), this.cancelTimer_(), this.seekTo(_0xb57452), this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-live-resync'
							}), true;
						}
						var _0x399f80 = this.tech_.buffered(), _0x5be600 = _0x5bf7ff(_0x399f80, _0x1f94bf);
						if (this.videoUnderflow_(_0x5be600, _0x399f80, _0x1f94bf)) {
							return this.cancelTimer_(), this.seekTo(_0x1f94bf), this.tech_.trigger({
								'type': 'usage',
								'name': 'hls-video-underflow'
							}), true;
						}
						if (_0x5be600.length > 0) {
							var _0x16184f = _0x5be600.start(0) - _0x1f94bf;
							return this.logger_('Stopped at ' + _0x1f94bf + ', setting timer for ' + _0x16184f + ', seeking ' + ('to ' + _0x5be600.start(0))), this.timer_ = setTimeout(this.skipTheGap_.bind(this), _0x16184f * 1000, _0x1f94bf), true;
						}
						return false;
					}
				},
				{
					'key': 'afterSeekableWindow_',
					'value': function _0x122263(_0x4905ac, _0x31c077) {
						if (!_0x4905ac.length) {
							return false;
						}
						if (_0x31c077 > _0x4905ac.end(_0x4905ac.length - 1) + _0x32f8e5) {
							return true;
						}
						return false;
					}
				},
				{
					'key': 'beforeSeekableWindow_',
					'value': function _0x32e943(_0x2c4392, _0x403d00) {
						if (_0x2c4392.length && _0x2c4392.start(0) > 0 && _0x403d00 < _0x2c4392.start(0) - _0x32f8e5) {
							return true;
						}
						return false;
					}
				},
				{
					'key': 'videoUnderflow_',
					'value': function _0x281679(_0x406dbb, _0xbe8c9c, _0x30954a) {
						if (_0x406dbb.length === 0) {
							var _0x4fd5bb = this.gapFromVideoUnderflow_(_0xbe8c9c, _0x30954a);
							if (_0x4fd5bb) {
								return this.logger_('Encountered a gap in video from ' + _0x4fd5bb.start + ' to ' + _0x4fd5bb.end + '. ' + ('Seeking to current time ' + _0x30954a)), true;
							}
						}
						return false;
					}
				},
				{
					'key': 'skipTheGap_',
					'value': function _0x492c16(_0x3898f5) {
						var _0x51b46f = this.tech_.buffered(), _0x49a9da = this.tech_.currentTime(), _0x2657eb = _0x5bf7ff(_0x51b46f, _0x49a9da);
						this.cancelTimer_();
						if (_0x2657eb.length === 0 || _0x49a9da !== _0x3898f5) {
							return;
						}
						this.logger_('skipTheGap_:', 'currentTime:', _0x49a9da, 'scheduled currentTime:', _0x3898f5, 'nextRange start:', _0x2657eb.start(0));
						this.seekTo(_0x2657eb.start(0) + 0.03333333333333333);
						this.tech_.trigger({
							'type': 'usage',
							'name': 'hls-gap-skip'
						});
					}
				},
				{
					'key': 'gapFromVideoUnderflow_',
					'value': function _0x487f54(_0x40f31c, _0x40ab8c) {
						var _0x29c1ce = _0x27dddc(_0x40f31c);
						for (var _0x1e6e79 = 0; _0x1e6e79 < _0x29c1ce.length; _0x1e6e79++) {
							var _0x193b94 = _0x29c1ce.start(_0x1e6e79), _0x54613d = _0x29c1ce.end(_0x1e6e79);
							if (_0x40ab8c - _0x193b94 < 4 && _0x40ab8c - _0x193b94 > 2) {
								return {
									'start': _0x193b94,
									'end': _0x54613d
								};
							}
						}
						return null;
					}
				}
			]), _0x56b111;
		}()), _0x19f5ed = {
			'errorInterval': 30,
			'getSource': function _0x4f3b8d(_0x357813) {
				var _0x52ba1f = this.tech({ 'IWillNotUseThisInPlugins': true }), _0x19092f = _0x52ba1f.currentSource_;
				return _0x357813(_0x19092f);
			}
		}, _0xc1d712 = function _0x2916df(_0xc6177f, _0x1b32d9) {
			var _0x3ce343 = 0, _0xa65067 = 0, _0x1ba9b2 = _0x465e34.mergeOptions(_0x19f5ed, _0x1b32d9);
			_0xc6177f.ready(function () {
				_0xc6177f.trigger({
					'type': 'usage',
					'name': 'hls-error-reload-initialized'
				});
			});
			var _0x247396 = function _0x13d412() {
				if (_0xa65067) {
					_0xc6177f.currentTime(_0xa65067);
				}
			}, _0x4aa6f1 = function _0x5532ee(_0x51ca61) {
				if (_0x51ca61 === null || _0x51ca61 === undefined) {
					return;
				}
				_0xa65067 = _0xc6177f.duration() !== Infinity && _0xc6177f.currentTime() || 0;
				_0xc6177f.one('loadedmetadata', _0x247396);
				_0xc6177f.src(_0x51ca61);
				_0xc6177f.trigger({
					'type': 'usage',
					'name': 'hls-error-reload'
				});
				_0xc6177f.play();
			}, _0x14cc30 = function _0x5cb8be() {
				if (Date.now() - _0x3ce343 < _0x1ba9b2.errorInterval * 1000) {
					_0xc6177f.trigger({
						'type': 'usage',
						'name': 'hls-error-reload-canceled'
					});
					return;
				}
				if (!_0x1ba9b2.getSource || typeof _0x1ba9b2.getSource !== 'function') {
					_0x465e34.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');
					return;
				}
				return _0x3ce343 = Date.now(), _0x1ba9b2.getSource.call(_0xc6177f, _0x4aa6f1);
			}, _0x2327ad = function _0xa02b12() {
				_0xc6177f.off('loadedmetadata', _0x247396);
				_0xc6177f.off('error', _0x14cc30);
				_0xc6177f.off('dispose', _0xa02b12);
			}, _0x205fdc = function _0x46c38f(_0xc398b1) {
				_0x2327ad();
				_0x2916df(_0xc6177f, _0xc398b1);
			};
			_0xc6177f.on('error', _0x14cc30);
			_0xc6177f.on('dispose', _0x2327ad);
			_0xc6177f.reloadSourceOnError = _0x205fdc;
		}, _0x3dcbeb = function _0x342d4c(_0x5a790f) {
			_0xc1d712(this, _0x5a790f);
		}, _0x10c398 = (_0x465e34.use('*', function (_0x1422a4) {
			return {
				'setSource': function _0xf9cbd0(_0x50a956, _0x3e0f5a) {
					_0x3e0f5a(null, _0x50a956);
				},
				'setCurrentTime': function _0x4d1249(_0x8a6341) {
					if (_0x1422a4.vhs && _0x1422a4.currentSource().src === _0x1422a4.vhs.source_.src) {
						_0x1422a4.vhs.setCurrentTime(_0x8a6341);
					}
					return _0x8a6341;
				}
			};
		}), {
			'PlaylistLoader': _0x1734c6,
			'Playlist': _0x5a5540,
			'Decrypter': _0x3ab7b0,
			'AsyncStream': _0x4186e6,
			'decrypt': _0x16ce75,
			'utils': _0x4f607a,
			'STANDARD_PLAYLIST_SELECTOR': _0x5986a4,
			'INITIAL_PLAYLIST_SELECTOR': _0x445be3,
			'comparePlaylistBandwidth': _0x548459,
			'comparePlaylistResolution': _0x134243,
			'xhr': _0x3a3f75()
		}), _0x1bbc6a = ([
			'GOAL_BUFFER_LENGTH',
			'MAX_GOAL_BUFFER_LENGTH',
			'GOAL_BUFFER_LENGTH_RATE',
			'BUFFER_LOW_WATER_LINE',
			'MAX_BUFFER_LOW_WATER_LINE',
			'BUFFER_LOW_WATER_LINE_RATE',
			'BANDWIDTH_VARIANCE'
		].forEach(function (_0x405756) {
			Object.defineProperty(_0x10c398, _0x405756, {
				'get': function _0x5a39ab() {
					return _0x465e34.log.warn('using Hls.' + _0x405756 + ' is UNSAFE be sure you know what you are doing'), _0x26fd19[_0x405756];
				},
				'set': function _0x2c9b9b(_0x1b7e4a) {
					_0x465e34.log.warn('using Hls.' + _0x405756 + ' is UNSAFE be sure you know what you are doing');
					if (typeof _0x1b7e4a !== 'number' || _0x1b7e4a < 0) {
						_0x465e34.log.warn('value of Hls.' + _0x405756 + ' must be greater than or equal to 0');
						return;
					}
					_0x26fd19[_0x405756] = _0x1b7e4a;
				}
			});
		}), function _0x583930(_0x4a963f) {
			var _0x1cd31e = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
			if (_0x1cd31e.test(_0x4a963f)) {
				return 'hls';
			}
			var _0x24137c = /^application\/dash\+xml/i;
			if (_0x24137c.test(_0x4a963f)) {
				return 'dash';
			}
			return null;
		}), _0x1377fc = function _0xad5c2e(_0x110cdb, _0x52bbe2) {
			var _0xf66514 = _0x52bbe2.media(), _0x34c5f8 = -1;
			for (var _0x3edded = 0; _0x3edded < _0x110cdb.length; _0x3edded++) {
				if (_0x110cdb[_0x3edded].id === _0xf66514.uri) {
					_0x34c5f8 = _0x3edded;
					break;
				}
			}
			_0x110cdb.selectedIndex_ = _0x34c5f8;
			_0x110cdb.trigger({
				'selectedIndex': _0x34c5f8,
				'type': 'change'
			});
		}, _0x5dd92b = function _0x32a698(_0x1e6e8e, _0x394de5) {
			_0x394de5.representations().forEach(function (_0x30872e) {
				_0x1e6e8e.addQualityLevel(_0x30872e);
			});
			_0x1377fc(_0x1e6e8e, _0x394de5.playlists);
		}, _0x1a49b7 = (_0x10c398.canPlaySource = function () {
			return _0x465e34.log.warn('HLS is no longer a tech. Please remove it from your player\'s techOrder.');
		}, function _0x1fea8d(_0x114b9e, _0xed2ce9, _0x4a8934) {
			if (!_0x114b9e) {
				return _0x114b9e;
			}
			var _0x55836a = {
				_0x368f43: {
					'audioContentType': 'audio/mp4; codecs="' + _0x4a8934.attributes.CODECS + '"',
					'videoContentType': 'video/mp4; codecs="' + _0xed2ce9.attributes.CODECS + '"'
				}
			};
			for (var _0x368f43 in _0x114b9e) {
				if (_0xed2ce9.contentProtection && _0xed2ce9.contentProtection[_0x368f43] && _0xed2ce9.contentProtection[_0x368f43].pssh) {
					_0x55836a[_0x368f43].pssh = _0xed2ce9.contentProtection[_0x368f43].pssh;
				}
				if (typeof _0x114b9e[_0x368f43] === 'string') {
					_0x55836a[_0x368f43].url = _0x114b9e[_0x368f43];
				}
			}
			return _0x465e34.mergeOptions(_0x114b9e, _0x55836a);
		}), _0x1516a2 = function _0x324562(_0xb96459) {
			if (_0xb96459.options_.sourceType !== 'dash') {
				return;
			}
			var _0x4ea059 = _0x465e34.players[_0xb96459.tech_.options_.playerId];
			if (_0x4ea059.eme) {
				var _0x1aa43d = _0x1a49b7(_0xb96459.source_.keySystems, _0xb96459.playlists.media(), _0xb96459.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());
				if (_0x1aa43d) {
					_0x4ea059.currentSource().keySystems = _0x1aa43d;
				}
			}
		};
		_0x10c398.supportsNativeHls = (function () {
			var _0x52683f = _0x19e198.createElement('video');
			if (!_0x465e34.getTech('Html5').isSupported()) {
				return false;
			}
			var _0x5d47d1 = [
				'application/vnd.apple.mpegurl',
				'audio/mpegurl',
				'audio/x-mpegurl',
				'application/x-mpegurl',
				'video/x-mpegurl',
				'video/mpegurl',
				'application/mpegurl'
			];
			return _0x5d47d1.some(function (_0x24f541) {
				return /maybe|probably/i.test(_0x52683f.canPlayType(_0x24f541));
			});
		}());
		_0x10c398.supportsNativeDash = (function () {
			if (!_0x465e34.getTech('Html5').isSupported()) {
				return false;
			}
			return /maybe|probably/i.test(_0x19e198.createElement('video').canPlayType('application/dash+xml'));
		}());
		_0x10c398.supportsTypeNatively = function (_0x4f05d3) {
			if (_0x4f05d3 === 'hls') {
				return _0x10c398.supportsNativeHls;
			}
			if (_0x4f05d3 === 'dash') {
				return _0x10c398.supportsNativeDash;
			}
			return false;
		};
		_0x10c398.isSupported = function () {
			return _0x465e34.log.warn('HLS is no longer a tech. Please remove it from your player\'s techOrder.');
		};
		var _0x4e4aa6, _0x55c090 = function (_0x1a3b06) {
			_0x4b5e39(_0x5ecf17, _0x1a3b06);
			function _0x5ecf17(_0x49b4ab, _0x56fbfd, _0x1c16d4) {
				_0x43a5ef(this, _0x5ecf17);
				var _0x3a7eb7 = _0xb2fb9f(this, (_0x5ecf17['__proto__'] || Object.getPrototypeOf(_0x5ecf17)).call(this, _0x56fbfd, _0x1c16d4.hls));
				if (_0x56fbfd.options_ && _0x56fbfd.options_.playerId) {
					var _0x19aade = _0x465e34(_0x56fbfd.options_.playerId);
					if (!_0x19aade.hasOwnProperty('hls')) {
						Object.defineProperty(_0x19aade, 'hls', {
							'get': function _0x4bf61a() {
								return _0x465e34.log.warn('player.hls is deprecated. Use player.tech().hls instead.'), _0x56fbfd.trigger({
									'type': 'usage',
									'name': 'hls-player-access'
								}), _0x3a7eb7;
							}
						});
					}
					_0x19aade.vhs = _0x3a7eb7;
					_0x19aade.dash = _0x3a7eb7;
				}
				_0x3a7eb7.tech_ = _0x56fbfd;
				_0x3a7eb7.source_ = _0x49b4ab;
				_0x3a7eb7.stats = {};
				_0x3a7eb7.setOptions_();
				if (_0x3a7eb7.options_.overrideNative && _0x56fbfd.overrideNativeAudioTracks && _0x56fbfd.overrideNativeVideoTracks) {
					_0x56fbfd.overrideNativeAudioTracks(true);
					_0x56fbfd.overrideNativeVideoTracks(true);
				} else {
					if (_0x3a7eb7.options_.overrideNative && (_0x56fbfd.featuresNativeVideoTracks || _0x56fbfd.featuresNativeAudioTracks)) {
						throw new Error('Overriding native HLS requires emulated tracks. See https://git.io/vMpjB');
					}
				}
				return _0x3a7eb7.on(_0x19e198, [
					'fullscreenchange',
					'webkitfullscreenchange',
					'mozfullscreenchange',
					'MSFullscreenChange'
				], function (_0x37a243) {
					var _0x240a06 = _0x19e198.fullscreenElement || _0x19e198.webkitFullscreenElement || _0x19e198.mozFullScreenElement || _0x19e198.msFullscreenElement;
					if (_0x240a06 && _0x240a06.contains(_0x3a7eb7.tech_.el())) {
						_0x3a7eb7.masterPlaylistController_.smoothQualityChange_();
					}
				}), _0x3a7eb7.on(_0x3a7eb7.tech_, 'error', function () {
					if (this.masterPlaylistController_) {
						this.masterPlaylistController_.pauseLoading();
					}
				}), _0x3a7eb7.on(_0x3a7eb7.tech_, 'play', _0x3a7eb7.play), _0x3a7eb7;
			}
			return _0x470055(_0x5ecf17, [
				{
					'key': 'setOptions_',
					'value': function _0x5c809c() {
						var _0xdce2b9 = this;
						this.options_.withCredentials = this.options_.withCredentials || false;
						if (typeof this.options_.blacklistDuration !== 'number') {
							this.options_.blacklistDuration = 300;
						}
						if (typeof this.options_.bandwidth !== 'number') {
							this.options_.bandwidth = 4194304;
						}
						this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === 4194304;
						[
							'withCredentials',
							'bandwidth'
						].forEach(function (_0x300744) {
							if (typeof _0xdce2b9.source_[_0x300744] !== 'undefined') {
								_0xdce2b9.options_[_0x300744] = _0xdce2b9.source_[_0x300744];
							}
						});
						this.bandwidth = this.options_.bandwidth;
					}
				},
				{
					'key': 'src',
					'value': function _0x49436a(_0x27d4b8, _0x3c00df) {
						var _0x8bfb3 = this;
						if (!_0x27d4b8) {
							return;
						}
						this.setOptions_();
						this.options_.url = this.source_.src;
						this.options_.tech = this.tech_;
						this.options_.externHls = _0x10c398;
						this.options_.sourceType = _0x1bbc6a(_0x3c00df);
						this.options_.seekTo = function (_0x3de8c0) {
							_0x8bfb3.tech_.setCurrentTime(_0x3de8c0);
							_0x8bfb3.setCurrentTime(_0x3de8c0);
						};
						this.masterPlaylistController_ = new _0x45a615(this.options_);
						this.playbackWatcher_ = new _0x2ea928(_0x465e34.mergeOptions(this.options_, {
							'seekable': function _0x30353d() {
								return _0x8bfb3.seekable();
							}
						}));
						this.masterPlaylistController_.on('error', function () {
							var _0x5eb148 = _0x465e34.players[_0x8bfb3.tech_.options_.playerId];
							_0x5eb148.error(_0x8bfb3.masterPlaylistController_.error);
						});
						this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : _0x10c398.STANDARD_PLAYLIST_SELECTOR.bind(this);
						this.masterPlaylistController_.selectInitialPlaylist = _0x10c398.INITIAL_PLAYLIST_SELECTOR.bind(this);
						this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;
						this.mediaSource = this.masterPlaylistController_.mediaSource;
						Object.defineProperties(this, {
							'selectPlaylist': {
								'get': function _0x375ae4() {
									return this.masterPlaylistController_.selectPlaylist;
								},
								'set': function _0x4a3845(_0x56c238) {
									this.masterPlaylistController_.selectPlaylist = _0x56c238.bind(this);
								}
							},
							'throughput': {
								'get': function _0x5423bb() {
									return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;
								},
								'set': function _0x30ee01(_0x3476ea) {
									this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = _0x3476ea;
									this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;
								}
							},
							'bandwidth': {
								'get': function _0xadfb10() {
									return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;
								},
								'set': function _0x55e581(_0x476ceb) {
									this.masterPlaylistController_.mainSegmentLoader_.bandwidth = _0x476ceb;
									this.masterPlaylistController_.mainSegmentLoader_.throughput = {
										'rate': 0,
										'count': 0
									};
								}
							},
							'systemBandwidth': {
								'get': function _0x1d0a0f() {
									var _0x216038 = 1 / (this.bandwidth || 1), _0x3beabd = void 0;
									if (this.throughput > 0) {
										_0x3beabd = 1 / this.throughput;
									} else {
										_0x3beabd = 0;
									}
									var _0x250037 = Math.floor(1 / (_0x216038 + _0x3beabd));
									return _0x250037;
								},
								'set': function _0x53af24() {
									_0x465e34.log.error('The "systemBandwidth" property is read-only');
								}
							}
						});
						Object.defineProperties(this.stats, {
							'bandwidth': {
								'get': function _0x47d220() {
									return _0x8bfb3.bandwidth || 0;
								},
								'enumerable': true
							},
							'mediaRequests': {
								'get': function _0x48c2f9() {
									return _0x8bfb3.masterPlaylistController_.mediaRequests_() || 0;
								},
								'enumerable': true
							},
							'mediaRequestsAborted': {
								'get': function _0x178988() {
									return _0x8bfb3.masterPlaylistController_.mediaRequestsAborted_() || 0;
								},
								'enumerable': true
							},
							'mediaRequestsTimedout': {
								'get': function _0x12da99() {
									return _0x8bfb3.masterPlaylistController_.mediaRequestsTimedout_() || 0;
								},
								'enumerable': true
							},
							'mediaRequestsErrored': {
								'get': function _0x40fa51() {
									return _0x8bfb3.masterPlaylistController_.mediaRequestsErrored_() || 0;
								},
								'enumerable': true
							},
							'mediaTransferDuration': {
								'get': function _0x435615() {
									return _0x8bfb3.masterPlaylistController_.mediaTransferDuration_() || 0;
								},
								'enumerable': true
							},
							'mediaBytesTransferred': {
								'get': function _0x48b050() {
									return _0x8bfb3.masterPlaylistController_.mediaBytesTransferred_() || 0;
								},
								'enumerable': true
							},
							'mediaSecondsLoaded': {
								'get': function _0x4e6460() {
									return _0x8bfb3.masterPlaylistController_.mediaSecondsLoaded_() || 0;
								},
								'enumerable': true
							},
							'buffered': {
								'get': function _0x4af7cb() {
									return _0x49abd5(_0x8bfb3.tech_.buffered());
								},
								'enumerable': true
							},
							'currentTime': {
								'get': function _0x20e62c() {
									return _0x8bfb3.tech_.currentTime();
								},
								'enumerable': true
							},
							'currentSource': {
								'get': function _0x518712() {
									return _0x8bfb3.tech_.currentSource_;
								},
								'enumerable': true
							},
							'currentTech': {
								'get': function _0x5e675e() {
									return _0x8bfb3.tech_.name_;
								},
								'enumerable': true
							},
							'duration': {
								'get': function _0x578f42() {
									return _0x8bfb3.tech_.duration();
								},
								'enumerable': true
							},
							'master': {
								'get': function _0x52cba9() {
									return _0x8bfb3.playlists.master;
								},
								'enumerable': true
							},
							'playerDimensions': {
								'get': function _0x2960f0() {
									return _0x8bfb3.tech_.currentDimensions();
								},
								'enumerable': true
							},
							'seekable': {
								'get': function _0x498cff() {
									return _0x49abd5(_0x8bfb3.tech_.seekable());
								},
								'enumerable': true
							},
							'timestamp': {
								'get': function _0x28cf77() {
									return Date.now();
								},
								'enumerable': true
							},
							'videoPlaybackQuality': {
								'get': function _0x19e888() {
									return _0x8bfb3.tech_.getVideoPlaybackQuality();
								},
								'enumerable': true
							}
						});
						this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));
						this.masterPlaylistController_.on('selectedinitialmedia', function () {
							_0x3e51b1(_0x8bfb3);
							_0x1516a2(_0x8bfb3);
						});
						this.on(this.masterPlaylistController_, 'progress', function () {
							this.tech_.trigger('progress');
						});
						this.tech_.ready(function () {
							return _0x8bfb3.setupQualityLevels_();
						});
						if (!this.tech_.el()) {
							return;
						}
						this.tech_.src(_0x465e34.URL.createObjectURL(this.masterPlaylistController_.mediaSource));
					}
				},
				{
					'key': 'setupQualityLevels_',
					'value': function _0x510972() {
						var _0x4ce280 = this, _0xb77202 = _0x465e34.players[this.tech_.options_.playerId];
						_0xb77202 && _0xb77202.qualityLevels && (this.qualityLevels_ = _0xb77202.qualityLevels(), this.masterPlaylistController_.on('selectedinitialmedia', function () {
							_0x5dd92b(_0x4ce280.qualityLevels_, _0x4ce280);
						}), this.playlists.on('mediachange', function () {
							_0x1377fc(_0x4ce280.qualityLevels_, _0x4ce280.playlists);
						}));
					}
				},
				{
					'key': 'play',
					'value': function _0x3c0c72() {
						this.masterPlaylistController_.play();
					}
				},
				{
					'key': 'setCurrentTime',
					'value': function _0x47d802(_0x2065e2) {
						this.masterPlaylistController_.setCurrentTime(_0x2065e2);
					}
				},
				{
					'key': 'duration',
					'value': function _0x1a611d() {
						return this.masterPlaylistController_.duration();
					}
				},
				{
					'key': 'seekable',
					'value': function _0x334ba2() {
						return this.masterPlaylistController_.seekable();
					}
				},
				{
					'key': 'dispose',
					'value': function _0x47cd09() {
						if (this.playbackWatcher_) {
							this.playbackWatcher_.dispose();
						}
						if (this.masterPlaylistController_) {
							this.masterPlaylistController_.dispose();
						}
						if (this.qualityLevels_) {
							this.qualityLevels_.dispose();
						}
						_0x3f47cc(_0x5ecf17.prototype['__proto__'] || Object.getPrototypeOf(_0x5ecf17.prototype), 'dispose', this).call(this);
					}
				}
			]), _0x5ecf17;
		}(_0x465e34.getComponent('Component')), _0x5cfa71 = {
			'name': 'videojs-http-streaming',
			'VERSION': '1.2.4',
			'canHandleSource': function _0x447dbe(_0x4b89af) {
				var _0x408fb8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x565b01 = _0x465e34.mergeOptions(_0x465e34.options, _0x408fb8);
				return _0x5cfa71.canPlayType(_0x4b89af.type, _0x565b01);
			},
			'handleSource': function _0x5b56c0(_0x44959c, _0x931c4b) {
				var _0x320825 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}, _0x3c4da8 = _0x465e34.mergeOptions(_0x465e34.options, _0x320825);
				return _0x931c4b.hls = new _0x55c090(_0x44959c, _0x931c4b, _0x3c4da8), _0x931c4b.hls.xhr = _0x3a3f75(), _0x931c4b.hls.src(_0x44959c.src, _0x44959c.type), _0x931c4b.hls;
			},
			'canPlayType': function _0x507d0f(_0x443f4) {
				var _0xf29788 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _0x2f14bd = _0x465e34.mergeOptions(_0x465e34.options, _0xf29788), _0x4d6e08 = _0x2f14bd.hls.overrideNative, _0x33c4af = _0x1bbc6a(_0x443f4), _0x4789cc = _0x33c4af && (!_0x10c398.supportsTypeNatively(_0x33c4af) || _0x4d6e08);
				return _0x4789cc ? 'maybe' : '';
			}
		};
		(typeof _0x465e34.MediaSource === 'undefined' || typeof _0x465e34.URL === 'undefined') && (_0x465e34.MediaSource = _0x321826, _0x465e34.URL = _0x19f11e);
		if (_0x321826.supportsNativeMediaSources()) {
			_0x465e34.getTech('Html5').registerSourceHandler(_0x5cfa71, 0);
		}
		if (_0x465e34.HlsHandler = _0x55c090, _0x465e34.HlsSourceHandler = _0x5cfa71, _0x465e34.Hls = _0x10c398, !_0x465e34.use) {
			_0x465e34.registerComponent('Hls', _0x10c398);
		}
		if (_0x465e34.options.hls = _0x465e34.options.hls || {}, _0x465e34.registerPlugin) {
			_0x465e34.registerPlugin('reloadSourceOnError', _0x3dcbeb);
		} else {
			_0x465e34.plugin('reloadSourceOnError', _0x3dcbeb);
		}
		return _0x465e34;
	}());
	Object.defineProperty(Object, 'defineProperty', {
		'configurable': false,
		'writable': false
	});
	Object.defineProperty(_0x5060fb, 'videojs', {
		'configurable': false,
		'writable': false
	});
	Object.freeze(_0x5060fb.videojs);
}(this);